# we need to exclude these functions from the dispatch becuse they do not exist in apitrace
exclude = [
  "glOrthofOES",
  "glEndSceneEXT",
  "glFrustumfOES",
  "glIsSyncAPPLE",
  "glVDPAUFiniNV",
  "glVDPAUInitNV",
  "glLightEnviEXT",
  "glAlphaFuncQCOM",
  "glBeginSceneEXT",
  "glClipPlanefOES",
  "glEndTilingQCOM",
  "glWaitSyncAPPLE",
  "glClearDepthfOES",
  "glDepthRangefOES",
  "glFenceSyncAPPLE",
  "glGetFloati_vEXT",
  "glGetSyncivAPPLE",
  "glReadnPixelsEXT",
  "glTextureFogSGIX",
  "glDeleteSyncAPPLE",
  "glGetDoublei_vEXT",
  "glStartTilingQCOM",
  "glTexScissorINTEL",
  "glTexStorage1DEXT",
  "glTexStorage2DEXT",
  "glTexStorage3DEXT",
  "glGetClipPlanefOES",
  "glGetImageHandleNV",
  "glGetIntegeri_vEXT",
  "glGetPointeri_vEXT",
  "glGetnUniformfvEXT",
  "glGetnUniformivEXT",
  "glVDPAUIsSurfaceNV",
  "glWeightPointerOES",
  "glBlitFramebufferNV",
  "glExtGetBuffersQCOM",
  "glExtGetShadersQCOM",
  "glFragmentLightfEXT",
  "glFragmentLightiEXT",
  "glMapBufferRangeEXT",
  "glStencilOpValueAMD",
  "glExtGetProgramsQCOM",
  "glExtGetTexturesQCOM",
  "glFragmentLightfvEXT",
  "glFragmentLightivEXT",
  "glGetInteger64vAPPLE",
  "glGetTextureHandleNV",
  "glMultiTexImage1DEXT",
  "glMultiTexImage2DEXT",
  "glMultiTexImage3DEXT",
  "glReadVideoPixelsSUN",
  "glVDPAUMapSurfacesNV",
  "glClientWaitSyncAPPLE",
  "glTexScissorFuncINTEL",
  "glUniformHandleui64NV",
  "glVDPAUGetSurfaceivNV",
  "glFragmentMaterialfEXT",
  "glFragmentMaterialiEXT",
  "glReadBufferIndexedEXT",
  "glUniformHandleui64vNV",
  "glVDPAUSurfaceAccessNV",
  "glVDPAUUnmapSurfacesNV",
  "glDrawBuffersIndexedEXT",
  "glEnableClientStateiEXT",
  "glExtGetTexSubImageQCOM",
  "glFragmentMaterialfvEXT",
  "glFragmentMaterialivEXT",
  "glGetDriverControlsQCOM",
  "glGetFragmentLightfvEXT",
  "glGetFragmentLightivEXT",
  "glMatrixIndexPointerOES",
  "glCopyTextureLevelsAPPLE",
  "glDisableClientStateiEXT",
  "glExtGetFramebuffersQCOM",
  "glExtIsProgramBinaryQCOM",
  "glFragmentLightModelfEXT",
  "glFragmentLightModeliEXT",
  "glFramebufferTextureFace",
  "glEnableDriverControlQCOM",
  "glEndConditionalRenderNVX",
  "glExtGetRenderbuffersQCOM",
  "glFragmentLightModelfvEXT",
  "glFragmentLightModelivEXT",
  "glIsImageHandleResidentNV",
  "glLogMessageCallbackREGAL",
  "glCreateSyncFromCLeventARB",
  "glDisableDriverControlQCOM",
  "glDrawArraysInstancedANGLE",
  "glExtGetBufferPointervQCOM",
  "glFragmentColorMaterialEXT",
  "glGetFragmentMaterialfvEXT",
  "glGetFragmentMaterialivEXT",
  "glVDPAUUnregisterSurfaceNV",
  "glVertexAttribDivisorANGLE",
  "glBeginConditionalRenderNVX",
  "glFlushMappedBufferRangeEXT",
  "glGetTextureSamplerHandleNV",
  "glIsTextureHandleResidentNV",
  "glMakeImageHandleResidentNV",
  "glClearNamedBufferSubDataEXT",
  "glDrawElementsInstancedANGLE",
  "glGetDriverControlStringQCOM",
  "glProgramUniformHandleui64NV",
  "glMakeTextureHandleResidentNV",
  "glProgramUniformHandleui64vNV",
  "glVDPAURegisterVideoSurfaceNV",
  "glMakeImageHandleNonResidentNV",
  "glVDPAURegisterOutputSurfaceNV",
  "glExtGetProgramBinarySourceQCOM",
  "glExtGetTexLevelParameterivQCOM",
  "glExtTexObjectStateOverrideiQCOM",
  "glGetTranslatedShaderSourceANGLE",
  "glMakeTextureHandleNonResidentNV",
  "glGetPixelTransformParameterfvEXT",
  "glGetPixelTransformParameterivEXT",
  "glFramebufferTexture2DMultisampleEXT",
  "glDrawTextureNV",
  "glGetQueryObjectivEXT",
  "glQueryCounterEXT",

  'eglStreamConsumerAcquireKHR',
  'eglStreamConsumerGLTextureExternalKHR',
  'eglStreamConsumerReleaseKHR',
  'eglCreateStreamFromFileDescriptorKHR',
  'eglGetStreamFileDescriptorKHR',
  'eglCreateStreamProducerSurfaceKHR',
  'eglWaitSyncKHR',
  'eglCoverageMaskNV',
  'eglCoverageOperationNV',

  "glXDeleteAssociatedContextAMD",
  "glXCreateAssociatedContextAttribsAMD",
  "glXMakeAssociatedContextCurrentAMD",
  "glXGetGPUInfoAMD",
  "glXVideoResizeSUN",
  "glXGetVideoResizeSUN",
  "glXDrawableAttribATI",
  "glXCreateAssociatedContextAMD",
  "glXGetCurrentAssociatedContextAMD",
  "glXBlitContextFramebufferAMD",
  "glXChooseFBConfigSGIX",
  "glXBindTexImageATI",
  "glXReleaseTexImageATI",
  "glXGetContextGPUIDAMD",
  "glXGetGPUIDsAMD",
  "glXGetTransparentIndexSUN",

  # WGL

  "wglGetProcAddress",
  "wglGetDefaultProcAddress",
  "wglChoosePixelFormatARB",
  "wglGetPixelFormatAttribfvARB",
  "wglGetPixelFormatAttribivARB",

  "wglGetPixelFormatAttribfvEXT",
  "wglGetPixelFormatAttribivEXT",
  "wglEnumGpuDevicesNV",
  
  # https://github.com/apitrace/apitrace/pull/130

  'glTextureImage1DEXT',
  'glTextureImage2DEXT',
  'glTextureImage3DEXT',
  'GL_INTEL_map_texture',
]
