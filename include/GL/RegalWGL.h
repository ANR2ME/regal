/* NOTE: Do not edit this file, it is generated by a script:
   Export.py --api gl 4.4 --api wgl 4.4 --api glx 4.4 --api cgl 1.4 --api egl 1.0 --outdir .
*/

/*
  Copyright (c) 2011-2013 NVIDIA Corporation
  Copyright (c) 2011-2013 Cass Everitt
  Copyright (c) 2012-2013 Scott Nations
  Copyright (c) 2012 Mathias Schott
  Copyright (c) 2012-2013 Nigel Stewart
  Copyright (c) 2012-2013 Google Inc.
  All rights reserved.

  Redistribution and use in source and binary forms, with or without modification,
  are permitted provided that the following conditions are met:

    Redistributions of source code must retain the above copyright notice, this
    list of conditions and the following disclaimer.

    Redistributions in binary form must reproduce the above copyright notice,
    this list of conditions and the following disclaimer in the documentation
    and/or other materials provided with the distribution.

  THIS SOFTWARE IS PROVIDED BY THE COPYRIGHT HOLDERS AND CONTRIBUTORS "AS IS" AND
  ANY EXPRESS OR IMPLIED WARRANTIES, INCLUDING, BUT NOT LIMITED TO, THE IMPLIED
  WARRANTIES OF MERCHANTABILITY AND FITNESS FOR A PARTICULAR PURPOSE ARE DISCLAIMED.
  IN NO EVENT SHALL THE COPYRIGHT HOLDER OR CONTRIBUTORS BE LIABLE FOR ANY DIRECT,
  INDIRECT, INCIDENTAL, SPECIAL, EXEMPLARY, OR CONSEQUENTIAL DAMAGES (INCLUDING,
  BUT NOT LIMITED TO, PROCUREMENT OF SUBSTITUTE GOODS OR SERVICES; LOSS OF USE,
  DATA, OR PROFITS; OR BUSINESS INTERRUPTION) HOWEVER CAUSED AND ON ANY THEORY OF
  LIABILITY, WHETHER IN CONTRACT, STRICT LIABILITY, OR TORT (INCLUDING NEGLIGENCE
  OR OTHERWISE) ARISING IN ANY WAY OUT OF THE USE OF THIS SOFTWARE, EVEN IF ADVISED
  OF THE POSSIBILITY OF SUCH DAMAGE.
*/

/*
  Intended formatting conventions:
  $ astyle --style=allman --indent=spaces=2 --indent-switches
*/

#include <GL/Regal.h>

#ifndef __REGAL_WGL_H__
#define __REGAL_WGL_H__

#include <stddef.h>

typedef __int64 int64_t;
typedef unsigned __int64 uint64_t;
#include <windows.h>

#if REGAL_SYS_WGL
#ifdef  REGAL_SYS_WGL_DECLARE_WGL
#ifndef _WINDEF_
typedef void VOID;
typedef void * PVOID;
typedef PVOID HANDLE;
typedef const char * LPCSTR;
typedef signed int INT32;
typedef signed __int64 INT64;
typedef void * LPVOID;
typedef int BOOL;
typedef unsigned long DWORD;
typedef float FLOAT;
typedef int INT;
typedef unsigned int UINT;
typedef unsigned short USHORT;
typedef void * PROC;
typedef DWORD COLORREF;
typedef long LONG;
typedef unsigned long * ULONG_PTR;
#endif
#ifndef _WINGDI_
typedef struct _GLYPHMETRICSFLOAT GLYPHMETRICSFLOAT;
typedef GLYPHMETRICSFLOAT * LPGLYPHMETRICSFLOAT;
typedef struct tagLAYERPLANEDESCRIPTOR LAYERPLANEDESCRIPTOR;
typedef LAYERPLANEDESCRIPTOR * LPLAYERPLANEDESCRIPTOR;
typedef struct tagPIXELFORMATDESCRIPTOR PIXELFORMATDESCRIPTOR;
typedef PIXELFORMATDESCRIPTOR * LPPIXELFORMATDESCRIPTOR;
typedef struct _POINTFLOAT POINTFLOAT;
typedef struct _WGLSWAP WGLSWAP;
#endif
#endif // REGAL_SYS_WGL_DECLARE_WGL
typedef struct HPBUFFERARB__ * HPBUFFERARB;
typedef struct HPBUFFEREXT__ * HPBUFFEREXT;
typedef struct HGPUNV__ * HGPUNV;
typedef struct HPVIDEODEV__ * HPVIDEODEV;
typedef struct HVIDEOINPUTDEVICENV__ * HVIDEOINPUTDEVICENV;
typedef struct HVIDEOOUTPUTDEVICENV__ * HVIDEOOUTPUTDEVICENV;
typedef struct GPU_DEVICE * PGPU_DEVICE;
#endif // REGAL_SYS_WGL

#ifdef __cplusplus
extern "C" {
#endif

#if REGAL_SYS_WGL
#if REGAL_SYS_WGL_DECLARE_WGL

/**
 ** WGL_3DL_stereo_control
 **/

#if (defined(WGL_3DL_STEREO_CONTROL) || defined(REGAL_NO_ENUM) || defined(REGAL_NO_WGL_3DL_STEREO_CONTROL)) && !defined(REGAL_NO_ENUM_WGL_3DL_STEREO_CONTROL)
#define REGAL_NO_ENUM_WGL_3DL_STEREO_CONTROL
#endif

#if (defined(WGL_3DL_STEREO_CONTROL) || defined(REGAL_NO_TYPEDEF) || defined(REGAL_NO_WGL_3DL_STEREO_CONTROL)) && !defined(REGAL_NO_TYPEDEF_WGL_3DL_STEREO_CONTROL)
#define REGAL_NO_TYPEDEF_WGL_3DL_STEREO_CONTROL
#endif

#if (defined(WGL_3DL_STEREO_CONTROL) || !defined(REGAL_NAMESPACE) || defined(REGAL_NO_WGL_3DL_STEREO_CONTROL)) && !defined(REGAL_NO_NAMESPACE_WGL_3DL_STEREO_CONTROL)
#define REGAL_NO_NAMESPACE_WGL_3DL_STEREO_CONTROL
#endif

#if (defined(WGL_3DL_STEREO_CONTROL) || !defined(REGAL_PLUGIN_MODE) || defined(REGAL_NO_WGL_3DL_STEREO_CONTROL)) && !defined(REGAL_NO_PLUGIN_WGL_3DL_STEREO_CONTROL)
#define REGAL_NO_PLUGIN_WGL_3DL_STEREO_CONTROL
#endif

#if (defined(WGL_3DL_STEREO_CONTROL) || defined(REGAL_NO_DECLARATION) || defined(REGAL_NO_WGL_3DL_STEREO_CONTROL)) && !defined(REGAL_NO_DECLARATION_WGL_3DL_STEREO_CONTROL)
#define REGAL_NO_DECLARATION_WGL_3DL_STEREO_CONTROL
#endif

#ifndef WGL_3DL_stereo_control
#define WGL_3DL_stereo_control 1
#endif

#ifndef REGAL_NO_ENUM_WGL_3DL_STEREO_CONTROL
#define WGL_STEREO_EMITTER_ENABLE_3DL  0x2055     /* 8277 */
#define WGL_STEREO_EMITTER_DISABLE_3DL 0x2056     /* 8278 */
#define WGL_STEREO_POLARITY_NORMAL_3DL 0x2057     /* 8279 */
#define WGL_STEREO_POLARITY_INVERT_3DL 0x2058     /* 8280 */
#endif

#ifndef REGAL_NO_TYPEDEF_WGL_3DL_STEREO_CONTROL
typedef BOOL (REGAL_CALL *PFNWGLSETSTEREOEMITTERSTATE3DLPROC)(HDC hDC, UINT uState);
#endif

#ifndef REGAL_NO_NAMESPACE_WGL_3DL_STEREO_CONTROL
#define wglSetStereoEmitterState3DL         rwglSetStereoEmitterState3DL
#endif

#ifndef REGAL_NO_DECLARATION_WGL_3DL_STEREO_CONTROL
REGAL_DECL BOOL REGAL_CALL wglSetStereoEmitterState3DL(HDC hDC, UINT uState);

#endif

/**
 ** WGL_AMD_gpu_association
 **/

#if (defined(WGL_AMD_GPU_ASSOCIATION) || defined(REGAL_NO_ENUM) || defined(REGAL_NO_WGL_AMD_GPU_ASSOCIATION)) && !defined(REGAL_NO_ENUM_WGL_AMD_GPU_ASSOCIATION)
#define REGAL_NO_ENUM_WGL_AMD_GPU_ASSOCIATION
#endif

#if (defined(WGL_AMD_GPU_ASSOCIATION) || defined(REGAL_NO_TYPEDEF) || defined(REGAL_NO_WGL_AMD_GPU_ASSOCIATION)) && !defined(REGAL_NO_TYPEDEF_WGL_AMD_GPU_ASSOCIATION)
#define REGAL_NO_TYPEDEF_WGL_AMD_GPU_ASSOCIATION
#endif

#if (defined(WGL_AMD_GPU_ASSOCIATION) || !defined(REGAL_NAMESPACE) || defined(REGAL_NO_WGL_AMD_GPU_ASSOCIATION)) && !defined(REGAL_NO_NAMESPACE_WGL_AMD_GPU_ASSOCIATION)
#define REGAL_NO_NAMESPACE_WGL_AMD_GPU_ASSOCIATION
#endif

#if (defined(WGL_AMD_GPU_ASSOCIATION) || !defined(REGAL_PLUGIN_MODE) || defined(REGAL_NO_WGL_AMD_GPU_ASSOCIATION)) && !defined(REGAL_NO_PLUGIN_WGL_AMD_GPU_ASSOCIATION)
#define REGAL_NO_PLUGIN_WGL_AMD_GPU_ASSOCIATION
#endif

#if (defined(WGL_AMD_GPU_ASSOCIATION) || defined(REGAL_NO_DECLARATION) || defined(REGAL_NO_WGL_AMD_GPU_ASSOCIATION)) && !defined(REGAL_NO_DECLARATION_WGL_AMD_GPU_ASSOCIATION)
#define REGAL_NO_DECLARATION_WGL_AMD_GPU_ASSOCIATION
#endif

#ifndef WGL_AMD_gpu_association
#define WGL_AMD_gpu_association 1
#endif

#ifndef REGAL_NO_ENUM_WGL_AMD_GPU_ASSOCIATION
#define WGL_GPU_VENDOR_AMD                0x1f00     /* 7936 */
#define WGL_GPU_RENDERER_STRING_AMD       0x1f01     /* 7937 */
#define WGL_GPU_OPENGL_VERSION_STRING_AMD 0x1f02     /* 7938 */
#define WGL_GPU_FASTEST_TARGET_GPUS_AMD   0x21a2     /* 8610 */
#define WGL_GPU_RAM_AMD                   0x21a3     /* 8611 */
#define WGL_GPU_CLOCK_AMD                 0x21a4     /* 8612 */
#define WGL_GPU_NUM_PIPES_AMD             0x21a5     /* 8613 */
#define WGL_GPU_NUM_SIMD_AMD              0x21a6     /* 8614 */
#define WGL_GPU_NUM_RB_AMD                0x21a7     /* 8615 */
#define WGL_GPU_NUM_SPI_AMD               0x21a8     /* 8616 */
#endif

#ifndef REGAL_NO_TYPEDEF_WGL_AMD_GPU_ASSOCIATION
typedef BOOL (REGAL_CALL *PFNWGLDELETEASSOCIATEDCONTEXTAMDPROC)(HGLRC hglrc);
typedef BOOL (REGAL_CALL *PFNWGLMAKEASSOCIATEDCONTEXTCURRENTAMDPROC)(HGLRC hglrc);
typedef HGLRC (REGAL_CALL *PFNWGLCREATEASSOCIATEDCONTEXTAMDPROC)(UINT id);
typedef HGLRC (REGAL_CALL *PFNWGLCREATEASSOCIATEDCONTEXTATTRIBSAMDPROC)(UINT id, HGLRC hShareContext, const int *attribList);
typedef HGLRC (REGAL_CALL *PFNWGLGETCURRENTASSOCIATEDCONTEXTAMDPROC)(void);
typedef INT (REGAL_CALL *PFNWGLGETGPUINFOAMDPROC)(UINT id, int property, GLenum dataType, UINT size, void *data);
typedef UINT (REGAL_CALL *PFNWGLGETCONTEXTGPUIDAMDPROC)(HGLRC hglrc);
typedef UINT (REGAL_CALL *PFNWGLGETGPUIDSAMDPROC)(UINT maxCount, UINT *ids);
typedef VOID (REGAL_CALL *PFNWGLBLITCONTEXTFRAMEBUFFERAMDPROC)(HGLRC dstCtx, GLint srcX0, GLint srcY0, GLint srcX1, GLint srcY1, GLint dstX0, GLint dstY0, GLint dstX1, GLint dstY1, GLbitfield mask, GLenum filter);
#endif

#ifndef REGAL_NO_NAMESPACE_WGL_AMD_GPU_ASSOCIATION
#define wglBlitContextFramebufferAMD        rwglBlitContextFramebufferAMD
#define wglCreateAssociatedContextAMD       rwglCreateAssociatedContextAMD
#define wglCreateAssociatedContextAttribsAMD rwglCreateAssociatedContextAttribsAMD
#define wglDeleteAssociatedContextAMD       rwglDeleteAssociatedContextAMD
#define wglGetContextGPUIDAMD               rwglGetContextGPUIDAMD
#define wglGetCurrentAssociatedContextAMD   rwglGetCurrentAssociatedContextAMD
#define wglGetGPUIDsAMD                     rwglGetGPUIDsAMD
#define wglGetGPUInfoAMD                    rwglGetGPUInfoAMD
#define wglMakeAssociatedContextCurrentAMD  rwglMakeAssociatedContextCurrentAMD
#endif

#ifndef REGAL_NO_DECLARATION_WGL_AMD_GPU_ASSOCIATION
REGAL_DECL BOOL REGAL_CALL wglDeleteAssociatedContextAMD(HGLRC hglrc);

REGAL_DECL BOOL REGAL_CALL wglMakeAssociatedContextCurrentAMD(HGLRC hglrc);

REGAL_DECL HGLRC REGAL_CALL wglCreateAssociatedContextAMD(UINT id);

REGAL_DECL HGLRC REGAL_CALL wglCreateAssociatedContextAttribsAMD(UINT id, HGLRC hShareContext, const int *attribList);

REGAL_DECL HGLRC REGAL_CALL wglGetCurrentAssociatedContextAMD(void);

REGAL_DECL INT REGAL_CALL wglGetGPUInfoAMD(UINT id, int property, GLenum dataType, UINT size, void *data);

REGAL_DECL UINT REGAL_CALL wglGetContextGPUIDAMD(HGLRC hglrc);

REGAL_DECL UINT REGAL_CALL wglGetGPUIDsAMD(UINT maxCount, UINT *ids);

REGAL_DECL VOID REGAL_CALL wglBlitContextFramebufferAMD(HGLRC dstCtx, GLint srcX0, GLint srcY0, GLint srcX1, GLint srcY1, GLint dstX0, GLint dstY0, GLint dstX1, GLint dstY1, GLbitfield mask, GLenum filter);

#endif

/**
 ** WGL_ARB_buffer_region
 **/

#if (defined(WGL_ARB_BUFFER_REGION) || defined(REGAL_NO_ENUM) || defined(REGAL_NO_WGL_ARB_BUFFER_REGION)) && !defined(REGAL_NO_ENUM_WGL_ARB_BUFFER_REGION)
#define REGAL_NO_ENUM_WGL_ARB_BUFFER_REGION
#endif

#if (defined(WGL_ARB_BUFFER_REGION) || defined(REGAL_NO_TYPEDEF) || defined(REGAL_NO_WGL_ARB_BUFFER_REGION)) && !defined(REGAL_NO_TYPEDEF_WGL_ARB_BUFFER_REGION)
#define REGAL_NO_TYPEDEF_WGL_ARB_BUFFER_REGION
#endif

#if (defined(WGL_ARB_BUFFER_REGION) || !defined(REGAL_NAMESPACE) || defined(REGAL_NO_WGL_ARB_BUFFER_REGION)) && !defined(REGAL_NO_NAMESPACE_WGL_ARB_BUFFER_REGION)
#define REGAL_NO_NAMESPACE_WGL_ARB_BUFFER_REGION
#endif

#if (defined(WGL_ARB_BUFFER_REGION) || !defined(REGAL_PLUGIN_MODE) || defined(REGAL_NO_WGL_ARB_BUFFER_REGION)) && !defined(REGAL_NO_PLUGIN_WGL_ARB_BUFFER_REGION)
#define REGAL_NO_PLUGIN_WGL_ARB_BUFFER_REGION
#endif

#if (defined(WGL_ARB_BUFFER_REGION) || defined(REGAL_NO_DECLARATION) || defined(REGAL_NO_WGL_ARB_BUFFER_REGION)) && !defined(REGAL_NO_DECLARATION_WGL_ARB_BUFFER_REGION)
#define REGAL_NO_DECLARATION_WGL_ARB_BUFFER_REGION
#endif

#ifndef WGL_ARB_buffer_region
#define WGL_ARB_buffer_region 1
#endif

#ifndef REGAL_NO_ENUM_WGL_ARB_BUFFER_REGION
#define WGL_FRONT_COLOR_BUFFER_BIT_ARB 0x1
#define WGL_BACK_COLOR_BUFFER_BIT_ARB  0x2
#define WGL_DEPTH_BUFFER_BIT_ARB       0x4
#define WGL_STENCIL_BUFFER_BIT_ARB     0x8
#endif

#ifndef REGAL_NO_TYPEDEF_WGL_ARB_BUFFER_REGION
typedef BOOL (REGAL_CALL *PFNWGLRESTOREBUFFERREGIONARBPROC)(HANDLE hRegion, int x, int y, int width, int height, int xSrc, int ySrc);
typedef BOOL (REGAL_CALL *PFNWGLSAVEBUFFERREGIONARBPROC)(HANDLE hRegion, int x, int y, int width, int height);
typedef HANDLE (REGAL_CALL *PFNWGLCREATEBUFFERREGIONARBPROC)(HDC hDC, int iLayerPlane, UINT uType);
typedef VOID (REGAL_CALL *PFNWGLDELETEBUFFERREGIONARBPROC)(HANDLE hRegion);
#endif

#ifndef REGAL_NO_NAMESPACE_WGL_ARB_BUFFER_REGION
#define wglCreateBufferRegionARB            rwglCreateBufferRegionARB
#define wglDeleteBufferRegionARB            rwglDeleteBufferRegionARB
#define wglRestoreBufferRegionARB           rwglRestoreBufferRegionARB
#define wglSaveBufferRegionARB              rwglSaveBufferRegionARB
#endif

#ifndef REGAL_NO_DECLARATION_WGL_ARB_BUFFER_REGION
REGAL_DECL BOOL REGAL_CALL wglRestoreBufferRegionARB(HANDLE hRegion, int x, int y, int width, int height, int xSrc, int ySrc);

REGAL_DECL BOOL REGAL_CALL wglSaveBufferRegionARB(HANDLE hRegion, int x, int y, int width, int height);

REGAL_DECL HANDLE REGAL_CALL wglCreateBufferRegionARB(HDC hDC, int iLayerPlane, UINT uType);

REGAL_DECL VOID REGAL_CALL wglDeleteBufferRegionARB(HANDLE hRegion);

#endif

/**
 ** WGL_ARB_create_context
 **/

#if (defined(WGL_ARB_CREATE_CONTEXT) || defined(REGAL_NO_ENUM) || defined(REGAL_NO_WGL_ARB_CREATE_CONTEXT)) && !defined(REGAL_NO_ENUM_WGL_ARB_CREATE_CONTEXT)
#define REGAL_NO_ENUM_WGL_ARB_CREATE_CONTEXT
#endif

#if (defined(WGL_ARB_CREATE_CONTEXT) || defined(REGAL_NO_TYPEDEF) || defined(REGAL_NO_WGL_ARB_CREATE_CONTEXT)) && !defined(REGAL_NO_TYPEDEF_WGL_ARB_CREATE_CONTEXT)
#define REGAL_NO_TYPEDEF_WGL_ARB_CREATE_CONTEXT
#endif

#if (defined(WGL_ARB_CREATE_CONTEXT) || !defined(REGAL_NAMESPACE) || defined(REGAL_NO_WGL_ARB_CREATE_CONTEXT)) && !defined(REGAL_NO_NAMESPACE_WGL_ARB_CREATE_CONTEXT)
#define REGAL_NO_NAMESPACE_WGL_ARB_CREATE_CONTEXT
#endif

#if (defined(WGL_ARB_CREATE_CONTEXT) || !defined(REGAL_PLUGIN_MODE) || defined(REGAL_NO_WGL_ARB_CREATE_CONTEXT)) && !defined(REGAL_NO_PLUGIN_WGL_ARB_CREATE_CONTEXT)
#define REGAL_NO_PLUGIN_WGL_ARB_CREATE_CONTEXT
#endif

#if (defined(WGL_ARB_CREATE_CONTEXT) || defined(REGAL_NO_DECLARATION) || defined(REGAL_NO_WGL_ARB_CREATE_CONTEXT)) && !defined(REGAL_NO_DECLARATION_WGL_ARB_CREATE_CONTEXT)
#define REGAL_NO_DECLARATION_WGL_ARB_CREATE_CONTEXT
#endif

#ifndef WGL_ARB_create_context
#define WGL_ARB_create_context 1
#endif

#ifndef REGAL_NO_ENUM_WGL_ARB_CREATE_CONTEXT
#define WGL_CONTEXT_DEBUG_BIT_ARB              0x1
#define WGL_CONTEXT_FORWARD_COMPATIBLE_BIT_ARB 0x2
#define WGL_CONTEXT_MAJOR_VERSION_ARB          0x2091     /* 8337 */
#define WGL_CONTEXT_MINOR_VERSION_ARB          0x2092     /* 8338 */
#define WGL_CONTEXT_LAYER_PLANE_ARB            0x2093     /* 8339 */
#define WGL_CONTEXT_FLAGS_ARB                  0x2094     /* 8340 */
#endif

#ifndef REGAL_NO_TYPEDEF_WGL_ARB_CREATE_CONTEXT
typedef HGLRC (REGAL_CALL *PFNWGLCREATECONTEXTATTRIBSARBPROC)(HDC hDC, HGLRC hShareContext, const int *piAttribList);
#endif

#ifndef REGAL_NO_NAMESPACE_WGL_ARB_CREATE_CONTEXT
#define wglCreateContextAttribsARB          rwglCreateContextAttribsARB
#endif

#ifndef REGAL_NO_DECLARATION_WGL_ARB_CREATE_CONTEXT
REGAL_DECL HGLRC REGAL_CALL wglCreateContextAttribsARB(HDC hDC, HGLRC hShareContext, const int *piAttribList);

#endif

/**
 ** WGL_ARB_create_context_profile
 **/

#if (defined(WGL_ARB_CREATE_CONTEXT_PROFILE) || defined(REGAL_NO_ENUM) || defined(REGAL_NO_WGL_ARB_CREATE_CONTEXT_PROFILE)) && !defined(REGAL_NO_ENUM_WGL_ARB_CREATE_CONTEXT_PROFILE)
#define REGAL_NO_ENUM_WGL_ARB_CREATE_CONTEXT_PROFILE
#endif

#if (defined(WGL_ARB_CREATE_CONTEXT_PROFILE) || defined(REGAL_NO_TYPEDEF) || defined(REGAL_NO_WGL_ARB_CREATE_CONTEXT_PROFILE)) && !defined(REGAL_NO_TYPEDEF_WGL_ARB_CREATE_CONTEXT_PROFILE)
#define REGAL_NO_TYPEDEF_WGL_ARB_CREATE_CONTEXT_PROFILE
#endif

#if (defined(WGL_ARB_CREATE_CONTEXT_PROFILE) || !defined(REGAL_NAMESPACE) || defined(REGAL_NO_WGL_ARB_CREATE_CONTEXT_PROFILE)) && !defined(REGAL_NO_NAMESPACE_WGL_ARB_CREATE_CONTEXT_PROFILE)
#define REGAL_NO_NAMESPACE_WGL_ARB_CREATE_CONTEXT_PROFILE
#endif

#if (defined(WGL_ARB_CREATE_CONTEXT_PROFILE) || !defined(REGAL_PLUGIN_MODE) || defined(REGAL_NO_WGL_ARB_CREATE_CONTEXT_PROFILE)) && !defined(REGAL_NO_PLUGIN_WGL_ARB_CREATE_CONTEXT_PROFILE)
#define REGAL_NO_PLUGIN_WGL_ARB_CREATE_CONTEXT_PROFILE
#endif

#if (defined(WGL_ARB_CREATE_CONTEXT_PROFILE) || defined(REGAL_NO_DECLARATION) || defined(REGAL_NO_WGL_ARB_CREATE_CONTEXT_PROFILE)) && !defined(REGAL_NO_DECLARATION_WGL_ARB_CREATE_CONTEXT_PROFILE)
#define REGAL_NO_DECLARATION_WGL_ARB_CREATE_CONTEXT_PROFILE
#endif

#ifndef WGL_ARB_create_context_profile
#define WGL_ARB_create_context_profile 1
#endif

#ifndef REGAL_NO_ENUM_WGL_ARB_CREATE_CONTEXT_PROFILE
#define WGL_CONTEXT_CORE_PROFILE_BIT_ARB          0x1
#define WGL_CONTEXT_COMPATIBILITY_PROFILE_BIT_ARB 0x2
#define WGL_CONTEXT_PROFILE_MASK_ARB              0x9126     /* 37158 */
#endif

/**
 ** WGL_ARB_create_context_robustness
 **/

#if (defined(WGL_ARB_CREATE_CONTEXT_ROBUSTNESS) || defined(REGAL_NO_ENUM) || defined(REGAL_NO_WGL_ARB_CREATE_CONTEXT_ROBUSTNESS)) && !defined(REGAL_NO_ENUM_WGL_ARB_CREATE_CONTEXT_ROBUSTNESS)
#define REGAL_NO_ENUM_WGL_ARB_CREATE_CONTEXT_ROBUSTNESS
#endif

#if (defined(WGL_ARB_CREATE_CONTEXT_ROBUSTNESS) || defined(REGAL_NO_TYPEDEF) || defined(REGAL_NO_WGL_ARB_CREATE_CONTEXT_ROBUSTNESS)) && !defined(REGAL_NO_TYPEDEF_WGL_ARB_CREATE_CONTEXT_ROBUSTNESS)
#define REGAL_NO_TYPEDEF_WGL_ARB_CREATE_CONTEXT_ROBUSTNESS
#endif

#if (defined(WGL_ARB_CREATE_CONTEXT_ROBUSTNESS) || !defined(REGAL_NAMESPACE) || defined(REGAL_NO_WGL_ARB_CREATE_CONTEXT_ROBUSTNESS)) && !defined(REGAL_NO_NAMESPACE_WGL_ARB_CREATE_CONTEXT_ROBUSTNESS)
#define REGAL_NO_NAMESPACE_WGL_ARB_CREATE_CONTEXT_ROBUSTNESS
#endif

#if (defined(WGL_ARB_CREATE_CONTEXT_ROBUSTNESS) || !defined(REGAL_PLUGIN_MODE) || defined(REGAL_NO_WGL_ARB_CREATE_CONTEXT_ROBUSTNESS)) && !defined(REGAL_NO_PLUGIN_WGL_ARB_CREATE_CONTEXT_ROBUSTNESS)
#define REGAL_NO_PLUGIN_WGL_ARB_CREATE_CONTEXT_ROBUSTNESS
#endif

#if (defined(WGL_ARB_CREATE_CONTEXT_ROBUSTNESS) || defined(REGAL_NO_DECLARATION) || defined(REGAL_NO_WGL_ARB_CREATE_CONTEXT_ROBUSTNESS)) && !defined(REGAL_NO_DECLARATION_WGL_ARB_CREATE_CONTEXT_ROBUSTNESS)
#define REGAL_NO_DECLARATION_WGL_ARB_CREATE_CONTEXT_ROBUSTNESS
#endif

#ifndef WGL_ARB_create_context_robustness
#define WGL_ARB_create_context_robustness 1
#endif

#ifndef REGAL_NO_ENUM_WGL_ARB_CREATE_CONTEXT_ROBUSTNESS
#define WGL_CONTEXT_ROBUST_ACCESS_BIT_ARB           0x4
#define WGL_LOSE_CONTEXT_ON_RESET_ARB               0x8252     /* 33362 */
#define WGL_CONTEXT_RESET_NOTIFICATION_STRATEGY_ARB 0x8256     /* 33366 */
#define WGL_NO_RESET_NOTIFICATION_ARB               0x8261     /* 33377 */
#endif

/**
 ** WGL_ARB_extensions_string
 **/

#if (defined(WGL_ARB_EXTENSIONS_STRING) || defined(REGAL_NO_ENUM) || defined(REGAL_NO_WGL_ARB_EXTENSIONS_STRING)) && !defined(REGAL_NO_ENUM_WGL_ARB_EXTENSIONS_STRING)
#define REGAL_NO_ENUM_WGL_ARB_EXTENSIONS_STRING
#endif

#if (defined(WGL_ARB_EXTENSIONS_STRING) || defined(REGAL_NO_TYPEDEF) || defined(REGAL_NO_WGL_ARB_EXTENSIONS_STRING)) && !defined(REGAL_NO_TYPEDEF_WGL_ARB_EXTENSIONS_STRING)
#define REGAL_NO_TYPEDEF_WGL_ARB_EXTENSIONS_STRING
#endif

#if (defined(WGL_ARB_EXTENSIONS_STRING) || !defined(REGAL_NAMESPACE) || defined(REGAL_NO_WGL_ARB_EXTENSIONS_STRING)) && !defined(REGAL_NO_NAMESPACE_WGL_ARB_EXTENSIONS_STRING)
#define REGAL_NO_NAMESPACE_WGL_ARB_EXTENSIONS_STRING
#endif

#if (defined(WGL_ARB_EXTENSIONS_STRING) || !defined(REGAL_PLUGIN_MODE) || defined(REGAL_NO_WGL_ARB_EXTENSIONS_STRING)) && !defined(REGAL_NO_PLUGIN_WGL_ARB_EXTENSIONS_STRING)
#define REGAL_NO_PLUGIN_WGL_ARB_EXTENSIONS_STRING
#endif

#if (defined(WGL_ARB_EXTENSIONS_STRING) || defined(REGAL_NO_DECLARATION) || defined(REGAL_NO_WGL_ARB_EXTENSIONS_STRING)) && !defined(REGAL_NO_DECLARATION_WGL_ARB_EXTENSIONS_STRING)
#define REGAL_NO_DECLARATION_WGL_ARB_EXTENSIONS_STRING
#endif

#ifndef WGL_ARB_extensions_string
#define WGL_ARB_extensions_string 1
#endif

#ifndef REGAL_NO_TYPEDEF_WGL_ARB_EXTENSIONS_STRING
typedef const char *(REGAL_CALL *PFNWGLGETEXTENSIONSSTRINGARBPROC)(HDC hDC);
#endif

#ifndef REGAL_NO_NAMESPACE_WGL_ARB_EXTENSIONS_STRING
#define wglGetExtensionsStringARB           rwglGetExtensionsStringARB
#endif

#ifndef REGAL_NO_DECLARATION_WGL_ARB_EXTENSIONS_STRING
REGAL_DECL const char *REGAL_CALL wglGetExtensionsStringARB(HDC hDC);

#endif

/**
 ** WGL_ARB_framebuffer_sRGB
 **/

#if (defined(WGL_ARB_FRAMEBUFFER_SRGB) || defined(REGAL_NO_ENUM) || defined(REGAL_NO_WGL_ARB_FRAMEBUFFER_SRGB)) && !defined(REGAL_NO_ENUM_WGL_ARB_FRAMEBUFFER_SRGB)
#define REGAL_NO_ENUM_WGL_ARB_FRAMEBUFFER_SRGB
#endif

#if (defined(WGL_ARB_FRAMEBUFFER_SRGB) || defined(REGAL_NO_TYPEDEF) || defined(REGAL_NO_WGL_ARB_FRAMEBUFFER_SRGB)) && !defined(REGAL_NO_TYPEDEF_WGL_ARB_FRAMEBUFFER_SRGB)
#define REGAL_NO_TYPEDEF_WGL_ARB_FRAMEBUFFER_SRGB
#endif

#if (defined(WGL_ARB_FRAMEBUFFER_SRGB) || !defined(REGAL_NAMESPACE) || defined(REGAL_NO_WGL_ARB_FRAMEBUFFER_SRGB)) && !defined(REGAL_NO_NAMESPACE_WGL_ARB_FRAMEBUFFER_SRGB)
#define REGAL_NO_NAMESPACE_WGL_ARB_FRAMEBUFFER_SRGB
#endif

#if (defined(WGL_ARB_FRAMEBUFFER_SRGB) || !defined(REGAL_PLUGIN_MODE) || defined(REGAL_NO_WGL_ARB_FRAMEBUFFER_SRGB)) && !defined(REGAL_NO_PLUGIN_WGL_ARB_FRAMEBUFFER_SRGB)
#define REGAL_NO_PLUGIN_WGL_ARB_FRAMEBUFFER_SRGB
#endif

#if (defined(WGL_ARB_FRAMEBUFFER_SRGB) || defined(REGAL_NO_DECLARATION) || defined(REGAL_NO_WGL_ARB_FRAMEBUFFER_SRGB)) && !defined(REGAL_NO_DECLARATION_WGL_ARB_FRAMEBUFFER_SRGB)
#define REGAL_NO_DECLARATION_WGL_ARB_FRAMEBUFFER_SRGB
#endif

#ifndef WGL_ARB_framebuffer_sRGB
#define WGL_ARB_framebuffer_sRGB 1
#endif

#ifndef REGAL_NO_ENUM_WGL_ARB_FRAMEBUFFER_SRGB
#define WGL_FRAMEBUFFER_SRGB_CAPABLE_ARB 0x20a9 /* 8361 */
#endif

/**
 ** WGL_ARB_make_current_read
 **/

#if (defined(WGL_ARB_MAKE_CURRENT_READ) || defined(REGAL_NO_ENUM) || defined(REGAL_NO_WGL_ARB_MAKE_CURRENT_READ)) && !defined(REGAL_NO_ENUM_WGL_ARB_MAKE_CURRENT_READ)
#define REGAL_NO_ENUM_WGL_ARB_MAKE_CURRENT_READ
#endif

#if (defined(WGL_ARB_MAKE_CURRENT_READ) || defined(REGAL_NO_TYPEDEF) || defined(REGAL_NO_WGL_ARB_MAKE_CURRENT_READ)) && !defined(REGAL_NO_TYPEDEF_WGL_ARB_MAKE_CURRENT_READ)
#define REGAL_NO_TYPEDEF_WGL_ARB_MAKE_CURRENT_READ
#endif

#if (defined(WGL_ARB_MAKE_CURRENT_READ) || !defined(REGAL_NAMESPACE) || defined(REGAL_NO_WGL_ARB_MAKE_CURRENT_READ)) && !defined(REGAL_NO_NAMESPACE_WGL_ARB_MAKE_CURRENT_READ)
#define REGAL_NO_NAMESPACE_WGL_ARB_MAKE_CURRENT_READ
#endif

#if (defined(WGL_ARB_MAKE_CURRENT_READ) || !defined(REGAL_PLUGIN_MODE) || defined(REGAL_NO_WGL_ARB_MAKE_CURRENT_READ)) && !defined(REGAL_NO_PLUGIN_WGL_ARB_MAKE_CURRENT_READ)
#define REGAL_NO_PLUGIN_WGL_ARB_MAKE_CURRENT_READ
#endif

#if (defined(WGL_ARB_MAKE_CURRENT_READ) || defined(REGAL_NO_DECLARATION) || defined(REGAL_NO_WGL_ARB_MAKE_CURRENT_READ)) && !defined(REGAL_NO_DECLARATION_WGL_ARB_MAKE_CURRENT_READ)
#define REGAL_NO_DECLARATION_WGL_ARB_MAKE_CURRENT_READ
#endif

#ifndef WGL_ARB_make_current_read
#define WGL_ARB_make_current_read 1
#endif

#ifndef REGAL_NO_ENUM_WGL_ARB_MAKE_CURRENT_READ
#define ERROR_INVALID_PIXEL_TYPE_ARB           0x2043     /* 8259 */
#define ERROR_INCOMPATIBLE_DEVICE_CONTEXTS_ARB 0x2054     /* 8276 */
#endif

#ifndef REGAL_NO_TYPEDEF_WGL_ARB_MAKE_CURRENT_READ
typedef BOOL (REGAL_CALL *PFNWGLMAKECONTEXTCURRENTARBPROC)(HDC hDrawDC, HDC hReadDC, HGLRC hglrc);
typedef HDC (REGAL_CALL *PFNWGLGETCURRENTREADDCARBPROC)(void);
#endif

#ifndef REGAL_NO_NAMESPACE_WGL_ARB_MAKE_CURRENT_READ
#define wglGetCurrentReadDCARB              rwglGetCurrentReadDCARB
#define wglMakeContextCurrentARB            rwglMakeContextCurrentARB
#endif

#ifndef REGAL_NO_DECLARATION_WGL_ARB_MAKE_CURRENT_READ
REGAL_DECL BOOL REGAL_CALL wglMakeContextCurrentARB(HDC hDrawDC, HDC hReadDC, HGLRC hglrc);

REGAL_DECL HDC REGAL_CALL wglGetCurrentReadDCARB(void);

#endif

/**
 ** WGL_ARB_multisample
 **/

#if (defined(WGL_ARB_MULTISAMPLE) || defined(REGAL_NO_ENUM) || defined(REGAL_NO_WGL_ARB_MULTISAMPLE)) && !defined(REGAL_NO_ENUM_WGL_ARB_MULTISAMPLE)
#define REGAL_NO_ENUM_WGL_ARB_MULTISAMPLE
#endif

#if (defined(WGL_ARB_MULTISAMPLE) || defined(REGAL_NO_TYPEDEF) || defined(REGAL_NO_WGL_ARB_MULTISAMPLE)) && !defined(REGAL_NO_TYPEDEF_WGL_ARB_MULTISAMPLE)
#define REGAL_NO_TYPEDEF_WGL_ARB_MULTISAMPLE
#endif

#if (defined(WGL_ARB_MULTISAMPLE) || !defined(REGAL_NAMESPACE) || defined(REGAL_NO_WGL_ARB_MULTISAMPLE)) && !defined(REGAL_NO_NAMESPACE_WGL_ARB_MULTISAMPLE)
#define REGAL_NO_NAMESPACE_WGL_ARB_MULTISAMPLE
#endif

#if (defined(WGL_ARB_MULTISAMPLE) || !defined(REGAL_PLUGIN_MODE) || defined(REGAL_NO_WGL_ARB_MULTISAMPLE)) && !defined(REGAL_NO_PLUGIN_WGL_ARB_MULTISAMPLE)
#define REGAL_NO_PLUGIN_WGL_ARB_MULTISAMPLE
#endif

#if (defined(WGL_ARB_MULTISAMPLE) || defined(REGAL_NO_DECLARATION) || defined(REGAL_NO_WGL_ARB_MULTISAMPLE)) && !defined(REGAL_NO_DECLARATION_WGL_ARB_MULTISAMPLE)
#define REGAL_NO_DECLARATION_WGL_ARB_MULTISAMPLE
#endif

#ifndef WGL_ARB_multisample
#define WGL_ARB_multisample 1
#endif

#ifndef REGAL_NO_ENUM_WGL_ARB_MULTISAMPLE
#define WGL_SAMPLE_BUFFERS_ARB 0x2041     /* 8257 */
#define WGL_SAMPLES_ARB        0x2042     /* 8258 */
#endif

/**
 ** WGL_ARB_pbuffer
 **/

#if (defined(WGL_ARB_PBUFFER) || defined(REGAL_NO_ENUM) || defined(REGAL_NO_WGL_ARB_PBUFFER)) && !defined(REGAL_NO_ENUM_WGL_ARB_PBUFFER)
#define REGAL_NO_ENUM_WGL_ARB_PBUFFER
#endif

#if (defined(WGL_ARB_PBUFFER) || defined(REGAL_NO_TYPEDEF) || defined(REGAL_NO_WGL_ARB_PBUFFER)) && !defined(REGAL_NO_TYPEDEF_WGL_ARB_PBUFFER)
#define REGAL_NO_TYPEDEF_WGL_ARB_PBUFFER
#endif

#if (defined(WGL_ARB_PBUFFER) || !defined(REGAL_NAMESPACE) || defined(REGAL_NO_WGL_ARB_PBUFFER)) && !defined(REGAL_NO_NAMESPACE_WGL_ARB_PBUFFER)
#define REGAL_NO_NAMESPACE_WGL_ARB_PBUFFER
#endif

#if (defined(WGL_ARB_PBUFFER) || !defined(REGAL_PLUGIN_MODE) || defined(REGAL_NO_WGL_ARB_PBUFFER)) && !defined(REGAL_NO_PLUGIN_WGL_ARB_PBUFFER)
#define REGAL_NO_PLUGIN_WGL_ARB_PBUFFER
#endif

#if (defined(WGL_ARB_PBUFFER) || defined(REGAL_NO_DECLARATION) || defined(REGAL_NO_WGL_ARB_PBUFFER)) && !defined(REGAL_NO_DECLARATION_WGL_ARB_PBUFFER)
#define REGAL_NO_DECLARATION_WGL_ARB_PBUFFER
#endif

#ifndef WGL_ARB_pbuffer
#define WGL_ARB_pbuffer 1
#endif

#ifndef REGAL_NO_ENUM_WGL_ARB_PBUFFER
#define WGL_DRAW_TO_PBUFFER_ARB    0x202d     /* 8237 */
#define WGL_MAX_PBUFFER_PIXELS_ARB 0x202e     /* 8238 */
#define WGL_MAX_PBUFFER_WIDTH_ARB  0x202f     /* 8239 */
#define WGL_MAX_PBUFFER_HEIGHT_ARB 0x2030     /* 8240 */
#define WGL_PBUFFER_LARGEST_ARB    0x2033     /* 8243 */
#define WGL_PBUFFER_WIDTH_ARB      0x2034     /* 8244 */
#define WGL_PBUFFER_HEIGHT_ARB     0x2035     /* 8245 */
#define WGL_PBUFFER_LOST_ARB       0x2036     /* 8246 */
#endif

#ifndef REGAL_NO_TYPEDEF_WGL_ARB_PBUFFER
typedef BOOL (REGAL_CALL *PFNWGLDESTROYPBUFFERARBPROC)(HPBUFFERARB hPbuffer);
typedef BOOL (REGAL_CALL *PFNWGLQUERYPBUFFERARBPROC)(HPBUFFERARB hPbuffer, int iAttribute, int *piValue);
typedef HDC (REGAL_CALL *PFNWGLGETPBUFFERDCARBPROC)(HPBUFFERARB hPbuffer);
typedef HPBUFFERARB (REGAL_CALL *PFNWGLCREATEPBUFFERARBPROC)(HDC hDC, int iPixelFormat, int iWidth, int iHeight, const int *piAttribList);
typedef int (REGAL_CALL *PFNWGLRELEASEPBUFFERDCARBPROC)(HPBUFFERARB hPbuffer, HDC hDC);
#endif

#ifndef REGAL_NO_NAMESPACE_WGL_ARB_PBUFFER
#define wglCreatePbufferARB                 rwglCreatePbufferARB
#define wglDestroyPbufferARB                rwglDestroyPbufferARB
#define wglGetPbufferDCARB                  rwglGetPbufferDCARB
#define wglQueryPbufferARB                  rwglQueryPbufferARB
#define wglReleasePbufferDCARB              rwglReleasePbufferDCARB
#endif

#ifndef REGAL_NO_DECLARATION_WGL_ARB_PBUFFER
REGAL_DECL BOOL REGAL_CALL wglDestroyPbufferARB(HPBUFFERARB hPbuffer);

REGAL_DECL BOOL REGAL_CALL wglQueryPbufferARB(HPBUFFERARB hPbuffer, int iAttribute, int *piValue);

REGAL_DECL HDC REGAL_CALL wglGetPbufferDCARB(HPBUFFERARB hPbuffer);

REGAL_DECL HPBUFFERARB REGAL_CALL wglCreatePbufferARB(HDC hDC, int iPixelFormat, int iWidth, int iHeight, const int *piAttribList);

REGAL_DECL int REGAL_CALL wglReleasePbufferDCARB(HPBUFFERARB hPbuffer, HDC hDC);

#endif

/**
 ** WGL_ARB_pixel_format
 **/

#if (defined(WGL_ARB_PIXEL_FORMAT) || defined(REGAL_NO_ENUM) || defined(REGAL_NO_WGL_ARB_PIXEL_FORMAT)) && !defined(REGAL_NO_ENUM_WGL_ARB_PIXEL_FORMAT)
#define REGAL_NO_ENUM_WGL_ARB_PIXEL_FORMAT
#endif

#if (defined(WGL_ARB_PIXEL_FORMAT) || defined(REGAL_NO_TYPEDEF) || defined(REGAL_NO_WGL_ARB_PIXEL_FORMAT)) && !defined(REGAL_NO_TYPEDEF_WGL_ARB_PIXEL_FORMAT)
#define REGAL_NO_TYPEDEF_WGL_ARB_PIXEL_FORMAT
#endif

#if (defined(WGL_ARB_PIXEL_FORMAT) || !defined(REGAL_NAMESPACE) || defined(REGAL_NO_WGL_ARB_PIXEL_FORMAT)) && !defined(REGAL_NO_NAMESPACE_WGL_ARB_PIXEL_FORMAT)
#define REGAL_NO_NAMESPACE_WGL_ARB_PIXEL_FORMAT
#endif

#if (defined(WGL_ARB_PIXEL_FORMAT) || !defined(REGAL_PLUGIN_MODE) || defined(REGAL_NO_WGL_ARB_PIXEL_FORMAT)) && !defined(REGAL_NO_PLUGIN_WGL_ARB_PIXEL_FORMAT)
#define REGAL_NO_PLUGIN_WGL_ARB_PIXEL_FORMAT
#endif

#if (defined(WGL_ARB_PIXEL_FORMAT) || defined(REGAL_NO_DECLARATION) || defined(REGAL_NO_WGL_ARB_PIXEL_FORMAT)) && !defined(REGAL_NO_DECLARATION_WGL_ARB_PIXEL_FORMAT)
#define REGAL_NO_DECLARATION_WGL_ARB_PIXEL_FORMAT
#endif

#ifndef WGL_ARB_pixel_format
#define WGL_ARB_pixel_format 1
#endif

#ifndef REGAL_NO_ENUM_WGL_ARB_PIXEL_FORMAT
#define WGL_NUMBER_PIXEL_FORMATS_ARB    0x2000     /* 8192 */
#define WGL_DRAW_TO_WINDOW_ARB          0x2001     /* 8193 */
#define WGL_DRAW_TO_BITMAP_ARB          0x2002     /* 8194 */
#define WGL_ACCELERATION_ARB            0x2003     /* 8195 */
#define WGL_NEED_PALETTE_ARB            0x2004     /* 8196 */
#define WGL_NEED_SYSTEM_PALETTE_ARB     0x2005     /* 8197 */
#define WGL_SWAP_LAYER_BUFFERS_ARB      0x2006     /* 8198 */
#define WGL_SWAP_METHOD_ARB             0x2007     /* 8199 */
#define WGL_NUMBER_OVERLAYS_ARB         0x2008     /* 8200 */
#define WGL_NUMBER_UNDERLAYS_ARB        0x2009     /* 8201 */
#define WGL_TRANSPARENT_ARB             0x200a     /* 8202 */
#define WGL_SHARE_DEPTH_ARB             0x200c     /* 8204 */
#define WGL_SHARE_STENCIL_ARB           0x200d     /* 8205 */
#define WGL_SHARE_ACCUM_ARB             0x200e     /* 8206 */
#define WGL_SUPPORT_GDI_ARB             0x200f     /* 8207 */
#define WGL_SUPPORT_OPENGL_ARB          0x2010     /* 8208 */
#define WGL_DOUBLE_BUFFER_ARB           0x2011     /* 8209 */
#define WGL_STEREO_ARB                  0x2012     /* 8210 */
#define WGL_PIXEL_TYPE_ARB              0x2013     /* 8211 */
#define WGL_COLOR_BITS_ARB              0x2014     /* 8212 */
#define WGL_RED_BITS_ARB                0x2015     /* 8213 */
#define WGL_RED_SHIFT_ARB               0x2016     /* 8214 */
#define WGL_GREEN_BITS_ARB              0x2017     /* 8215 */
#define WGL_GREEN_SHIFT_ARB             0x2018     /* 8216 */
#define WGL_BLUE_BITS_ARB               0x2019     /* 8217 */
#define WGL_BLUE_SHIFT_ARB              0x201a     /* 8218 */
#define WGL_ALPHA_BITS_ARB              0x201b     /* 8219 */
#define WGL_ALPHA_SHIFT_ARB             0x201c     /* 8220 */
#define WGL_ACCUM_BITS_ARB              0x201d     /* 8221 */
#define WGL_ACCUM_RED_BITS_ARB          0x201e     /* 8222 */
#define WGL_ACCUM_GREEN_BITS_ARB        0x201f     /* 8223 */
#define WGL_ACCUM_BLUE_BITS_ARB         0x2020     /* 8224 */
#define WGL_ACCUM_ALPHA_BITS_ARB        0x2021     /* 8225 */
#define WGL_DEPTH_BITS_ARB              0x2022     /* 8226 */
#define WGL_STENCIL_BITS_ARB            0x2023     /* 8227 */
#define WGL_AUX_BUFFERS_ARB             0x2024     /* 8228 */
#define WGL_NO_ACCELERATION_ARB         0x2025     /* 8229 */
#define WGL_GENERIC_ACCELERATION_ARB    0x2026     /* 8230 */
#define WGL_FULL_ACCELERATION_ARB       0x2027     /* 8231 */
#define WGL_SWAP_EXCHANGE_ARB           0x2028     /* 8232 */
#define WGL_SWAP_COPY_ARB               0x2029     /* 8233 */
#define WGL_SWAP_UNDEFINED_ARB          0x202a     /* 8234 */
#define WGL_TYPE_RGBA_ARB               0x202b     /* 8235 */
#define WGL_TYPE_COLORINDEX_ARB         0x202c     /* 8236 */
#define WGL_TRANSPARENT_RED_VALUE_ARB   0x2037     /* 8247 */
#define WGL_TRANSPARENT_GREEN_VALUE_ARB 0x2038     /* 8248 */
#define WGL_TRANSPARENT_BLUE_VALUE_ARB  0x2039     /* 8249 */
#define WGL_TRANSPARENT_ALPHA_VALUE_ARB 0x203a     /* 8250 */
#define WGL_TRANSPARENT_INDEX_VALUE_ARB 0x203b     /* 8251 */
#endif

#ifndef REGAL_NO_TYPEDEF_WGL_ARB_PIXEL_FORMAT
typedef BOOL (REGAL_CALL *PFNWGLCHOOSEPIXELFORMATARBPROC)(HDC hDC, const int *piAttribIList, const FLOAT *pfAttribFList, UINT nMaxFormats, int *piFormats, UINT *nNumFormats);
typedef BOOL (REGAL_CALL *PFNWGLGETPIXELFORMATATTRIBFVARBPROC)(HDC hDC, int iPixelFormat, int iLayerPlane, UINT nAttributes, const int *piAttributes, FLOAT *pfValues);
typedef BOOL (REGAL_CALL *PFNWGLGETPIXELFORMATATTRIBIVARBPROC)(HDC hDC, int iPixelFormat, int iLayerPlane, UINT nAttributes, const int *piAttributes, int *piValues);
#endif

#ifndef REGAL_NO_NAMESPACE_WGL_ARB_PIXEL_FORMAT
#define wglChoosePixelFormatARB             rwglChoosePixelFormatARB
#define wglGetPixelFormatAttribfvARB        rwglGetPixelFormatAttribfvARB
#define wglGetPixelFormatAttribivARB        rwglGetPixelFormatAttribivARB
#endif

#ifndef REGAL_NO_DECLARATION_WGL_ARB_PIXEL_FORMAT
REGAL_DECL BOOL REGAL_CALL wglChoosePixelFormatARB(HDC hDC, const int *piAttribIList, const FLOAT *pfAttribFList, UINT nMaxFormats, int *piFormats, UINT *nNumFormats);

REGAL_DECL BOOL REGAL_CALL wglGetPixelFormatAttribfvARB(HDC hDC, int iPixelFormat, int iLayerPlane, UINT nAttributes, const int *piAttributes, FLOAT *pfValues);

REGAL_DECL BOOL REGAL_CALL wglGetPixelFormatAttribivARB(HDC hDC, int iPixelFormat, int iLayerPlane, UINT nAttributes, const int *piAttributes, int *piValues);

#endif

/**
 ** WGL_ARB_pixel_format_float
 **/

#if (defined(WGL_ARB_PIXEL_FORMAT_FLOAT) || defined(REGAL_NO_ENUM) || defined(REGAL_NO_WGL_ARB_PIXEL_FORMAT_FLOAT)) && !defined(REGAL_NO_ENUM_WGL_ARB_PIXEL_FORMAT_FLOAT)
#define REGAL_NO_ENUM_WGL_ARB_PIXEL_FORMAT_FLOAT
#endif

#if (defined(WGL_ARB_PIXEL_FORMAT_FLOAT) || defined(REGAL_NO_TYPEDEF) || defined(REGAL_NO_WGL_ARB_PIXEL_FORMAT_FLOAT)) && !defined(REGAL_NO_TYPEDEF_WGL_ARB_PIXEL_FORMAT_FLOAT)
#define REGAL_NO_TYPEDEF_WGL_ARB_PIXEL_FORMAT_FLOAT
#endif

#if (defined(WGL_ARB_PIXEL_FORMAT_FLOAT) || !defined(REGAL_NAMESPACE) || defined(REGAL_NO_WGL_ARB_PIXEL_FORMAT_FLOAT)) && !defined(REGAL_NO_NAMESPACE_WGL_ARB_PIXEL_FORMAT_FLOAT)
#define REGAL_NO_NAMESPACE_WGL_ARB_PIXEL_FORMAT_FLOAT
#endif

#if (defined(WGL_ARB_PIXEL_FORMAT_FLOAT) || !defined(REGAL_PLUGIN_MODE) || defined(REGAL_NO_WGL_ARB_PIXEL_FORMAT_FLOAT)) && !defined(REGAL_NO_PLUGIN_WGL_ARB_PIXEL_FORMAT_FLOAT)
#define REGAL_NO_PLUGIN_WGL_ARB_PIXEL_FORMAT_FLOAT
#endif

#if (defined(WGL_ARB_PIXEL_FORMAT_FLOAT) || defined(REGAL_NO_DECLARATION) || defined(REGAL_NO_WGL_ARB_PIXEL_FORMAT_FLOAT)) && !defined(REGAL_NO_DECLARATION_WGL_ARB_PIXEL_FORMAT_FLOAT)
#define REGAL_NO_DECLARATION_WGL_ARB_PIXEL_FORMAT_FLOAT
#endif

#ifndef WGL_ARB_pixel_format_float
#define WGL_ARB_pixel_format_float 1
#endif

#ifndef REGAL_NO_ENUM_WGL_ARB_PIXEL_FORMAT_FLOAT
#define WGL_TYPE_RGBA_FLOAT_ARB 0x21a0 /* 8608 */
#endif

/**
 ** WGL_ARB_render_texture
 **/

#if (defined(WGL_ARB_RENDER_TEXTURE) || defined(REGAL_NO_ENUM) || defined(REGAL_NO_WGL_ARB_RENDER_TEXTURE)) && !defined(REGAL_NO_ENUM_WGL_ARB_RENDER_TEXTURE)
#define REGAL_NO_ENUM_WGL_ARB_RENDER_TEXTURE
#endif

#if (defined(WGL_ARB_RENDER_TEXTURE) || defined(REGAL_NO_TYPEDEF) || defined(REGAL_NO_WGL_ARB_RENDER_TEXTURE)) && !defined(REGAL_NO_TYPEDEF_WGL_ARB_RENDER_TEXTURE)
#define REGAL_NO_TYPEDEF_WGL_ARB_RENDER_TEXTURE
#endif

#if (defined(WGL_ARB_RENDER_TEXTURE) || !defined(REGAL_NAMESPACE) || defined(REGAL_NO_WGL_ARB_RENDER_TEXTURE)) && !defined(REGAL_NO_NAMESPACE_WGL_ARB_RENDER_TEXTURE)
#define REGAL_NO_NAMESPACE_WGL_ARB_RENDER_TEXTURE
#endif

#if (defined(WGL_ARB_RENDER_TEXTURE) || !defined(REGAL_PLUGIN_MODE) || defined(REGAL_NO_WGL_ARB_RENDER_TEXTURE)) && !defined(REGAL_NO_PLUGIN_WGL_ARB_RENDER_TEXTURE)
#define REGAL_NO_PLUGIN_WGL_ARB_RENDER_TEXTURE
#endif

#if (defined(WGL_ARB_RENDER_TEXTURE) || defined(REGAL_NO_DECLARATION) || defined(REGAL_NO_WGL_ARB_RENDER_TEXTURE)) && !defined(REGAL_NO_DECLARATION_WGL_ARB_RENDER_TEXTURE)
#define REGAL_NO_DECLARATION_WGL_ARB_RENDER_TEXTURE
#endif

#ifndef WGL_ARB_render_texture
#define WGL_ARB_render_texture 1
#endif

#ifndef REGAL_NO_ENUM_WGL_ARB_RENDER_TEXTURE
#define WGL_BIND_TO_TEXTURE_RGB_ARB         0x2070     /* 8304 */
#define WGL_BIND_TO_TEXTURE_RGBA_ARB        0x2071     /* 8305 */
#define WGL_TEXTURE_FORMAT_ARB              0x2072     /* 8306 */
#define WGL_TEXTURE_TARGET_ARB              0x2073     /* 8307 */
#define WGL_MIPMAP_TEXTURE_ARB              0x2074     /* 8308 */
#define WGL_TEXTURE_RGB_ARB                 0x2075     /* 8309 */
#define WGL_TEXTURE_RGBA_ARB                0x2076     /* 8310 */
#define WGL_TEXTURE_CUBE_MAP_ARB            0x2078     /* 8312 */
#define WGL_TEXTURE_1D_ARB                  0x2079     /* 8313 */
#define WGL_TEXTURE_2D_ARB                  0x207a     /* 8314 */
#define WGL_MIPMAP_LEVEL_ARB                0x207b     /* 8315 */
#define WGL_CUBE_MAP_FACE_ARB               0x207c     /* 8316 */
#define WGL_TEXTURE_CUBE_MAP_POSITIVE_X_ARB 0x207d     /* 8317 */
#define WGL_TEXTURE_CUBE_MAP_NEGATIVE_X_ARB 0x207e     /* 8318 */
#define WGL_TEXTURE_CUBE_MAP_POSITIVE_Y_ARB 0x207f     /* 8319 */
#define WGL_TEXTURE_CUBE_MAP_NEGATIVE_Y_ARB 0x2080     /* 8320 */
#define WGL_TEXTURE_CUBE_MAP_POSITIVE_Z_ARB 0x2081     /* 8321 */
#define WGL_TEXTURE_CUBE_MAP_NEGATIVE_Z_ARB 0x2082     /* 8322 */
#define WGL_FRONT_LEFT_ARB                  0x2083     /* 8323 */
#define WGL_FRONT_RIGHT_ARB                 0x2084     /* 8324 */
#define WGL_BACK_LEFT_ARB                   0x2085     /* 8325 */
#define WGL_BACK_RIGHT_ARB                  0x2086     /* 8326 */
#define WGL_AUX0_ARB                        0x2087     /* 8327 */
#define WGL_AUX1_ARB                        0x2088     /* 8328 */
#define WGL_AUX2_ARB                        0x2089     /* 8329 */
#define WGL_AUX3_ARB                        0x208a     /* 8330 */
#define WGL_AUX4_ARB                        0x208b     /* 8331 */
#define WGL_AUX5_ARB                        0x208c     /* 8332 */
#define WGL_AUX6_ARB                        0x208d     /* 8333 */
#define WGL_AUX7_ARB                        0x208e     /* 8334 */
#define WGL_AUX8_ARB                        0x208f     /* 8335 */
#define WGL_AUX9_ARB                        0x2090     /* 8336 */
#endif

#ifndef REGAL_NO_TYPEDEF_WGL_ARB_RENDER_TEXTURE
typedef BOOL (REGAL_CALL *PFNWGLBINDTEXIMAGEARBPROC)(HPBUFFERARB hPbuffer, int iBuffer);
typedef BOOL (REGAL_CALL *PFNWGLRELEASETEXIMAGEARBPROC)(HPBUFFERARB hPbuffer, int iBuffer);
typedef BOOL (REGAL_CALL *PFNWGLSETPBUFFERATTRIBARBPROC)(HPBUFFERARB hPbuffer, const int *piAttribList);
#endif

#ifndef REGAL_NO_NAMESPACE_WGL_ARB_RENDER_TEXTURE
#define wglBindTexImageARB                  rwglBindTexImageARB
#define wglReleaseTexImageARB               rwglReleaseTexImageARB
#define wglSetPbufferAttribARB              rwglSetPbufferAttribARB
#endif

#ifndef REGAL_NO_DECLARATION_WGL_ARB_RENDER_TEXTURE
REGAL_DECL BOOL REGAL_CALL wglBindTexImageARB(HPBUFFERARB hPbuffer, int iBuffer);

REGAL_DECL BOOL REGAL_CALL wglReleaseTexImageARB(HPBUFFERARB hPbuffer, int iBuffer);

REGAL_DECL BOOL REGAL_CALL wglSetPbufferAttribARB(HPBUFFERARB hPbuffer, const int *piAttribList);

#endif

/**
 ** WGL_ARB_robustness_share_group_isolation
 **/

#if (defined(WGL_ARB_ROBUSTNESS_SHARE_GROUP_ISOLATION) || defined(REGAL_NO_ENUM) || defined(REGAL_NO_WGL_ARB_ROBUSTNESS_SHARE_GROUP_ISOLATION)) && !defined(REGAL_NO_ENUM_WGL_ARB_ROBUSTNESS_SHARE_GROUP_ISOLATION)
#define REGAL_NO_ENUM_WGL_ARB_ROBUSTNESS_SHARE_GROUP_ISOLATION
#endif

#if (defined(WGL_ARB_ROBUSTNESS_SHARE_GROUP_ISOLATION) || defined(REGAL_NO_TYPEDEF) || defined(REGAL_NO_WGL_ARB_ROBUSTNESS_SHARE_GROUP_ISOLATION)) && !defined(REGAL_NO_TYPEDEF_WGL_ARB_ROBUSTNESS_SHARE_GROUP_ISOLATION)
#define REGAL_NO_TYPEDEF_WGL_ARB_ROBUSTNESS_SHARE_GROUP_ISOLATION
#endif

#if (defined(WGL_ARB_ROBUSTNESS_SHARE_GROUP_ISOLATION) || !defined(REGAL_NAMESPACE) || defined(REGAL_NO_WGL_ARB_ROBUSTNESS_SHARE_GROUP_ISOLATION)) && !defined(REGAL_NO_NAMESPACE_WGL_ARB_ROBUSTNESS_SHARE_GROUP_ISOLATION)
#define REGAL_NO_NAMESPACE_WGL_ARB_ROBUSTNESS_SHARE_GROUP_ISOLATION
#endif

#if (defined(WGL_ARB_ROBUSTNESS_SHARE_GROUP_ISOLATION) || !defined(REGAL_PLUGIN_MODE) || defined(REGAL_NO_WGL_ARB_ROBUSTNESS_SHARE_GROUP_ISOLATION)) && !defined(REGAL_NO_PLUGIN_WGL_ARB_ROBUSTNESS_SHARE_GROUP_ISOLATION)
#define REGAL_NO_PLUGIN_WGL_ARB_ROBUSTNESS_SHARE_GROUP_ISOLATION
#endif

#if (defined(WGL_ARB_ROBUSTNESS_SHARE_GROUP_ISOLATION) || defined(REGAL_NO_DECLARATION) || defined(REGAL_NO_WGL_ARB_ROBUSTNESS_SHARE_GROUP_ISOLATION)) && !defined(REGAL_NO_DECLARATION_WGL_ARB_ROBUSTNESS_SHARE_GROUP_ISOLATION)
#define REGAL_NO_DECLARATION_WGL_ARB_ROBUSTNESS_SHARE_GROUP_ISOLATION
#endif

#ifndef WGL_ARB_robustness_share_group_isolation
#define WGL_ARB_robustness_share_group_isolation 1
#endif

#ifndef REGAL_NO_ENUM_WGL_ARB_ROBUSTNESS_SHARE_GROUP_ISOLATION
#define WGL_CONTEXT_RESET_ISOLATION_BIT_ARB 0x8
#endif

/**
 ** WGL_ATI_pixel_format_float
 **/

#if (defined(WGL_ATI_PIXEL_FORMAT_FLOAT) || defined(REGAL_NO_ENUM) || defined(REGAL_NO_WGL_ATI_PIXEL_FORMAT_FLOAT)) && !defined(REGAL_NO_ENUM_WGL_ATI_PIXEL_FORMAT_FLOAT)
#define REGAL_NO_ENUM_WGL_ATI_PIXEL_FORMAT_FLOAT
#endif

#if (defined(WGL_ATI_PIXEL_FORMAT_FLOAT) || defined(REGAL_NO_TYPEDEF) || defined(REGAL_NO_WGL_ATI_PIXEL_FORMAT_FLOAT)) && !defined(REGAL_NO_TYPEDEF_WGL_ATI_PIXEL_FORMAT_FLOAT)
#define REGAL_NO_TYPEDEF_WGL_ATI_PIXEL_FORMAT_FLOAT
#endif

#if (defined(WGL_ATI_PIXEL_FORMAT_FLOAT) || !defined(REGAL_NAMESPACE) || defined(REGAL_NO_WGL_ATI_PIXEL_FORMAT_FLOAT)) && !defined(REGAL_NO_NAMESPACE_WGL_ATI_PIXEL_FORMAT_FLOAT)
#define REGAL_NO_NAMESPACE_WGL_ATI_PIXEL_FORMAT_FLOAT
#endif

#if (defined(WGL_ATI_PIXEL_FORMAT_FLOAT) || !defined(REGAL_PLUGIN_MODE) || defined(REGAL_NO_WGL_ATI_PIXEL_FORMAT_FLOAT)) && !defined(REGAL_NO_PLUGIN_WGL_ATI_PIXEL_FORMAT_FLOAT)
#define REGAL_NO_PLUGIN_WGL_ATI_PIXEL_FORMAT_FLOAT
#endif

#if (defined(WGL_ATI_PIXEL_FORMAT_FLOAT) || defined(REGAL_NO_DECLARATION) || defined(REGAL_NO_WGL_ATI_PIXEL_FORMAT_FLOAT)) && !defined(REGAL_NO_DECLARATION_WGL_ATI_PIXEL_FORMAT_FLOAT)
#define REGAL_NO_DECLARATION_WGL_ATI_PIXEL_FORMAT_FLOAT
#endif

#ifndef WGL_ATI_pixel_format_float
#define WGL_ATI_pixel_format_float 1
#endif

#ifndef REGAL_NO_ENUM_WGL_ATI_PIXEL_FORMAT_FLOAT
#define WGL_TYPE_RGBA_FLOAT_ATI            0x21a0     /* 8608 */
#define GL_RGBA_FLOAT_MODE_ATI             0x8820     /* 34848 */
#define GL_COLOR_CLEAR_UNCLAMPED_VALUE_ATI 0x8835     /* 34869 */
#endif

/**
 ** WGL_ATI_render_texture_rectangle
 **/

#if (defined(WGL_ATI_RENDER_TEXTURE_RECTANGLE) || defined(REGAL_NO_ENUM) || defined(REGAL_NO_WGL_ATI_RENDER_TEXTURE_RECTANGLE)) && !defined(REGAL_NO_ENUM_WGL_ATI_RENDER_TEXTURE_RECTANGLE)
#define REGAL_NO_ENUM_WGL_ATI_RENDER_TEXTURE_RECTANGLE
#endif

#if (defined(WGL_ATI_RENDER_TEXTURE_RECTANGLE) || defined(REGAL_NO_TYPEDEF) || defined(REGAL_NO_WGL_ATI_RENDER_TEXTURE_RECTANGLE)) && !defined(REGAL_NO_TYPEDEF_WGL_ATI_RENDER_TEXTURE_RECTANGLE)
#define REGAL_NO_TYPEDEF_WGL_ATI_RENDER_TEXTURE_RECTANGLE
#endif

#if (defined(WGL_ATI_RENDER_TEXTURE_RECTANGLE) || !defined(REGAL_NAMESPACE) || defined(REGAL_NO_WGL_ATI_RENDER_TEXTURE_RECTANGLE)) && !defined(REGAL_NO_NAMESPACE_WGL_ATI_RENDER_TEXTURE_RECTANGLE)
#define REGAL_NO_NAMESPACE_WGL_ATI_RENDER_TEXTURE_RECTANGLE
#endif

#if (defined(WGL_ATI_RENDER_TEXTURE_RECTANGLE) || !defined(REGAL_PLUGIN_MODE) || defined(REGAL_NO_WGL_ATI_RENDER_TEXTURE_RECTANGLE)) && !defined(REGAL_NO_PLUGIN_WGL_ATI_RENDER_TEXTURE_RECTANGLE)
#define REGAL_NO_PLUGIN_WGL_ATI_RENDER_TEXTURE_RECTANGLE
#endif

#if (defined(WGL_ATI_RENDER_TEXTURE_RECTANGLE) || defined(REGAL_NO_DECLARATION) || defined(REGAL_NO_WGL_ATI_RENDER_TEXTURE_RECTANGLE)) && !defined(REGAL_NO_DECLARATION_WGL_ATI_RENDER_TEXTURE_RECTANGLE)
#define REGAL_NO_DECLARATION_WGL_ATI_RENDER_TEXTURE_RECTANGLE
#endif

#ifndef WGL_ATI_render_texture_rectangle
#define WGL_ATI_render_texture_rectangle 1
#endif

#ifndef REGAL_NO_ENUM_WGL_ATI_RENDER_TEXTURE_RECTANGLE
#define WGL_TEXTURE_RECTANGLE_ATI 0x21a5 /* 8613 */
#endif

/**
 ** WGL_EXT_create_context_es2_profile
 **/

#if (defined(WGL_EXT_CREATE_CONTEXT_ES2_PROFILE) || defined(REGAL_NO_ENUM) || defined(REGAL_NO_WGL_EXT_CREATE_CONTEXT_ES2_PROFILE)) && !defined(REGAL_NO_ENUM_WGL_EXT_CREATE_CONTEXT_ES2_PROFILE)
#define REGAL_NO_ENUM_WGL_EXT_CREATE_CONTEXT_ES2_PROFILE
#endif

#if (defined(WGL_EXT_CREATE_CONTEXT_ES2_PROFILE) || defined(REGAL_NO_TYPEDEF) || defined(REGAL_NO_WGL_EXT_CREATE_CONTEXT_ES2_PROFILE)) && !defined(REGAL_NO_TYPEDEF_WGL_EXT_CREATE_CONTEXT_ES2_PROFILE)
#define REGAL_NO_TYPEDEF_WGL_EXT_CREATE_CONTEXT_ES2_PROFILE
#endif

#if (defined(WGL_EXT_CREATE_CONTEXT_ES2_PROFILE) || !defined(REGAL_NAMESPACE) || defined(REGAL_NO_WGL_EXT_CREATE_CONTEXT_ES2_PROFILE)) && !defined(REGAL_NO_NAMESPACE_WGL_EXT_CREATE_CONTEXT_ES2_PROFILE)
#define REGAL_NO_NAMESPACE_WGL_EXT_CREATE_CONTEXT_ES2_PROFILE
#endif

#if (defined(WGL_EXT_CREATE_CONTEXT_ES2_PROFILE) || !defined(REGAL_PLUGIN_MODE) || defined(REGAL_NO_WGL_EXT_CREATE_CONTEXT_ES2_PROFILE)) && !defined(REGAL_NO_PLUGIN_WGL_EXT_CREATE_CONTEXT_ES2_PROFILE)
#define REGAL_NO_PLUGIN_WGL_EXT_CREATE_CONTEXT_ES2_PROFILE
#endif

#if (defined(WGL_EXT_CREATE_CONTEXT_ES2_PROFILE) || defined(REGAL_NO_DECLARATION) || defined(REGAL_NO_WGL_EXT_CREATE_CONTEXT_ES2_PROFILE)) && !defined(REGAL_NO_DECLARATION_WGL_EXT_CREATE_CONTEXT_ES2_PROFILE)
#define REGAL_NO_DECLARATION_WGL_EXT_CREATE_CONTEXT_ES2_PROFILE
#endif

#ifndef WGL_EXT_create_context_es2_profile
#define WGL_EXT_create_context_es2_profile 1
#endif

#ifndef REGAL_NO_ENUM_WGL_EXT_CREATE_CONTEXT_ES2_PROFILE
#define WGL_CONTEXT_ES2_PROFILE_BIT_EXT 0x4
#endif

/**
 ** WGL_EXT_create_context_es_profile
 **/

#if (defined(WGL_EXT_CREATE_CONTEXT_ES_PROFILE) || defined(REGAL_NO_ENUM) || defined(REGAL_NO_WGL_EXT_CREATE_CONTEXT_ES_PROFILE)) && !defined(REGAL_NO_ENUM_WGL_EXT_CREATE_CONTEXT_ES_PROFILE)
#define REGAL_NO_ENUM_WGL_EXT_CREATE_CONTEXT_ES_PROFILE
#endif

#if (defined(WGL_EXT_CREATE_CONTEXT_ES_PROFILE) || defined(REGAL_NO_TYPEDEF) || defined(REGAL_NO_WGL_EXT_CREATE_CONTEXT_ES_PROFILE)) && !defined(REGAL_NO_TYPEDEF_WGL_EXT_CREATE_CONTEXT_ES_PROFILE)
#define REGAL_NO_TYPEDEF_WGL_EXT_CREATE_CONTEXT_ES_PROFILE
#endif

#if (defined(WGL_EXT_CREATE_CONTEXT_ES_PROFILE) || !defined(REGAL_NAMESPACE) || defined(REGAL_NO_WGL_EXT_CREATE_CONTEXT_ES_PROFILE)) && !defined(REGAL_NO_NAMESPACE_WGL_EXT_CREATE_CONTEXT_ES_PROFILE)
#define REGAL_NO_NAMESPACE_WGL_EXT_CREATE_CONTEXT_ES_PROFILE
#endif

#if (defined(WGL_EXT_CREATE_CONTEXT_ES_PROFILE) || !defined(REGAL_PLUGIN_MODE) || defined(REGAL_NO_WGL_EXT_CREATE_CONTEXT_ES_PROFILE)) && !defined(REGAL_NO_PLUGIN_WGL_EXT_CREATE_CONTEXT_ES_PROFILE)
#define REGAL_NO_PLUGIN_WGL_EXT_CREATE_CONTEXT_ES_PROFILE
#endif

#if (defined(WGL_EXT_CREATE_CONTEXT_ES_PROFILE) || defined(REGAL_NO_DECLARATION) || defined(REGAL_NO_WGL_EXT_CREATE_CONTEXT_ES_PROFILE)) && !defined(REGAL_NO_DECLARATION_WGL_EXT_CREATE_CONTEXT_ES_PROFILE)
#define REGAL_NO_DECLARATION_WGL_EXT_CREATE_CONTEXT_ES_PROFILE
#endif

#ifndef WGL_EXT_create_context_es_profile
#define WGL_EXT_create_context_es_profile 1
#endif

#ifndef REGAL_NO_ENUM_WGL_EXT_CREATE_CONTEXT_ES_PROFILE
#define WGL_CONTEXT_ES_PROFILE_BIT_EXT 0x4
#endif

/**
 ** WGL_EXT_depth_float
 **/

#if (defined(WGL_EXT_DEPTH_FLOAT) || defined(REGAL_NO_ENUM) || defined(REGAL_NO_WGL_EXT_DEPTH_FLOAT)) && !defined(REGAL_NO_ENUM_WGL_EXT_DEPTH_FLOAT)
#define REGAL_NO_ENUM_WGL_EXT_DEPTH_FLOAT
#endif

#if (defined(WGL_EXT_DEPTH_FLOAT) || defined(REGAL_NO_TYPEDEF) || defined(REGAL_NO_WGL_EXT_DEPTH_FLOAT)) && !defined(REGAL_NO_TYPEDEF_WGL_EXT_DEPTH_FLOAT)
#define REGAL_NO_TYPEDEF_WGL_EXT_DEPTH_FLOAT
#endif

#if (defined(WGL_EXT_DEPTH_FLOAT) || !defined(REGAL_NAMESPACE) || defined(REGAL_NO_WGL_EXT_DEPTH_FLOAT)) && !defined(REGAL_NO_NAMESPACE_WGL_EXT_DEPTH_FLOAT)
#define REGAL_NO_NAMESPACE_WGL_EXT_DEPTH_FLOAT
#endif

#if (defined(WGL_EXT_DEPTH_FLOAT) || !defined(REGAL_PLUGIN_MODE) || defined(REGAL_NO_WGL_EXT_DEPTH_FLOAT)) && !defined(REGAL_NO_PLUGIN_WGL_EXT_DEPTH_FLOAT)
#define REGAL_NO_PLUGIN_WGL_EXT_DEPTH_FLOAT
#endif

#if (defined(WGL_EXT_DEPTH_FLOAT) || defined(REGAL_NO_DECLARATION) || defined(REGAL_NO_WGL_EXT_DEPTH_FLOAT)) && !defined(REGAL_NO_DECLARATION_WGL_EXT_DEPTH_FLOAT)
#define REGAL_NO_DECLARATION_WGL_EXT_DEPTH_FLOAT
#endif

#ifndef WGL_EXT_depth_float
#define WGL_EXT_depth_float 1
#endif

#ifndef REGAL_NO_ENUM_WGL_EXT_DEPTH_FLOAT
#define WGL_DEPTH_FLOAT_EXT 0x2040 /* 8256 */
#endif

/**
 ** WGL_EXT_display_color_table
 **/

#if (defined(WGL_EXT_DISPLAY_COLOR_TABLE) || defined(REGAL_NO_ENUM) || defined(REGAL_NO_WGL_EXT_DISPLAY_COLOR_TABLE)) && !defined(REGAL_NO_ENUM_WGL_EXT_DISPLAY_COLOR_TABLE)
#define REGAL_NO_ENUM_WGL_EXT_DISPLAY_COLOR_TABLE
#endif

#if (defined(WGL_EXT_DISPLAY_COLOR_TABLE) || defined(REGAL_NO_TYPEDEF) || defined(REGAL_NO_WGL_EXT_DISPLAY_COLOR_TABLE)) && !defined(REGAL_NO_TYPEDEF_WGL_EXT_DISPLAY_COLOR_TABLE)
#define REGAL_NO_TYPEDEF_WGL_EXT_DISPLAY_COLOR_TABLE
#endif

#if (defined(WGL_EXT_DISPLAY_COLOR_TABLE) || !defined(REGAL_NAMESPACE) || defined(REGAL_NO_WGL_EXT_DISPLAY_COLOR_TABLE)) && !defined(REGAL_NO_NAMESPACE_WGL_EXT_DISPLAY_COLOR_TABLE)
#define REGAL_NO_NAMESPACE_WGL_EXT_DISPLAY_COLOR_TABLE
#endif

#if (defined(WGL_EXT_DISPLAY_COLOR_TABLE) || !defined(REGAL_PLUGIN_MODE) || defined(REGAL_NO_WGL_EXT_DISPLAY_COLOR_TABLE)) && !defined(REGAL_NO_PLUGIN_WGL_EXT_DISPLAY_COLOR_TABLE)
#define REGAL_NO_PLUGIN_WGL_EXT_DISPLAY_COLOR_TABLE
#endif

#if (defined(WGL_EXT_DISPLAY_COLOR_TABLE) || defined(REGAL_NO_DECLARATION) || defined(REGAL_NO_WGL_EXT_DISPLAY_COLOR_TABLE)) && !defined(REGAL_NO_DECLARATION_WGL_EXT_DISPLAY_COLOR_TABLE)
#define REGAL_NO_DECLARATION_WGL_EXT_DISPLAY_COLOR_TABLE
#endif

#ifndef WGL_EXT_display_color_table
#define WGL_EXT_display_color_table 1
#endif

#ifndef REGAL_NO_TYPEDEF_WGL_EXT_DISPLAY_COLOR_TABLE
typedef GLboolean (REGAL_CALL *PFNWGLBINDDISPLAYCOLORTABLEEXTPROC)(GLushort id);
typedef GLboolean (REGAL_CALL *PFNWGLCREATEDISPLAYCOLORTABLEEXTPROC)(GLushort id);
typedef GLboolean (REGAL_CALL *PFNWGLLOADDISPLAYCOLORTABLEEXTPROC)(const GLushort *table, GLuint length);
typedef VOID (REGAL_CALL *PFNWGLDESTROYDISPLAYCOLORTABLEEXTPROC)(GLushort id);
#endif

#ifndef REGAL_NO_NAMESPACE_WGL_EXT_DISPLAY_COLOR_TABLE
#define wglBindDisplayColorTableEXT         rwglBindDisplayColorTableEXT
#define wglCreateDisplayColorTableEXT       rwglCreateDisplayColorTableEXT
#define wglDestroyDisplayColorTableEXT      rwglDestroyDisplayColorTableEXT
#define wglLoadDisplayColorTableEXT         rwglLoadDisplayColorTableEXT
#endif

#ifndef REGAL_NO_DECLARATION_WGL_EXT_DISPLAY_COLOR_TABLE
REGAL_DECL GLboolean REGAL_CALL wglBindDisplayColorTableEXT(GLushort id);

REGAL_DECL GLboolean REGAL_CALL wglCreateDisplayColorTableEXT(GLushort id);

REGAL_DECL GLboolean REGAL_CALL wglLoadDisplayColorTableEXT(const GLushort *table, GLuint length);

REGAL_DECL VOID REGAL_CALL wglDestroyDisplayColorTableEXT(GLushort id);

#endif

/**
 ** WGL_EXT_extensions_string
 **/

#if (defined(WGL_EXT_EXTENSIONS_STRING) || defined(REGAL_NO_ENUM) || defined(REGAL_NO_WGL_EXT_EXTENSIONS_STRING)) && !defined(REGAL_NO_ENUM_WGL_EXT_EXTENSIONS_STRING)
#define REGAL_NO_ENUM_WGL_EXT_EXTENSIONS_STRING
#endif

#if (defined(WGL_EXT_EXTENSIONS_STRING) || defined(REGAL_NO_TYPEDEF) || defined(REGAL_NO_WGL_EXT_EXTENSIONS_STRING)) && !defined(REGAL_NO_TYPEDEF_WGL_EXT_EXTENSIONS_STRING)
#define REGAL_NO_TYPEDEF_WGL_EXT_EXTENSIONS_STRING
#endif

#if (defined(WGL_EXT_EXTENSIONS_STRING) || !defined(REGAL_NAMESPACE) || defined(REGAL_NO_WGL_EXT_EXTENSIONS_STRING)) && !defined(REGAL_NO_NAMESPACE_WGL_EXT_EXTENSIONS_STRING)
#define REGAL_NO_NAMESPACE_WGL_EXT_EXTENSIONS_STRING
#endif

#if (defined(WGL_EXT_EXTENSIONS_STRING) || !defined(REGAL_PLUGIN_MODE) || defined(REGAL_NO_WGL_EXT_EXTENSIONS_STRING)) && !defined(REGAL_NO_PLUGIN_WGL_EXT_EXTENSIONS_STRING)
#define REGAL_NO_PLUGIN_WGL_EXT_EXTENSIONS_STRING
#endif

#if (defined(WGL_EXT_EXTENSIONS_STRING) || defined(REGAL_NO_DECLARATION) || defined(REGAL_NO_WGL_EXT_EXTENSIONS_STRING)) && !defined(REGAL_NO_DECLARATION_WGL_EXT_EXTENSIONS_STRING)
#define REGAL_NO_DECLARATION_WGL_EXT_EXTENSIONS_STRING
#endif

#ifndef WGL_EXT_extensions_string
#define WGL_EXT_extensions_string 1
#endif

#ifndef REGAL_NO_TYPEDEF_WGL_EXT_EXTENSIONS_STRING
typedef const char *(REGAL_CALL *PFNWGLGETEXTENSIONSSTRINGEXTPROC)(void);
#endif

#ifndef REGAL_NO_NAMESPACE_WGL_EXT_EXTENSIONS_STRING
#define wglGetExtensionsStringEXT           rwglGetExtensionsStringEXT
#endif

#ifndef REGAL_NO_DECLARATION_WGL_EXT_EXTENSIONS_STRING
REGAL_DECL const char *REGAL_CALL wglGetExtensionsStringEXT(void);

#endif

/**
 ** WGL_EXT_framebuffer_sRGB
 **/

#if (defined(WGL_EXT_FRAMEBUFFER_SRGB) || defined(REGAL_NO_ENUM) || defined(REGAL_NO_WGL_EXT_FRAMEBUFFER_SRGB)) && !defined(REGAL_NO_ENUM_WGL_EXT_FRAMEBUFFER_SRGB)
#define REGAL_NO_ENUM_WGL_EXT_FRAMEBUFFER_SRGB
#endif

#if (defined(WGL_EXT_FRAMEBUFFER_SRGB) || defined(REGAL_NO_TYPEDEF) || defined(REGAL_NO_WGL_EXT_FRAMEBUFFER_SRGB)) && !defined(REGAL_NO_TYPEDEF_WGL_EXT_FRAMEBUFFER_SRGB)
#define REGAL_NO_TYPEDEF_WGL_EXT_FRAMEBUFFER_SRGB
#endif

#if (defined(WGL_EXT_FRAMEBUFFER_SRGB) || !defined(REGAL_NAMESPACE) || defined(REGAL_NO_WGL_EXT_FRAMEBUFFER_SRGB)) && !defined(REGAL_NO_NAMESPACE_WGL_EXT_FRAMEBUFFER_SRGB)
#define REGAL_NO_NAMESPACE_WGL_EXT_FRAMEBUFFER_SRGB
#endif

#if (defined(WGL_EXT_FRAMEBUFFER_SRGB) || !defined(REGAL_PLUGIN_MODE) || defined(REGAL_NO_WGL_EXT_FRAMEBUFFER_SRGB)) && !defined(REGAL_NO_PLUGIN_WGL_EXT_FRAMEBUFFER_SRGB)
#define REGAL_NO_PLUGIN_WGL_EXT_FRAMEBUFFER_SRGB
#endif

#if (defined(WGL_EXT_FRAMEBUFFER_SRGB) || defined(REGAL_NO_DECLARATION) || defined(REGAL_NO_WGL_EXT_FRAMEBUFFER_SRGB)) && !defined(REGAL_NO_DECLARATION_WGL_EXT_FRAMEBUFFER_SRGB)
#define REGAL_NO_DECLARATION_WGL_EXT_FRAMEBUFFER_SRGB
#endif

#ifndef WGL_EXT_framebuffer_sRGB
#define WGL_EXT_framebuffer_sRGB 1
#endif

#ifndef REGAL_NO_ENUM_WGL_EXT_FRAMEBUFFER_SRGB
#define WGL_FRAMEBUFFER_SRGB_CAPABLE_EXT 0x20a9 /* 8361 */
#endif

/**
 ** WGL_EXT_make_current_read
 **/

#if (defined(WGL_EXT_MAKE_CURRENT_READ) || defined(REGAL_NO_ENUM) || defined(REGAL_NO_WGL_EXT_MAKE_CURRENT_READ)) && !defined(REGAL_NO_ENUM_WGL_EXT_MAKE_CURRENT_READ)
#define REGAL_NO_ENUM_WGL_EXT_MAKE_CURRENT_READ
#endif

#if (defined(WGL_EXT_MAKE_CURRENT_READ) || defined(REGAL_NO_TYPEDEF) || defined(REGAL_NO_WGL_EXT_MAKE_CURRENT_READ)) && !defined(REGAL_NO_TYPEDEF_WGL_EXT_MAKE_CURRENT_READ)
#define REGAL_NO_TYPEDEF_WGL_EXT_MAKE_CURRENT_READ
#endif

#if (defined(WGL_EXT_MAKE_CURRENT_READ) || !defined(REGAL_NAMESPACE) || defined(REGAL_NO_WGL_EXT_MAKE_CURRENT_READ)) && !defined(REGAL_NO_NAMESPACE_WGL_EXT_MAKE_CURRENT_READ)
#define REGAL_NO_NAMESPACE_WGL_EXT_MAKE_CURRENT_READ
#endif

#if (defined(WGL_EXT_MAKE_CURRENT_READ) || !defined(REGAL_PLUGIN_MODE) || defined(REGAL_NO_WGL_EXT_MAKE_CURRENT_READ)) && !defined(REGAL_NO_PLUGIN_WGL_EXT_MAKE_CURRENT_READ)
#define REGAL_NO_PLUGIN_WGL_EXT_MAKE_CURRENT_READ
#endif

#if (defined(WGL_EXT_MAKE_CURRENT_READ) || defined(REGAL_NO_DECLARATION) || defined(REGAL_NO_WGL_EXT_MAKE_CURRENT_READ)) && !defined(REGAL_NO_DECLARATION_WGL_EXT_MAKE_CURRENT_READ)
#define REGAL_NO_DECLARATION_WGL_EXT_MAKE_CURRENT_READ
#endif

#ifndef WGL_EXT_make_current_read
#define WGL_EXT_make_current_read 1
#endif

#ifndef REGAL_NO_ENUM_WGL_EXT_MAKE_CURRENT_READ
#define ERROR_INVALID_PIXEL_TYPE_EXT 0x2043 /* 8259 */
#endif

#ifndef REGAL_NO_TYPEDEF_WGL_EXT_MAKE_CURRENT_READ
typedef BOOL (REGAL_CALL *PFNWGLMAKECONTEXTCURRENTEXTPROC)(HDC hDrawDC, HDC hReadDC, HGLRC hglrc);
typedef HDC (REGAL_CALL *PFNWGLGETCURRENTREADDCEXTPROC)(void);
#endif

#ifndef REGAL_NO_NAMESPACE_WGL_EXT_MAKE_CURRENT_READ
#define wglGetCurrentReadDCEXT              rwglGetCurrentReadDCEXT
#define wglMakeContextCurrentEXT            rwglMakeContextCurrentEXT
#endif

#ifndef REGAL_NO_DECLARATION_WGL_EXT_MAKE_CURRENT_READ
REGAL_DECL BOOL REGAL_CALL wglMakeContextCurrentEXT(HDC hDrawDC, HDC hReadDC, HGLRC hglrc);

REGAL_DECL HDC REGAL_CALL wglGetCurrentReadDCEXT(void);

#endif

/**
 ** WGL_EXT_multisample
 **/

#if (defined(WGL_EXT_MULTISAMPLE) || defined(REGAL_NO_ENUM) || defined(REGAL_NO_WGL_EXT_MULTISAMPLE)) && !defined(REGAL_NO_ENUM_WGL_EXT_MULTISAMPLE)
#define REGAL_NO_ENUM_WGL_EXT_MULTISAMPLE
#endif

#if (defined(WGL_EXT_MULTISAMPLE) || defined(REGAL_NO_TYPEDEF) || defined(REGAL_NO_WGL_EXT_MULTISAMPLE)) && !defined(REGAL_NO_TYPEDEF_WGL_EXT_MULTISAMPLE)
#define REGAL_NO_TYPEDEF_WGL_EXT_MULTISAMPLE
#endif

#if (defined(WGL_EXT_MULTISAMPLE) || !defined(REGAL_NAMESPACE) || defined(REGAL_NO_WGL_EXT_MULTISAMPLE)) && !defined(REGAL_NO_NAMESPACE_WGL_EXT_MULTISAMPLE)
#define REGAL_NO_NAMESPACE_WGL_EXT_MULTISAMPLE
#endif

#if (defined(WGL_EXT_MULTISAMPLE) || !defined(REGAL_PLUGIN_MODE) || defined(REGAL_NO_WGL_EXT_MULTISAMPLE)) && !defined(REGAL_NO_PLUGIN_WGL_EXT_MULTISAMPLE)
#define REGAL_NO_PLUGIN_WGL_EXT_MULTISAMPLE
#endif

#if (defined(WGL_EXT_MULTISAMPLE) || defined(REGAL_NO_DECLARATION) || defined(REGAL_NO_WGL_EXT_MULTISAMPLE)) && !defined(REGAL_NO_DECLARATION_WGL_EXT_MULTISAMPLE)
#define REGAL_NO_DECLARATION_WGL_EXT_MULTISAMPLE
#endif

#ifndef WGL_EXT_multisample
#define WGL_EXT_multisample 1
#endif

#ifndef REGAL_NO_ENUM_WGL_EXT_MULTISAMPLE
#define WGL_SAMPLE_BUFFERS_EXT 0x2041     /* 8257 */
#define WGL_SAMPLES_EXT        0x2042     /* 8258 */
#endif

/**
 ** WGL_EXT_pbuffer
 **/

#if (defined(WGL_EXT_PBUFFER) || defined(REGAL_NO_ENUM) || defined(REGAL_NO_WGL_EXT_PBUFFER)) && !defined(REGAL_NO_ENUM_WGL_EXT_PBUFFER)
#define REGAL_NO_ENUM_WGL_EXT_PBUFFER
#endif

#if (defined(WGL_EXT_PBUFFER) || defined(REGAL_NO_TYPEDEF) || defined(REGAL_NO_WGL_EXT_PBUFFER)) && !defined(REGAL_NO_TYPEDEF_WGL_EXT_PBUFFER)
#define REGAL_NO_TYPEDEF_WGL_EXT_PBUFFER
#endif

#if (defined(WGL_EXT_PBUFFER) || !defined(REGAL_NAMESPACE) || defined(REGAL_NO_WGL_EXT_PBUFFER)) && !defined(REGAL_NO_NAMESPACE_WGL_EXT_PBUFFER)
#define REGAL_NO_NAMESPACE_WGL_EXT_PBUFFER
#endif

#if (defined(WGL_EXT_PBUFFER) || !defined(REGAL_PLUGIN_MODE) || defined(REGAL_NO_WGL_EXT_PBUFFER)) && !defined(REGAL_NO_PLUGIN_WGL_EXT_PBUFFER)
#define REGAL_NO_PLUGIN_WGL_EXT_PBUFFER
#endif

#if (defined(WGL_EXT_PBUFFER) || defined(REGAL_NO_DECLARATION) || defined(REGAL_NO_WGL_EXT_PBUFFER)) && !defined(REGAL_NO_DECLARATION_WGL_EXT_PBUFFER)
#define REGAL_NO_DECLARATION_WGL_EXT_PBUFFER
#endif

#ifndef WGL_EXT_pbuffer
#define WGL_EXT_pbuffer 1
#endif

#ifndef REGAL_NO_ENUM_WGL_EXT_PBUFFER
#define WGL_DRAW_TO_PBUFFER_EXT        0x202d     /* 8237 */
#define WGL_MAX_PBUFFER_PIXELS_EXT     0x202e     /* 8238 */
#define WGL_MAX_PBUFFER_WIDTH_EXT      0x202f     /* 8239 */
#define WGL_MAX_PBUFFER_HEIGHT_EXT     0x2030     /* 8240 */
#define WGL_OPTIMAL_PBUFFER_WIDTH_EXT  0x2031     /* 8241 */
#define WGL_OPTIMAL_PBUFFER_HEIGHT_EXT 0x2032     /* 8242 */
#define WGL_PBUFFER_LARGEST_EXT        0x2033     /* 8243 */
#define WGL_PBUFFER_WIDTH_EXT          0x2034     /* 8244 */
#define WGL_PBUFFER_HEIGHT_EXT         0x2035     /* 8245 */
#endif

#ifndef REGAL_NO_TYPEDEF_WGL_EXT_PBUFFER
typedef BOOL (REGAL_CALL *PFNWGLDESTROYPBUFFEREXTPROC)(HPBUFFEREXT hPbuffer);
typedef BOOL (REGAL_CALL *PFNWGLQUERYPBUFFEREXTPROC)(HPBUFFEREXT hPbuffer, int iAttribute, int *piValue);
typedef HDC (REGAL_CALL *PFNWGLGETPBUFFERDCEXTPROC)(HPBUFFEREXT hPbuffer);
typedef HPBUFFEREXT (REGAL_CALL *PFNWGLCREATEPBUFFEREXTPROC)(HDC hDC, int iPixelFormat, int iWidth, int iHeight, const int *piAttribList);
typedef int (REGAL_CALL *PFNWGLRELEASEPBUFFERDCEXTPROC)(HPBUFFEREXT hPbuffer, HDC hDC);
#endif

#ifndef REGAL_NO_NAMESPACE_WGL_EXT_PBUFFER
#define wglCreatePbufferEXT                 rwglCreatePbufferEXT
#define wglDestroyPbufferEXT                rwglDestroyPbufferEXT
#define wglGetPbufferDCEXT                  rwglGetPbufferDCEXT
#define wglQueryPbufferEXT                  rwglQueryPbufferEXT
#define wglReleasePbufferDCEXT              rwglReleasePbufferDCEXT
#endif

#ifndef REGAL_NO_DECLARATION_WGL_EXT_PBUFFER
REGAL_DECL BOOL REGAL_CALL wglDestroyPbufferEXT(HPBUFFEREXT hPbuffer);

REGAL_DECL BOOL REGAL_CALL wglQueryPbufferEXT(HPBUFFEREXT hPbuffer, int iAttribute, int *piValue);

REGAL_DECL HDC REGAL_CALL wglGetPbufferDCEXT(HPBUFFEREXT hPbuffer);

REGAL_DECL HPBUFFEREXT REGAL_CALL wglCreatePbufferEXT(HDC hDC, int iPixelFormat, int iWidth, int iHeight, const int *piAttribList);

REGAL_DECL int REGAL_CALL wglReleasePbufferDCEXT(HPBUFFEREXT hPbuffer, HDC hDC);

#endif

/**
 ** WGL_EXT_pixel_format
 **/

#if (defined(WGL_EXT_PIXEL_FORMAT) || defined(REGAL_NO_ENUM) || defined(REGAL_NO_WGL_EXT_PIXEL_FORMAT)) && !defined(REGAL_NO_ENUM_WGL_EXT_PIXEL_FORMAT)
#define REGAL_NO_ENUM_WGL_EXT_PIXEL_FORMAT
#endif

#if (defined(WGL_EXT_PIXEL_FORMAT) || defined(REGAL_NO_TYPEDEF) || defined(REGAL_NO_WGL_EXT_PIXEL_FORMAT)) && !defined(REGAL_NO_TYPEDEF_WGL_EXT_PIXEL_FORMAT)
#define REGAL_NO_TYPEDEF_WGL_EXT_PIXEL_FORMAT
#endif

#if (defined(WGL_EXT_PIXEL_FORMAT) || !defined(REGAL_NAMESPACE) || defined(REGAL_NO_WGL_EXT_PIXEL_FORMAT)) && !defined(REGAL_NO_NAMESPACE_WGL_EXT_PIXEL_FORMAT)
#define REGAL_NO_NAMESPACE_WGL_EXT_PIXEL_FORMAT
#endif

#if (defined(WGL_EXT_PIXEL_FORMAT) || !defined(REGAL_PLUGIN_MODE) || defined(REGAL_NO_WGL_EXT_PIXEL_FORMAT)) && !defined(REGAL_NO_PLUGIN_WGL_EXT_PIXEL_FORMAT)
#define REGAL_NO_PLUGIN_WGL_EXT_PIXEL_FORMAT
#endif

#if (defined(WGL_EXT_PIXEL_FORMAT) || defined(REGAL_NO_DECLARATION) || defined(REGAL_NO_WGL_EXT_PIXEL_FORMAT)) && !defined(REGAL_NO_DECLARATION_WGL_EXT_PIXEL_FORMAT)
#define REGAL_NO_DECLARATION_WGL_EXT_PIXEL_FORMAT
#endif

#ifndef WGL_EXT_pixel_format
#define WGL_EXT_pixel_format 1
#endif

#ifndef REGAL_NO_ENUM_WGL_EXT_PIXEL_FORMAT
#define WGL_NUMBER_PIXEL_FORMATS_EXT 0x2000     /* 8192 */
#define WGL_DRAW_TO_WINDOW_EXT       0x2001     /* 8193 */
#define WGL_DRAW_TO_BITMAP_EXT       0x2002     /* 8194 */
#define WGL_ACCELERATION_EXT         0x2003     /* 8195 */
#define WGL_NEED_PALETTE_EXT         0x2004     /* 8196 */
#define WGL_NEED_SYSTEM_PALETTE_EXT  0x2005     /* 8197 */
#define WGL_SWAP_LAYER_BUFFERS_EXT   0x2006     /* 8198 */
#define WGL_SWAP_METHOD_EXT          0x2007     /* 8199 */
#define WGL_NUMBER_OVERLAYS_EXT      0x2008     /* 8200 */
#define WGL_NUMBER_UNDERLAYS_EXT     0x2009     /* 8201 */
#define WGL_TRANSPARENT_EXT          0x200a     /* 8202 */
#define WGL_TRANSPARENT_VALUE_EXT    0x200b     /* 8203 */
#define WGL_SHARE_DEPTH_EXT          0x200c     /* 8204 */
#define WGL_SHARE_STENCIL_EXT        0x200d     /* 8205 */
#define WGL_SHARE_ACCUM_EXT          0x200e     /* 8206 */
#define WGL_SUPPORT_GDI_EXT          0x200f     /* 8207 */
#define WGL_SUPPORT_OPENGL_EXT       0x2010     /* 8208 */
#define WGL_DOUBLE_BUFFER_EXT        0x2011     /* 8209 */
#define WGL_STEREO_EXT               0x2012     /* 8210 */
#define WGL_PIXEL_TYPE_EXT           0x2013     /* 8211 */
#define WGL_COLOR_BITS_EXT           0x2014     /* 8212 */
#define WGL_RED_BITS_EXT             0x2015     /* 8213 */
#define WGL_RED_SHIFT_EXT            0x2016     /* 8214 */
#define WGL_GREEN_BITS_EXT           0x2017     /* 8215 */
#define WGL_GREEN_SHIFT_EXT          0x2018     /* 8216 */
#define WGL_BLUE_BITS_EXT            0x2019     /* 8217 */
#define WGL_BLUE_SHIFT_EXT           0x201a     /* 8218 */
#define WGL_ALPHA_BITS_EXT           0x201b     /* 8219 */
#define WGL_ALPHA_SHIFT_EXT          0x201c     /* 8220 */
#define WGL_ACCUM_BITS_EXT           0x201d     /* 8221 */
#define WGL_ACCUM_RED_BITS_EXT       0x201e     /* 8222 */
#define WGL_ACCUM_GREEN_BITS_EXT     0x201f     /* 8223 */
#define WGL_ACCUM_BLUE_BITS_EXT      0x2020     /* 8224 */
#define WGL_ACCUM_ALPHA_BITS_EXT     0x2021     /* 8225 */
#define WGL_DEPTH_BITS_EXT           0x2022     /* 8226 */
#define WGL_STENCIL_BITS_EXT         0x2023     /* 8227 */
#define WGL_AUX_BUFFERS_EXT          0x2024     /* 8228 */
#define WGL_NO_ACCELERATION_EXT      0x2025     /* 8229 */
#define WGL_GENERIC_ACCELERATION_EXT 0x2026     /* 8230 */
#define WGL_FULL_ACCELERATION_EXT    0x2027     /* 8231 */
#define WGL_SWAP_EXCHANGE_EXT        0x2028     /* 8232 */
#define WGL_SWAP_COPY_EXT            0x2029     /* 8233 */
#define WGL_SWAP_UNDEFINED_EXT       0x202a     /* 8234 */
#define WGL_TYPE_RGBA_EXT            0x202b     /* 8235 */
#define WGL_TYPE_COLORINDEX_EXT      0x202c     /* 8236 */
#endif

#ifndef REGAL_NO_TYPEDEF_WGL_EXT_PIXEL_FORMAT
typedef BOOL (REGAL_CALL *PFNWGLCHOOSEPIXELFORMATEXTPROC)(HDC hDC, const int *piAttribIList, const FLOAT *pfAttribFList, UINT nMaxFormats, int *piFormats, UINT *nNumFormats);
typedef BOOL (REGAL_CALL *PFNWGLGETPIXELFORMATATTRIBFVEXTPROC)(HDC hDC, int iPixelFormat, int iLayerPlane, UINT nAttributes, const int *piAttributes, FLOAT *pfValues);
typedef BOOL (REGAL_CALL *PFNWGLGETPIXELFORMATATTRIBIVEXTPROC)(HDC hDC, int iPixelFormat, int iLayerPlane, UINT nAttributes, const int *piAttributes, int *piValues);
#endif

#ifndef REGAL_NO_NAMESPACE_WGL_EXT_PIXEL_FORMAT
#define wglChoosePixelFormatEXT             rwglChoosePixelFormatEXT
#define wglGetPixelFormatAttribfvEXT        rwglGetPixelFormatAttribfvEXT
#define wglGetPixelFormatAttribivEXT        rwglGetPixelFormatAttribivEXT
#endif

#ifndef REGAL_NO_DECLARATION_WGL_EXT_PIXEL_FORMAT
REGAL_DECL BOOL REGAL_CALL wglChoosePixelFormatEXT(HDC hDC, const int *piAttribIList, const FLOAT *pfAttribFList, UINT nMaxFormats, int *piFormats, UINT *nNumFormats);

REGAL_DECL BOOL REGAL_CALL wglGetPixelFormatAttribfvEXT(HDC hDC, int iPixelFormat, int iLayerPlane, UINT nAttributes, const int *piAttributes, FLOAT *pfValues);

REGAL_DECL BOOL REGAL_CALL wglGetPixelFormatAttribivEXT(HDC hDC, int iPixelFormat, int iLayerPlane, UINT nAttributes, const int *piAttributes, int *piValues);

#endif

/**
 ** WGL_EXT_pixel_format_packed_float
 **/

#if (defined(WGL_EXT_PIXEL_FORMAT_PACKED_FLOAT) || defined(REGAL_NO_ENUM) || defined(REGAL_NO_WGL_EXT_PIXEL_FORMAT_PACKED_FLOAT)) && !defined(REGAL_NO_ENUM_WGL_EXT_PIXEL_FORMAT_PACKED_FLOAT)
#define REGAL_NO_ENUM_WGL_EXT_PIXEL_FORMAT_PACKED_FLOAT
#endif

#if (defined(WGL_EXT_PIXEL_FORMAT_PACKED_FLOAT) || defined(REGAL_NO_TYPEDEF) || defined(REGAL_NO_WGL_EXT_PIXEL_FORMAT_PACKED_FLOAT)) && !defined(REGAL_NO_TYPEDEF_WGL_EXT_PIXEL_FORMAT_PACKED_FLOAT)
#define REGAL_NO_TYPEDEF_WGL_EXT_PIXEL_FORMAT_PACKED_FLOAT
#endif

#if (defined(WGL_EXT_PIXEL_FORMAT_PACKED_FLOAT) || !defined(REGAL_NAMESPACE) || defined(REGAL_NO_WGL_EXT_PIXEL_FORMAT_PACKED_FLOAT)) && !defined(REGAL_NO_NAMESPACE_WGL_EXT_PIXEL_FORMAT_PACKED_FLOAT)
#define REGAL_NO_NAMESPACE_WGL_EXT_PIXEL_FORMAT_PACKED_FLOAT
#endif

#if (defined(WGL_EXT_PIXEL_FORMAT_PACKED_FLOAT) || !defined(REGAL_PLUGIN_MODE) || defined(REGAL_NO_WGL_EXT_PIXEL_FORMAT_PACKED_FLOAT)) && !defined(REGAL_NO_PLUGIN_WGL_EXT_PIXEL_FORMAT_PACKED_FLOAT)
#define REGAL_NO_PLUGIN_WGL_EXT_PIXEL_FORMAT_PACKED_FLOAT
#endif

#if (defined(WGL_EXT_PIXEL_FORMAT_PACKED_FLOAT) || defined(REGAL_NO_DECLARATION) || defined(REGAL_NO_WGL_EXT_PIXEL_FORMAT_PACKED_FLOAT)) && !defined(REGAL_NO_DECLARATION_WGL_EXT_PIXEL_FORMAT_PACKED_FLOAT)
#define REGAL_NO_DECLARATION_WGL_EXT_PIXEL_FORMAT_PACKED_FLOAT
#endif

#ifndef WGL_EXT_pixel_format_packed_float
#define WGL_EXT_pixel_format_packed_float 1
#endif

#ifndef REGAL_NO_ENUM_WGL_EXT_PIXEL_FORMAT_PACKED_FLOAT
#define WGL_TYPE_RGBA_UNSIGNED_FLOAT_EXT 0x20a8 /* 8360 */
#endif

/**
 ** WGL_EXT_swap_control
 **/

#if (defined(WGL_EXT_SWAP_CONTROL) || defined(REGAL_NO_ENUM) || defined(REGAL_NO_WGL_EXT_SWAP_CONTROL)) && !defined(REGAL_NO_ENUM_WGL_EXT_SWAP_CONTROL)
#define REGAL_NO_ENUM_WGL_EXT_SWAP_CONTROL
#endif

#if (defined(WGL_EXT_SWAP_CONTROL) || defined(REGAL_NO_TYPEDEF) || defined(REGAL_NO_WGL_EXT_SWAP_CONTROL)) && !defined(REGAL_NO_TYPEDEF_WGL_EXT_SWAP_CONTROL)
#define REGAL_NO_TYPEDEF_WGL_EXT_SWAP_CONTROL
#endif

#if (defined(WGL_EXT_SWAP_CONTROL) || !defined(REGAL_NAMESPACE) || defined(REGAL_NO_WGL_EXT_SWAP_CONTROL)) && !defined(REGAL_NO_NAMESPACE_WGL_EXT_SWAP_CONTROL)
#define REGAL_NO_NAMESPACE_WGL_EXT_SWAP_CONTROL
#endif

#if (defined(WGL_EXT_SWAP_CONTROL) || !defined(REGAL_PLUGIN_MODE) || defined(REGAL_NO_WGL_EXT_SWAP_CONTROL)) && !defined(REGAL_NO_PLUGIN_WGL_EXT_SWAP_CONTROL)
#define REGAL_NO_PLUGIN_WGL_EXT_SWAP_CONTROL
#endif

#if (defined(WGL_EXT_SWAP_CONTROL) || defined(REGAL_NO_DECLARATION) || defined(REGAL_NO_WGL_EXT_SWAP_CONTROL)) && !defined(REGAL_NO_DECLARATION_WGL_EXT_SWAP_CONTROL)
#define REGAL_NO_DECLARATION_WGL_EXT_SWAP_CONTROL
#endif

#ifndef WGL_EXT_swap_control
#define WGL_EXT_swap_control 1
#endif

#ifndef REGAL_NO_TYPEDEF_WGL_EXT_SWAP_CONTROL
typedef BOOL (REGAL_CALL *PFNWGLSWAPINTERVALEXTPROC)(int interval);
typedef int (REGAL_CALL *PFNWGLGETSWAPINTERVALEXTPROC)(void);
#endif

#ifndef REGAL_NO_NAMESPACE_WGL_EXT_SWAP_CONTROL
#define wglGetSwapIntervalEXT               rwglGetSwapIntervalEXT
#define wglSwapIntervalEXT                  rwglSwapIntervalEXT
#endif

#ifndef REGAL_NO_DECLARATION_WGL_EXT_SWAP_CONTROL
REGAL_DECL BOOL REGAL_CALL wglSwapIntervalEXT(int interval);

REGAL_DECL int REGAL_CALL wglGetSwapIntervalEXT(void);

#endif

/**
 ** WGL_GDI
 **/

#if (defined(WGL_GDI) || defined(REGAL_NO_ENUM) || defined(REGAL_NO_WGL_GDI)) && !defined(REGAL_NO_ENUM_WGL_GDI)
#define REGAL_NO_ENUM_WGL_GDI
#endif

#if (defined(WGL_GDI) || defined(REGAL_NO_TYPEDEF) || defined(REGAL_NO_WGL_GDI)) && !defined(REGAL_NO_TYPEDEF_WGL_GDI)
#define REGAL_NO_TYPEDEF_WGL_GDI
#endif

#if (defined(WGL_GDI) || !defined(REGAL_NAMESPACE) || defined(REGAL_NO_WGL_GDI)) && !defined(REGAL_NO_NAMESPACE_WGL_GDI)
#define REGAL_NO_NAMESPACE_WGL_GDI
#endif

#if (defined(WGL_GDI) || !defined(REGAL_PLUGIN_MODE) || defined(REGAL_NO_WGL_GDI)) && !defined(REGAL_NO_PLUGIN_WGL_GDI)
#define REGAL_NO_PLUGIN_WGL_GDI
#endif

#if (defined(WGL_GDI) || defined(REGAL_NO_DECLARATION) || defined(REGAL_NO_WGL_GDI)) && !defined(REGAL_NO_DECLARATION_WGL_GDI)
#define REGAL_NO_DECLARATION_WGL_GDI
#endif

#ifndef WGL_GDI
#define WGL_GDI 1
#endif

#ifndef REGAL_NO_TYPEDEF_WGL_GDI
typedef BOOL (REGAL_CALL *PFNSWAPBUFFERSPROC)(HDC hDC);
typedef BOOL (REGAL_CALL *PFNWGLSETPIXELFORMATPROC)(HDC hDC, int iPixelFormat, const PIXELFORMATDESCRIPTOR *ppfd);
typedef BOOL (REGAL_CALL *PFNWGLSWAPBUFFERSPROC)(HDC hDC);
typedef int (REGAL_CALL *PFNWGLCHOOSEPIXELFORMATPROC)(HDC hDC, const PIXELFORMATDESCRIPTOR *ppfd);
typedef int (REGAL_CALL *PFNWGLDESCRIBEPIXELFORMATPROC)(HDC hDC, int iPixelFormat, UINT nBytes, LPPIXELFORMATDESCRIPTOR ppfd);
typedef int (REGAL_CALL *PFNWGLGETPIXELFORMATPROC)(HDC hDC);
#endif

#ifndef REGAL_NO_NAMESPACE_WGL_GDI
#define SwapBuffers                         rSwapBuffers
#define wglChoosePixelFormat                rwglChoosePixelFormat
#define wglDescribePixelFormat              rwglDescribePixelFormat
#define wglGetPixelFormat                   rwglGetPixelFormat
#define wglSetPixelFormat                   rwglSetPixelFormat
#define wglSwapBuffers                      rwglSwapBuffers
#endif

#ifndef REGAL_NO_DECLARATION_WGL_GDI
REGAL_DECL BOOL REGAL_CALL SwapBuffers(HDC hDC);

REGAL_DECL BOOL REGAL_CALL wglSetPixelFormat(HDC hDC, int iPixelFormat, const PIXELFORMATDESCRIPTOR *ppfd);

REGAL_DECL BOOL REGAL_CALL wglSwapBuffers(HDC hDC);

REGAL_DECL int REGAL_CALL wglChoosePixelFormat(HDC hDC, const PIXELFORMATDESCRIPTOR *ppfd);

REGAL_DECL int REGAL_CALL wglDescribePixelFormat(HDC hDC, int iPixelFormat, UINT nBytes, LPPIXELFORMATDESCRIPTOR ppfd);

REGAL_DECL int REGAL_CALL wglGetPixelFormat(HDC hDC);

#endif

/**
 ** WGL_I3D_digital_video_control
 **/

#if (defined(WGL_I3D_DIGITAL_VIDEO_CONTROL) || defined(REGAL_NO_ENUM) || defined(REGAL_NO_WGL_I3D_DIGITAL_VIDEO_CONTROL)) && !defined(REGAL_NO_ENUM_WGL_I3D_DIGITAL_VIDEO_CONTROL)
#define REGAL_NO_ENUM_WGL_I3D_DIGITAL_VIDEO_CONTROL
#endif

#if (defined(WGL_I3D_DIGITAL_VIDEO_CONTROL) || defined(REGAL_NO_TYPEDEF) || defined(REGAL_NO_WGL_I3D_DIGITAL_VIDEO_CONTROL)) && !defined(REGAL_NO_TYPEDEF_WGL_I3D_DIGITAL_VIDEO_CONTROL)
#define REGAL_NO_TYPEDEF_WGL_I3D_DIGITAL_VIDEO_CONTROL
#endif

#if (defined(WGL_I3D_DIGITAL_VIDEO_CONTROL) || !defined(REGAL_NAMESPACE) || defined(REGAL_NO_WGL_I3D_DIGITAL_VIDEO_CONTROL)) && !defined(REGAL_NO_NAMESPACE_WGL_I3D_DIGITAL_VIDEO_CONTROL)
#define REGAL_NO_NAMESPACE_WGL_I3D_DIGITAL_VIDEO_CONTROL
#endif

#if (defined(WGL_I3D_DIGITAL_VIDEO_CONTROL) || !defined(REGAL_PLUGIN_MODE) || defined(REGAL_NO_WGL_I3D_DIGITAL_VIDEO_CONTROL)) && !defined(REGAL_NO_PLUGIN_WGL_I3D_DIGITAL_VIDEO_CONTROL)
#define REGAL_NO_PLUGIN_WGL_I3D_DIGITAL_VIDEO_CONTROL
#endif

#if (defined(WGL_I3D_DIGITAL_VIDEO_CONTROL) || defined(REGAL_NO_DECLARATION) || defined(REGAL_NO_WGL_I3D_DIGITAL_VIDEO_CONTROL)) && !defined(REGAL_NO_DECLARATION_WGL_I3D_DIGITAL_VIDEO_CONTROL)
#define REGAL_NO_DECLARATION_WGL_I3D_DIGITAL_VIDEO_CONTROL
#endif

#ifndef WGL_I3D_digital_video_control
#define WGL_I3D_digital_video_control 1
#endif

#ifndef REGAL_NO_ENUM_WGL_I3D_DIGITAL_VIDEO_CONTROL
#define WGL_DIGITAL_VIDEO_CURSOR_ALPHA_FRAMEBUFFER_I3D 0x2050     /* 8272 */
#define WGL_DIGITAL_VIDEO_CURSOR_ALPHA_VALUE_I3D       0x2051     /* 8273 */
#define WGL_DIGITAL_VIDEO_CURSOR_INCLUDED_I3D          0x2052     /* 8274 */
#define WGL_DIGITAL_VIDEO_GAMMA_CORRECTED_I3D          0x2053     /* 8275 */
#endif

#ifndef REGAL_NO_TYPEDEF_WGL_I3D_DIGITAL_VIDEO_CONTROL
typedef BOOL (REGAL_CALL *PFNWGLGETDIGITALVIDEOPARAMETERSI3DPROC)(HDC hDC, int iAttribute, int *piValue);
typedef BOOL (REGAL_CALL *PFNWGLSETDIGITALVIDEOPARAMETERSI3DPROC)(HDC hDC, int iAttribute, const int *piValue);
#endif

#ifndef REGAL_NO_NAMESPACE_WGL_I3D_DIGITAL_VIDEO_CONTROL
#define wglGetDigitalVideoParametersI3D     rwglGetDigitalVideoParametersI3D
#define wglSetDigitalVideoParametersI3D     rwglSetDigitalVideoParametersI3D
#endif

#ifndef REGAL_NO_DECLARATION_WGL_I3D_DIGITAL_VIDEO_CONTROL
REGAL_DECL BOOL REGAL_CALL wglGetDigitalVideoParametersI3D(HDC hDC, int iAttribute, int *piValue);

REGAL_DECL BOOL REGAL_CALL wglSetDigitalVideoParametersI3D(HDC hDC, int iAttribute, const int *piValue);

#endif

/**
 ** WGL_I3D_gamma
 **/

#if (defined(WGL_I3D_GAMMA) || defined(REGAL_NO_ENUM) || defined(REGAL_NO_WGL_I3D_GAMMA)) && !defined(REGAL_NO_ENUM_WGL_I3D_GAMMA)
#define REGAL_NO_ENUM_WGL_I3D_GAMMA
#endif

#if (defined(WGL_I3D_GAMMA) || defined(REGAL_NO_TYPEDEF) || defined(REGAL_NO_WGL_I3D_GAMMA)) && !defined(REGAL_NO_TYPEDEF_WGL_I3D_GAMMA)
#define REGAL_NO_TYPEDEF_WGL_I3D_GAMMA
#endif

#if (defined(WGL_I3D_GAMMA) || !defined(REGAL_NAMESPACE) || defined(REGAL_NO_WGL_I3D_GAMMA)) && !defined(REGAL_NO_NAMESPACE_WGL_I3D_GAMMA)
#define REGAL_NO_NAMESPACE_WGL_I3D_GAMMA
#endif

#if (defined(WGL_I3D_GAMMA) || !defined(REGAL_PLUGIN_MODE) || defined(REGAL_NO_WGL_I3D_GAMMA)) && !defined(REGAL_NO_PLUGIN_WGL_I3D_GAMMA)
#define REGAL_NO_PLUGIN_WGL_I3D_GAMMA
#endif

#if (defined(WGL_I3D_GAMMA) || defined(REGAL_NO_DECLARATION) || defined(REGAL_NO_WGL_I3D_GAMMA)) && !defined(REGAL_NO_DECLARATION_WGL_I3D_GAMMA)
#define REGAL_NO_DECLARATION_WGL_I3D_GAMMA
#endif

#ifndef WGL_I3D_gamma
#define WGL_I3D_gamma 1
#endif

#ifndef REGAL_NO_ENUM_WGL_I3D_GAMMA
#define WGL_GAMMA_TABLE_SIZE_I3D      0x204e     /* 8270 */
#define WGL_GAMMA_EXCLUDE_DESKTOP_I3D 0x204f     /* 8271 */
#endif

#ifndef REGAL_NO_TYPEDEF_WGL_I3D_GAMMA
typedef BOOL (REGAL_CALL *PFNWGLGETGAMMATABLEI3DPROC)(HDC hDC, int iEntries, USHORT *puRed, USHORT *puGreen, USHORT *puBlue);
typedef BOOL (REGAL_CALL *PFNWGLGETGAMMATABLEPARAMETERSI3DPROC)(HDC hDC, int iAttribute, int *piValue);
typedef BOOL (REGAL_CALL *PFNWGLSETGAMMATABLEI3DPROC)(HDC hDC, int iEntries, const USHORT *puRed, const USHORT *puGreen, const USHORT *puBlue);
typedef BOOL (REGAL_CALL *PFNWGLSETGAMMATABLEPARAMETERSI3DPROC)(HDC hDC, int iAttribute, const int *piValue);
#endif

#ifndef REGAL_NO_NAMESPACE_WGL_I3D_GAMMA
#define wglGetGammaTableI3D                 rwglGetGammaTableI3D
#define wglGetGammaTableParametersI3D       rwglGetGammaTableParametersI3D
#define wglSetGammaTableI3D                 rwglSetGammaTableI3D
#define wglSetGammaTableParametersI3D       rwglSetGammaTableParametersI3D
#endif

#ifndef REGAL_NO_DECLARATION_WGL_I3D_GAMMA
REGAL_DECL BOOL REGAL_CALL wglGetGammaTableI3D(HDC hDC, int iEntries, USHORT *puRed, USHORT *puGreen, USHORT *puBlue);

REGAL_DECL BOOL REGAL_CALL wglGetGammaTableParametersI3D(HDC hDC, int iAttribute, int *piValue);

REGAL_DECL BOOL REGAL_CALL wglSetGammaTableI3D(HDC hDC, int iEntries, const USHORT *puRed, const USHORT *puGreen, const USHORT *puBlue);

REGAL_DECL BOOL REGAL_CALL wglSetGammaTableParametersI3D(HDC hDC, int iAttribute, const int *piValue);

#endif

/**
 ** WGL_I3D_genlock
 **/

#if (defined(WGL_I3D_GENLOCK) || defined(REGAL_NO_ENUM) || defined(REGAL_NO_WGL_I3D_GENLOCK)) && !defined(REGAL_NO_ENUM_WGL_I3D_GENLOCK)
#define REGAL_NO_ENUM_WGL_I3D_GENLOCK
#endif

#if (defined(WGL_I3D_GENLOCK) || defined(REGAL_NO_TYPEDEF) || defined(REGAL_NO_WGL_I3D_GENLOCK)) && !defined(REGAL_NO_TYPEDEF_WGL_I3D_GENLOCK)
#define REGAL_NO_TYPEDEF_WGL_I3D_GENLOCK
#endif

#if (defined(WGL_I3D_GENLOCK) || !defined(REGAL_NAMESPACE) || defined(REGAL_NO_WGL_I3D_GENLOCK)) && !defined(REGAL_NO_NAMESPACE_WGL_I3D_GENLOCK)
#define REGAL_NO_NAMESPACE_WGL_I3D_GENLOCK
#endif

#if (defined(WGL_I3D_GENLOCK) || !defined(REGAL_PLUGIN_MODE) || defined(REGAL_NO_WGL_I3D_GENLOCK)) && !defined(REGAL_NO_PLUGIN_WGL_I3D_GENLOCK)
#define REGAL_NO_PLUGIN_WGL_I3D_GENLOCK
#endif

#if (defined(WGL_I3D_GENLOCK) || defined(REGAL_NO_DECLARATION) || defined(REGAL_NO_WGL_I3D_GENLOCK)) && !defined(REGAL_NO_DECLARATION_WGL_I3D_GENLOCK)
#define REGAL_NO_DECLARATION_WGL_I3D_GENLOCK
#endif

#ifndef WGL_I3D_genlock
#define WGL_I3D_genlock 1
#endif

#ifndef REGAL_NO_ENUM_WGL_I3D_GENLOCK
#define WGL_GENLOCK_SOURCE_MULTIVIEW_I3D      0x2044     /* 8260 */
#define WGL_GENLOCK_SOURCE_EXTERNAL_SYNC_I3D  0x2045     /* 8261 */
#define WGL_GENLOCK_SOURCE_EXTERNAL_FIELD_I3D 0x2046     /* 8262 */
#define WGL_GENLOCK_SOURCE_EXTERNAL_TTL_I3D   0x2047     /* 8263 */
#define WGL_GENLOCK_SOURCE_DIGITAL_SYNC_I3D   0x2048     /* 8264 */
#define WGL_GENLOCK_SOURCE_DIGITAL_FIELD_I3D  0x2049     /* 8265 */
#define WGL_GENLOCK_SOURCE_EDGE_FALLING_I3D   0x204a     /* 8266 */
#define WGL_GENLOCK_SOURCE_EDGE_RISING_I3D    0x204b     /* 8267 */
#define WGL_GENLOCK_SOURCE_EDGE_BOTH_I3D      0x204c     /* 8268 */
#endif

#ifndef REGAL_NO_TYPEDEF_WGL_I3D_GENLOCK
typedef BOOL (REGAL_CALL *PFNWGLDISABLEGENLOCKI3DPROC)(HDC hDC);
typedef BOOL (REGAL_CALL *PFNWGLENABLEGENLOCKI3DPROC)(HDC hDC);
typedef BOOL (REGAL_CALL *PFNWGLGENLOCKSAMPLERATEI3DPROC)(HDC hDC, UINT uRate);
typedef BOOL (REGAL_CALL *PFNWGLGENLOCKSOURCEDELAYI3DPROC)(HDC hDC, UINT uDelay);
typedef BOOL (REGAL_CALL *PFNWGLGENLOCKSOURCEEDGEI3DPROC)(HDC hDC, UINT uEdge);
typedef BOOL (REGAL_CALL *PFNWGLGENLOCKSOURCEI3DPROC)(HDC hDC, UINT uSource);
typedef BOOL (REGAL_CALL *PFNWGLGETGENLOCKSAMPLERATEI3DPROC)(HDC hDC, UINT *uRate);
typedef BOOL (REGAL_CALL *PFNWGLGETGENLOCKSOURCEDELAYI3DPROC)(HDC hDC, UINT *uDelay);
typedef BOOL (REGAL_CALL *PFNWGLGETGENLOCKSOURCEEDGEI3DPROC)(HDC hDC, UINT *uEdge);
typedef BOOL (REGAL_CALL *PFNWGLGETGENLOCKSOURCEI3DPROC)(HDC hDC, UINT *uSource);
typedef BOOL (REGAL_CALL *PFNWGLISENABLEDGENLOCKI3DPROC)(HDC hDC, BOOL *pFlag);
typedef BOOL (REGAL_CALL *PFNWGLQUERYGENLOCKMAXSOURCEDELAYI3DPROC)(HDC hDC, UINT *uMaxLineDelay, UINT *uMaxPixelDelay);
#endif

#ifndef REGAL_NO_NAMESPACE_WGL_I3D_GENLOCK
#define wglDisableGenlockI3D                rwglDisableGenlockI3D
#define wglEnableGenlockI3D                 rwglEnableGenlockI3D
#define wglGenlockSampleRateI3D             rwglGenlockSampleRateI3D
#define wglGenlockSourceDelayI3D            rwglGenlockSourceDelayI3D
#define wglGenlockSourceEdgeI3D             rwglGenlockSourceEdgeI3D
#define wglGenlockSourceI3D                 rwglGenlockSourceI3D
#define wglGetGenlockSampleRateI3D          rwglGetGenlockSampleRateI3D
#define wglGetGenlockSourceDelayI3D         rwglGetGenlockSourceDelayI3D
#define wglGetGenlockSourceEdgeI3D          rwglGetGenlockSourceEdgeI3D
#define wglGetGenlockSourceI3D              rwglGetGenlockSourceI3D
#define wglIsEnabledGenlockI3D              rwglIsEnabledGenlockI3D
#define wglQueryGenlockMaxSourceDelayI3D    rwglQueryGenlockMaxSourceDelayI3D
#endif

#ifndef REGAL_NO_DECLARATION_WGL_I3D_GENLOCK
REGAL_DECL BOOL REGAL_CALL wglDisableGenlockI3D(HDC hDC);

REGAL_DECL BOOL REGAL_CALL wglEnableGenlockI3D(HDC hDC);

REGAL_DECL BOOL REGAL_CALL wglGenlockSampleRateI3D(HDC hDC, UINT uRate);

REGAL_DECL BOOL REGAL_CALL wglGenlockSourceDelayI3D(HDC hDC, UINT uDelay);

REGAL_DECL BOOL REGAL_CALL wglGenlockSourceEdgeI3D(HDC hDC, UINT uEdge);

REGAL_DECL BOOL REGAL_CALL wglGenlockSourceI3D(HDC hDC, UINT uSource);

REGAL_DECL BOOL REGAL_CALL wglGetGenlockSampleRateI3D(HDC hDC, UINT *uRate);

REGAL_DECL BOOL REGAL_CALL wglGetGenlockSourceDelayI3D(HDC hDC, UINT *uDelay);

REGAL_DECL BOOL REGAL_CALL wglGetGenlockSourceEdgeI3D(HDC hDC, UINT *uEdge);

REGAL_DECL BOOL REGAL_CALL wglGetGenlockSourceI3D(HDC hDC, UINT *uSource);

REGAL_DECL BOOL REGAL_CALL wglIsEnabledGenlockI3D(HDC hDC, BOOL *pFlag);

REGAL_DECL BOOL REGAL_CALL wglQueryGenlockMaxSourceDelayI3D(HDC hDC, UINT *uMaxLineDelay, UINT *uMaxPixelDelay);

#endif

/**
 ** WGL_I3D_image_buffer
 **/

#if (defined(WGL_I3D_IMAGE_BUFFER) || defined(REGAL_NO_ENUM) || defined(REGAL_NO_WGL_I3D_IMAGE_BUFFER)) && !defined(REGAL_NO_ENUM_WGL_I3D_IMAGE_BUFFER)
#define REGAL_NO_ENUM_WGL_I3D_IMAGE_BUFFER
#endif

#if (defined(WGL_I3D_IMAGE_BUFFER) || defined(REGAL_NO_TYPEDEF) || defined(REGAL_NO_WGL_I3D_IMAGE_BUFFER)) && !defined(REGAL_NO_TYPEDEF_WGL_I3D_IMAGE_BUFFER)
#define REGAL_NO_TYPEDEF_WGL_I3D_IMAGE_BUFFER
#endif

#if (defined(WGL_I3D_IMAGE_BUFFER) || !defined(REGAL_NAMESPACE) || defined(REGAL_NO_WGL_I3D_IMAGE_BUFFER)) && !defined(REGAL_NO_NAMESPACE_WGL_I3D_IMAGE_BUFFER)
#define REGAL_NO_NAMESPACE_WGL_I3D_IMAGE_BUFFER
#endif

#if (defined(WGL_I3D_IMAGE_BUFFER) || !defined(REGAL_PLUGIN_MODE) || defined(REGAL_NO_WGL_I3D_IMAGE_BUFFER)) && !defined(REGAL_NO_PLUGIN_WGL_I3D_IMAGE_BUFFER)
#define REGAL_NO_PLUGIN_WGL_I3D_IMAGE_BUFFER
#endif

#if (defined(WGL_I3D_IMAGE_BUFFER) || defined(REGAL_NO_DECLARATION) || defined(REGAL_NO_WGL_I3D_IMAGE_BUFFER)) && !defined(REGAL_NO_DECLARATION_WGL_I3D_IMAGE_BUFFER)
#define REGAL_NO_DECLARATION_WGL_I3D_IMAGE_BUFFER
#endif

#ifndef WGL_I3D_image_buffer
#define WGL_I3D_image_buffer 1
#endif

#ifndef REGAL_NO_ENUM_WGL_I3D_IMAGE_BUFFER
#define WGL_IMAGE_BUFFER_MIN_ACCESS_I3D 0x1
#define WGL_IMAGE_BUFFER_LOCK_I3D       0x2
#endif

#ifndef REGAL_NO_TYPEDEF_WGL_I3D_IMAGE_BUFFER
typedef BOOL (REGAL_CALL *PFNWGLASSOCIATEIMAGEBUFFEREVENTSI3DPROC)(HDC hDC, const HANDLE *pEvent, const LPVOID *pAddress, const DWORD *pSize, UINT count);
typedef BOOL (REGAL_CALL *PFNWGLDESTROYIMAGEBUFFERI3DPROC)(HDC hDC, LPVOID pAddress);
typedef BOOL (REGAL_CALL *PFNWGLRELEASEIMAGEBUFFEREVENTSI3DPROC)(HDC hDC, const LPVOID *pAddress, UINT count);
typedef LPVOID (REGAL_CALL *PFNWGLCREATEIMAGEBUFFERI3DPROC)(HDC hDC, DWORD dwSize, UINT uFlags);
#endif

#ifndef REGAL_NO_NAMESPACE_WGL_I3D_IMAGE_BUFFER
#define wglAssociateImageBufferEventsI3D    rwglAssociateImageBufferEventsI3D
#define wglCreateImageBufferI3D             rwglCreateImageBufferI3D
#define wglDestroyImageBufferI3D            rwglDestroyImageBufferI3D
#define wglReleaseImageBufferEventsI3D      rwglReleaseImageBufferEventsI3D
#endif

#ifndef REGAL_NO_DECLARATION_WGL_I3D_IMAGE_BUFFER
REGAL_DECL BOOL REGAL_CALL wglAssociateImageBufferEventsI3D(HDC hDC, const HANDLE *pEvent, const LPVOID *pAddress, const DWORD *pSize, UINT count);

REGAL_DECL BOOL REGAL_CALL wglDestroyImageBufferI3D(HDC hDC, LPVOID pAddress);

REGAL_DECL BOOL REGAL_CALL wglReleaseImageBufferEventsI3D(HDC hDC, const LPVOID *pAddress, UINT count);

REGAL_DECL LPVOID REGAL_CALL wglCreateImageBufferI3D(HDC hDC, DWORD dwSize, UINT uFlags);

#endif

/**
 ** WGL_I3D_swap_frame_lock
 **/

#if (defined(WGL_I3D_SWAP_FRAME_LOCK) || defined(REGAL_NO_ENUM) || defined(REGAL_NO_WGL_I3D_SWAP_FRAME_LOCK)) && !defined(REGAL_NO_ENUM_WGL_I3D_SWAP_FRAME_LOCK)
#define REGAL_NO_ENUM_WGL_I3D_SWAP_FRAME_LOCK
#endif

#if (defined(WGL_I3D_SWAP_FRAME_LOCK) || defined(REGAL_NO_TYPEDEF) || defined(REGAL_NO_WGL_I3D_SWAP_FRAME_LOCK)) && !defined(REGAL_NO_TYPEDEF_WGL_I3D_SWAP_FRAME_LOCK)
#define REGAL_NO_TYPEDEF_WGL_I3D_SWAP_FRAME_LOCK
#endif

#if (defined(WGL_I3D_SWAP_FRAME_LOCK) || !defined(REGAL_NAMESPACE) || defined(REGAL_NO_WGL_I3D_SWAP_FRAME_LOCK)) && !defined(REGAL_NO_NAMESPACE_WGL_I3D_SWAP_FRAME_LOCK)
#define REGAL_NO_NAMESPACE_WGL_I3D_SWAP_FRAME_LOCK
#endif

#if (defined(WGL_I3D_SWAP_FRAME_LOCK) || !defined(REGAL_PLUGIN_MODE) || defined(REGAL_NO_WGL_I3D_SWAP_FRAME_LOCK)) && !defined(REGAL_NO_PLUGIN_WGL_I3D_SWAP_FRAME_LOCK)
#define REGAL_NO_PLUGIN_WGL_I3D_SWAP_FRAME_LOCK
#endif

#if (defined(WGL_I3D_SWAP_FRAME_LOCK) || defined(REGAL_NO_DECLARATION) || defined(REGAL_NO_WGL_I3D_SWAP_FRAME_LOCK)) && !defined(REGAL_NO_DECLARATION_WGL_I3D_SWAP_FRAME_LOCK)
#define REGAL_NO_DECLARATION_WGL_I3D_SWAP_FRAME_LOCK
#endif

#ifndef WGL_I3D_swap_frame_lock
#define WGL_I3D_swap_frame_lock 1
#endif

#ifndef REGAL_NO_TYPEDEF_WGL_I3D_SWAP_FRAME_LOCK
typedef BOOL (REGAL_CALL *PFNWGLDISABLEFRAMELOCKI3DPROC)(void);
typedef BOOL (REGAL_CALL *PFNWGLENABLEFRAMELOCKI3DPROC)(void);
typedef BOOL (REGAL_CALL *PFNWGLISENABLEDFRAMELOCKI3DPROC)(BOOL *pFlag);
typedef BOOL (REGAL_CALL *PFNWGLQUERYFRAMELOCKMASTERI3DPROC)(BOOL *pFlag);
#endif

#ifndef REGAL_NO_NAMESPACE_WGL_I3D_SWAP_FRAME_LOCK
#define wglDisableFrameLockI3D              rwglDisableFrameLockI3D
#define wglEnableFrameLockI3D               rwglEnableFrameLockI3D
#define wglIsEnabledFrameLockI3D            rwglIsEnabledFrameLockI3D
#define wglQueryFrameLockMasterI3D          rwglQueryFrameLockMasterI3D
#endif

#ifndef REGAL_NO_DECLARATION_WGL_I3D_SWAP_FRAME_LOCK
REGAL_DECL BOOL REGAL_CALL wglDisableFrameLockI3D(void);

REGAL_DECL BOOL REGAL_CALL wglEnableFrameLockI3D(void);

REGAL_DECL BOOL REGAL_CALL wglIsEnabledFrameLockI3D(BOOL *pFlag);

REGAL_DECL BOOL REGAL_CALL wglQueryFrameLockMasterI3D(BOOL *pFlag);

#endif

/**
 ** WGL_I3D_swap_frame_usage
 **/

#if (defined(WGL_I3D_SWAP_FRAME_USAGE) || defined(REGAL_NO_ENUM) || defined(REGAL_NO_WGL_I3D_SWAP_FRAME_USAGE)) && !defined(REGAL_NO_ENUM_WGL_I3D_SWAP_FRAME_USAGE)
#define REGAL_NO_ENUM_WGL_I3D_SWAP_FRAME_USAGE
#endif

#if (defined(WGL_I3D_SWAP_FRAME_USAGE) || defined(REGAL_NO_TYPEDEF) || defined(REGAL_NO_WGL_I3D_SWAP_FRAME_USAGE)) && !defined(REGAL_NO_TYPEDEF_WGL_I3D_SWAP_FRAME_USAGE)
#define REGAL_NO_TYPEDEF_WGL_I3D_SWAP_FRAME_USAGE
#endif

#if (defined(WGL_I3D_SWAP_FRAME_USAGE) || !defined(REGAL_NAMESPACE) || defined(REGAL_NO_WGL_I3D_SWAP_FRAME_USAGE)) && !defined(REGAL_NO_NAMESPACE_WGL_I3D_SWAP_FRAME_USAGE)
#define REGAL_NO_NAMESPACE_WGL_I3D_SWAP_FRAME_USAGE
#endif

#if (defined(WGL_I3D_SWAP_FRAME_USAGE) || !defined(REGAL_PLUGIN_MODE) || defined(REGAL_NO_WGL_I3D_SWAP_FRAME_USAGE)) && !defined(REGAL_NO_PLUGIN_WGL_I3D_SWAP_FRAME_USAGE)
#define REGAL_NO_PLUGIN_WGL_I3D_SWAP_FRAME_USAGE
#endif

#if (defined(WGL_I3D_SWAP_FRAME_USAGE) || defined(REGAL_NO_DECLARATION) || defined(REGAL_NO_WGL_I3D_SWAP_FRAME_USAGE)) && !defined(REGAL_NO_DECLARATION_WGL_I3D_SWAP_FRAME_USAGE)
#define REGAL_NO_DECLARATION_WGL_I3D_SWAP_FRAME_USAGE
#endif

#ifndef WGL_I3D_swap_frame_usage
#define WGL_I3D_swap_frame_usage 1
#endif

#ifndef REGAL_NO_TYPEDEF_WGL_I3D_SWAP_FRAME_USAGE
typedef BOOL (REGAL_CALL *PFNWGLBEGINFRAMETRACKINGI3DPROC)(void);
typedef BOOL (REGAL_CALL *PFNWGLENDFRAMETRACKINGI3DPROC)(void);
typedef BOOL (REGAL_CALL *PFNWGLGETFRAMEUSAGEI3DPROC)(float *pUsage);
typedef BOOL (REGAL_CALL *PFNWGLQUERYFRAMETRACKINGI3DPROC)(DWORD *pFrameCount, DWORD *pMissedFrames, float *pLastMissedUsage);
#endif

#ifndef REGAL_NO_NAMESPACE_WGL_I3D_SWAP_FRAME_USAGE
#define wglBeginFrameTrackingI3D            rwglBeginFrameTrackingI3D
#define wglEndFrameTrackingI3D              rwglEndFrameTrackingI3D
#define wglGetFrameUsageI3D                 rwglGetFrameUsageI3D
#define wglQueryFrameTrackingI3D            rwglQueryFrameTrackingI3D
#endif

#ifndef REGAL_NO_DECLARATION_WGL_I3D_SWAP_FRAME_USAGE
REGAL_DECL BOOL REGAL_CALL wglBeginFrameTrackingI3D(void);

REGAL_DECL BOOL REGAL_CALL wglEndFrameTrackingI3D(void);

REGAL_DECL BOOL REGAL_CALL wglGetFrameUsageI3D(float *pUsage);

REGAL_DECL BOOL REGAL_CALL wglQueryFrameTrackingI3D(DWORD *pFrameCount, DWORD *pMissedFrames, float *pLastMissedUsage);

#endif

/**
 ** WGL_NV_DX_interop
 **/

#if (defined(WGL_NV_DX_INTEROP) || defined(REGAL_NO_ENUM) || defined(REGAL_NO_WGL_NV_DX_INTEROP)) && !defined(REGAL_NO_ENUM_WGL_NV_DX_INTEROP)
#define REGAL_NO_ENUM_WGL_NV_DX_INTEROP
#endif

#if (defined(WGL_NV_DX_INTEROP) || defined(REGAL_NO_TYPEDEF) || defined(REGAL_NO_WGL_NV_DX_INTEROP)) && !defined(REGAL_NO_TYPEDEF_WGL_NV_DX_INTEROP)
#define REGAL_NO_TYPEDEF_WGL_NV_DX_INTEROP
#endif

#if (defined(WGL_NV_DX_INTEROP) || !defined(REGAL_NAMESPACE) || defined(REGAL_NO_WGL_NV_DX_INTEROP)) && !defined(REGAL_NO_NAMESPACE_WGL_NV_DX_INTEROP)
#define REGAL_NO_NAMESPACE_WGL_NV_DX_INTEROP
#endif

#if (defined(WGL_NV_DX_INTEROP) || !defined(REGAL_PLUGIN_MODE) || defined(REGAL_NO_WGL_NV_DX_INTEROP)) && !defined(REGAL_NO_PLUGIN_WGL_NV_DX_INTEROP)
#define REGAL_NO_PLUGIN_WGL_NV_DX_INTEROP
#endif

#if (defined(WGL_NV_DX_INTEROP) || defined(REGAL_NO_DECLARATION) || defined(REGAL_NO_WGL_NV_DX_INTEROP)) && !defined(REGAL_NO_DECLARATION_WGL_NV_DX_INTEROP)
#define REGAL_NO_DECLARATION_WGL_NV_DX_INTEROP
#endif

#ifndef WGL_NV_DX_interop
#define WGL_NV_DX_interop 1
#endif

#ifndef REGAL_NO_ENUM_WGL_NV_DX_INTEROP
#define WGL_ACCESS_READ_ONLY_NV     0x0
#define WGL_ACCESS_READ_WRITE_NV    0x1
#define WGL_ACCESS_WRITE_DISCARD_NV 0x2
#endif

#ifndef REGAL_NO_TYPEDEF_WGL_NV_DX_INTEROP
typedef BOOL (REGAL_CALL *PFNWGLDXCLOSEDEVICENVPROC)(HANDLE hDevice);
typedef BOOL (REGAL_CALL *PFNWGLDXLOCKOBJECTSNVPROC)(HANDLE hDevice, GLint count, HANDLE *hObjects);
typedef BOOL (REGAL_CALL *PFNWGLDXOBJECTACCESSNVPROC)(HANDLE hObject, GLenum access);
typedef BOOL (REGAL_CALL *PFNWGLDXSETRESOURCESHAREHANDLENVPROC)(GLvoid *dxObject, HANDLE shareHandle);
typedef BOOL (REGAL_CALL *PFNWGLDXUNLOCKOBJECTSNVPROC)(HANDLE hDevice, GLint count, HANDLE *hObjects);
typedef BOOL (REGAL_CALL *PFNWGLDXUNREGISTEROBJECTNVPROC)(HANDLE hDevice, HANDLE hObject);
typedef HANDLE (REGAL_CALL *PFNWGLDXOPENDEVICENVPROC)(GLvoid *dxDevice);
typedef HANDLE (REGAL_CALL *PFNWGLDXREGISTEROBJECTNVPROC)(HANDLE hDevice, GLvoid *dxObject, GLuint name, GLenum type, GLenum access);
#endif

#ifndef REGAL_NO_NAMESPACE_WGL_NV_DX_INTEROP
#define wglDXCloseDeviceNV                  rwglDXCloseDeviceNV
#define wglDXLockObjectsNV                  rwglDXLockObjectsNV
#define wglDXObjectAccessNV                 rwglDXObjectAccessNV
#define wglDXOpenDeviceNV                   rwglDXOpenDeviceNV
#define wglDXRegisterObjectNV               rwglDXRegisterObjectNV
#define wglDXSetResourceShareHandleNV       rwglDXSetResourceShareHandleNV
#define wglDXUnlockObjectsNV                rwglDXUnlockObjectsNV
#define wglDXUnregisterObjectNV             rwglDXUnregisterObjectNV
#endif

#ifndef REGAL_NO_DECLARATION_WGL_NV_DX_INTEROP
REGAL_DECL BOOL REGAL_CALL wglDXCloseDeviceNV(HANDLE hDevice);

REGAL_DECL BOOL REGAL_CALL wglDXLockObjectsNV(HANDLE hDevice, GLint count, HANDLE *hObjects);

REGAL_DECL BOOL REGAL_CALL wglDXObjectAccessNV(HANDLE hObject, GLenum access);

REGAL_DECL BOOL REGAL_CALL wglDXSetResourceShareHandleNV(GLvoid *dxObject, HANDLE shareHandle);

REGAL_DECL BOOL REGAL_CALL wglDXUnlockObjectsNV(HANDLE hDevice, GLint count, HANDLE *hObjects);

REGAL_DECL BOOL REGAL_CALL wglDXUnregisterObjectNV(HANDLE hDevice, HANDLE hObject);

REGAL_DECL HANDLE REGAL_CALL wglDXOpenDeviceNV(GLvoid *dxDevice);

REGAL_DECL HANDLE REGAL_CALL wglDXRegisterObjectNV(HANDLE hDevice, GLvoid *dxObject, GLuint name, GLenum type, GLenum access);

#endif

/**
 ** WGL_NV_copy_image
 **/

#if (defined(WGL_NV_COPY_IMAGE) || defined(REGAL_NO_ENUM) || defined(REGAL_NO_WGL_NV_COPY_IMAGE)) && !defined(REGAL_NO_ENUM_WGL_NV_COPY_IMAGE)
#define REGAL_NO_ENUM_WGL_NV_COPY_IMAGE
#endif

#if (defined(WGL_NV_COPY_IMAGE) || defined(REGAL_NO_TYPEDEF) || defined(REGAL_NO_WGL_NV_COPY_IMAGE)) && !defined(REGAL_NO_TYPEDEF_WGL_NV_COPY_IMAGE)
#define REGAL_NO_TYPEDEF_WGL_NV_COPY_IMAGE
#endif

#if (defined(WGL_NV_COPY_IMAGE) || !defined(REGAL_NAMESPACE) || defined(REGAL_NO_WGL_NV_COPY_IMAGE)) && !defined(REGAL_NO_NAMESPACE_WGL_NV_COPY_IMAGE)
#define REGAL_NO_NAMESPACE_WGL_NV_COPY_IMAGE
#endif

#if (defined(WGL_NV_COPY_IMAGE) || !defined(REGAL_PLUGIN_MODE) || defined(REGAL_NO_WGL_NV_COPY_IMAGE)) && !defined(REGAL_NO_PLUGIN_WGL_NV_COPY_IMAGE)
#define REGAL_NO_PLUGIN_WGL_NV_COPY_IMAGE
#endif

#if (defined(WGL_NV_COPY_IMAGE) || defined(REGAL_NO_DECLARATION) || defined(REGAL_NO_WGL_NV_COPY_IMAGE)) && !defined(REGAL_NO_DECLARATION_WGL_NV_COPY_IMAGE)
#define REGAL_NO_DECLARATION_WGL_NV_COPY_IMAGE
#endif

#ifndef WGL_NV_copy_image
#define WGL_NV_copy_image 1
#endif

#ifndef REGAL_NO_TYPEDEF_WGL_NV_COPY_IMAGE
typedef BOOL (REGAL_CALL *PFNWGLCOPYIMAGESUBDATANVPROC)(HGLRC hSrcRC, GLuint srcName, GLenum srcTarget, GLint srcLevel, GLint srcX, GLint srcY, GLint srcZ, HGLRC hDstRC, GLuint dstName, GLenum dstTarget, GLint dstLevel, GLint dstX, GLint dstY, GLint dstZ, GLsizei width, GLsizei height, GLsizei depth);
#endif

#ifndef REGAL_NO_NAMESPACE_WGL_NV_COPY_IMAGE
#define wglCopyImageSubDataNV               rwglCopyImageSubDataNV
#endif

#ifndef REGAL_NO_DECLARATION_WGL_NV_COPY_IMAGE
REGAL_DECL BOOL REGAL_CALL wglCopyImageSubDataNV(HGLRC hSrcRC, GLuint srcName, GLenum srcTarget, GLint srcLevel, GLint srcX, GLint srcY, GLint srcZ, HGLRC hDstRC, GLuint dstName, GLenum dstTarget, GLint dstLevel, GLint dstX, GLint dstY, GLint dstZ, GLsizei width, GLsizei height, GLsizei depth);

#endif

/**
 ** WGL_NV_float_buffer
 **/

#if (defined(WGL_NV_FLOAT_BUFFER) || defined(REGAL_NO_ENUM) || defined(REGAL_NO_WGL_NV_FLOAT_BUFFER)) && !defined(REGAL_NO_ENUM_WGL_NV_FLOAT_BUFFER)
#define REGAL_NO_ENUM_WGL_NV_FLOAT_BUFFER
#endif

#if (defined(WGL_NV_FLOAT_BUFFER) || defined(REGAL_NO_TYPEDEF) || defined(REGAL_NO_WGL_NV_FLOAT_BUFFER)) && !defined(REGAL_NO_TYPEDEF_WGL_NV_FLOAT_BUFFER)
#define REGAL_NO_TYPEDEF_WGL_NV_FLOAT_BUFFER
#endif

#if (defined(WGL_NV_FLOAT_BUFFER) || !defined(REGAL_NAMESPACE) || defined(REGAL_NO_WGL_NV_FLOAT_BUFFER)) && !defined(REGAL_NO_NAMESPACE_WGL_NV_FLOAT_BUFFER)
#define REGAL_NO_NAMESPACE_WGL_NV_FLOAT_BUFFER
#endif

#if (defined(WGL_NV_FLOAT_BUFFER) || !defined(REGAL_PLUGIN_MODE) || defined(REGAL_NO_WGL_NV_FLOAT_BUFFER)) && !defined(REGAL_NO_PLUGIN_WGL_NV_FLOAT_BUFFER)
#define REGAL_NO_PLUGIN_WGL_NV_FLOAT_BUFFER
#endif

#if (defined(WGL_NV_FLOAT_BUFFER) || defined(REGAL_NO_DECLARATION) || defined(REGAL_NO_WGL_NV_FLOAT_BUFFER)) && !defined(REGAL_NO_DECLARATION_WGL_NV_FLOAT_BUFFER)
#define REGAL_NO_DECLARATION_WGL_NV_FLOAT_BUFFER
#endif

#ifndef WGL_NV_float_buffer
#define WGL_NV_float_buffer 1
#endif

#ifndef REGAL_NO_ENUM_WGL_NV_FLOAT_BUFFER
#define WGL_FLOAT_COMPONENTS_NV                     0x20b0     /* 8368 */
#define WGL_BIND_TO_TEXTURE_RECTANGLE_FLOAT_R_NV    0x20b1     /* 8369 */
#define WGL_BIND_TO_TEXTURE_RECTANGLE_FLOAT_RG_NV   0x20b2     /* 8370 */
#define WGL_BIND_TO_TEXTURE_RECTANGLE_FLOAT_RGB_NV  0x20b3     /* 8371 */
#define WGL_BIND_TO_TEXTURE_RECTANGLE_FLOAT_RGBA_NV 0x20b4     /* 8372 */
#define WGL_TEXTURE_FLOAT_R_NV                      0x20b5     /* 8373 */
#define WGL_TEXTURE_FLOAT_RG_NV                     0x20b6     /* 8374 */
#define WGL_TEXTURE_FLOAT_RGB_NV                    0x20b7     /* 8375 */
#define WGL_TEXTURE_FLOAT_RGBA_NV                   0x20b8     /* 8376 */
#endif

/**
 ** WGL_NV_gpu_affinity
 **/

#if (defined(WGL_NV_GPU_AFFINITY) || defined(REGAL_NO_ENUM) || defined(REGAL_NO_WGL_NV_GPU_AFFINITY)) && !defined(REGAL_NO_ENUM_WGL_NV_GPU_AFFINITY)
#define REGAL_NO_ENUM_WGL_NV_GPU_AFFINITY
#endif

#if (defined(WGL_NV_GPU_AFFINITY) || defined(REGAL_NO_TYPEDEF) || defined(REGAL_NO_WGL_NV_GPU_AFFINITY)) && !defined(REGAL_NO_TYPEDEF_WGL_NV_GPU_AFFINITY)
#define REGAL_NO_TYPEDEF_WGL_NV_GPU_AFFINITY
#endif

#if (defined(WGL_NV_GPU_AFFINITY) || !defined(REGAL_NAMESPACE) || defined(REGAL_NO_WGL_NV_GPU_AFFINITY)) && !defined(REGAL_NO_NAMESPACE_WGL_NV_GPU_AFFINITY)
#define REGAL_NO_NAMESPACE_WGL_NV_GPU_AFFINITY
#endif

#if (defined(WGL_NV_GPU_AFFINITY) || !defined(REGAL_PLUGIN_MODE) || defined(REGAL_NO_WGL_NV_GPU_AFFINITY)) && !defined(REGAL_NO_PLUGIN_WGL_NV_GPU_AFFINITY)
#define REGAL_NO_PLUGIN_WGL_NV_GPU_AFFINITY
#endif

#if (defined(WGL_NV_GPU_AFFINITY) || defined(REGAL_NO_DECLARATION) || defined(REGAL_NO_WGL_NV_GPU_AFFINITY)) && !defined(REGAL_NO_DECLARATION_WGL_NV_GPU_AFFINITY)
#define REGAL_NO_DECLARATION_WGL_NV_GPU_AFFINITY
#endif

#ifndef WGL_NV_gpu_affinity
#define WGL_NV_gpu_affinity 1
#endif

#ifndef REGAL_NO_ENUM_WGL_NV_GPU_AFFINITY
#define WGL_ERROR_INCOMPATIBLE_AFFINITY_MASKS_NV 0x20d0     /* 8400 */
#define WGL_ERROR_MISSING_AFFINITY_MASK_NV       0x20d1     /* 8401 */
#endif

#ifndef REGAL_NO_TYPEDEF_WGL_NV_GPU_AFFINITY
typedef BOOL (REGAL_CALL *PFNWGLDELETEDCNVPROC)(HDC hAffinityDC);
typedef BOOL (REGAL_CALL *PFNWGLENUMGPUDEVICESNVPROC)(HGPUNV hGpu, UINT iDeviceIndex, PGPU_DEVICE lpGpuDevice);
typedef BOOL (REGAL_CALL *PFNWGLENUMGPUSFROMAFFINITYDCNVPROC)(HDC hAffinityDC, UINT iGpuIndex, HGPUNV *hGpu);
typedef BOOL (REGAL_CALL *PFNWGLENUMGPUSNVPROC)(UINT iGpuIndex, HGPUNV *phGpu);
typedef HDC (REGAL_CALL *PFNWGLCREATEAFFINITYDCNVPROC)(const HGPUNV *phGpuList);
#endif

#ifndef REGAL_NO_NAMESPACE_WGL_NV_GPU_AFFINITY
#define wglCreateAffinityDCNV               rwglCreateAffinityDCNV
#define wglDeleteDCNV                       rwglDeleteDCNV
#define wglEnumGpuDevicesNV                 rwglEnumGpuDevicesNV
#define wglEnumGpusFromAffinityDCNV         rwglEnumGpusFromAffinityDCNV
#define wglEnumGpusNV                       rwglEnumGpusNV
#endif

#ifndef REGAL_NO_DECLARATION_WGL_NV_GPU_AFFINITY
REGAL_DECL BOOL REGAL_CALL wglDeleteDCNV(HDC hAffinityDC);

REGAL_DECL BOOL REGAL_CALL wglEnumGpuDevicesNV(HGPUNV hGpu, UINT iDeviceIndex, PGPU_DEVICE lpGpuDevice);

REGAL_DECL BOOL REGAL_CALL wglEnumGpusFromAffinityDCNV(HDC hAffinityDC, UINT iGpuIndex, HGPUNV *hGpu);

REGAL_DECL BOOL REGAL_CALL wglEnumGpusNV(UINT iGpuIndex, HGPUNV *phGpu);

REGAL_DECL HDC REGAL_CALL wglCreateAffinityDCNV(const HGPUNV *phGpuList);

#endif

/**
 ** WGL_NV_multisample_coverage
 **/

#if (defined(WGL_NV_MULTISAMPLE_COVERAGE) || defined(REGAL_NO_ENUM) || defined(REGAL_NO_WGL_NV_MULTISAMPLE_COVERAGE)) && !defined(REGAL_NO_ENUM_WGL_NV_MULTISAMPLE_COVERAGE)
#define REGAL_NO_ENUM_WGL_NV_MULTISAMPLE_COVERAGE
#endif

#if (defined(WGL_NV_MULTISAMPLE_COVERAGE) || defined(REGAL_NO_TYPEDEF) || defined(REGAL_NO_WGL_NV_MULTISAMPLE_COVERAGE)) && !defined(REGAL_NO_TYPEDEF_WGL_NV_MULTISAMPLE_COVERAGE)
#define REGAL_NO_TYPEDEF_WGL_NV_MULTISAMPLE_COVERAGE
#endif

#if (defined(WGL_NV_MULTISAMPLE_COVERAGE) || !defined(REGAL_NAMESPACE) || defined(REGAL_NO_WGL_NV_MULTISAMPLE_COVERAGE)) && !defined(REGAL_NO_NAMESPACE_WGL_NV_MULTISAMPLE_COVERAGE)
#define REGAL_NO_NAMESPACE_WGL_NV_MULTISAMPLE_COVERAGE
#endif

#if (defined(WGL_NV_MULTISAMPLE_COVERAGE) || !defined(REGAL_PLUGIN_MODE) || defined(REGAL_NO_WGL_NV_MULTISAMPLE_COVERAGE)) && !defined(REGAL_NO_PLUGIN_WGL_NV_MULTISAMPLE_COVERAGE)
#define REGAL_NO_PLUGIN_WGL_NV_MULTISAMPLE_COVERAGE
#endif

#if (defined(WGL_NV_MULTISAMPLE_COVERAGE) || defined(REGAL_NO_DECLARATION) || defined(REGAL_NO_WGL_NV_MULTISAMPLE_COVERAGE)) && !defined(REGAL_NO_DECLARATION_WGL_NV_MULTISAMPLE_COVERAGE)
#define REGAL_NO_DECLARATION_WGL_NV_MULTISAMPLE_COVERAGE
#endif

#ifndef WGL_NV_multisample_coverage
#define WGL_NV_multisample_coverage 1
#endif

#ifndef REGAL_NO_ENUM_WGL_NV_MULTISAMPLE_COVERAGE
#define WGL_COVERAGE_SAMPLES_NV 0x2042     /* 8258 */
#define WGL_COLOR_SAMPLES_NV    0x20b9     /* 8377 */
#endif

/**
 ** WGL_NV_present_video
 **/

#if (defined(WGL_NV_PRESENT_VIDEO) || defined(REGAL_NO_ENUM) || defined(REGAL_NO_WGL_NV_PRESENT_VIDEO)) && !defined(REGAL_NO_ENUM_WGL_NV_PRESENT_VIDEO)
#define REGAL_NO_ENUM_WGL_NV_PRESENT_VIDEO
#endif

#if (defined(WGL_NV_PRESENT_VIDEO) || defined(REGAL_NO_TYPEDEF) || defined(REGAL_NO_WGL_NV_PRESENT_VIDEO)) && !defined(REGAL_NO_TYPEDEF_WGL_NV_PRESENT_VIDEO)
#define REGAL_NO_TYPEDEF_WGL_NV_PRESENT_VIDEO
#endif

#if (defined(WGL_NV_PRESENT_VIDEO) || !defined(REGAL_NAMESPACE) || defined(REGAL_NO_WGL_NV_PRESENT_VIDEO)) && !defined(REGAL_NO_NAMESPACE_WGL_NV_PRESENT_VIDEO)
#define REGAL_NO_NAMESPACE_WGL_NV_PRESENT_VIDEO
#endif

#if (defined(WGL_NV_PRESENT_VIDEO) || !defined(REGAL_PLUGIN_MODE) || defined(REGAL_NO_WGL_NV_PRESENT_VIDEO)) && !defined(REGAL_NO_PLUGIN_WGL_NV_PRESENT_VIDEO)
#define REGAL_NO_PLUGIN_WGL_NV_PRESENT_VIDEO
#endif

#if (defined(WGL_NV_PRESENT_VIDEO) || defined(REGAL_NO_DECLARATION) || defined(REGAL_NO_WGL_NV_PRESENT_VIDEO)) && !defined(REGAL_NO_DECLARATION_WGL_NV_PRESENT_VIDEO)
#define REGAL_NO_DECLARATION_WGL_NV_PRESENT_VIDEO
#endif

#ifndef WGL_NV_present_video
#define WGL_NV_present_video 1
#endif

#ifndef REGAL_NO_ENUM_WGL_NV_PRESENT_VIDEO
#define WGL_NUM_VIDEO_SLOTS_NV 0x20f0 /* 8432 */
#endif

#ifndef REGAL_NO_TYPEDEF_WGL_NV_PRESENT_VIDEO
typedef BOOL (REGAL_CALL *PFNWGLBINDVIDEODEVICENVPROC)(HDC hDC, unsigned int uVideoSlot, HVIDEOOUTPUTDEVICENV hVideoDevice, const int *piAttribList);
typedef BOOL (REGAL_CALL *PFNWGLQUERYCURRENTCONTEXTNVPROC)(int iAttribute, int *piValue);
typedef int (REGAL_CALL *PFNWGLENUMERATEVIDEODEVICESNVPROC)(HDC hDC, HVIDEOOUTPUTDEVICENV *phDeviceList);
#endif

#ifndef REGAL_NO_NAMESPACE_WGL_NV_PRESENT_VIDEO
#define wglBindVideoDeviceNV                rwglBindVideoDeviceNV
#define wglEnumerateVideoDevicesNV          rwglEnumerateVideoDevicesNV
#define wglQueryCurrentContextNV            rwglQueryCurrentContextNV
#endif

#ifndef REGAL_NO_DECLARATION_WGL_NV_PRESENT_VIDEO
REGAL_DECL BOOL REGAL_CALL wglBindVideoDeviceNV(HDC hDC, unsigned int uVideoSlot, HVIDEOOUTPUTDEVICENV hVideoDevice, const int *piAttribList);

REGAL_DECL BOOL REGAL_CALL wglQueryCurrentContextNV(int iAttribute, int *piValue);

REGAL_DECL int REGAL_CALL wglEnumerateVideoDevicesNV(HDC hDC, HVIDEOOUTPUTDEVICENV *phDeviceList);

#endif

/**
 ** WGL_NV_render_depth_texture
 **/

#if (defined(WGL_NV_RENDER_DEPTH_TEXTURE) || defined(REGAL_NO_ENUM) || defined(REGAL_NO_WGL_NV_RENDER_DEPTH_TEXTURE)) && !defined(REGAL_NO_ENUM_WGL_NV_RENDER_DEPTH_TEXTURE)
#define REGAL_NO_ENUM_WGL_NV_RENDER_DEPTH_TEXTURE
#endif

#if (defined(WGL_NV_RENDER_DEPTH_TEXTURE) || defined(REGAL_NO_TYPEDEF) || defined(REGAL_NO_WGL_NV_RENDER_DEPTH_TEXTURE)) && !defined(REGAL_NO_TYPEDEF_WGL_NV_RENDER_DEPTH_TEXTURE)
#define REGAL_NO_TYPEDEF_WGL_NV_RENDER_DEPTH_TEXTURE
#endif

#if (defined(WGL_NV_RENDER_DEPTH_TEXTURE) || !defined(REGAL_NAMESPACE) || defined(REGAL_NO_WGL_NV_RENDER_DEPTH_TEXTURE)) && !defined(REGAL_NO_NAMESPACE_WGL_NV_RENDER_DEPTH_TEXTURE)
#define REGAL_NO_NAMESPACE_WGL_NV_RENDER_DEPTH_TEXTURE
#endif

#if (defined(WGL_NV_RENDER_DEPTH_TEXTURE) || !defined(REGAL_PLUGIN_MODE) || defined(REGAL_NO_WGL_NV_RENDER_DEPTH_TEXTURE)) && !defined(REGAL_NO_PLUGIN_WGL_NV_RENDER_DEPTH_TEXTURE)
#define REGAL_NO_PLUGIN_WGL_NV_RENDER_DEPTH_TEXTURE
#endif

#if (defined(WGL_NV_RENDER_DEPTH_TEXTURE) || defined(REGAL_NO_DECLARATION) || defined(REGAL_NO_WGL_NV_RENDER_DEPTH_TEXTURE)) && !defined(REGAL_NO_DECLARATION_WGL_NV_RENDER_DEPTH_TEXTURE)
#define REGAL_NO_DECLARATION_WGL_NV_RENDER_DEPTH_TEXTURE
#endif

#ifndef WGL_NV_render_depth_texture
#define WGL_NV_render_depth_texture 1
#endif

#ifndef REGAL_NO_ENUM_WGL_NV_RENDER_DEPTH_TEXTURE
#define WGL_NO_TEXTURE_ARB                     0x2077     /* 8311 */
#define WGL_BIND_TO_TEXTURE_DEPTH_NV           0x20a3     /* 8355 */
#define WGL_BIND_TO_TEXTURE_RECTANGLE_DEPTH_NV 0x20a4     /* 8356 */
#define WGL_DEPTH_TEXTURE_FORMAT_NV            0x20a5     /* 8357 */
#define WGL_TEXTURE_DEPTH_COMPONENT_NV         0x20a6     /* 8358 */
#define WGL_DEPTH_COMPONENT_NV                 0x20a7     /* 8359 */
#endif

/**
 ** WGL_NV_render_texture_rectangle
 **/

#if (defined(WGL_NV_RENDER_TEXTURE_RECTANGLE) || defined(REGAL_NO_ENUM) || defined(REGAL_NO_WGL_NV_RENDER_TEXTURE_RECTANGLE)) && !defined(REGAL_NO_ENUM_WGL_NV_RENDER_TEXTURE_RECTANGLE)
#define REGAL_NO_ENUM_WGL_NV_RENDER_TEXTURE_RECTANGLE
#endif

#if (defined(WGL_NV_RENDER_TEXTURE_RECTANGLE) || defined(REGAL_NO_TYPEDEF) || defined(REGAL_NO_WGL_NV_RENDER_TEXTURE_RECTANGLE)) && !defined(REGAL_NO_TYPEDEF_WGL_NV_RENDER_TEXTURE_RECTANGLE)
#define REGAL_NO_TYPEDEF_WGL_NV_RENDER_TEXTURE_RECTANGLE
#endif

#if (defined(WGL_NV_RENDER_TEXTURE_RECTANGLE) || !defined(REGAL_NAMESPACE) || defined(REGAL_NO_WGL_NV_RENDER_TEXTURE_RECTANGLE)) && !defined(REGAL_NO_NAMESPACE_WGL_NV_RENDER_TEXTURE_RECTANGLE)
#define REGAL_NO_NAMESPACE_WGL_NV_RENDER_TEXTURE_RECTANGLE
#endif

#if (defined(WGL_NV_RENDER_TEXTURE_RECTANGLE) || !defined(REGAL_PLUGIN_MODE) || defined(REGAL_NO_WGL_NV_RENDER_TEXTURE_RECTANGLE)) && !defined(REGAL_NO_PLUGIN_WGL_NV_RENDER_TEXTURE_RECTANGLE)
#define REGAL_NO_PLUGIN_WGL_NV_RENDER_TEXTURE_RECTANGLE
#endif

#if (defined(WGL_NV_RENDER_TEXTURE_RECTANGLE) || defined(REGAL_NO_DECLARATION) || defined(REGAL_NO_WGL_NV_RENDER_TEXTURE_RECTANGLE)) && !defined(REGAL_NO_DECLARATION_WGL_NV_RENDER_TEXTURE_RECTANGLE)
#define REGAL_NO_DECLARATION_WGL_NV_RENDER_TEXTURE_RECTANGLE
#endif

#ifndef WGL_NV_render_texture_rectangle
#define WGL_NV_render_texture_rectangle 1
#endif

#ifndef REGAL_NO_ENUM_WGL_NV_RENDER_TEXTURE_RECTANGLE
#define WGL_BIND_TO_TEXTURE_RECTANGLE_RGB_NV  0x20a0     /* 8352 */
#define WGL_BIND_TO_TEXTURE_RECTANGLE_RGBA_NV 0x20a1     /* 8353 */
#define WGL_TEXTURE_RECTANGLE_NV              0x20a2     /* 8354 */
#endif

/**
 ** WGL_NV_swap_group
 **/

#if (defined(WGL_NV_SWAP_GROUP) || defined(REGAL_NO_ENUM) || defined(REGAL_NO_WGL_NV_SWAP_GROUP)) && !defined(REGAL_NO_ENUM_WGL_NV_SWAP_GROUP)
#define REGAL_NO_ENUM_WGL_NV_SWAP_GROUP
#endif

#if (defined(WGL_NV_SWAP_GROUP) || defined(REGAL_NO_TYPEDEF) || defined(REGAL_NO_WGL_NV_SWAP_GROUP)) && !defined(REGAL_NO_TYPEDEF_WGL_NV_SWAP_GROUP)
#define REGAL_NO_TYPEDEF_WGL_NV_SWAP_GROUP
#endif

#if (defined(WGL_NV_SWAP_GROUP) || !defined(REGAL_NAMESPACE) || defined(REGAL_NO_WGL_NV_SWAP_GROUP)) && !defined(REGAL_NO_NAMESPACE_WGL_NV_SWAP_GROUP)
#define REGAL_NO_NAMESPACE_WGL_NV_SWAP_GROUP
#endif

#if (defined(WGL_NV_SWAP_GROUP) || !defined(REGAL_PLUGIN_MODE) || defined(REGAL_NO_WGL_NV_SWAP_GROUP)) && !defined(REGAL_NO_PLUGIN_WGL_NV_SWAP_GROUP)
#define REGAL_NO_PLUGIN_WGL_NV_SWAP_GROUP
#endif

#if (defined(WGL_NV_SWAP_GROUP) || defined(REGAL_NO_DECLARATION) || defined(REGAL_NO_WGL_NV_SWAP_GROUP)) && !defined(REGAL_NO_DECLARATION_WGL_NV_SWAP_GROUP)
#define REGAL_NO_DECLARATION_WGL_NV_SWAP_GROUP
#endif

#ifndef WGL_NV_swap_group
#define WGL_NV_swap_group 1
#endif

#ifndef REGAL_NO_TYPEDEF_WGL_NV_SWAP_GROUP
typedef BOOL (REGAL_CALL *PFNWGLBINDSWAPBARRIERNVPROC)(GLuint group, GLuint barrier);
typedef BOOL (REGAL_CALL *PFNWGLJOINSWAPGROUPNVPROC)(HDC hDC, GLuint group);
typedef BOOL (REGAL_CALL *PFNWGLQUERYFRAMECOUNTNVPROC)(HDC hDC, GLuint *count);
typedef BOOL (REGAL_CALL *PFNWGLQUERYMAXSWAPGROUPSNVPROC)(HDC hDC, GLuint *maxGroups, GLuint *maxBarriers);
typedef BOOL (REGAL_CALL *PFNWGLQUERYSWAPGROUPNVPROC)(HDC hDC, GLuint *group, GLuint *barrier);
typedef BOOL (REGAL_CALL *PFNWGLRESETFRAMECOUNTNVPROC)(HDC hDC);
#endif

#ifndef REGAL_NO_NAMESPACE_WGL_NV_SWAP_GROUP
#define wglBindSwapBarrierNV                rwglBindSwapBarrierNV
#define wglJoinSwapGroupNV                  rwglJoinSwapGroupNV
#define wglQueryFrameCountNV                rwglQueryFrameCountNV
#define wglQueryMaxSwapGroupsNV             rwglQueryMaxSwapGroupsNV
#define wglQuerySwapGroupNV                 rwglQuerySwapGroupNV
#define wglResetFrameCountNV                rwglResetFrameCountNV
#endif

#ifndef REGAL_NO_DECLARATION_WGL_NV_SWAP_GROUP
REGAL_DECL BOOL REGAL_CALL wglBindSwapBarrierNV(GLuint group, GLuint barrier);

REGAL_DECL BOOL REGAL_CALL wglJoinSwapGroupNV(HDC hDC, GLuint group);

REGAL_DECL BOOL REGAL_CALL wglQueryFrameCountNV(HDC hDC, GLuint *count);

REGAL_DECL BOOL REGAL_CALL wglQueryMaxSwapGroupsNV(HDC hDC, GLuint *maxGroups, GLuint *maxBarriers);

REGAL_DECL BOOL REGAL_CALL wglQuerySwapGroupNV(HDC hDC, GLuint *group, GLuint *barrier);

REGAL_DECL BOOL REGAL_CALL wglResetFrameCountNV(HDC hDC);

#endif

/**
 ** WGL_NV_vertex_array_range
 **/

#if (defined(WGL_NV_VERTEX_ARRAY_RANGE) || defined(REGAL_NO_ENUM) || defined(REGAL_NO_WGL_NV_VERTEX_ARRAY_RANGE)) && !defined(REGAL_NO_ENUM_WGL_NV_VERTEX_ARRAY_RANGE)
#define REGAL_NO_ENUM_WGL_NV_VERTEX_ARRAY_RANGE
#endif

#if (defined(WGL_NV_VERTEX_ARRAY_RANGE) || defined(REGAL_NO_TYPEDEF) || defined(REGAL_NO_WGL_NV_VERTEX_ARRAY_RANGE)) && !defined(REGAL_NO_TYPEDEF_WGL_NV_VERTEX_ARRAY_RANGE)
#define REGAL_NO_TYPEDEF_WGL_NV_VERTEX_ARRAY_RANGE
#endif

#if (defined(WGL_NV_VERTEX_ARRAY_RANGE) || !defined(REGAL_NAMESPACE) || defined(REGAL_NO_WGL_NV_VERTEX_ARRAY_RANGE)) && !defined(REGAL_NO_NAMESPACE_WGL_NV_VERTEX_ARRAY_RANGE)
#define REGAL_NO_NAMESPACE_WGL_NV_VERTEX_ARRAY_RANGE
#endif

#if (defined(WGL_NV_VERTEX_ARRAY_RANGE) || !defined(REGAL_PLUGIN_MODE) || defined(REGAL_NO_WGL_NV_VERTEX_ARRAY_RANGE)) && !defined(REGAL_NO_PLUGIN_WGL_NV_VERTEX_ARRAY_RANGE)
#define REGAL_NO_PLUGIN_WGL_NV_VERTEX_ARRAY_RANGE
#endif

#if (defined(WGL_NV_VERTEX_ARRAY_RANGE) || defined(REGAL_NO_DECLARATION) || defined(REGAL_NO_WGL_NV_VERTEX_ARRAY_RANGE)) && !defined(REGAL_NO_DECLARATION_WGL_NV_VERTEX_ARRAY_RANGE)
#define REGAL_NO_DECLARATION_WGL_NV_VERTEX_ARRAY_RANGE
#endif

#ifndef WGL_NV_vertex_array_range
#define WGL_NV_vertex_array_range 1
#endif

#ifndef REGAL_NO_TYPEDEF_WGL_NV_VERTEX_ARRAY_RANGE
typedef void (REGAL_CALL *PFNWGLFREEMEMORYNVPROC)(void *pointer);
typedef void *(REGAL_CALL *PFNWGLALLOCATEMEMORYNVPROC)(GLsizei size, GLfloat readfreq, GLfloat writefreq, GLfloat priority);
#endif

#ifndef REGAL_NO_NAMESPACE_WGL_NV_VERTEX_ARRAY_RANGE
#define wglAllocateMemoryNV                 rwglAllocateMemoryNV
#define wglFreeMemoryNV                     rwglFreeMemoryNV
#endif

#ifndef REGAL_NO_DECLARATION_WGL_NV_VERTEX_ARRAY_RANGE
REGAL_DECL void *REGAL_CALL wglAllocateMemoryNV(GLsizei size, GLfloat readfreq, GLfloat writefreq, GLfloat priority);

REGAL_DECL void REGAL_CALL wglFreeMemoryNV(void *pointer);

#endif

/**
 ** WGL_NV_video_capture
 **/

#if (defined(WGL_NV_VIDEO_CAPTURE) || defined(REGAL_NO_ENUM) || defined(REGAL_NO_WGL_NV_VIDEO_CAPTURE)) && !defined(REGAL_NO_ENUM_WGL_NV_VIDEO_CAPTURE)
#define REGAL_NO_ENUM_WGL_NV_VIDEO_CAPTURE
#endif

#if (defined(WGL_NV_VIDEO_CAPTURE) || defined(REGAL_NO_TYPEDEF) || defined(REGAL_NO_WGL_NV_VIDEO_CAPTURE)) && !defined(REGAL_NO_TYPEDEF_WGL_NV_VIDEO_CAPTURE)
#define REGAL_NO_TYPEDEF_WGL_NV_VIDEO_CAPTURE
#endif

#if (defined(WGL_NV_VIDEO_CAPTURE) || !defined(REGAL_NAMESPACE) || defined(REGAL_NO_WGL_NV_VIDEO_CAPTURE)) && !defined(REGAL_NO_NAMESPACE_WGL_NV_VIDEO_CAPTURE)
#define REGAL_NO_NAMESPACE_WGL_NV_VIDEO_CAPTURE
#endif

#if (defined(WGL_NV_VIDEO_CAPTURE) || !defined(REGAL_PLUGIN_MODE) || defined(REGAL_NO_WGL_NV_VIDEO_CAPTURE)) && !defined(REGAL_NO_PLUGIN_WGL_NV_VIDEO_CAPTURE)
#define REGAL_NO_PLUGIN_WGL_NV_VIDEO_CAPTURE
#endif

#if (defined(WGL_NV_VIDEO_CAPTURE) || defined(REGAL_NO_DECLARATION) || defined(REGAL_NO_WGL_NV_VIDEO_CAPTURE)) && !defined(REGAL_NO_DECLARATION_WGL_NV_VIDEO_CAPTURE)
#define REGAL_NO_DECLARATION_WGL_NV_VIDEO_CAPTURE
#endif

#ifndef WGL_NV_video_capture
#define WGL_NV_video_capture 1
#endif

#ifndef REGAL_NO_ENUM_WGL_NV_VIDEO_CAPTURE
#define WGL_UNIQUE_ID_NV               0x20ce     /* 8398 */
#define WGL_NUM_VIDEO_CAPTURE_SLOTS_NV 0x20cf     /* 8399 */
#endif

#ifndef REGAL_NO_TYPEDEF_WGL_NV_VIDEO_CAPTURE
typedef BOOL (REGAL_CALL *PFNWGLBINDVIDEOCAPTUREDEVICENVPROC)(UINT uVideoSlot, HVIDEOINPUTDEVICENV hDevice);
typedef BOOL (REGAL_CALL *PFNWGLLOCKVIDEOCAPTUREDEVICENVPROC)(HDC hDC, HVIDEOINPUTDEVICENV hDevice);
typedef BOOL (REGAL_CALL *PFNWGLQUERYVIDEOCAPTUREDEVICENVPROC)(HDC hDC, HVIDEOINPUTDEVICENV hDevice, int iAttribute, int *piValue);
typedef BOOL (REGAL_CALL *PFNWGLRELEASEVIDEOCAPTUREDEVICENVPROC)(HDC hDC, HVIDEOINPUTDEVICENV hDevice);
typedef UINT (REGAL_CALL *PFNWGLENUMERATEVIDEOCAPTUREDEVICESNVPROC)(HDC hDC, HVIDEOINPUTDEVICENV *phDeviceList);
#endif

#ifndef REGAL_NO_NAMESPACE_WGL_NV_VIDEO_CAPTURE
#define wglBindVideoCaptureDeviceNV         rwglBindVideoCaptureDeviceNV
#define wglEnumerateVideoCaptureDevicesNV   rwglEnumerateVideoCaptureDevicesNV
#define wglLockVideoCaptureDeviceNV         rwglLockVideoCaptureDeviceNV
#define wglQueryVideoCaptureDeviceNV        rwglQueryVideoCaptureDeviceNV
#define wglReleaseVideoCaptureDeviceNV      rwglReleaseVideoCaptureDeviceNV
#endif

#ifndef REGAL_NO_DECLARATION_WGL_NV_VIDEO_CAPTURE
REGAL_DECL BOOL REGAL_CALL wglBindVideoCaptureDeviceNV(UINT uVideoSlot, HVIDEOINPUTDEVICENV hDevice);

REGAL_DECL BOOL REGAL_CALL wglLockVideoCaptureDeviceNV(HDC hDC, HVIDEOINPUTDEVICENV hDevice);

REGAL_DECL BOOL REGAL_CALL wglQueryVideoCaptureDeviceNV(HDC hDC, HVIDEOINPUTDEVICENV hDevice, int iAttribute, int *piValue);

REGAL_DECL BOOL REGAL_CALL wglReleaseVideoCaptureDeviceNV(HDC hDC, HVIDEOINPUTDEVICENV hDevice);

REGAL_DECL UINT REGAL_CALL wglEnumerateVideoCaptureDevicesNV(HDC hDC, HVIDEOINPUTDEVICENV *phDeviceList);

#endif

/**
 ** WGL_NV_video_output
 **/

#if (defined(WGL_NV_VIDEO_OUTPUT) || defined(REGAL_NO_ENUM) || defined(REGAL_NO_WGL_NV_VIDEO_OUTPUT)) && !defined(REGAL_NO_ENUM_WGL_NV_VIDEO_OUTPUT)
#define REGAL_NO_ENUM_WGL_NV_VIDEO_OUTPUT
#endif

#if (defined(WGL_NV_VIDEO_OUTPUT) || defined(REGAL_NO_TYPEDEF) || defined(REGAL_NO_WGL_NV_VIDEO_OUTPUT)) && !defined(REGAL_NO_TYPEDEF_WGL_NV_VIDEO_OUTPUT)
#define REGAL_NO_TYPEDEF_WGL_NV_VIDEO_OUTPUT
#endif

#if (defined(WGL_NV_VIDEO_OUTPUT) || !defined(REGAL_NAMESPACE) || defined(REGAL_NO_WGL_NV_VIDEO_OUTPUT)) && !defined(REGAL_NO_NAMESPACE_WGL_NV_VIDEO_OUTPUT)
#define REGAL_NO_NAMESPACE_WGL_NV_VIDEO_OUTPUT
#endif

#if (defined(WGL_NV_VIDEO_OUTPUT) || !defined(REGAL_PLUGIN_MODE) || defined(REGAL_NO_WGL_NV_VIDEO_OUTPUT)) && !defined(REGAL_NO_PLUGIN_WGL_NV_VIDEO_OUTPUT)
#define REGAL_NO_PLUGIN_WGL_NV_VIDEO_OUTPUT
#endif

#if (defined(WGL_NV_VIDEO_OUTPUT) || defined(REGAL_NO_DECLARATION) || defined(REGAL_NO_WGL_NV_VIDEO_OUTPUT)) && !defined(REGAL_NO_DECLARATION_WGL_NV_VIDEO_OUTPUT)
#define REGAL_NO_DECLARATION_WGL_NV_VIDEO_OUTPUT
#endif

#ifndef WGL_NV_video_output
#define WGL_NV_video_output 1
#endif

#ifndef REGAL_NO_ENUM_WGL_NV_VIDEO_OUTPUT
#define WGL_BIND_TO_VIDEO_RGB_NV           0x20c0     /* 8384 */
#define WGL_BIND_TO_VIDEO_RGBA_NV          0x20c1     /* 8385 */
#define WGL_BIND_TO_VIDEO_RGB_AND_DEPTH_NV 0x20c2     /* 8386 */
#define WGL_VIDEO_OUT_COLOR_NV             0x20c3     /* 8387 */
#define WGL_VIDEO_OUT_ALPHA_NV             0x20c4     /* 8388 */
#define WGL_VIDEO_OUT_DEPTH_NV             0x20c5     /* 8389 */
#define WGL_VIDEO_OUT_COLOR_AND_ALPHA_NV   0x20c6     /* 8390 */
#define WGL_VIDEO_OUT_COLOR_AND_DEPTH_NV   0x20c7     /* 8391 */
#define WGL_VIDEO_OUT_FRAME                0x20c8     /* 8392 */
#define WGL_VIDEO_OUT_FIELD_1              0x20c9     /* 8393 */
#define WGL_VIDEO_OUT_FIELD_2              0x20ca     /* 8394 */
#define WGL_VIDEO_OUT_STACKED_FIELDS_1_2   0x20cb     /* 8395 */
#define WGL_VIDEO_OUT_STACKED_FIELDS_2_1   0x20cc     /* 8396 */
#endif

#ifndef REGAL_NO_TYPEDEF_WGL_NV_VIDEO_OUTPUT
typedef BOOL (REGAL_CALL *PFNWGLBINDVIDEOIMAGENVPROC)(HPVIDEODEV hVideoDevice, HPBUFFERARB hPbuffer, int iVideoBuffer);
typedef BOOL (REGAL_CALL *PFNWGLGETVIDEODEVICENVPROC)(HDC hDC, int numDevices, HPVIDEODEV *hVideoDevice);
typedef BOOL (REGAL_CALL *PFNWGLGETVIDEOINFONVPROC)(HPVIDEODEV hpVideoDevice, unsigned long *pulCounterOutputPbuffer, unsigned long *pulCounterOutputVideo);
typedef BOOL (REGAL_CALL *PFNWGLRELEASEVIDEODEVICENVPROC)(HPVIDEODEV hVideoDevice);
typedef BOOL (REGAL_CALL *PFNWGLRELEASEVIDEOIMAGENVPROC)(HPBUFFERARB hPbuffer, int iVideoBuffer);
typedef BOOL (REGAL_CALL *PFNWGLSENDPBUFFERTOVIDEONVPROC)(HPBUFFERARB hPbuffer, int iBufferType, unsigned long *pulCounterPbuffer, BOOL bBlock);
#endif

#ifndef REGAL_NO_NAMESPACE_WGL_NV_VIDEO_OUTPUT
#define wglBindVideoImageNV                 rwglBindVideoImageNV
#define wglGetVideoDeviceNV                 rwglGetVideoDeviceNV
#define wglGetVideoInfoNV                   rwglGetVideoInfoNV
#define wglReleaseVideoDeviceNV             rwglReleaseVideoDeviceNV
#define wglReleaseVideoImageNV              rwglReleaseVideoImageNV
#define wglSendPbufferToVideoNV             rwglSendPbufferToVideoNV
#endif

#ifndef REGAL_NO_DECLARATION_WGL_NV_VIDEO_OUTPUT
REGAL_DECL BOOL REGAL_CALL wglBindVideoImageNV(HPVIDEODEV hVideoDevice, HPBUFFERARB hPbuffer, int iVideoBuffer);

REGAL_DECL BOOL REGAL_CALL wglGetVideoDeviceNV(HDC hDC, int numDevices, HPVIDEODEV *hVideoDevice);

REGAL_DECL BOOL REGAL_CALL wglGetVideoInfoNV(HPVIDEODEV hpVideoDevice, unsigned long *pulCounterOutputPbuffer, unsigned long *pulCounterOutputVideo);

REGAL_DECL BOOL REGAL_CALL wglReleaseVideoDeviceNV(HPVIDEODEV hVideoDevice);

REGAL_DECL BOOL REGAL_CALL wglReleaseVideoImageNV(HPBUFFERARB hPbuffer, int iVideoBuffer);

REGAL_DECL BOOL REGAL_CALL wglSendPbufferToVideoNV(HPBUFFERARB hPbuffer, int iBufferType, unsigned long *pulCounterPbuffer, BOOL bBlock);

#endif

/**
 ** WGL_OML_sync_control
 **/

#if (defined(WGL_OML_SYNC_CONTROL) || defined(REGAL_NO_ENUM) || defined(REGAL_NO_WGL_OML_SYNC_CONTROL)) && !defined(REGAL_NO_ENUM_WGL_OML_SYNC_CONTROL)
#define REGAL_NO_ENUM_WGL_OML_SYNC_CONTROL
#endif

#if (defined(WGL_OML_SYNC_CONTROL) || defined(REGAL_NO_TYPEDEF) || defined(REGAL_NO_WGL_OML_SYNC_CONTROL)) && !defined(REGAL_NO_TYPEDEF_WGL_OML_SYNC_CONTROL)
#define REGAL_NO_TYPEDEF_WGL_OML_SYNC_CONTROL
#endif

#if (defined(WGL_OML_SYNC_CONTROL) || !defined(REGAL_NAMESPACE) || defined(REGAL_NO_WGL_OML_SYNC_CONTROL)) && !defined(REGAL_NO_NAMESPACE_WGL_OML_SYNC_CONTROL)
#define REGAL_NO_NAMESPACE_WGL_OML_SYNC_CONTROL
#endif

#if (defined(WGL_OML_SYNC_CONTROL) || !defined(REGAL_PLUGIN_MODE) || defined(REGAL_NO_WGL_OML_SYNC_CONTROL)) && !defined(REGAL_NO_PLUGIN_WGL_OML_SYNC_CONTROL)
#define REGAL_NO_PLUGIN_WGL_OML_SYNC_CONTROL
#endif

#if (defined(WGL_OML_SYNC_CONTROL) || defined(REGAL_NO_DECLARATION) || defined(REGAL_NO_WGL_OML_SYNC_CONTROL)) && !defined(REGAL_NO_DECLARATION_WGL_OML_SYNC_CONTROL)
#define REGAL_NO_DECLARATION_WGL_OML_SYNC_CONTROL
#endif

#ifndef WGL_OML_sync_control
#define WGL_OML_sync_control 1
#endif

#ifndef REGAL_NO_TYPEDEF_WGL_OML_SYNC_CONTROL
typedef BOOL (REGAL_CALL *PFNWGLGETMSCRATEOMLPROC)(HDC hDC, INT32 *numerator, INT32 *denominator);
typedef BOOL (REGAL_CALL *PFNWGLGETSYNCVALUESOMLPROC)(HDC hDC, INT64 *ust, INT64 *msc, INT64 *sbc);
typedef BOOL (REGAL_CALL *PFNWGLWAITFORMSCOMLPROC)(HDC hDC, INT64 target_msc, INT64 divisor, INT64 remainder, INT64 *ust, INT64 *msc, INT64 *sbc);
typedef BOOL (REGAL_CALL *PFNWGLWAITFORSBCOMLPROC)(HDC hDC, INT64 target_sbc, INT64 *ust, INT64 *msc, INT64 *sbc);
typedef INT64 (REGAL_CALL *PFNWGLSWAPBUFFERSMSCOMLPROC)(HDC hDC, INT64 target_msc, INT64 divisor, INT64 remainder);
typedef INT64 (REGAL_CALL *PFNWGLSWAPLAYERBUFFERSMSCOMLPROC)(HDC hDC, int fuPlanes, INT64 target_msc, INT64 divisor, INT64 remainder);
#endif

#ifndef REGAL_NO_NAMESPACE_WGL_OML_SYNC_CONTROL
#define wglGetMscRateOML                    rwglGetMscRateOML
#define wglGetSyncValuesOML                 rwglGetSyncValuesOML
#define wglSwapBuffersMscOML                rwglSwapBuffersMscOML
#define wglSwapLayerBuffersMscOML           rwglSwapLayerBuffersMscOML
#define wglWaitForMscOML                    rwglWaitForMscOML
#define wglWaitForSbcOML                    rwglWaitForSbcOML
#endif

#ifndef REGAL_NO_DECLARATION_WGL_OML_SYNC_CONTROL
REGAL_DECL BOOL REGAL_CALL wglGetMscRateOML(HDC hDC, INT32 *numerator, INT32 *denominator);

REGAL_DECL BOOL REGAL_CALL wglGetSyncValuesOML(HDC hDC, INT64 *ust, INT64 *msc, INT64 *sbc);

REGAL_DECL BOOL REGAL_CALL wglWaitForMscOML(HDC hDC, INT64 target_msc, INT64 divisor, INT64 remainder, INT64 *ust, INT64 *msc, INT64 *sbc);

REGAL_DECL BOOL REGAL_CALL wglWaitForSbcOML(HDC hDC, INT64 target_sbc, INT64 *ust, INT64 *msc, INT64 *sbc);

REGAL_DECL INT64 REGAL_CALL wglSwapBuffersMscOML(HDC hDC, INT64 target_msc, INT64 divisor, INT64 remainder);

REGAL_DECL INT64 REGAL_CALL wglSwapLayerBuffersMscOML(HDC hDC, int fuPlanes, INT64 target_msc, INT64 divisor, INT64 remainder);

#endif

/**
 ** WGL_core
 **/

#if (defined(WGL_CORE) || defined(REGAL_NO_ENUM) || defined(REGAL_NO_WGL_CORE)) && !defined(REGAL_NO_ENUM_WGL_CORE)
#define REGAL_NO_ENUM_WGL_CORE
#endif

#if (defined(WGL_CORE) || defined(REGAL_NO_TYPEDEF) || defined(REGAL_NO_WGL_CORE)) && !defined(REGAL_NO_TYPEDEF_WGL_CORE)
#define REGAL_NO_TYPEDEF_WGL_CORE
#endif

#if (defined(WGL_CORE) || !defined(REGAL_NAMESPACE) || defined(REGAL_NO_WGL_CORE)) && !defined(REGAL_NO_NAMESPACE_WGL_CORE)
#define REGAL_NO_NAMESPACE_WGL_CORE
#endif

#if (defined(WGL_CORE) || !defined(REGAL_PLUGIN_MODE) || defined(REGAL_NO_WGL_CORE)) && !defined(REGAL_NO_PLUGIN_WGL_CORE)
#define REGAL_NO_PLUGIN_WGL_CORE
#endif

#if (defined(WGL_CORE) || defined(REGAL_NO_DECLARATION) || defined(REGAL_NO_WGL_CORE)) && !defined(REGAL_NO_DECLARATION_WGL_CORE)
#define REGAL_NO_DECLARATION_WGL_CORE
#endif

#ifndef WGL_core
#define WGL_core 1
#endif

#ifndef REGAL_NO_TYPEDEF_WGL_CORE
typedef BOOL (REGAL_CALL *PFNWGLCOPYCONTEXTPROC)(HGLRC hglrcSrc, HGLRC hglrcDst, UINT mask);
typedef BOOL (REGAL_CALL *PFNWGLDELETECONTEXTPROC)(HGLRC hglrc);
typedef BOOL (REGAL_CALL *PFNWGLDESCRIBELAYERPLANEPROC)(HDC hDC, int iPixelFormat, int iLayerPlane, UINT nBytes, LPLAYERPLANEDESCRIPTOR plpd);
typedef BOOL (REGAL_CALL *PFNWGLMAKECURRENTPROC)(HDC hDC, HGLRC hglrc);
typedef BOOL (REGAL_CALL *PFNWGLREALIZELAYERPALETTEPROC)(HDC hDC, int iLayerPlane, BOOL bRealize);
typedef BOOL (REGAL_CALL *PFNWGLSHARELISTSPROC)(HGLRC hglrcShare, HGLRC hglrcSrc);
typedef BOOL (REGAL_CALL *PFNWGLSWAPLAYERBUFFERSPROC)(HDC hDC, UINT fuPlanes);
typedef BOOL (REGAL_CALL *PFNWGLUSEFONTBITMAPSAPROC)(HDC hDC, DWORD first, DWORD count, DWORD listBase);
typedef BOOL (REGAL_CALL *PFNWGLUSEFONTBITMAPSWPROC)(HDC hDC, DWORD first, DWORD count, DWORD listBase);
typedef BOOL (REGAL_CALL *PFNWGLUSEFONTOUTLINESAPROC)(HDC hDC, DWORD first, DWORD count, DWORD listBase, FLOAT deviation, FLOAT extrusion, int format, LPGLYPHMETRICSFLOAT lpgmf);
typedef BOOL (REGAL_CALL *PFNWGLUSEFONTOUTLINESWPROC)(HDC hDC, DWORD first, DWORD count, DWORD listBase, FLOAT deviation, FLOAT extrusion, int format, LPGLYPHMETRICSFLOAT lpgmf);
typedef DWORD (REGAL_CALL *PFNWGLSWAPMULTIPLEBUFFERSPROC)(UINT n, const WGLSWAP *ps);
typedef HDC (REGAL_CALL *PFNWGLGETCURRENTDCPROC)(void);
typedef HGLRC (REGAL_CALL *PFNWGLCREATECONTEXTPROC)(HDC hDC);
typedef HGLRC (REGAL_CALL *PFNWGLCREATELAYERCONTEXTPROC)(HDC hDC, int iLayerPlane);
typedef HGLRC (REGAL_CALL *PFNWGLGETCURRENTCONTEXTPROC)(void);
typedef PROC (REGAL_CALL *PFNWGLGETDEFAULTPROCADDRESSPROC)(LPCSTR lpszProc);
typedef PROC (REGAL_CALL *PFNWGLGETPROCADDRESSPROC)(LPCSTR lpszProc);
typedef int (REGAL_CALL *PFNWGLGETLAYERPALETTEENTRIESPROC)(HDC hDC, int iLayerPlane, int iStart, int nEntries, COLORREF *pcr);
typedef int (REGAL_CALL *PFNWGLSETLAYERPALETTEENTRIESPROC)(HDC hDC, int iLayerPlane, int iStart, int nEntries, const COLORREF *pcr);
#endif

#ifndef REGAL_NO_NAMESPACE_WGL_CORE
#define wglCopyContext                      rwglCopyContext
#define wglCreateContext                    rwglCreateContext
#define wglCreateLayerContext               rwglCreateLayerContext
#define wglDeleteContext                    rwglDeleteContext
#define wglDescribeLayerPlane               rwglDescribeLayerPlane
#define wglGetCurrentContext                rwglGetCurrentContext
#define wglGetCurrentDC                     rwglGetCurrentDC
#define wglGetDefaultProcAddress            rwglGetDefaultProcAddress
#define wglGetLayerPaletteEntries           rwglGetLayerPaletteEntries
#define wglGetProcAddress                   rwglGetProcAddress
#define wglMakeCurrent                      rwglMakeCurrent
#define wglRealizeLayerPalette              rwglRealizeLayerPalette
#define wglSetLayerPaletteEntries           rwglSetLayerPaletteEntries
#define wglShareLists                       rwglShareLists
#define wglSwapLayerBuffers                 rwglSwapLayerBuffers
#define wglSwapMultipleBuffers              rwglSwapMultipleBuffers
#define wglUseFontBitmapsA                  rwglUseFontBitmapsA
#define wglUseFontBitmapsW                  rwglUseFontBitmapsW
#define wglUseFontOutlinesA                 rwglUseFontOutlinesA
#define wglUseFontOutlinesW                 rwglUseFontOutlinesW
#endif

#ifndef REGAL_NO_DECLARATION_WGL_CORE
REGAL_DECL BOOL REGAL_CALL wglCopyContext(HGLRC hglrcSrc, HGLRC hglrcDst, UINT mask);

REGAL_DECL BOOL REGAL_CALL wglDeleteContext(HGLRC hglrc);

REGAL_DECL BOOL REGAL_CALL wglDescribeLayerPlane(HDC hDC, int iPixelFormat, int iLayerPlane, UINT nBytes, LPLAYERPLANEDESCRIPTOR plpd);

REGAL_DECL BOOL REGAL_CALL wglMakeCurrent(HDC hDC, HGLRC hglrc);

REGAL_DECL BOOL REGAL_CALL wglRealizeLayerPalette(HDC hDC, int iLayerPlane, BOOL bRealize);

REGAL_DECL BOOL REGAL_CALL wglShareLists(HGLRC hglrcShare, HGLRC hglrcSrc);

REGAL_DECL BOOL REGAL_CALL wglSwapLayerBuffers(HDC hDC, UINT fuPlanes);

REGAL_DECL BOOL REGAL_CALL wglUseFontBitmapsA(HDC hDC, DWORD first, DWORD count, DWORD listBase);

REGAL_DECL BOOL REGAL_CALL wglUseFontBitmapsW(HDC hDC, DWORD first, DWORD count, DWORD listBase);

REGAL_DECL BOOL REGAL_CALL wglUseFontOutlinesA(HDC hDC, DWORD first, DWORD count, DWORD listBase, FLOAT deviation, FLOAT extrusion, int format, LPGLYPHMETRICSFLOAT lpgmf);

REGAL_DECL BOOL REGAL_CALL wglUseFontOutlinesW(HDC hDC, DWORD first, DWORD count, DWORD listBase, FLOAT deviation, FLOAT extrusion, int format, LPGLYPHMETRICSFLOAT lpgmf);

REGAL_DECL DWORD REGAL_CALL wglSwapMultipleBuffers(UINT n, const WGLSWAP *ps);

REGAL_DECL HDC REGAL_CALL wglGetCurrentDC(void);

REGAL_DECL HGLRC REGAL_CALL wglCreateContext(HDC hDC);

REGAL_DECL HGLRC REGAL_CALL wglCreateLayerContext(HDC hDC, int iLayerPlane);

REGAL_DECL HGLRC REGAL_CALL wglGetCurrentContext(void);

REGAL_DECL PROC REGAL_CALL wglGetDefaultProcAddress(LPCSTR lpszProc);

REGAL_DECL PROC REGAL_CALL wglGetProcAddress(LPCSTR lpszProc);

REGAL_DECL int REGAL_CALL wglGetLayerPaletteEntries(HDC hDC, int iLayerPlane, int iStart, int nEntries, COLORREF *pcr);

REGAL_DECL int REGAL_CALL wglSetLayerPaletteEntries(HDC hDC, int iLayerPlane, int iStart, int nEntries, const COLORREF *pcr);

#endif

#endif /* REGAL_SYS_WGL_DECLARE_WGL */
#endif /* REGAL_SYS_WGL */

#ifdef __cplusplus
}
#endif

#endif /* __REGAL_WGL_H__ */
