/* NOTE: Do not edit this file, it is generated by a script:
   Export.py --api gl 4.4 --api wgl 4.4 --api glx 4.4 --api cgl 1.4 --api egl 1.0 --outdir .
*/

/*
  Copyright (c) 2011-2013 NVIDIA Corporation
  Copyright (c) 2011-2013 Cass Everitt
  Copyright (c) 2012-2013 Scott Nations
  Copyright (c) 2012 Mathias Schott
  Copyright (c) 2012-2013 Nigel Stewart
  Copyright (c) 2012-2013 Google Inc.
  All rights reserved.

  Redistribution and use in source and binary forms, with or without modification,
  are permitted provided that the following conditions are met:

    Redistributions of source code must retain the above copyright notice, this
    list of conditions and the following disclaimer.

    Redistributions in binary form must reproduce the above copyright notice,
    this list of conditions and the following disclaimer in the documentation
    and/or other materials provided with the distribution.

  THIS SOFTWARE IS PROVIDED BY THE COPYRIGHT HOLDERS AND CONTRIBUTORS "AS IS" AND
  ANY EXPRESS OR IMPLIED WARRANTIES, INCLUDING, BUT NOT LIMITED TO, THE IMPLIED
  WARRANTIES OF MERCHANTABILITY AND FITNESS FOR A PARTICULAR PURPOSE ARE DISCLAIMED.
  IN NO EVENT SHALL THE COPYRIGHT HOLDER OR CONTRIBUTORS BE LIABLE FOR ANY DIRECT,
  INDIRECT, INCIDENTAL, SPECIAL, EXEMPLARY, OR CONSEQUENTIAL DAMAGES (INCLUDING,
  BUT NOT LIMITED TO, PROCUREMENT OF SUBSTITUTE GOODS OR SERVICES; LOSS OF USE,
  DATA, OR PROFITS; OR BUSINESS INTERRUPTION) HOWEVER CAUSED AND ON ANY THEORY OF
  LIABILITY, WHETHER IN CONTRACT, STRICT LIABILITY, OR TORT (INCLUDING NEGLIGENCE
  OR OTHERWISE) ARISING IN ANY WAY OUT OF THE USE OF THIS SOFTWARE, EVEN IF ADVISED
  OF THE POSSIBILITY OF SUCH DAMAGE.
*/

/*
  Intended formatting conventions:
  $ astyle --style=allman --indent=spaces=2 --indent-switches
*/

#ifndef REGAL_EMU_PROCS_FILTER_H
#define REGAL_EMU_PROCS_FILTER_H

#include "RegalUtil.h"

#if REGAL_EMULATION

REGAL_GLOBAL_BEGIN

#include "RegalPrivate.h"
#include "RegalContext.h"
#include "RegalDispatch.h"

REGAL_GLOBAL_END

REGAL_NAMESPACE_BEGIN

struct EmuOriginateProcFilter {

  EmuOriginateProcFilter() {
    memset(this, 0, sizeof( *this ) );
  }

  PFNGLREADBUFFERNVPROC glReadBufferNV;
  PFNGLDRAWELEMENTSPROC glDrawElements;
  PFNGLMAPBUFFEROESPROC glMapBufferOES;
  PFNGLUNMAPBUFFEROESPROC glUnmapBufferOES;
  PFNGLDRAWBUFFERSNVPROC glDrawBuffersNV;
  PFNGLBLITFRAMEBUFFERNVPROC glBlitFramebufferNV;
  PFNGLACTIVETEXTUREPROC glActiveTexture;
  PFNGLATTACHSHADERPROC glAttachShader;
  PFNGLCOMPILESHADERPROC glCompileShader;
  PFNGLCREATEPROGRAMPROC glCreateProgram;
  PFNGLISPROGRAMPROC glIsProgram;
  PFNGLGETPROGRAMINFOLOGPROC glGetProgramInfoLog;
  PFNGLGETSHADERINFOLOGPROC glGetShaderInfoLog;
  PFNGLGETPROGRAMIVPROC glGetProgramiv;
  PFNGLGETSHADERIVPROC glGetShaderiv;
  PFNGLGETUNIFORMLOCATIONPROC glGetUniformLocation;
  PFNGLUNIFORM1IPROC glUniform1i;
  PFNGLBUFFERDATAPROC glBufferData;
  PFNGLBINDATTRIBLOCATIONPROC glBindAttribLocation;
  PFNGLBLENDCOLORPROC glBlendColor;
  PFNGLBLENDEQUATIONPROC glBlendEquation;
  PFNGLCOLORMASKPROC glColorMask;
  PFNGLDISABLEPROC glDisable;
  PFNGLENABLEPROC glEnable;
  PFNGLISENABLEDPROC glIsEnabled;
  PFNGLBINDRENDERBUFFERPROC glBindRenderbuffer;
  PFNGLCHECKFRAMEBUFFERSTATUSPROC glCheckFramebufferStatus;
  PFNGLDELETEFRAMEBUFFERSPROC glDeleteFramebuffers;
  PFNGLDELETERENDERBUFFERSPROC glDeleteRenderbuffers;
  PFNGLGENFRAMEBUFFERSPROC glGenFramebuffers;
  PFNGLGENRENDERBUFFERSPROC glGenRenderbuffers;
  PFNGLGETRENDERBUFFERPARAMETERIVPROC glGetRenderbufferParameteriv;
  PFNGLISFRAMEBUFFERPROC glIsFramebuffer;
  PFNGLISRENDERBUFFERPROC glIsRenderbuffer;
  PFNGLRENDERBUFFERSTORAGEPROC glRenderbufferStorage;
  PFNGLACCUMPROC glAccum;
  PFNGLBITMAPPROC glBitmap;
  PFNGLCALLLISTPROC glCallList;
  PFNGLCLEARACCUMPROC glClearAccum;
  PFNGLCOPYPIXELSPROC glCopyPixels;
  PFNGLDELETELISTSPROC glDeleteLists;
  PFNGLDRAWBUFFERPROC glDrawBuffer;
  PFNGLDRAWPIXELSPROC glDrawPixels;
  PFNGLEDGEFLAGPROC glEdgeFlag;
  PFNGLENDLISTPROC glEndList;
  PFNGLEVALCOORD1DPROC glEvalCoord1d;
  PFNGLEVALCOORD1DVPROC glEvalCoord1dv;
  PFNGLEVALCOORD1FPROC glEvalCoord1f;
  PFNGLEVALCOORD1FVPROC glEvalCoord1fv;
  PFNGLEVALCOORD2DPROC glEvalCoord2d;
  PFNGLEVALCOORD2DVPROC glEvalCoord2dv;
  PFNGLEVALCOORD2FPROC glEvalCoord2f;
  PFNGLEVALCOORD2FVPROC glEvalCoord2fv;
  PFNGLEVALMESH1PROC glEvalMesh1;
  PFNGLEVALMESH2PROC glEvalMesh2;
  PFNGLEVALPOINT1PROC glEvalPoint1;
  PFNGLEVALPOINT2PROC glEvalPoint2;
  PFNGLGENLISTSPROC glGenLists;
  PFNGLGETBOOLEANVPROC glGetBooleanv;
  PFNGLGETDOUBLEVPROC glGetDoublev;
  PFNGLGETFLOATVPROC glGetFloatv;
  PFNGLGETINTEGERVPROC glGetIntegerv;
  PFNGLGETTEXIMAGEPROC glGetTexImage;
  PFNGLGETTEXLEVELPARAMETERFVPROC glGetTexLevelParameterfv;
  PFNGLGETTEXLEVELPARAMETERIVPROC glGetTexLevelParameteriv;
  PFNGLGETTEXPARAMETERIVPROC glGetTexParameteriv;
  PFNGLLINESTIPPLEPROC glLineStipple;
  PFNGLLINEWIDTHPROC glLineWidth;
  PFNGLMAP1DPROC glMap1d;
  PFNGLMAP1FPROC glMap1f;
  PFNGLMAP2DPROC glMap2d;
  PFNGLMAP2FPROC glMap2f;
  PFNGLMAPGRID1DPROC glMapGrid1d;
  PFNGLMAPGRID1FPROC glMapGrid1f;
  PFNGLMAPGRID2DPROC glMapGrid2d;
  PFNGLMAPGRID2FPROC glMapGrid2f;
  PFNGLNEWLISTPROC glNewList;
  PFNGLPIXELSTOREFPROC glPixelStoref;
  PFNGLPIXELSTOREIPROC glPixelStorei;
  PFNGLPIXELTRANSFERFPROC glPixelTransferf;
  PFNGLPIXELTRANSFERIPROC glPixelTransferi;
  PFNGLPIXELZOOMPROC glPixelZoom;
  PFNGLPOLYGONMODEPROC glPolygonMode;
  PFNGLRASTERPOS2DPROC glRasterPos2d;
  PFNGLRASTERPOS2DVPROC glRasterPos2dv;
  PFNGLRASTERPOS2FPROC glRasterPos2f;
  PFNGLRASTERPOS2FVPROC glRasterPos2fv;
  PFNGLRASTERPOS2IPROC glRasterPos2i;
  PFNGLRASTERPOS2IVPROC glRasterPos2iv;
  PFNGLRASTERPOS2SPROC glRasterPos2s;
  PFNGLRASTERPOS2SVPROC glRasterPos2sv;
  PFNGLRASTERPOS3DPROC glRasterPos3d;
  PFNGLRASTERPOS3DVPROC glRasterPos3dv;
  PFNGLRASTERPOS3FPROC glRasterPos3f;
  PFNGLRASTERPOS3FVPROC glRasterPos3fv;
  PFNGLRASTERPOS3IPROC glRasterPos3i;
  PFNGLRASTERPOS3IVPROC glRasterPos3iv;
  PFNGLRASTERPOS3SPROC glRasterPos3s;
  PFNGLRASTERPOS3SVPROC glRasterPos3sv;
  PFNGLRASTERPOS4DPROC glRasterPos4d;
  PFNGLRASTERPOS4DVPROC glRasterPos4dv;
  PFNGLRASTERPOS4FPROC glRasterPos4f;
  PFNGLRASTERPOS4FVPROC glRasterPos4fv;
  PFNGLRASTERPOS4IPROC glRasterPos4i;
  PFNGLRASTERPOS4IVPROC glRasterPos4iv;
  PFNGLRASTERPOS4SPROC glRasterPos4s;
  PFNGLRASTERPOS4SVPROC glRasterPos4sv;
  PFNGLREADBUFFERPROC glReadBuffer;
  PFNGLRECTDPROC glRectd;
  PFNGLRECTFPROC glRectf;
  PFNGLRECTIPROC glRecti;
  PFNGLRECTSPROC glRects;
  PFNGLRENDERMODEPROC glRenderMode;
  PFNGLSHADEMODELPROC glShadeModel;
  PFNGLTEXIMAGE1DPROC glTexImage1D;
  PFNGLTEXIMAGE2DPROC glTexImage2D;
  PFNGLTEXPARAMETERFPROC glTexParameterf;
  PFNGLTEXPARAMETERFVPROC glTexParameterfv;
  PFNGLTEXPARAMETERIPROC glTexParameteri;
  PFNGLTEXPARAMETERIVPROC glTexParameteriv;
  PFNGLBINDTEXTUREPROC glBindTexture;
  PFNGLDRAWRANGEELEMENTSPROC glDrawRangeElements;
  PFNGLTEXIMAGE3DPROC glTexImage3D;
  PFNGLCLIENTACTIVETEXTUREPROC glClientActiveTexture;
  PFNGLWINDOWPOS2DPROC glWindowPos2d;
  PFNGLWINDOWPOS2DVPROC glWindowPos2dv;
  PFNGLWINDOWPOS2FPROC glWindowPos2f;
  PFNGLWINDOWPOS2FVPROC glWindowPos2fv;
  PFNGLWINDOWPOS2IPROC glWindowPos2i;
  PFNGLWINDOWPOS2IVPROC glWindowPos2iv;
  PFNGLWINDOWPOS2SPROC glWindowPos2s;
  PFNGLWINDOWPOS2SVPROC glWindowPos2sv;
  PFNGLWINDOWPOS3DPROC glWindowPos3d;
  PFNGLWINDOWPOS3DVPROC glWindowPos3dv;
  PFNGLWINDOWPOS3FPROC glWindowPos3f;
  PFNGLWINDOWPOS3FVPROC glWindowPos3fv;
  PFNGLWINDOWPOS3IPROC glWindowPos3i;
  PFNGLWINDOWPOS3IVPROC glWindowPos3iv;
  PFNGLWINDOWPOS3SPROC glWindowPos3s;
  PFNGLWINDOWPOS3SVPROC glWindowPos3sv;
  PFNGLMAPBUFFERPROC glMapBuffer;
  PFNGLUNMAPBUFFERPROC glUnmapBuffer;
  PFNGLDRAWBUFFERSPROC glDrawBuffers;
  PFNGLBLITFRAMEBUFFERANGLEPROC glBlitFramebufferANGLE;
  PFNGLDRAWBUFFERSARBPROC glDrawBuffersARB;
  PFNGLDRAWRANGEELEMENTSBASEVERTEXPROC glDrawRangeElementsBaseVertex;
  PFNGLBINDFRAMEBUFFERPROC glBindFramebuffer;
  PFNGLBLITFRAMEBUFFERPROC glBlitFramebuffer;
  PFNGLFRAMEBUFFERRENDERBUFFERPROC glFramebufferRenderbuffer;
  PFNGLFRAMEBUFFERTEXTURE1DPROC glFramebufferTexture1D;
  PFNGLFRAMEBUFFERTEXTURE2DPROC glFramebufferTexture2D;
  PFNGLFRAMEBUFFERTEXTURE3DPROC glFramebufferTexture3D;
  PFNGLGENERATEMIPMAPPROC glGenerateMipmap;
  PFNGLGETFRAMEBUFFERATTACHMENTPARAMETERIVPROC glGetFramebufferAttachmentParameteriv;
  PFNGLACTIVETEXTUREARBPROC glActiveTextureARB;
  PFNGLCLIENTACTIVETEXTUREARBPROC glClientActiveTextureARB;
  PFNGLGENSAMPLERSPROC glGenSamplers;
  PFNGLATTACHOBJECTARBPROC glAttachObjectARB;
  PFNGLCOMPILESHADERARBPROC glCompileShaderARB;
  PFNGLCREATEPROGRAMOBJECTARBPROC glCreateProgramObjectARB;
  PFNGLGETINFOLOGARBPROC glGetInfoLogARB;
  PFNGLGETOBJECTPARAMETERIVARBPROC glGetObjectParameterivARB;
  PFNGLGETUNIFORMLOCATIONARBPROC glGetUniformLocationARB;
  PFNGLUNIFORM1IARBPROC glUniform1iARB;
  PFNGLGETINTEGER64VPROC glGetInteger64v;
  PFNGLBUFFERDATAARBPROC glBufferDataARB;
  PFNGLMAPBUFFERARBPROC glMapBufferARB;
  PFNGLUNMAPBUFFERARBPROC glUnmapBufferARB;
  PFNGLBINDPROGRAMARBPROC glBindProgramARB;
  PFNGLGENPROGRAMSARBPROC glGenProgramsARB;
  PFNGLGETPROGRAMIVARBPROC glGetProgramivARB;
  PFNGLPROGRAMSTRINGARBPROC glProgramStringARB;
  PFNGLBINDATTRIBLOCATIONARBPROC glBindAttribLocationARB;
  PFNGLDRAWBUFFERSATIPROC glDrawBuffersATI;
  PFNGLBLENDCOLOREXTPROC glBlendColorEXT;
  PFNGLBLENDEQUATIONEXTPROC glBlendEquationEXT;
  PFNGLPOPGROUPMARKEREXTPROC glPopGroupMarkerEXT;
  PFNGLPUSHGROUPMARKEREXTPROC glPushGroupMarkerEXT;
  PFNGLCOLORMASKINDEXEDEXTPROC glColorMaskIndexedEXT;
  PFNGLDISABLEINDEXEDEXTPROC glDisableIndexedEXT;
  PFNGLENABLEINDEXEDEXTPROC glEnableIndexedEXT;
  PFNGLGETBOOLEANINDEXEDVEXTPROC glGetBooleanIndexedvEXT;
  PFNGLGETINTEGERINDEXEDVEXTPROC glGetIntegerIndexedvEXT;
  PFNGLISENABLEDINDEXEDEXTPROC glIsEnabledIndexedEXT;
  PFNGLBLITFRAMEBUFFEREXTPROC glBlitFramebufferEXT;
  PFNGLBINDFRAMEBUFFEREXTPROC glBindFramebufferEXT;
  PFNGLBINDRENDERBUFFEREXTPROC glBindRenderbufferEXT;
  PFNGLCHECKFRAMEBUFFERSTATUSEXTPROC glCheckFramebufferStatusEXT;
  PFNGLDELETEFRAMEBUFFERSEXTPROC glDeleteFramebuffersEXT;
  PFNGLDELETERENDERBUFFERSEXTPROC glDeleteRenderbuffersEXT;
  PFNGLFRAMEBUFFERRENDERBUFFEREXTPROC glFramebufferRenderbufferEXT;
  PFNGLFRAMEBUFFERTEXTURE1DEXTPROC glFramebufferTexture1DEXT;
  PFNGLFRAMEBUFFERTEXTURE2DEXTPROC glFramebufferTexture2DEXT;
  PFNGLFRAMEBUFFERTEXTURE3DEXTPROC glFramebufferTexture3DEXT;
  PFNGLGENFRAMEBUFFERSEXTPROC glGenFramebuffersEXT;
  PFNGLGENRENDERBUFFERSEXTPROC glGenRenderbuffersEXT;
  PFNGLGENERATEMIPMAPEXTPROC glGenerateMipmapEXT;
  PFNGLGETFRAMEBUFFERATTACHMENTPARAMETERIVEXTPROC glGetFramebufferAttachmentParameterivEXT;
  PFNGLGETRENDERBUFFERPARAMETERIVEXTPROC glGetRenderbufferParameterivEXT;
  PFNGLISFRAMEBUFFEREXTPROC glIsFramebufferEXT;
  PFNGLISRENDERBUFFEREXTPROC glIsRenderbufferEXT;
  PFNGLRENDERBUFFERSTORAGEEXTPROC glRenderbufferStorageEXT;
  PFNGLBINDFRAMEBUFFEROESPROC glBindFramebufferOES;

  void Initialize( Dispatch::GL & dt ) {
    glReadBufferNV = dt.glReadBufferNV;
    glDrawElements = dt.glDrawElements;
    glMapBufferOES = dt.glMapBufferOES;
    glUnmapBufferOES = dt.glUnmapBufferOES;
    glDrawBuffersNV = dt.glDrawBuffersNV;
    glBlitFramebufferNV = dt.glBlitFramebufferNV;
    glActiveTexture = dt.glActiveTexture;
    glAttachShader = dt.glAttachShader;
    glCompileShader = dt.glCompileShader;
    glCreateProgram = dt.glCreateProgram;
    glIsProgram = dt.glIsProgram;
    glGetProgramInfoLog = dt.glGetProgramInfoLog;
    glGetShaderInfoLog = dt.glGetShaderInfoLog;
    glGetProgramiv = dt.glGetProgramiv;
    glGetShaderiv = dt.glGetShaderiv;
    glGetUniformLocation = dt.glGetUniformLocation;
    glUniform1i = dt.glUniform1i;
    glBufferData = dt.glBufferData;
    glBindAttribLocation = dt.glBindAttribLocation;
    glBlendColor = dt.glBlendColor;
    glBlendEquation = dt.glBlendEquation;
    glColorMask = dt.glColorMask;
    glDisable = dt.glDisable;
    glEnable = dt.glEnable;
    glIsEnabled = dt.glIsEnabled;
    glBindRenderbuffer = dt.glBindRenderbuffer;
    glCheckFramebufferStatus = dt.glCheckFramebufferStatus;
    glDeleteFramebuffers = dt.glDeleteFramebuffers;
    glDeleteRenderbuffers = dt.glDeleteRenderbuffers;
    glGenFramebuffers = dt.glGenFramebuffers;
    glGenRenderbuffers = dt.glGenRenderbuffers;
    glGetRenderbufferParameteriv = dt.glGetRenderbufferParameteriv;
    glIsFramebuffer = dt.glIsFramebuffer;
    glIsRenderbuffer = dt.glIsRenderbuffer;
    glRenderbufferStorage = dt.glRenderbufferStorage;
    glAccum = dt.glAccum;
    glBitmap = dt.glBitmap;
    glCallList = dt.glCallList;
    glClearAccum = dt.glClearAccum;
    glCopyPixels = dt.glCopyPixels;
    glDeleteLists = dt.glDeleteLists;
    glDrawBuffer = dt.glDrawBuffer;
    glDrawPixels = dt.glDrawPixels;
    glEdgeFlag = dt.glEdgeFlag;
    glEndList = dt.glEndList;
    glEvalCoord1d = dt.glEvalCoord1d;
    glEvalCoord1dv = dt.glEvalCoord1dv;
    glEvalCoord1f = dt.glEvalCoord1f;
    glEvalCoord1fv = dt.glEvalCoord1fv;
    glEvalCoord2d = dt.glEvalCoord2d;
    glEvalCoord2dv = dt.glEvalCoord2dv;
    glEvalCoord2f = dt.glEvalCoord2f;
    glEvalCoord2fv = dt.glEvalCoord2fv;
    glEvalMesh1 = dt.glEvalMesh1;
    glEvalMesh2 = dt.glEvalMesh2;
    glEvalPoint1 = dt.glEvalPoint1;
    glEvalPoint2 = dt.glEvalPoint2;
    glGenLists = dt.glGenLists;
    glGetBooleanv = dt.glGetBooleanv;
    glGetDoublev = dt.glGetDoublev;
    glGetFloatv = dt.glGetFloatv;
    glGetIntegerv = dt.glGetIntegerv;
    glGetTexImage = dt.glGetTexImage;
    glGetTexLevelParameterfv = dt.glGetTexLevelParameterfv;
    glGetTexLevelParameteriv = dt.glGetTexLevelParameteriv;
    glGetTexParameteriv = dt.glGetTexParameteriv;
    glLineStipple = dt.glLineStipple;
    glLineWidth = dt.glLineWidth;
    glMap1d = dt.glMap1d;
    glMap1f = dt.glMap1f;
    glMap2d = dt.glMap2d;
    glMap2f = dt.glMap2f;
    glMapGrid1d = dt.glMapGrid1d;
    glMapGrid1f = dt.glMapGrid1f;
    glMapGrid2d = dt.glMapGrid2d;
    glMapGrid2f = dt.glMapGrid2f;
    glNewList = dt.glNewList;
    glPixelStoref = dt.glPixelStoref;
    glPixelStorei = dt.glPixelStorei;
    glPixelTransferf = dt.glPixelTransferf;
    glPixelTransferi = dt.glPixelTransferi;
    glPixelZoom = dt.glPixelZoom;
    glPolygonMode = dt.glPolygonMode;
    glRasterPos2d = dt.glRasterPos2d;
    glRasterPos2dv = dt.glRasterPos2dv;
    glRasterPos2f = dt.glRasterPos2f;
    glRasterPos2fv = dt.glRasterPos2fv;
    glRasterPos2i = dt.glRasterPos2i;
    glRasterPos2iv = dt.glRasterPos2iv;
    glRasterPos2s = dt.glRasterPos2s;
    glRasterPos2sv = dt.glRasterPos2sv;
    glRasterPos3d = dt.glRasterPos3d;
    glRasterPos3dv = dt.glRasterPos3dv;
    glRasterPos3f = dt.glRasterPos3f;
    glRasterPos3fv = dt.glRasterPos3fv;
    glRasterPos3i = dt.glRasterPos3i;
    glRasterPos3iv = dt.glRasterPos3iv;
    glRasterPos3s = dt.glRasterPos3s;
    glRasterPos3sv = dt.glRasterPos3sv;
    glRasterPos4d = dt.glRasterPos4d;
    glRasterPos4dv = dt.glRasterPos4dv;
    glRasterPos4f = dt.glRasterPos4f;
    glRasterPos4fv = dt.glRasterPos4fv;
    glRasterPos4i = dt.glRasterPos4i;
    glRasterPos4iv = dt.glRasterPos4iv;
    glRasterPos4s = dt.glRasterPos4s;
    glRasterPos4sv = dt.glRasterPos4sv;
    glReadBuffer = dt.glReadBuffer;
    glRectd = dt.glRectd;
    glRectf = dt.glRectf;
    glRecti = dt.glRecti;
    glRects = dt.glRects;
    glRenderMode = dt.glRenderMode;
    glShadeModel = dt.glShadeModel;
    glTexImage1D = dt.glTexImage1D;
    glTexImage2D = dt.glTexImage2D;
    glTexParameterf = dt.glTexParameterf;
    glTexParameterfv = dt.glTexParameterfv;
    glTexParameteri = dt.glTexParameteri;
    glTexParameteriv = dt.glTexParameteriv;
    glBindTexture = dt.glBindTexture;
    glDrawRangeElements = dt.glDrawRangeElements;
    glTexImage3D = dt.glTexImage3D;
    glClientActiveTexture = dt.glClientActiveTexture;
    glWindowPos2d = dt.glWindowPos2d;
    glWindowPos2dv = dt.glWindowPos2dv;
    glWindowPos2f = dt.glWindowPos2f;
    glWindowPos2fv = dt.glWindowPos2fv;
    glWindowPos2i = dt.glWindowPos2i;
    glWindowPos2iv = dt.glWindowPos2iv;
    glWindowPos2s = dt.glWindowPos2s;
    glWindowPos2sv = dt.glWindowPos2sv;
    glWindowPos3d = dt.glWindowPos3d;
    glWindowPos3dv = dt.glWindowPos3dv;
    glWindowPos3f = dt.glWindowPos3f;
    glWindowPos3fv = dt.glWindowPos3fv;
    glWindowPos3i = dt.glWindowPos3i;
    glWindowPos3iv = dt.glWindowPos3iv;
    glWindowPos3s = dt.glWindowPos3s;
    glWindowPos3sv = dt.glWindowPos3sv;
    glMapBuffer = dt.glMapBuffer;
    glUnmapBuffer = dt.glUnmapBuffer;
    glDrawBuffers = dt.glDrawBuffers;
    glBlitFramebufferANGLE = dt.glBlitFramebufferANGLE;
    glDrawBuffersARB = dt.glDrawBuffersARB;
    glDrawRangeElementsBaseVertex = dt.glDrawRangeElementsBaseVertex;
    glBindFramebuffer = dt.glBindFramebuffer;
    glBlitFramebuffer = dt.glBlitFramebuffer;
    glFramebufferRenderbuffer = dt.glFramebufferRenderbuffer;
    glFramebufferTexture1D = dt.glFramebufferTexture1D;
    glFramebufferTexture2D = dt.glFramebufferTexture2D;
    glFramebufferTexture3D = dt.glFramebufferTexture3D;
    glGenerateMipmap = dt.glGenerateMipmap;
    glGetFramebufferAttachmentParameteriv = dt.glGetFramebufferAttachmentParameteriv;
    glActiveTextureARB = dt.glActiveTextureARB;
    glClientActiveTextureARB = dt.glClientActiveTextureARB;
    glGenSamplers = dt.glGenSamplers;
    glAttachObjectARB = dt.glAttachObjectARB;
    glCompileShaderARB = dt.glCompileShaderARB;
    glCreateProgramObjectARB = dt.glCreateProgramObjectARB;
    glGetInfoLogARB = dt.glGetInfoLogARB;
    glGetObjectParameterivARB = dt.glGetObjectParameterivARB;
    glGetUniformLocationARB = dt.glGetUniformLocationARB;
    glUniform1iARB = dt.glUniform1iARB;
    glGetInteger64v = dt.glGetInteger64v;
    glBufferDataARB = dt.glBufferDataARB;
    glMapBufferARB = dt.glMapBufferARB;
    glUnmapBufferARB = dt.glUnmapBufferARB;
    glBindProgramARB = dt.glBindProgramARB;
    glGenProgramsARB = dt.glGenProgramsARB;
    glGetProgramivARB = dt.glGetProgramivARB;
    glProgramStringARB = dt.glProgramStringARB;
    glBindAttribLocationARB = dt.glBindAttribLocationARB;
    glDrawBuffersATI = dt.glDrawBuffersATI;
    glBlendColorEXT = dt.glBlendColorEXT;
    glBlendEquationEXT = dt.glBlendEquationEXT;
    glPopGroupMarkerEXT = dt.glPopGroupMarkerEXT;
    glPushGroupMarkerEXT = dt.glPushGroupMarkerEXT;
    glColorMaskIndexedEXT = dt.glColorMaskIndexedEXT;
    glDisableIndexedEXT = dt.glDisableIndexedEXT;
    glEnableIndexedEXT = dt.glEnableIndexedEXT;
    glGetBooleanIndexedvEXT = dt.glGetBooleanIndexedvEXT;
    glGetIntegerIndexedvEXT = dt.glGetIntegerIndexedvEXT;
    glIsEnabledIndexedEXT = dt.glIsEnabledIndexedEXT;
    glBlitFramebufferEXT = dt.glBlitFramebufferEXT;
    glBindFramebufferEXT = dt.glBindFramebufferEXT;
    glBindRenderbufferEXT = dt.glBindRenderbufferEXT;
    glCheckFramebufferStatusEXT = dt.glCheckFramebufferStatusEXT;
    glDeleteFramebuffersEXT = dt.glDeleteFramebuffersEXT;
    glDeleteRenderbuffersEXT = dt.glDeleteRenderbuffersEXT;
    glFramebufferRenderbufferEXT = dt.glFramebufferRenderbufferEXT;
    glFramebufferTexture1DEXT = dt.glFramebufferTexture1DEXT;
    glFramebufferTexture2DEXT = dt.glFramebufferTexture2DEXT;
    glFramebufferTexture3DEXT = dt.glFramebufferTexture3DEXT;
    glGenFramebuffersEXT = dt.glGenFramebuffersEXT;
    glGenRenderbuffersEXT = dt.glGenRenderbuffersEXT;
    glGenerateMipmapEXT = dt.glGenerateMipmapEXT;
    glGetFramebufferAttachmentParameterivEXT = dt.glGetFramebufferAttachmentParameterivEXT;
    glGetRenderbufferParameterivEXT = dt.glGetRenderbufferParameterivEXT;
    glIsFramebufferEXT = dt.glIsFramebufferEXT;
    glIsRenderbufferEXT = dt.glIsRenderbufferEXT;
    glRenderbufferStorageEXT = dt.glRenderbufferStorageEXT;
    glBindFramebufferOES = dt.glBindFramebufferOES;
  }
};

REGAL_NAMESPACE_END

#endif

#endif // REGAL_EMU_PROCS_FILTER_H
