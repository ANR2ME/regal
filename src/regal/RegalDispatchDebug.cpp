/* NOTE: Do not edit this file, it is generated by a script:
   Export.py --api gl 4.2 --api wgl 4.0 --api glx 4.0 --api cgl 1.4 --api egl 1.0 --outdir src/regal
*/

/*
  Copyright (c) 2011 NVIDIA Corporation
  Copyright (c) 2011-2012 Cass Everitt
  Copyright (c) 2012 Scott Nations
  Copyright (c) 2012 Mathias Schott
  Copyright (c) 2012 Nigel Stewart
  All rights reserved.

  Redistribution and use in source and binary forms, with or without modification,
  are permitted provided that the following conditions are met:

    Redistributions of source code must retain the above copyright notice, this
    list of conditions and the following disclaimer.

    Redistributions in binary form must reproduce the above copyright notice,
    this list of conditions and the following disclaimer in the documentation
    and/or other materials provided with the distribution.

  THIS SOFTWARE IS PROVIDED BY THE COPYRIGHT HOLDERS AND CONTRIBUTORS "AS IS" AND
  ANY EXPRESS OR IMPLIED WARRANTIES, INCLUDING, BUT NOT LIMITED TO, THE IMPLIED
  WARRANTIES OF MERCHANTABILITY AND FITNESS FOR A PARTICULAR PURPOSE ARE DISCLAIMED.
  IN NO EVENT SHALL THE COPYRIGHT HOLDER OR CONTRIBUTORS BE LIABLE FOR ANY DIRECT,
  INDIRECT, INCIDENTAL, SPECIAL, EXEMPLARY, OR CONSEQUENTIAL DAMAGES (INCLUDING,
  BUT NOT LIMITED TO, PROCUREMENT OF SUBSTITUTE GOODS OR SERVICES; LOSS OF USE,
  DATA, OR PROFITS; OR BUSINESS INTERRUPTION) HOWEVER CAUSED AND ON ANY THEORY OF
  LIABILITY, WHETHER IN CONTRACT, STRICT LIABILITY, OR TORT (INCLUDING NEGLIGENCE
  OR OTHERWISE) ARISING IN ANY WAY OUT OF THE USE OF THIS SOFTWARE, EVEN IF ADVISED
  OF THE POSSIBILITY OF SUCH DAMAGE.
*/

#include "pch.h" /* For MS precompiled header support */

#include "RegalUtil.h"

REGAL_GLOBAL_BEGIN

#include <string>
using namespace std;

#include "RegalLog.h"
#include "RegalToken.h"
#include "RegalHelper.h"
#include "RegalPrivate.h"
#include "RegalContext.h"
#include "RegalDispatchState.h"

#include "RegalDebugInfo.h"

REGAL_GLOBAL_END

REGAL_NAMESPACE_BEGIN

using namespace Logging;
using Token::toString;

// GL_VERSION_1_0

static void REGAL_CALL debug_glNewList(GLuint list, GLenum mode)
{
  RegalContext * rCtx = GET_REGAL_CONTEXT();
  DispatchStateScopedStepDown stepDown(rCtx->dsp);
  rCtx->dsp->curr->glNewList(list, mode);
}

static void REGAL_CALL debug_glEndList(void)
{
  RegalContext * rCtx = GET_REGAL_CONTEXT();
  DispatchStateScopedStepDown stepDown(rCtx->dsp);
  rCtx->dsp->curr->glEndList();
}

static void REGAL_CALL debug_glCallList(GLuint list)
{
  RegalContext * rCtx = GET_REGAL_CONTEXT();
  DispatchStateScopedStepDown stepDown(rCtx->dsp);
  rCtx->dsp->curr->glCallList(list);
}

static void REGAL_CALL debug_glCallLists(GLsizei n, GLenum type, const GLvoid *lists)
{
  RegalContext * rCtx = GET_REGAL_CONTEXT();
  DispatchStateScopedStepDown stepDown(rCtx->dsp);
  rCtx->dsp->curr->glCallLists(n, type, lists);
}

static void REGAL_CALL debug_glDeleteLists(GLuint list, GLsizei range)
{
  RegalContext * rCtx = GET_REGAL_CONTEXT();
  DispatchStateScopedStepDown stepDown(rCtx->dsp);
  rCtx->dsp->curr->glDeleteLists(list, range);
}

static GLuint REGAL_CALL debug_glGenLists(GLsizei range)
{
  RegalContext * rCtx = GET_REGAL_CONTEXT();
  DispatchStateScopedStepDown stepDown(rCtx->dsp);
  GLuint  ret = rCtx->dsp->curr->glGenLists(range);
  return ret;
}

static void REGAL_CALL debug_glListBase(GLuint base)
{
  RegalContext * rCtx = GET_REGAL_CONTEXT();
  DispatchStateScopedStepDown stepDown(rCtx->dsp);
  rCtx->dsp->curr->glListBase(base);
}

static void REGAL_CALL debug_glBegin(GLenum mode)
{
  RegalContext * rCtx = GET_REGAL_CONTEXT();
  DispatchStateScopedStepDown stepDown(rCtx->dsp);
  rCtx->dsp->curr->glBegin(mode);
}

static void REGAL_CALL debug_glBitmap(GLsizei width, GLsizei height, GLfloat xorig, GLfloat yorig, GLfloat xmove, GLfloat ymove, const GLubyte *bitmap)
{
  RegalContext * rCtx = GET_REGAL_CONTEXT();
  DispatchStateScopedStepDown stepDown(rCtx->dsp);
  rCtx->dsp->curr->glBitmap(width, height, xorig, yorig, xmove, ymove, bitmap);
}

static void REGAL_CALL debug_glColor3b(GLbyte red, GLbyte green, GLbyte blue)
{
  RegalContext * rCtx = GET_REGAL_CONTEXT();
  DispatchStateScopedStepDown stepDown(rCtx->dsp);
  rCtx->dsp->curr->glColor3b(red, green, blue);
}

static void REGAL_CALL debug_glColor3bv(const GLbyte *v)
{
  RegalContext * rCtx = GET_REGAL_CONTEXT();
  DispatchStateScopedStepDown stepDown(rCtx->dsp);
  rCtx->dsp->curr->glColor3bv(v);
}

static void REGAL_CALL debug_glColor3d(GLdouble red, GLdouble green, GLdouble blue)
{
  RegalContext * rCtx = GET_REGAL_CONTEXT();
  DispatchStateScopedStepDown stepDown(rCtx->dsp);
  rCtx->dsp->curr->glColor3d(red, green, blue);
}

static void REGAL_CALL debug_glColor3dv(const GLdouble *v)
{
  RegalContext * rCtx = GET_REGAL_CONTEXT();
  DispatchStateScopedStepDown stepDown(rCtx->dsp);
  rCtx->dsp->curr->glColor3dv(v);
}

static void REGAL_CALL debug_glColor3f(GLfloat red, GLfloat green, GLfloat blue)
{
  RegalContext * rCtx = GET_REGAL_CONTEXT();
  DispatchStateScopedStepDown stepDown(rCtx->dsp);
  rCtx->dsp->curr->glColor3f(red, green, blue);
}

static void REGAL_CALL debug_glColor3fv(const GLfloat *v)
{
  RegalContext * rCtx = GET_REGAL_CONTEXT();
  DispatchStateScopedStepDown stepDown(rCtx->dsp);
  rCtx->dsp->curr->glColor3fv(v);
}

static void REGAL_CALL debug_glColor3i(GLint red, GLint green, GLint blue)
{
  RegalContext * rCtx = GET_REGAL_CONTEXT();
  DispatchStateScopedStepDown stepDown(rCtx->dsp);
  rCtx->dsp->curr->glColor3i(red, green, blue);
}

static void REGAL_CALL debug_glColor3iv(const GLint *v)
{
  RegalContext * rCtx = GET_REGAL_CONTEXT();
  DispatchStateScopedStepDown stepDown(rCtx->dsp);
  rCtx->dsp->curr->glColor3iv(v);
}

static void REGAL_CALL debug_glColor3s(GLshort red, GLshort green, GLshort blue)
{
  RegalContext * rCtx = GET_REGAL_CONTEXT();
  DispatchStateScopedStepDown stepDown(rCtx->dsp);
  rCtx->dsp->curr->glColor3s(red, green, blue);
}

static void REGAL_CALL debug_glColor3sv(const GLshort *v)
{
  RegalContext * rCtx = GET_REGAL_CONTEXT();
  DispatchStateScopedStepDown stepDown(rCtx->dsp);
  rCtx->dsp->curr->glColor3sv(v);
}

static void REGAL_CALL debug_glColor3ub(GLubyte red, GLubyte green, GLubyte blue)
{
  RegalContext * rCtx = GET_REGAL_CONTEXT();
  DispatchStateScopedStepDown stepDown(rCtx->dsp);
  rCtx->dsp->curr->glColor3ub(red, green, blue);
}

static void REGAL_CALL debug_glColor3ubv(const GLubyte *v)
{
  RegalContext * rCtx = GET_REGAL_CONTEXT();
  DispatchStateScopedStepDown stepDown(rCtx->dsp);
  rCtx->dsp->curr->glColor3ubv(v);
}

static void REGAL_CALL debug_glColor3ui(GLuint red, GLuint green, GLuint blue)
{
  RegalContext * rCtx = GET_REGAL_CONTEXT();
  DispatchStateScopedStepDown stepDown(rCtx->dsp);
  rCtx->dsp->curr->glColor3ui(red, green, blue);
}

static void REGAL_CALL debug_glColor3uiv(const GLuint *v)
{
  RegalContext * rCtx = GET_REGAL_CONTEXT();
  DispatchStateScopedStepDown stepDown(rCtx->dsp);
  rCtx->dsp->curr->glColor3uiv(v);
}

static void REGAL_CALL debug_glColor3us(GLushort red, GLushort green, GLushort blue)
{
  RegalContext * rCtx = GET_REGAL_CONTEXT();
  DispatchStateScopedStepDown stepDown(rCtx->dsp);
  rCtx->dsp->curr->glColor3us(red, green, blue);
}

static void REGAL_CALL debug_glColor3usv(const GLushort *v)
{
  RegalContext * rCtx = GET_REGAL_CONTEXT();
  DispatchStateScopedStepDown stepDown(rCtx->dsp);
  rCtx->dsp->curr->glColor3usv(v);
}

static void REGAL_CALL debug_glColor4b(GLbyte red, GLbyte green, GLbyte blue, GLbyte alpha)
{
  RegalContext * rCtx = GET_REGAL_CONTEXT();
  DispatchStateScopedStepDown stepDown(rCtx->dsp);
  rCtx->dsp->curr->glColor4b(red, green, blue, alpha);
}

static void REGAL_CALL debug_glColor4bv(const GLbyte *v)
{
  RegalContext * rCtx = GET_REGAL_CONTEXT();
  DispatchStateScopedStepDown stepDown(rCtx->dsp);
  rCtx->dsp->curr->glColor4bv(v);
}

static void REGAL_CALL debug_glColor4d(GLdouble red, GLdouble green, GLdouble blue, GLdouble alpha)
{
  RegalContext * rCtx = GET_REGAL_CONTEXT();
  DispatchStateScopedStepDown stepDown(rCtx->dsp);
  rCtx->dsp->curr->glColor4d(red, green, blue, alpha);
}

static void REGAL_CALL debug_glColor4dv(const GLdouble *v)
{
  RegalContext * rCtx = GET_REGAL_CONTEXT();
  DispatchStateScopedStepDown stepDown(rCtx->dsp);
  rCtx->dsp->curr->glColor4dv(v);
}

static void REGAL_CALL debug_glColor4f(GLfloat red, GLfloat green, GLfloat blue, GLfloat alpha)
{
  RegalContext * rCtx = GET_REGAL_CONTEXT();
  DispatchStateScopedStepDown stepDown(rCtx->dsp);
  rCtx->dsp->curr->glColor4f(red, green, blue, alpha);
}

static void REGAL_CALL debug_glColor4fv(const GLfloat *v)
{
  RegalContext * rCtx = GET_REGAL_CONTEXT();
  DispatchStateScopedStepDown stepDown(rCtx->dsp);
  rCtx->dsp->curr->glColor4fv(v);
}

static void REGAL_CALL debug_glColor4i(GLint red, GLint green, GLint blue, GLint alpha)
{
  RegalContext * rCtx = GET_REGAL_CONTEXT();
  DispatchStateScopedStepDown stepDown(rCtx->dsp);
  rCtx->dsp->curr->glColor4i(red, green, blue, alpha);
}

static void REGAL_CALL debug_glColor4iv(const GLint *v)
{
  RegalContext * rCtx = GET_REGAL_CONTEXT();
  DispatchStateScopedStepDown stepDown(rCtx->dsp);
  rCtx->dsp->curr->glColor4iv(v);
}

static void REGAL_CALL debug_glColor4s(GLshort red, GLshort green, GLshort blue, GLshort alpha)
{
  RegalContext * rCtx = GET_REGAL_CONTEXT();
  DispatchStateScopedStepDown stepDown(rCtx->dsp);
  rCtx->dsp->curr->glColor4s(red, green, blue, alpha);
}

static void REGAL_CALL debug_glColor4sv(const GLshort *v)
{
  RegalContext * rCtx = GET_REGAL_CONTEXT();
  DispatchStateScopedStepDown stepDown(rCtx->dsp);
  rCtx->dsp->curr->glColor4sv(v);
}

static void REGAL_CALL debug_glColor4ub(GLubyte red, GLubyte green, GLubyte blue, GLubyte alpha)
{
  RegalContext * rCtx = GET_REGAL_CONTEXT();
  DispatchStateScopedStepDown stepDown(rCtx->dsp);
  rCtx->dsp->curr->glColor4ub(red, green, blue, alpha);
}

static void REGAL_CALL debug_glColor4ubv(const GLubyte *v)
{
  RegalContext * rCtx = GET_REGAL_CONTEXT();
  DispatchStateScopedStepDown stepDown(rCtx->dsp);
  rCtx->dsp->curr->glColor4ubv(v);
}

static void REGAL_CALL debug_glColor4ui(GLuint red, GLuint green, GLuint blue, GLuint alpha)
{
  RegalContext * rCtx = GET_REGAL_CONTEXT();
  DispatchStateScopedStepDown stepDown(rCtx->dsp);
  rCtx->dsp->curr->glColor4ui(red, green, blue, alpha);
}

static void REGAL_CALL debug_glColor4uiv(const GLuint *v)
{
  RegalContext * rCtx = GET_REGAL_CONTEXT();
  DispatchStateScopedStepDown stepDown(rCtx->dsp);
  rCtx->dsp->curr->glColor4uiv(v);
}

static void REGAL_CALL debug_glColor4us(GLushort red, GLushort green, GLushort blue, GLushort alpha)
{
  RegalContext * rCtx = GET_REGAL_CONTEXT();
  DispatchStateScopedStepDown stepDown(rCtx->dsp);
  rCtx->dsp->curr->glColor4us(red, green, blue, alpha);
}

static void REGAL_CALL debug_glColor4usv(const GLushort *v)
{
  RegalContext * rCtx = GET_REGAL_CONTEXT();
  DispatchStateScopedStepDown stepDown(rCtx->dsp);
  rCtx->dsp->curr->glColor4usv(v);
}

static void REGAL_CALL debug_glEdgeFlag(GLboolean flag)
{
  RegalContext * rCtx = GET_REGAL_CONTEXT();
  DispatchStateScopedStepDown stepDown(rCtx->dsp);
  rCtx->dsp->curr->glEdgeFlag(flag);
}

static void REGAL_CALL debug_glEdgeFlagv(const GLboolean *flag)
{
  RegalContext * rCtx = GET_REGAL_CONTEXT();
  DispatchStateScopedStepDown stepDown(rCtx->dsp);
  rCtx->dsp->curr->glEdgeFlagv(flag);
}

static void REGAL_CALL debug_glEnd(void)
{
  RegalContext * rCtx = GET_REGAL_CONTEXT();
  DispatchStateScopedStepDown stepDown(rCtx->dsp);
  rCtx->dsp->curr->glEnd();
}

static void REGAL_CALL debug_glIndexd(GLdouble c)
{
  RegalContext * rCtx = GET_REGAL_CONTEXT();
  DispatchStateScopedStepDown stepDown(rCtx->dsp);
  rCtx->dsp->curr->glIndexd(c);
}

static void REGAL_CALL debug_glIndexdv(const GLdouble *c)
{
  RegalContext * rCtx = GET_REGAL_CONTEXT();
  DispatchStateScopedStepDown stepDown(rCtx->dsp);
  rCtx->dsp->curr->glIndexdv(c);
}

static void REGAL_CALL debug_glIndexf(GLfloat c)
{
  RegalContext * rCtx = GET_REGAL_CONTEXT();
  DispatchStateScopedStepDown stepDown(rCtx->dsp);
  rCtx->dsp->curr->glIndexf(c);
}

static void REGAL_CALL debug_glIndexfv(const GLfloat *c)
{
  RegalContext * rCtx = GET_REGAL_CONTEXT();
  DispatchStateScopedStepDown stepDown(rCtx->dsp);
  rCtx->dsp->curr->glIndexfv(c);
}

static void REGAL_CALL debug_glIndexi(GLint c)
{
  RegalContext * rCtx = GET_REGAL_CONTEXT();
  DispatchStateScopedStepDown stepDown(rCtx->dsp);
  rCtx->dsp->curr->glIndexi(c);
}

static void REGAL_CALL debug_glIndexiv(const GLint *c)
{
  RegalContext * rCtx = GET_REGAL_CONTEXT();
  DispatchStateScopedStepDown stepDown(rCtx->dsp);
  rCtx->dsp->curr->glIndexiv(c);
}

static void REGAL_CALL debug_glIndexs(GLshort c)
{
  RegalContext * rCtx = GET_REGAL_CONTEXT();
  DispatchStateScopedStepDown stepDown(rCtx->dsp);
  rCtx->dsp->curr->glIndexs(c);
}

static void REGAL_CALL debug_glIndexsv(const GLshort *c)
{
  RegalContext * rCtx = GET_REGAL_CONTEXT();
  DispatchStateScopedStepDown stepDown(rCtx->dsp);
  rCtx->dsp->curr->glIndexsv(c);
}

static void REGAL_CALL debug_glNormal3b(GLbyte nx, GLbyte ny, GLbyte nz)
{
  RegalContext * rCtx = GET_REGAL_CONTEXT();
  DispatchStateScopedStepDown stepDown(rCtx->dsp);
  rCtx->dsp->curr->glNormal3b(nx, ny, nz);
}

static void REGAL_CALL debug_glNormal3bv(const GLbyte *v)
{
  RegalContext * rCtx = GET_REGAL_CONTEXT();
  DispatchStateScopedStepDown stepDown(rCtx->dsp);
  rCtx->dsp->curr->glNormal3bv(v);
}

static void REGAL_CALL debug_glNormal3d(GLdouble nx, GLdouble ny, GLdouble nz)
{
  RegalContext * rCtx = GET_REGAL_CONTEXT();
  DispatchStateScopedStepDown stepDown(rCtx->dsp);
  rCtx->dsp->curr->glNormal3d(nx, ny, nz);
}

static void REGAL_CALL debug_glNormal3dv(const GLdouble *v)
{
  RegalContext * rCtx = GET_REGAL_CONTEXT();
  DispatchStateScopedStepDown stepDown(rCtx->dsp);
  rCtx->dsp->curr->glNormal3dv(v);
}

static void REGAL_CALL debug_glNormal3f(GLfloat nx, GLfloat ny, GLfloat nz)
{
  RegalContext * rCtx = GET_REGAL_CONTEXT();
  DispatchStateScopedStepDown stepDown(rCtx->dsp);
  rCtx->dsp->curr->glNormal3f(nx, ny, nz);
}

static void REGAL_CALL debug_glNormal3fv(const GLfloat *v)
{
  RegalContext * rCtx = GET_REGAL_CONTEXT();
  DispatchStateScopedStepDown stepDown(rCtx->dsp);
  rCtx->dsp->curr->glNormal3fv(v);
}

static void REGAL_CALL debug_glNormal3i(GLint nx, GLint ny, GLint nz)
{
  RegalContext * rCtx = GET_REGAL_CONTEXT();
  DispatchStateScopedStepDown stepDown(rCtx->dsp);
  rCtx->dsp->curr->glNormal3i(nx, ny, nz);
}

static void REGAL_CALL debug_glNormal3iv(const GLint *v)
{
  RegalContext * rCtx = GET_REGAL_CONTEXT();
  DispatchStateScopedStepDown stepDown(rCtx->dsp);
  rCtx->dsp->curr->glNormal3iv(v);
}

static void REGAL_CALL debug_glNormal3s(GLshort nx, GLshort ny, GLshort nz)
{
  RegalContext * rCtx = GET_REGAL_CONTEXT();
  DispatchStateScopedStepDown stepDown(rCtx->dsp);
  rCtx->dsp->curr->glNormal3s(nx, ny, nz);
}

static void REGAL_CALL debug_glNormal3sv(const GLshort *v)
{
  RegalContext * rCtx = GET_REGAL_CONTEXT();
  DispatchStateScopedStepDown stepDown(rCtx->dsp);
  rCtx->dsp->curr->glNormal3sv(v);
}

static void REGAL_CALL debug_glRasterPos2d(GLdouble x, GLdouble y)
{
  RegalContext * rCtx = GET_REGAL_CONTEXT();
  DispatchStateScopedStepDown stepDown(rCtx->dsp);
  rCtx->dsp->curr->glRasterPos2d(x, y);
}

static void REGAL_CALL debug_glRasterPos2dv(const GLdouble *v)
{
  RegalContext * rCtx = GET_REGAL_CONTEXT();
  DispatchStateScopedStepDown stepDown(rCtx->dsp);
  rCtx->dsp->curr->glRasterPos2dv(v);
}

static void REGAL_CALL debug_glRasterPos2f(GLfloat x, GLfloat y)
{
  RegalContext * rCtx = GET_REGAL_CONTEXT();
  DispatchStateScopedStepDown stepDown(rCtx->dsp);
  rCtx->dsp->curr->glRasterPos2f(x, y);
}

static void REGAL_CALL debug_glRasterPos2fv(const GLfloat *v)
{
  RegalContext * rCtx = GET_REGAL_CONTEXT();
  DispatchStateScopedStepDown stepDown(rCtx->dsp);
  rCtx->dsp->curr->glRasterPos2fv(v);
}

static void REGAL_CALL debug_glRasterPos2i(GLint x, GLint y)
{
  RegalContext * rCtx = GET_REGAL_CONTEXT();
  DispatchStateScopedStepDown stepDown(rCtx->dsp);
  rCtx->dsp->curr->glRasterPos2i(x, y);
}

static void REGAL_CALL debug_glRasterPos2iv(const GLint *v)
{
  RegalContext * rCtx = GET_REGAL_CONTEXT();
  DispatchStateScopedStepDown stepDown(rCtx->dsp);
  rCtx->dsp->curr->glRasterPos2iv(v);
}

static void REGAL_CALL debug_glRasterPos2s(GLshort x, GLshort y)
{
  RegalContext * rCtx = GET_REGAL_CONTEXT();
  DispatchStateScopedStepDown stepDown(rCtx->dsp);
  rCtx->dsp->curr->glRasterPos2s(x, y);
}

static void REGAL_CALL debug_glRasterPos2sv(const GLshort *v)
{
  RegalContext * rCtx = GET_REGAL_CONTEXT();
  DispatchStateScopedStepDown stepDown(rCtx->dsp);
  rCtx->dsp->curr->glRasterPos2sv(v);
}

static void REGAL_CALL debug_glRasterPos3d(GLdouble x, GLdouble y, GLdouble z)
{
  RegalContext * rCtx = GET_REGAL_CONTEXT();
  DispatchStateScopedStepDown stepDown(rCtx->dsp);
  rCtx->dsp->curr->glRasterPos3d(x, y, z);
}

static void REGAL_CALL debug_glRasterPos3dv(const GLdouble *v)
{
  RegalContext * rCtx = GET_REGAL_CONTEXT();
  DispatchStateScopedStepDown stepDown(rCtx->dsp);
  rCtx->dsp->curr->glRasterPos3dv(v);
}

static void REGAL_CALL debug_glRasterPos3f(GLfloat x, GLfloat y, GLfloat z)
{
  RegalContext * rCtx = GET_REGAL_CONTEXT();
  DispatchStateScopedStepDown stepDown(rCtx->dsp);
  rCtx->dsp->curr->glRasterPos3f(x, y, z);
}

static void REGAL_CALL debug_glRasterPos3fv(const GLfloat *v)
{
  RegalContext * rCtx = GET_REGAL_CONTEXT();
  DispatchStateScopedStepDown stepDown(rCtx->dsp);
  rCtx->dsp->curr->glRasterPos3fv(v);
}

static void REGAL_CALL debug_glRasterPos3i(GLint x, GLint y, GLint z)
{
  RegalContext * rCtx = GET_REGAL_CONTEXT();
  DispatchStateScopedStepDown stepDown(rCtx->dsp);
  rCtx->dsp->curr->glRasterPos3i(x, y, z);
}

static void REGAL_CALL debug_glRasterPos3iv(const GLint *v)
{
  RegalContext * rCtx = GET_REGAL_CONTEXT();
  DispatchStateScopedStepDown stepDown(rCtx->dsp);
  rCtx->dsp->curr->glRasterPos3iv(v);
}

static void REGAL_CALL debug_glRasterPos3s(GLshort x, GLshort y, GLshort z)
{
  RegalContext * rCtx = GET_REGAL_CONTEXT();
  DispatchStateScopedStepDown stepDown(rCtx->dsp);
  rCtx->dsp->curr->glRasterPos3s(x, y, z);
}

static void REGAL_CALL debug_glRasterPos3sv(const GLshort *v)
{
  RegalContext * rCtx = GET_REGAL_CONTEXT();
  DispatchStateScopedStepDown stepDown(rCtx->dsp);
  rCtx->dsp->curr->glRasterPos3sv(v);
}

static void REGAL_CALL debug_glRasterPos4d(GLdouble x, GLdouble y, GLdouble z, GLdouble w)
{
  RegalContext * rCtx = GET_REGAL_CONTEXT();
  DispatchStateScopedStepDown stepDown(rCtx->dsp);
  rCtx->dsp->curr->glRasterPos4d(x, y, z, w);
}

static void REGAL_CALL debug_glRasterPos4dv(const GLdouble *v)
{
  RegalContext * rCtx = GET_REGAL_CONTEXT();
  DispatchStateScopedStepDown stepDown(rCtx->dsp);
  rCtx->dsp->curr->glRasterPos4dv(v);
}

static void REGAL_CALL debug_glRasterPos4f(GLfloat x, GLfloat y, GLfloat z, GLfloat w)
{
  RegalContext * rCtx = GET_REGAL_CONTEXT();
  DispatchStateScopedStepDown stepDown(rCtx->dsp);
  rCtx->dsp->curr->glRasterPos4f(x, y, z, w);
}

static void REGAL_CALL debug_glRasterPos4fv(const GLfloat *v)
{
  RegalContext * rCtx = GET_REGAL_CONTEXT();
  DispatchStateScopedStepDown stepDown(rCtx->dsp);
  rCtx->dsp->curr->glRasterPos4fv(v);
}

static void REGAL_CALL debug_glRasterPos4i(GLint x, GLint y, GLint z, GLint w)
{
  RegalContext * rCtx = GET_REGAL_CONTEXT();
  DispatchStateScopedStepDown stepDown(rCtx->dsp);
  rCtx->dsp->curr->glRasterPos4i(x, y, z, w);
}

static void REGAL_CALL debug_glRasterPos4iv(const GLint *v)
{
  RegalContext * rCtx = GET_REGAL_CONTEXT();
  DispatchStateScopedStepDown stepDown(rCtx->dsp);
  rCtx->dsp->curr->glRasterPos4iv(v);
}

static void REGAL_CALL debug_glRasterPos4s(GLshort x, GLshort y, GLshort z, GLshort w)
{
  RegalContext * rCtx = GET_REGAL_CONTEXT();
  DispatchStateScopedStepDown stepDown(rCtx->dsp);
  rCtx->dsp->curr->glRasterPos4s(x, y, z, w);
}

static void REGAL_CALL debug_glRasterPos4sv(const GLshort *v)
{
  RegalContext * rCtx = GET_REGAL_CONTEXT();
  DispatchStateScopedStepDown stepDown(rCtx->dsp);
  rCtx->dsp->curr->glRasterPos4sv(v);
}

static void REGAL_CALL debug_glRectd(GLdouble x1, GLdouble y1, GLdouble x2, GLdouble y2)
{
  RegalContext * rCtx = GET_REGAL_CONTEXT();
  DispatchStateScopedStepDown stepDown(rCtx->dsp);
  rCtx->dsp->curr->glRectd(x1, y1, x2, y2);
}

static void REGAL_CALL debug_glRectdv(const GLdouble *v1, const GLdouble *v2)
{
  RegalContext * rCtx = GET_REGAL_CONTEXT();
  DispatchStateScopedStepDown stepDown(rCtx->dsp);
  rCtx->dsp->curr->glRectdv(v1, v2);
}

static void REGAL_CALL debug_glRectf(GLfloat x1, GLfloat y1, GLfloat x2, GLfloat y2)
{
  RegalContext * rCtx = GET_REGAL_CONTEXT();
  DispatchStateScopedStepDown stepDown(rCtx->dsp);
  rCtx->dsp->curr->glRectf(x1, y1, x2, y2);
}

static void REGAL_CALL debug_glRectfv(const GLfloat *v1, const GLfloat *v2)
{
  RegalContext * rCtx = GET_REGAL_CONTEXT();
  DispatchStateScopedStepDown stepDown(rCtx->dsp);
  rCtx->dsp->curr->glRectfv(v1, v2);
}

static void REGAL_CALL debug_glRecti(GLint x1, GLint y1, GLint x2, GLint y2)
{
  RegalContext * rCtx = GET_REGAL_CONTEXT();
  DispatchStateScopedStepDown stepDown(rCtx->dsp);
  rCtx->dsp->curr->glRecti(x1, y1, x2, y2);
}

static void REGAL_CALL debug_glRectiv(const GLint *v1, const GLint *v2)
{
  RegalContext * rCtx = GET_REGAL_CONTEXT();
  DispatchStateScopedStepDown stepDown(rCtx->dsp);
  rCtx->dsp->curr->glRectiv(v1, v2);
}

static void REGAL_CALL debug_glRects(GLshort x1, GLshort y1, GLshort x2, GLshort y2)
{
  RegalContext * rCtx = GET_REGAL_CONTEXT();
  DispatchStateScopedStepDown stepDown(rCtx->dsp);
  rCtx->dsp->curr->glRects(x1, y1, x2, y2);
}

static void REGAL_CALL debug_glRectsv(const GLshort *v1, const GLshort *v2)
{
  RegalContext * rCtx = GET_REGAL_CONTEXT();
  DispatchStateScopedStepDown stepDown(rCtx->dsp);
  rCtx->dsp->curr->glRectsv(v1, v2);
}

static void REGAL_CALL debug_glTexCoord1d(GLdouble s)
{
  RegalContext * rCtx = GET_REGAL_CONTEXT();
  DispatchStateScopedStepDown stepDown(rCtx->dsp);
  rCtx->dsp->curr->glTexCoord1d(s);
}

static void REGAL_CALL debug_glTexCoord1dv(const GLdouble *v)
{
  RegalContext * rCtx = GET_REGAL_CONTEXT();
  DispatchStateScopedStepDown stepDown(rCtx->dsp);
  rCtx->dsp->curr->glTexCoord1dv(v);
}

static void REGAL_CALL debug_glTexCoord1f(GLfloat s)
{
  RegalContext * rCtx = GET_REGAL_CONTEXT();
  DispatchStateScopedStepDown stepDown(rCtx->dsp);
  rCtx->dsp->curr->glTexCoord1f(s);
}

static void REGAL_CALL debug_glTexCoord1fv(const GLfloat *v)
{
  RegalContext * rCtx = GET_REGAL_CONTEXT();
  DispatchStateScopedStepDown stepDown(rCtx->dsp);
  rCtx->dsp->curr->glTexCoord1fv(v);
}

static void REGAL_CALL debug_glTexCoord1i(GLint s)
{
  RegalContext * rCtx = GET_REGAL_CONTEXT();
  DispatchStateScopedStepDown stepDown(rCtx->dsp);
  rCtx->dsp->curr->glTexCoord1i(s);
}

static void REGAL_CALL debug_glTexCoord1iv(const GLint *v)
{
  RegalContext * rCtx = GET_REGAL_CONTEXT();
  DispatchStateScopedStepDown stepDown(rCtx->dsp);
  rCtx->dsp->curr->glTexCoord1iv(v);
}

static void REGAL_CALL debug_glTexCoord1s(GLshort s)
{
  RegalContext * rCtx = GET_REGAL_CONTEXT();
  DispatchStateScopedStepDown stepDown(rCtx->dsp);
  rCtx->dsp->curr->glTexCoord1s(s);
}

static void REGAL_CALL debug_glTexCoord1sv(const GLshort *v)
{
  RegalContext * rCtx = GET_REGAL_CONTEXT();
  DispatchStateScopedStepDown stepDown(rCtx->dsp);
  rCtx->dsp->curr->glTexCoord1sv(v);
}

static void REGAL_CALL debug_glTexCoord2d(GLdouble s, GLdouble t)
{
  RegalContext * rCtx = GET_REGAL_CONTEXT();
  DispatchStateScopedStepDown stepDown(rCtx->dsp);
  rCtx->dsp->curr->glTexCoord2d(s, t);
}

static void REGAL_CALL debug_glTexCoord2dv(const GLdouble *v)
{
  RegalContext * rCtx = GET_REGAL_CONTEXT();
  DispatchStateScopedStepDown stepDown(rCtx->dsp);
  rCtx->dsp->curr->glTexCoord2dv(v);
}

static void REGAL_CALL debug_glTexCoord2f(GLfloat s, GLfloat t)
{
  RegalContext * rCtx = GET_REGAL_CONTEXT();
  DispatchStateScopedStepDown stepDown(rCtx->dsp);
  rCtx->dsp->curr->glTexCoord2f(s, t);
}

static void REGAL_CALL debug_glTexCoord2fv(const GLfloat *v)
{
  RegalContext * rCtx = GET_REGAL_CONTEXT();
  DispatchStateScopedStepDown stepDown(rCtx->dsp);
  rCtx->dsp->curr->glTexCoord2fv(v);
}

static void REGAL_CALL debug_glTexCoord2i(GLint s, GLint t)
{
  RegalContext * rCtx = GET_REGAL_CONTEXT();
  DispatchStateScopedStepDown stepDown(rCtx->dsp);
  rCtx->dsp->curr->glTexCoord2i(s, t);
}

static void REGAL_CALL debug_glTexCoord2iv(const GLint *v)
{
  RegalContext * rCtx = GET_REGAL_CONTEXT();
  DispatchStateScopedStepDown stepDown(rCtx->dsp);
  rCtx->dsp->curr->glTexCoord2iv(v);
}

static void REGAL_CALL debug_glTexCoord2s(GLshort s, GLshort t)
{
  RegalContext * rCtx = GET_REGAL_CONTEXT();
  DispatchStateScopedStepDown stepDown(rCtx->dsp);
  rCtx->dsp->curr->glTexCoord2s(s, t);
}

static void REGAL_CALL debug_glTexCoord2sv(const GLshort *v)
{
  RegalContext * rCtx = GET_REGAL_CONTEXT();
  DispatchStateScopedStepDown stepDown(rCtx->dsp);
  rCtx->dsp->curr->glTexCoord2sv(v);
}

static void REGAL_CALL debug_glTexCoord3d(GLdouble s, GLdouble t, GLdouble r)
{
  RegalContext * rCtx = GET_REGAL_CONTEXT();
  DispatchStateScopedStepDown stepDown(rCtx->dsp);
  rCtx->dsp->curr->glTexCoord3d(s, t, r);
}

static void REGAL_CALL debug_glTexCoord3dv(const GLdouble *v)
{
  RegalContext * rCtx = GET_REGAL_CONTEXT();
  DispatchStateScopedStepDown stepDown(rCtx->dsp);
  rCtx->dsp->curr->glTexCoord3dv(v);
}

static void REGAL_CALL debug_glTexCoord3f(GLfloat s, GLfloat t, GLfloat r)
{
  RegalContext * rCtx = GET_REGAL_CONTEXT();
  DispatchStateScopedStepDown stepDown(rCtx->dsp);
  rCtx->dsp->curr->glTexCoord3f(s, t, r);
}

static void REGAL_CALL debug_glTexCoord3fv(const GLfloat *v)
{
  RegalContext * rCtx = GET_REGAL_CONTEXT();
  DispatchStateScopedStepDown stepDown(rCtx->dsp);
  rCtx->dsp->curr->glTexCoord3fv(v);
}

static void REGAL_CALL debug_glTexCoord3i(GLint s, GLint t, GLint r)
{
  RegalContext * rCtx = GET_REGAL_CONTEXT();
  DispatchStateScopedStepDown stepDown(rCtx->dsp);
  rCtx->dsp->curr->glTexCoord3i(s, t, r);
}

static void REGAL_CALL debug_glTexCoord3iv(const GLint *v)
{
  RegalContext * rCtx = GET_REGAL_CONTEXT();
  DispatchStateScopedStepDown stepDown(rCtx->dsp);
  rCtx->dsp->curr->glTexCoord3iv(v);
}

static void REGAL_CALL debug_glTexCoord3s(GLshort s, GLshort t, GLshort r)
{
  RegalContext * rCtx = GET_REGAL_CONTEXT();
  DispatchStateScopedStepDown stepDown(rCtx->dsp);
  rCtx->dsp->curr->glTexCoord3s(s, t, r);
}

static void REGAL_CALL debug_glTexCoord3sv(const GLshort *v)
{
  RegalContext * rCtx = GET_REGAL_CONTEXT();
  DispatchStateScopedStepDown stepDown(rCtx->dsp);
  rCtx->dsp->curr->glTexCoord3sv(v);
}

static void REGAL_CALL debug_glTexCoord4d(GLdouble s, GLdouble t, GLdouble r, GLdouble q)
{
  RegalContext * rCtx = GET_REGAL_CONTEXT();
  DispatchStateScopedStepDown stepDown(rCtx->dsp);
  rCtx->dsp->curr->glTexCoord4d(s, t, r, q);
}

static void REGAL_CALL debug_glTexCoord4dv(const GLdouble *v)
{
  RegalContext * rCtx = GET_REGAL_CONTEXT();
  DispatchStateScopedStepDown stepDown(rCtx->dsp);
  rCtx->dsp->curr->glTexCoord4dv(v);
}

static void REGAL_CALL debug_glTexCoord4f(GLfloat s, GLfloat t, GLfloat r, GLfloat q)
{
  RegalContext * rCtx = GET_REGAL_CONTEXT();
  DispatchStateScopedStepDown stepDown(rCtx->dsp);
  rCtx->dsp->curr->glTexCoord4f(s, t, r, q);
}

static void REGAL_CALL debug_glTexCoord4fv(const GLfloat *v)
{
  RegalContext * rCtx = GET_REGAL_CONTEXT();
  DispatchStateScopedStepDown stepDown(rCtx->dsp);
  rCtx->dsp->curr->glTexCoord4fv(v);
}

static void REGAL_CALL debug_glTexCoord4i(GLint s, GLint t, GLint r, GLint q)
{
  RegalContext * rCtx = GET_REGAL_CONTEXT();
  DispatchStateScopedStepDown stepDown(rCtx->dsp);
  rCtx->dsp->curr->glTexCoord4i(s, t, r, q);
}

static void REGAL_CALL debug_glTexCoord4iv(const GLint *v)
{
  RegalContext * rCtx = GET_REGAL_CONTEXT();
  DispatchStateScopedStepDown stepDown(rCtx->dsp);
  rCtx->dsp->curr->glTexCoord4iv(v);
}

static void REGAL_CALL debug_glTexCoord4s(GLshort s, GLshort t, GLshort r, GLshort q)
{
  RegalContext * rCtx = GET_REGAL_CONTEXT();
  DispatchStateScopedStepDown stepDown(rCtx->dsp);
  rCtx->dsp->curr->glTexCoord4s(s, t, r, q);
}

static void REGAL_CALL debug_glTexCoord4sv(const GLshort *v)
{
  RegalContext * rCtx = GET_REGAL_CONTEXT();
  DispatchStateScopedStepDown stepDown(rCtx->dsp);
  rCtx->dsp->curr->glTexCoord4sv(v);
}

static void REGAL_CALL debug_glVertex2d(GLdouble x, GLdouble y)
{
  RegalContext * rCtx = GET_REGAL_CONTEXT();
  DispatchStateScopedStepDown stepDown(rCtx->dsp);
  rCtx->dsp->curr->glVertex2d(x, y);
}

static void REGAL_CALL debug_glVertex2dv(const GLdouble *v)
{
  RegalContext * rCtx = GET_REGAL_CONTEXT();
  DispatchStateScopedStepDown stepDown(rCtx->dsp);
  rCtx->dsp->curr->glVertex2dv(v);
}

static void REGAL_CALL debug_glVertex2f(GLfloat x, GLfloat y)
{
  RegalContext * rCtx = GET_REGAL_CONTEXT();
  DispatchStateScopedStepDown stepDown(rCtx->dsp);
  rCtx->dsp->curr->glVertex2f(x, y);
}

static void REGAL_CALL debug_glVertex2fv(const GLfloat *v)
{
  RegalContext * rCtx = GET_REGAL_CONTEXT();
  DispatchStateScopedStepDown stepDown(rCtx->dsp);
  rCtx->dsp->curr->glVertex2fv(v);
}

static void REGAL_CALL debug_glVertex2i(GLint x, GLint y)
{
  RegalContext * rCtx = GET_REGAL_CONTEXT();
  DispatchStateScopedStepDown stepDown(rCtx->dsp);
  rCtx->dsp->curr->glVertex2i(x, y);
}

static void REGAL_CALL debug_glVertex2iv(const GLint *v)
{
  RegalContext * rCtx = GET_REGAL_CONTEXT();
  DispatchStateScopedStepDown stepDown(rCtx->dsp);
  rCtx->dsp->curr->glVertex2iv(v);
}

static void REGAL_CALL debug_glVertex2s(GLshort x, GLshort y)
{
  RegalContext * rCtx = GET_REGAL_CONTEXT();
  DispatchStateScopedStepDown stepDown(rCtx->dsp);
  rCtx->dsp->curr->glVertex2s(x, y);
}

static void REGAL_CALL debug_glVertex2sv(const GLshort *v)
{
  RegalContext * rCtx = GET_REGAL_CONTEXT();
  DispatchStateScopedStepDown stepDown(rCtx->dsp);
  rCtx->dsp->curr->glVertex2sv(v);
}

static void REGAL_CALL debug_glVertex3d(GLdouble x, GLdouble y, GLdouble z)
{
  RegalContext * rCtx = GET_REGAL_CONTEXT();
  DispatchStateScopedStepDown stepDown(rCtx->dsp);
  rCtx->dsp->curr->glVertex3d(x, y, z);
}

static void REGAL_CALL debug_glVertex3dv(const GLdouble *v)
{
  RegalContext * rCtx = GET_REGAL_CONTEXT();
  DispatchStateScopedStepDown stepDown(rCtx->dsp);
  rCtx->dsp->curr->glVertex3dv(v);
}

static void REGAL_CALL debug_glVertex3f(GLfloat x, GLfloat y, GLfloat z)
{
  RegalContext * rCtx = GET_REGAL_CONTEXT();
  DispatchStateScopedStepDown stepDown(rCtx->dsp);
  rCtx->dsp->curr->glVertex3f(x, y, z);
}

static void REGAL_CALL debug_glVertex3fv(const GLfloat *v)
{
  RegalContext * rCtx = GET_REGAL_CONTEXT();
  DispatchStateScopedStepDown stepDown(rCtx->dsp);
  rCtx->dsp->curr->glVertex3fv(v);
}

static void REGAL_CALL debug_glVertex3i(GLint x, GLint y, GLint z)
{
  RegalContext * rCtx = GET_REGAL_CONTEXT();
  DispatchStateScopedStepDown stepDown(rCtx->dsp);
  rCtx->dsp->curr->glVertex3i(x, y, z);
}

static void REGAL_CALL debug_glVertex3iv(const GLint *v)
{
  RegalContext * rCtx = GET_REGAL_CONTEXT();
  DispatchStateScopedStepDown stepDown(rCtx->dsp);
  rCtx->dsp->curr->glVertex3iv(v);
}

static void REGAL_CALL debug_glVertex3s(GLshort x, GLshort y, GLshort z)
{
  RegalContext * rCtx = GET_REGAL_CONTEXT();
  DispatchStateScopedStepDown stepDown(rCtx->dsp);
  rCtx->dsp->curr->glVertex3s(x, y, z);
}

static void REGAL_CALL debug_glVertex3sv(const GLshort *v)
{
  RegalContext * rCtx = GET_REGAL_CONTEXT();
  DispatchStateScopedStepDown stepDown(rCtx->dsp);
  rCtx->dsp->curr->glVertex3sv(v);
}

static void REGAL_CALL debug_glVertex4d(GLdouble x, GLdouble y, GLdouble z, GLdouble w)
{
  RegalContext * rCtx = GET_REGAL_CONTEXT();
  DispatchStateScopedStepDown stepDown(rCtx->dsp);
  rCtx->dsp->curr->glVertex4d(x, y, z, w);
}

static void REGAL_CALL debug_glVertex4dv(const GLdouble *v)
{
  RegalContext * rCtx = GET_REGAL_CONTEXT();
  DispatchStateScopedStepDown stepDown(rCtx->dsp);
  rCtx->dsp->curr->glVertex4dv(v);
}

static void REGAL_CALL debug_glVertex4f(GLfloat x, GLfloat y, GLfloat z, GLfloat w)
{
  RegalContext * rCtx = GET_REGAL_CONTEXT();
  DispatchStateScopedStepDown stepDown(rCtx->dsp);
  rCtx->dsp->curr->glVertex4f(x, y, z, w);
}

static void REGAL_CALL debug_glVertex4fv(const GLfloat *v)
{
  RegalContext * rCtx = GET_REGAL_CONTEXT();
  DispatchStateScopedStepDown stepDown(rCtx->dsp);
  rCtx->dsp->curr->glVertex4fv(v);
}

static void REGAL_CALL debug_glVertex4i(GLint x, GLint y, GLint z, GLint w)
{
  RegalContext * rCtx = GET_REGAL_CONTEXT();
  DispatchStateScopedStepDown stepDown(rCtx->dsp);
  rCtx->dsp->curr->glVertex4i(x, y, z, w);
}

static void REGAL_CALL debug_glVertex4iv(const GLint *v)
{
  RegalContext * rCtx = GET_REGAL_CONTEXT();
  DispatchStateScopedStepDown stepDown(rCtx->dsp);
  rCtx->dsp->curr->glVertex4iv(v);
}

static void REGAL_CALL debug_glVertex4s(GLshort x, GLshort y, GLshort z, GLshort w)
{
  RegalContext * rCtx = GET_REGAL_CONTEXT();
  DispatchStateScopedStepDown stepDown(rCtx->dsp);
  rCtx->dsp->curr->glVertex4s(x, y, z, w);
}

static void REGAL_CALL debug_glVertex4sv(const GLshort *v)
{
  RegalContext * rCtx = GET_REGAL_CONTEXT();
  DispatchStateScopedStepDown stepDown(rCtx->dsp);
  rCtx->dsp->curr->glVertex4sv(v);
}

static void REGAL_CALL debug_glClipPlane(GLenum plane, const GLdouble *equation)
{
  RegalContext * rCtx = GET_REGAL_CONTEXT();
  DispatchStateScopedStepDown stepDown(rCtx->dsp);
  rCtx->dsp->curr->glClipPlane(plane, equation);
}

static void REGAL_CALL debug_glColorMaterial(GLenum face, GLenum mode)
{
  RegalContext * rCtx = GET_REGAL_CONTEXT();
  DispatchStateScopedStepDown stepDown(rCtx->dsp);
  rCtx->dsp->curr->glColorMaterial(face, mode);
}

static void REGAL_CALL debug_glCullFace(GLenum mode)
{
  RegalContext * rCtx = GET_REGAL_CONTEXT();
  DispatchStateScopedStepDown stepDown(rCtx->dsp);
  rCtx->dsp->curr->glCullFace(mode);
}

static void REGAL_CALL debug_glFogf(GLenum pname, GLfloat param)
{
  RegalContext * rCtx = GET_REGAL_CONTEXT();
  DispatchStateScopedStepDown stepDown(rCtx->dsp);
  rCtx->dsp->curr->glFogf(pname, param);
}

static void REGAL_CALL debug_glFogfv(GLenum pname, const GLfloat *params)
{
  RegalContext * rCtx = GET_REGAL_CONTEXT();
  DispatchStateScopedStepDown stepDown(rCtx->dsp);
  rCtx->dsp->curr->glFogfv(pname, params);
}

static void REGAL_CALL debug_glFogi(GLenum pname, GLint param)
{
  RegalContext * rCtx = GET_REGAL_CONTEXT();
  DispatchStateScopedStepDown stepDown(rCtx->dsp);
  rCtx->dsp->curr->glFogi(pname, param);
}

static void REGAL_CALL debug_glFogiv(GLenum pname, const GLint *params)
{
  RegalContext * rCtx = GET_REGAL_CONTEXT();
  DispatchStateScopedStepDown stepDown(rCtx->dsp);
  rCtx->dsp->curr->glFogiv(pname, params);
}

static void REGAL_CALL debug_glFrontFace(GLenum mode)
{
  RegalContext * rCtx = GET_REGAL_CONTEXT();
  DispatchStateScopedStepDown stepDown(rCtx->dsp);
  rCtx->dsp->curr->glFrontFace(mode);
}

static void REGAL_CALL debug_glHint(GLenum target, GLenum mode)
{
  RegalContext * rCtx = GET_REGAL_CONTEXT();
  DispatchStateScopedStepDown stepDown(rCtx->dsp);
  rCtx->dsp->curr->glHint(target, mode);
}

static void REGAL_CALL debug_glLightf(GLenum light, GLenum pname, GLfloat param)
{
  RegalContext * rCtx = GET_REGAL_CONTEXT();
  DispatchStateScopedStepDown stepDown(rCtx->dsp);
  rCtx->dsp->curr->glLightf(light, pname, param);
}

static void REGAL_CALL debug_glLightfv(GLenum light, GLenum pname, const GLfloat *params)
{
  RegalContext * rCtx = GET_REGAL_CONTEXT();
  DispatchStateScopedStepDown stepDown(rCtx->dsp);
  rCtx->dsp->curr->glLightfv(light, pname, params);
}

static void REGAL_CALL debug_glLighti(GLenum light, GLenum pname, GLint param)
{
  RegalContext * rCtx = GET_REGAL_CONTEXT();
  DispatchStateScopedStepDown stepDown(rCtx->dsp);
  rCtx->dsp->curr->glLighti(light, pname, param);
}

static void REGAL_CALL debug_glLightiv(GLenum light, GLenum pname, const GLint *params)
{
  RegalContext * rCtx = GET_REGAL_CONTEXT();
  DispatchStateScopedStepDown stepDown(rCtx->dsp);
  rCtx->dsp->curr->glLightiv(light, pname, params);
}

static void REGAL_CALL debug_glLightModelf(GLenum pname, GLfloat param)
{
  RegalContext * rCtx = GET_REGAL_CONTEXT();
  DispatchStateScopedStepDown stepDown(rCtx->dsp);
  rCtx->dsp->curr->glLightModelf(pname, param);
}

static void REGAL_CALL debug_glLightModelfv(GLenum pname, const GLfloat *params)
{
  RegalContext * rCtx = GET_REGAL_CONTEXT();
  DispatchStateScopedStepDown stepDown(rCtx->dsp);
  rCtx->dsp->curr->glLightModelfv(pname, params);
}

static void REGAL_CALL debug_glLightModeli(GLenum pname, GLint param)
{
  RegalContext * rCtx = GET_REGAL_CONTEXT();
  DispatchStateScopedStepDown stepDown(rCtx->dsp);
  rCtx->dsp->curr->glLightModeli(pname, param);
}

static void REGAL_CALL debug_glLightModeliv(GLenum pname, const GLint *params)
{
  RegalContext * rCtx = GET_REGAL_CONTEXT();
  DispatchStateScopedStepDown stepDown(rCtx->dsp);
  rCtx->dsp->curr->glLightModeliv(pname, params);
}

static void REGAL_CALL debug_glLineStipple(GLint factor, GLushort pattern)
{
  RegalContext * rCtx = GET_REGAL_CONTEXT();
  DispatchStateScopedStepDown stepDown(rCtx->dsp);
  rCtx->dsp->curr->glLineStipple(factor, pattern);
}

static void REGAL_CALL debug_glLineWidth(GLfloat width)
{
  RegalContext * rCtx = GET_REGAL_CONTEXT();
  DispatchStateScopedStepDown stepDown(rCtx->dsp);
  rCtx->dsp->curr->glLineWidth(width);
}

static void REGAL_CALL debug_glMaterialf(GLenum face, GLenum pname, GLfloat param)
{
  RegalContext * rCtx = GET_REGAL_CONTEXT();
  DispatchStateScopedStepDown stepDown(rCtx->dsp);
  rCtx->dsp->curr->glMaterialf(face, pname, param);
}

static void REGAL_CALL debug_glMaterialfv(GLenum face, GLenum pname, const GLfloat *params)
{
  RegalContext * rCtx = GET_REGAL_CONTEXT();
  DispatchStateScopedStepDown stepDown(rCtx->dsp);
  rCtx->dsp->curr->glMaterialfv(face, pname, params);
}

static void REGAL_CALL debug_glMateriali(GLenum face, GLenum pname, GLint param)
{
  RegalContext * rCtx = GET_REGAL_CONTEXT();
  DispatchStateScopedStepDown stepDown(rCtx->dsp);
  rCtx->dsp->curr->glMateriali(face, pname, param);
}

static void REGAL_CALL debug_glMaterialiv(GLenum face, GLenum pname, const GLint *params)
{
  RegalContext * rCtx = GET_REGAL_CONTEXT();
  DispatchStateScopedStepDown stepDown(rCtx->dsp);
  rCtx->dsp->curr->glMaterialiv(face, pname, params);
}

static void REGAL_CALL debug_glPointSize(GLfloat size)
{
  RegalContext * rCtx = GET_REGAL_CONTEXT();
  DispatchStateScopedStepDown stepDown(rCtx->dsp);
  rCtx->dsp->curr->glPointSize(size);
}

static void REGAL_CALL debug_glPolygonMode(GLenum face, GLenum mode)
{
  RegalContext * rCtx = GET_REGAL_CONTEXT();
  DispatchStateScopedStepDown stepDown(rCtx->dsp);
  rCtx->dsp->curr->glPolygonMode(face, mode);
}

static void REGAL_CALL debug_glPolygonStipple(const GLubyte *mask)
{
  RegalContext * rCtx = GET_REGAL_CONTEXT();
  DispatchStateScopedStepDown stepDown(rCtx->dsp);
  rCtx->dsp->curr->glPolygonStipple(mask);
}

static void REGAL_CALL debug_glScissor(GLint x, GLint y, GLsizei width, GLsizei height)
{
  RegalContext * rCtx = GET_REGAL_CONTEXT();
  DispatchStateScopedStepDown stepDown(rCtx->dsp);
  rCtx->dsp->curr->glScissor(x, y, width, height);
}

static void REGAL_CALL debug_glShadeModel(GLenum mode)
{
  RegalContext * rCtx = GET_REGAL_CONTEXT();
  DispatchStateScopedStepDown stepDown(rCtx->dsp);
  rCtx->dsp->curr->glShadeModel(mode);
}

static void REGAL_CALL debug_glTexParameterf(GLenum target, GLenum pname, GLfloat param)
{
  RegalContext * rCtx = GET_REGAL_CONTEXT();
  DispatchStateScopedStepDown stepDown(rCtx->dsp);
  rCtx->dsp->curr->glTexParameterf(target, pname, param);
}

static void REGAL_CALL debug_glTexParameterfv(GLenum target, GLenum pname, const GLfloat *params)
{
  RegalContext * rCtx = GET_REGAL_CONTEXT();
  DispatchStateScopedStepDown stepDown(rCtx->dsp);
  rCtx->dsp->curr->glTexParameterfv(target, pname, params);
}

static void REGAL_CALL debug_glTexParameteri(GLenum target, GLenum pname, GLint param)
{
  RegalContext * rCtx = GET_REGAL_CONTEXT();
  DispatchStateScopedStepDown stepDown(rCtx->dsp);
  rCtx->dsp->curr->glTexParameteri(target, pname, param);
}

static void REGAL_CALL debug_glTexParameteriv(GLenum target, GLenum pname, const GLint *params)
{
  RegalContext * rCtx = GET_REGAL_CONTEXT();
  DispatchStateScopedStepDown stepDown(rCtx->dsp);
  rCtx->dsp->curr->glTexParameteriv(target, pname, params);
}

static void REGAL_CALL debug_glTexImage1D(GLenum target, GLint level, GLint internalformat, GLsizei width, GLint border, GLenum format, GLenum type, const GLvoid *pixels)
{
  RegalContext * rCtx = GET_REGAL_CONTEXT();
  DispatchStateScopedStepDown stepDown(rCtx->dsp);
  rCtx->dsp->curr->glTexImage1D(target, level, internalformat, width, border, format, type, pixels);
}

static void REGAL_CALL debug_glTexImage2D(GLenum target, GLint level, GLint internalformat, GLsizei width, GLsizei height, GLint border, GLenum format, GLenum type, const GLvoid *pixels)
{
  RegalContext * rCtx = GET_REGAL_CONTEXT();
  DispatchStateScopedStepDown stepDown(rCtx->dsp);
  rCtx->dsp->curr->glTexImage2D(target, level, internalformat, width, height, border, format, type, pixels);
}

static void REGAL_CALL debug_glTexEnvf(GLenum target, GLenum pname, GLfloat param)
{
  RegalContext * rCtx = GET_REGAL_CONTEXT();
  DispatchStateScopedStepDown stepDown(rCtx->dsp);
  rCtx->dsp->curr->glTexEnvf(target, pname, param);
}

static void REGAL_CALL debug_glTexEnvfv(GLenum target, GLenum pname, const GLfloat *params)
{
  RegalContext * rCtx = GET_REGAL_CONTEXT();
  DispatchStateScopedStepDown stepDown(rCtx->dsp);
  rCtx->dsp->curr->glTexEnvfv(target, pname, params);
}

static void REGAL_CALL debug_glTexEnvi(GLenum target, GLenum pname, GLint param)
{
  RegalContext * rCtx = GET_REGAL_CONTEXT();
  DispatchStateScopedStepDown stepDown(rCtx->dsp);
  rCtx->dsp->curr->glTexEnvi(target, pname, param);
}

static void REGAL_CALL debug_glTexEnviv(GLenum target, GLenum pname, const GLint *params)
{
  RegalContext * rCtx = GET_REGAL_CONTEXT();
  DispatchStateScopedStepDown stepDown(rCtx->dsp);
  rCtx->dsp->curr->glTexEnviv(target, pname, params);
}

static void REGAL_CALL debug_glTexGend(GLenum coord, GLenum pname, GLdouble param)
{
  RegalContext * rCtx = GET_REGAL_CONTEXT();
  DispatchStateScopedStepDown stepDown(rCtx->dsp);
  rCtx->dsp->curr->glTexGend(coord, pname, param);
}

static void REGAL_CALL debug_glTexGendv(GLenum coord, GLenum pname, const GLdouble *params)
{
  RegalContext * rCtx = GET_REGAL_CONTEXT();
  DispatchStateScopedStepDown stepDown(rCtx->dsp);
  rCtx->dsp->curr->glTexGendv(coord, pname, params);
}

static void REGAL_CALL debug_glTexGenf(GLenum coord, GLenum pname, GLfloat param)
{
  RegalContext * rCtx = GET_REGAL_CONTEXT();
  DispatchStateScopedStepDown stepDown(rCtx->dsp);
  rCtx->dsp->curr->glTexGenf(coord, pname, param);
}

static void REGAL_CALL debug_glTexGenfv(GLenum coord, GLenum pname, const GLfloat *params)
{
  RegalContext * rCtx = GET_REGAL_CONTEXT();
  DispatchStateScopedStepDown stepDown(rCtx->dsp);
  rCtx->dsp->curr->glTexGenfv(coord, pname, params);
}

static void REGAL_CALL debug_glTexGeni(GLenum coord, GLenum pname, GLint param)
{
  RegalContext * rCtx = GET_REGAL_CONTEXT();
  DispatchStateScopedStepDown stepDown(rCtx->dsp);
  rCtx->dsp->curr->glTexGeni(coord, pname, param);
}

static void REGAL_CALL debug_glTexGeniv(GLenum coord, GLenum pname, const GLint *params)
{
  RegalContext * rCtx = GET_REGAL_CONTEXT();
  DispatchStateScopedStepDown stepDown(rCtx->dsp);
  rCtx->dsp->curr->glTexGeniv(coord, pname, params);
}

static void REGAL_CALL debug_glFeedbackBuffer(GLsizei size, GLenum type, GLfloat *buffer)
{
  RegalContext * rCtx = GET_REGAL_CONTEXT();
  DispatchStateScopedStepDown stepDown(rCtx->dsp);
  rCtx->dsp->curr->glFeedbackBuffer(size, type, buffer);
}

static void REGAL_CALL debug_glSelectBuffer(GLsizei size, GLuint *buffer)
{
  RegalContext * rCtx = GET_REGAL_CONTEXT();
  DispatchStateScopedStepDown stepDown(rCtx->dsp);
  rCtx->dsp->curr->glSelectBuffer(size, buffer);
}

static GLint REGAL_CALL debug_glRenderMode(GLenum mode)
{
  RegalContext * rCtx = GET_REGAL_CONTEXT();
  DispatchStateScopedStepDown stepDown(rCtx->dsp);
  GLint  ret = rCtx->dsp->curr->glRenderMode(mode);
  return ret;
}

static void REGAL_CALL debug_glInitNames(void)
{
  RegalContext * rCtx = GET_REGAL_CONTEXT();
  DispatchStateScopedStepDown stepDown(rCtx->dsp);
  rCtx->dsp->curr->glInitNames();
}

static void REGAL_CALL debug_glLoadName(GLuint name)
{
  RegalContext * rCtx = GET_REGAL_CONTEXT();
  DispatchStateScopedStepDown stepDown(rCtx->dsp);
  rCtx->dsp->curr->glLoadName(name);
}

static void REGAL_CALL debug_glPassThrough(GLfloat token)
{
  RegalContext * rCtx = GET_REGAL_CONTEXT();
  DispatchStateScopedStepDown stepDown(rCtx->dsp);
  rCtx->dsp->curr->glPassThrough(token);
}

static void REGAL_CALL debug_glPopName(void)
{
  RegalContext * rCtx = GET_REGAL_CONTEXT();
  DispatchStateScopedStepDown stepDown(rCtx->dsp);
  rCtx->dsp->curr->glPopName();
}

static void REGAL_CALL debug_glPushName(GLuint name)
{
  RegalContext * rCtx = GET_REGAL_CONTEXT();
  DispatchStateScopedStepDown stepDown(rCtx->dsp);
  rCtx->dsp->curr->glPushName(name);
}

static void REGAL_CALL debug_glDrawBuffer(GLenum mode)
{
  RegalContext * rCtx = GET_REGAL_CONTEXT();
  DispatchStateScopedStepDown stepDown(rCtx->dsp);
  rCtx->dsp->curr->glDrawBuffer(mode);
}

static void REGAL_CALL debug_glClear(GLbitfield mask)
{
  RegalContext * rCtx = GET_REGAL_CONTEXT();
  DispatchStateScopedStepDown stepDown(rCtx->dsp);
  rCtx->dsp->curr->glClear(mask);
}

static void REGAL_CALL debug_glClearAccum(GLfloat red, GLfloat green, GLfloat blue, GLfloat alpha)
{
  RegalContext * rCtx = GET_REGAL_CONTEXT();
  DispatchStateScopedStepDown stepDown(rCtx->dsp);
  rCtx->dsp->curr->glClearAccum(red, green, blue, alpha);
}

static void REGAL_CALL debug_glClearColor(GLclampf red, GLclampf green, GLclampf blue, GLclampf alpha)
{
  RegalContext * rCtx = GET_REGAL_CONTEXT();
  DispatchStateScopedStepDown stepDown(rCtx->dsp);
  rCtx->dsp->curr->glClearColor(red, green, blue, alpha);
}

static void REGAL_CALL debug_glClearDepth(GLclampd depth)
{
  RegalContext * rCtx = GET_REGAL_CONTEXT();
  DispatchStateScopedStepDown stepDown(rCtx->dsp);
  rCtx->dsp->curr->glClearDepth(depth);
}

static void REGAL_CALL debug_glClearIndex(GLfloat c)
{
  RegalContext * rCtx = GET_REGAL_CONTEXT();
  DispatchStateScopedStepDown stepDown(rCtx->dsp);
  rCtx->dsp->curr->glClearIndex(c);
}

static void REGAL_CALL debug_glClearStencil(GLint s)
{
  RegalContext * rCtx = GET_REGAL_CONTEXT();
  DispatchStateScopedStepDown stepDown(rCtx->dsp);
  rCtx->dsp->curr->glClearStencil(s);
}

static void REGAL_CALL debug_glColorMask(GLboolean red, GLboolean green, GLboolean blue, GLboolean alpha)
{
  RegalContext * rCtx = GET_REGAL_CONTEXT();
  DispatchStateScopedStepDown stepDown(rCtx->dsp);
  rCtx->dsp->curr->glColorMask(red, green, blue, alpha);
}

static void REGAL_CALL debug_glDepthMask(GLboolean flag)
{
  RegalContext * rCtx = GET_REGAL_CONTEXT();
  DispatchStateScopedStepDown stepDown(rCtx->dsp);
  rCtx->dsp->curr->glDepthMask(flag);
}

static void REGAL_CALL debug_glIndexMask(GLuint mask)
{
  RegalContext * rCtx = GET_REGAL_CONTEXT();
  DispatchStateScopedStepDown stepDown(rCtx->dsp);
  rCtx->dsp->curr->glIndexMask(mask);
}

static void REGAL_CALL debug_glStencilMask(GLuint mask)
{
  RegalContext * rCtx = GET_REGAL_CONTEXT();
  DispatchStateScopedStepDown stepDown(rCtx->dsp);
  rCtx->dsp->curr->glStencilMask(mask);
}

static void REGAL_CALL debug_glAccum(GLenum op, GLfloat value)
{
  RegalContext * rCtx = GET_REGAL_CONTEXT();
  DispatchStateScopedStepDown stepDown(rCtx->dsp);
  rCtx->dsp->curr->glAccum(op, value);
}

static void REGAL_CALL debug_glDisable(GLenum cap)
{
  RegalContext * rCtx = GET_REGAL_CONTEXT();
  DispatchStateScopedStepDown stepDown(rCtx->dsp);
  rCtx->dsp->curr->glDisable(cap);
}

static void REGAL_CALL debug_glEnable(GLenum cap)
{
  RegalContext * rCtx = GET_REGAL_CONTEXT();
  DispatchStateScopedStepDown stepDown(rCtx->dsp);
  rCtx->dsp->curr->glEnable(cap);
}

static void REGAL_CALL debug_glFinish(void)
{
  RegalContext * rCtx = GET_REGAL_CONTEXT();
  DispatchStateScopedStepDown stepDown(rCtx->dsp);
  rCtx->dsp->curr->glFinish();
}

static void REGAL_CALL debug_glFlush(void)
{
  RegalContext * rCtx = GET_REGAL_CONTEXT();
  DispatchStateScopedStepDown stepDown(rCtx->dsp);
  rCtx->dsp->curr->glFlush();
}

static void REGAL_CALL debug_glPopAttrib(void)
{
  RegalContext * rCtx = GET_REGAL_CONTEXT();
  DispatchStateScopedStepDown stepDown(rCtx->dsp);
  rCtx->dsp->curr->glPopAttrib();
}

static void REGAL_CALL debug_glPushAttrib(GLbitfield mask)
{
  RegalContext * rCtx = GET_REGAL_CONTEXT();
  DispatchStateScopedStepDown stepDown(rCtx->dsp);
  rCtx->dsp->curr->glPushAttrib(mask);
}

static void REGAL_CALL debug_glMap1d(GLenum target, GLdouble u1, GLdouble u2, GLint stride, GLint order, const GLdouble *points)
{
  RegalContext * rCtx = GET_REGAL_CONTEXT();
  DispatchStateScopedStepDown stepDown(rCtx->dsp);
  rCtx->dsp->curr->glMap1d(target, u1, u2, stride, order, points);
}

static void REGAL_CALL debug_glMap1f(GLenum target, GLfloat u1, GLfloat u2, GLint stride, GLint order, const GLfloat *points)
{
  RegalContext * rCtx = GET_REGAL_CONTEXT();
  DispatchStateScopedStepDown stepDown(rCtx->dsp);
  rCtx->dsp->curr->glMap1f(target, u1, u2, stride, order, points);
}

static void REGAL_CALL debug_glMap2d(GLenum target, GLdouble u1, GLdouble u2, GLint ustride, GLint uorder, GLdouble v1, GLdouble v2, GLint vstride, GLint vorder, const GLdouble *points)
{
  RegalContext * rCtx = GET_REGAL_CONTEXT();
  DispatchStateScopedStepDown stepDown(rCtx->dsp);
  rCtx->dsp->curr->glMap2d(target, u1, u2, ustride, uorder, v1, v2, vstride, vorder, points);
}

static void REGAL_CALL debug_glMap2f(GLenum target, GLfloat u1, GLfloat u2, GLint ustride, GLint uorder, GLfloat v1, GLfloat v2, GLint vstride, GLint vorder, const GLfloat *points)
{
  RegalContext * rCtx = GET_REGAL_CONTEXT();
  DispatchStateScopedStepDown stepDown(rCtx->dsp);
  rCtx->dsp->curr->glMap2f(target, u1, u2, ustride, uorder, v1, v2, vstride, vorder, points);
}

static void REGAL_CALL debug_glMapGrid1d(GLint un, GLdouble u1, GLdouble u2)
{
  RegalContext * rCtx = GET_REGAL_CONTEXT();
  DispatchStateScopedStepDown stepDown(rCtx->dsp);
  rCtx->dsp->curr->glMapGrid1d(un, u1, u2);
}

static void REGAL_CALL debug_glMapGrid1f(GLint un, GLfloat u1, GLfloat u2)
{
  RegalContext * rCtx = GET_REGAL_CONTEXT();
  DispatchStateScopedStepDown stepDown(rCtx->dsp);
  rCtx->dsp->curr->glMapGrid1f(un, u1, u2);
}

static void REGAL_CALL debug_glMapGrid2d(GLint un, GLdouble u1, GLdouble u2, GLint vn, GLdouble v1, GLdouble v2)
{
  RegalContext * rCtx = GET_REGAL_CONTEXT();
  DispatchStateScopedStepDown stepDown(rCtx->dsp);
  rCtx->dsp->curr->glMapGrid2d(un, u1, u2, vn, v1, v2);
}

static void REGAL_CALL debug_glMapGrid2f(GLint un, GLfloat u1, GLfloat u2, GLint vn, GLfloat v1, GLfloat v2)
{
  RegalContext * rCtx = GET_REGAL_CONTEXT();
  DispatchStateScopedStepDown stepDown(rCtx->dsp);
  rCtx->dsp->curr->glMapGrid2f(un, u1, u2, vn, v1, v2);
}

static void REGAL_CALL debug_glEvalCoord1d(GLdouble u)
{
  RegalContext * rCtx = GET_REGAL_CONTEXT();
  DispatchStateScopedStepDown stepDown(rCtx->dsp);
  rCtx->dsp->curr->glEvalCoord1d(u);
}

static void REGAL_CALL debug_glEvalCoord1dv(const GLdouble *u)
{
  RegalContext * rCtx = GET_REGAL_CONTEXT();
  DispatchStateScopedStepDown stepDown(rCtx->dsp);
  rCtx->dsp->curr->glEvalCoord1dv(u);
}

static void REGAL_CALL debug_glEvalCoord1f(GLfloat u)
{
  RegalContext * rCtx = GET_REGAL_CONTEXT();
  DispatchStateScopedStepDown stepDown(rCtx->dsp);
  rCtx->dsp->curr->glEvalCoord1f(u);
}

static void REGAL_CALL debug_glEvalCoord1fv(const GLfloat *u)
{
  RegalContext * rCtx = GET_REGAL_CONTEXT();
  DispatchStateScopedStepDown stepDown(rCtx->dsp);
  rCtx->dsp->curr->glEvalCoord1fv(u);
}

static void REGAL_CALL debug_glEvalCoord2d(GLdouble u, GLdouble v)
{
  RegalContext * rCtx = GET_REGAL_CONTEXT();
  DispatchStateScopedStepDown stepDown(rCtx->dsp);
  rCtx->dsp->curr->glEvalCoord2d(u, v);
}

static void REGAL_CALL debug_glEvalCoord2dv(const GLdouble *u)
{
  RegalContext * rCtx = GET_REGAL_CONTEXT();
  DispatchStateScopedStepDown stepDown(rCtx->dsp);
  rCtx->dsp->curr->glEvalCoord2dv(u);
}

static void REGAL_CALL debug_glEvalCoord2f(GLfloat u, GLfloat v)
{
  RegalContext * rCtx = GET_REGAL_CONTEXT();
  DispatchStateScopedStepDown stepDown(rCtx->dsp);
  rCtx->dsp->curr->glEvalCoord2f(u, v);
}

static void REGAL_CALL debug_glEvalCoord2fv(const GLfloat *u)
{
  RegalContext * rCtx = GET_REGAL_CONTEXT();
  DispatchStateScopedStepDown stepDown(rCtx->dsp);
  rCtx->dsp->curr->glEvalCoord2fv(u);
}

static void REGAL_CALL debug_glEvalMesh1(GLenum mode, GLint i1, GLint i2)
{
  RegalContext * rCtx = GET_REGAL_CONTEXT();
  DispatchStateScopedStepDown stepDown(rCtx->dsp);
  rCtx->dsp->curr->glEvalMesh1(mode, i1, i2);
}

static void REGAL_CALL debug_glEvalMesh2(GLenum mode, GLint i1, GLint i2, GLint j1, GLint j2)
{
  RegalContext * rCtx = GET_REGAL_CONTEXT();
  DispatchStateScopedStepDown stepDown(rCtx->dsp);
  rCtx->dsp->curr->glEvalMesh2(mode, i1, i2, j1, j2);
}

static void REGAL_CALL debug_glEvalPoint1(GLint i)
{
  RegalContext * rCtx = GET_REGAL_CONTEXT();
  DispatchStateScopedStepDown stepDown(rCtx->dsp);
  rCtx->dsp->curr->glEvalPoint1(i);
}

static void REGAL_CALL debug_glEvalPoint2(GLint i, GLint j)
{
  RegalContext * rCtx = GET_REGAL_CONTEXT();
  DispatchStateScopedStepDown stepDown(rCtx->dsp);
  rCtx->dsp->curr->glEvalPoint2(i, j);
}

static void REGAL_CALL debug_glAlphaFunc(GLenum func, GLclampf ref)
{
  RegalContext * rCtx = GET_REGAL_CONTEXT();
  DispatchStateScopedStepDown stepDown(rCtx->dsp);
  rCtx->dsp->curr->glAlphaFunc(func, ref);
}

static void REGAL_CALL debug_glBlendFunc(GLenum sfactor, GLenum dfactor)
{
  RegalContext * rCtx = GET_REGAL_CONTEXT();
  DispatchStateScopedStepDown stepDown(rCtx->dsp);
  rCtx->dsp->curr->glBlendFunc(sfactor, dfactor);
}

static void REGAL_CALL debug_glDepthFunc(GLenum func)
{
  RegalContext * rCtx = GET_REGAL_CONTEXT();
  DispatchStateScopedStepDown stepDown(rCtx->dsp);
  rCtx->dsp->curr->glDepthFunc(func);
}

static void REGAL_CALL debug_glStencilFunc(GLenum func, GLint ref, GLuint mask)
{
  RegalContext * rCtx = GET_REGAL_CONTEXT();
  DispatchStateScopedStepDown stepDown(rCtx->dsp);
  rCtx->dsp->curr->glStencilFunc(func, ref, mask);
}

static void REGAL_CALL debug_glLogicOp(GLenum opcode)
{
  RegalContext * rCtx = GET_REGAL_CONTEXT();
  DispatchStateScopedStepDown stepDown(rCtx->dsp);
  rCtx->dsp->curr->glLogicOp(opcode);
}

static void REGAL_CALL debug_glStencilOp(GLenum fail, GLenum zfail, GLenum zpass)
{
  RegalContext * rCtx = GET_REGAL_CONTEXT();
  DispatchStateScopedStepDown stepDown(rCtx->dsp);
  rCtx->dsp->curr->glStencilOp(fail, zfail, zpass);
}

static void REGAL_CALL debug_glPixelZoom(GLfloat xfactor, GLfloat yfactor)
{
  RegalContext * rCtx = GET_REGAL_CONTEXT();
  DispatchStateScopedStepDown stepDown(rCtx->dsp);
  rCtx->dsp->curr->glPixelZoom(xfactor, yfactor);
}

static void REGAL_CALL debug_glPixelTransferf(GLenum pname, GLfloat param)
{
  RegalContext * rCtx = GET_REGAL_CONTEXT();
  DispatchStateScopedStepDown stepDown(rCtx->dsp);
  rCtx->dsp->curr->glPixelTransferf(pname, param);
}

static void REGAL_CALL debug_glPixelTransferi(GLenum pname, GLint param)
{
  RegalContext * rCtx = GET_REGAL_CONTEXT();
  DispatchStateScopedStepDown stepDown(rCtx->dsp);
  rCtx->dsp->curr->glPixelTransferi(pname, param);
}

static void REGAL_CALL debug_glPixelStoref(GLenum pname, GLfloat param)
{
  RegalContext * rCtx = GET_REGAL_CONTEXT();
  DispatchStateScopedStepDown stepDown(rCtx->dsp);
  rCtx->dsp->curr->glPixelStoref(pname, param);
}

static void REGAL_CALL debug_glPixelStorei(GLenum pname, GLint param)
{
  RegalContext * rCtx = GET_REGAL_CONTEXT();
  DispatchStateScopedStepDown stepDown(rCtx->dsp);
  rCtx->dsp->curr->glPixelStorei(pname, param);
}

static void REGAL_CALL debug_glPixelMapfv(GLenum map, GLsizei mapsize, const GLfloat *values)
{
  RegalContext * rCtx = GET_REGAL_CONTEXT();
  DispatchStateScopedStepDown stepDown(rCtx->dsp);
  rCtx->dsp->curr->glPixelMapfv(map, mapsize, values);
}

static void REGAL_CALL debug_glPixelMapuiv(GLenum map, GLsizei mapsize, const GLuint *values)
{
  RegalContext * rCtx = GET_REGAL_CONTEXT();
  DispatchStateScopedStepDown stepDown(rCtx->dsp);
  rCtx->dsp->curr->glPixelMapuiv(map, mapsize, values);
}

static void REGAL_CALL debug_glPixelMapusv(GLenum map, GLsizei mapsize, const GLushort *values)
{
  RegalContext * rCtx = GET_REGAL_CONTEXT();
  DispatchStateScopedStepDown stepDown(rCtx->dsp);
  rCtx->dsp->curr->glPixelMapusv(map, mapsize, values);
}

static void REGAL_CALL debug_glReadBuffer(GLenum mode)
{
  RegalContext * rCtx = GET_REGAL_CONTEXT();
  DispatchStateScopedStepDown stepDown(rCtx->dsp);
  rCtx->dsp->curr->glReadBuffer(mode);
}

static void REGAL_CALL debug_glCopyPixels(GLint x, GLint y, GLsizei width, GLsizei height, GLenum type)
{
  RegalContext * rCtx = GET_REGAL_CONTEXT();
  DispatchStateScopedStepDown stepDown(rCtx->dsp);
  rCtx->dsp->curr->glCopyPixels(x, y, width, height, type);
}

static void REGAL_CALL debug_glReadPixels(GLint x, GLint y, GLsizei width, GLsizei height, GLenum format, GLenum type, GLvoid *pixels)
{
  RegalContext * rCtx = GET_REGAL_CONTEXT();
  DispatchStateScopedStepDown stepDown(rCtx->dsp);
  rCtx->dsp->curr->glReadPixels(x, y, width, height, format, type, pixels);
}

static void REGAL_CALL debug_glDrawPixels(GLsizei width, GLsizei height, GLenum format, GLenum type, const GLvoid *pixels)
{
  RegalContext * rCtx = GET_REGAL_CONTEXT();
  DispatchStateScopedStepDown stepDown(rCtx->dsp);
  rCtx->dsp->curr->glDrawPixels(width, height, format, type, pixels);
}

static void REGAL_CALL debug_glGetBooleanv(GLenum pname, GLboolean *params)
{
  RegalContext * rCtx = GET_REGAL_CONTEXT();
  DispatchStateScopedStepDown stepDown(rCtx->dsp);
  rCtx->dsp->curr->glGetBooleanv(pname, params);
}

static void REGAL_CALL debug_glGetDoublev(GLenum pname, GLdouble *params)
{
  RegalContext * rCtx = GET_REGAL_CONTEXT();
  DispatchStateScopedStepDown stepDown(rCtx->dsp);
  rCtx->dsp->curr->glGetDoublev(pname, params);
}

static void REGAL_CALL debug_glGetFloatv(GLenum pname, GLfloat *params)
{
  RegalContext * rCtx = GET_REGAL_CONTEXT();
  DispatchStateScopedStepDown stepDown(rCtx->dsp);
  rCtx->dsp->curr->glGetFloatv(pname, params);
}

static void REGAL_CALL debug_glGetIntegerv(GLenum pname, GLint *params)
{
  RegalContext * rCtx = GET_REGAL_CONTEXT();
  DispatchStateScopedStepDown stepDown(rCtx->dsp);
  rCtx->dsp->curr->glGetIntegerv(pname, params);
}

static void REGAL_CALL debug_glGetClipPlane(GLenum plane, GLdouble *equation)
{
  RegalContext * rCtx = GET_REGAL_CONTEXT();
  DispatchStateScopedStepDown stepDown(rCtx->dsp);
  rCtx->dsp->curr->glGetClipPlane(plane, equation);
}

static GLenum REGAL_CALL debug_glGetError(void)
{
  RegalContext * rCtx = GET_REGAL_CONTEXT();
  DispatchStateScopedStepDown stepDown(rCtx->dsp);
  GLenum  ret = rCtx->dsp->curr->glGetError();
  return ret;
}

static void REGAL_CALL debug_glGetLightfv(GLenum light, GLenum pname, GLfloat *params)
{
  RegalContext * rCtx = GET_REGAL_CONTEXT();
  DispatchStateScopedStepDown stepDown(rCtx->dsp);
  rCtx->dsp->curr->glGetLightfv(light, pname, params);
}

static void REGAL_CALL debug_glGetLightiv(GLenum light, GLenum pname, GLint *params)
{
  RegalContext * rCtx = GET_REGAL_CONTEXT();
  DispatchStateScopedStepDown stepDown(rCtx->dsp);
  rCtx->dsp->curr->glGetLightiv(light, pname, params);
}

static void REGAL_CALL debug_glGetMapdv(GLenum target, GLenum query, GLdouble *v)
{
  RegalContext * rCtx = GET_REGAL_CONTEXT();
  DispatchStateScopedStepDown stepDown(rCtx->dsp);
  rCtx->dsp->curr->glGetMapdv(target, query, v);
}

static void REGAL_CALL debug_glGetMapfv(GLenum target, GLenum query, GLfloat *v)
{
  RegalContext * rCtx = GET_REGAL_CONTEXT();
  DispatchStateScopedStepDown stepDown(rCtx->dsp);
  rCtx->dsp->curr->glGetMapfv(target, query, v);
}

static void REGAL_CALL debug_glGetMapiv(GLenum target, GLenum query, GLint *v)
{
  RegalContext * rCtx = GET_REGAL_CONTEXT();
  DispatchStateScopedStepDown stepDown(rCtx->dsp);
  rCtx->dsp->curr->glGetMapiv(target, query, v);
}

static void REGAL_CALL debug_glGetMaterialfv(GLenum face, GLenum pname, GLfloat *params)
{
  RegalContext * rCtx = GET_REGAL_CONTEXT();
  DispatchStateScopedStepDown stepDown(rCtx->dsp);
  rCtx->dsp->curr->glGetMaterialfv(face, pname, params);
}

static void REGAL_CALL debug_glGetMaterialiv(GLenum face, GLenum pname, GLint *params)
{
  RegalContext * rCtx = GET_REGAL_CONTEXT();
  DispatchStateScopedStepDown stepDown(rCtx->dsp);
  rCtx->dsp->curr->glGetMaterialiv(face, pname, params);
}

static void REGAL_CALL debug_glGetPixelMapfv(GLenum map, GLfloat *values)
{
  RegalContext * rCtx = GET_REGAL_CONTEXT();
  DispatchStateScopedStepDown stepDown(rCtx->dsp);
  rCtx->dsp->curr->glGetPixelMapfv(map, values);
}

static void REGAL_CALL debug_glGetPixelMapuiv(GLenum map, GLuint *values)
{
  RegalContext * rCtx = GET_REGAL_CONTEXT();
  DispatchStateScopedStepDown stepDown(rCtx->dsp);
  rCtx->dsp->curr->glGetPixelMapuiv(map, values);
}

static void REGAL_CALL debug_glGetPixelMapusv(GLenum map, GLushort *values)
{
  RegalContext * rCtx = GET_REGAL_CONTEXT();
  DispatchStateScopedStepDown stepDown(rCtx->dsp);
  rCtx->dsp->curr->glGetPixelMapusv(map, values);
}

static void REGAL_CALL debug_glGetPolygonStipple(GLubyte *mask)
{
  RegalContext * rCtx = GET_REGAL_CONTEXT();
  DispatchStateScopedStepDown stepDown(rCtx->dsp);
  rCtx->dsp->curr->glGetPolygonStipple(mask);
}

static const GLubyte *REGAL_CALL debug_glGetString(GLenum name)
{
  RegalContext * rCtx = GET_REGAL_CONTEXT();
  DispatchStateScopedStepDown stepDown(rCtx->dsp);
  const GLubyte * ret = rCtx->dsp->curr->glGetString(name);
  return ret;
}

static void REGAL_CALL debug_glGetTexEnvfv(GLenum target, GLenum pname, GLfloat *params)
{
  RegalContext * rCtx = GET_REGAL_CONTEXT();
  DispatchStateScopedStepDown stepDown(rCtx->dsp);
  rCtx->dsp->curr->glGetTexEnvfv(target, pname, params);
}

static void REGAL_CALL debug_glGetTexEnviv(GLenum target, GLenum pname, GLint *params)
{
  RegalContext * rCtx = GET_REGAL_CONTEXT();
  DispatchStateScopedStepDown stepDown(rCtx->dsp);
  rCtx->dsp->curr->glGetTexEnviv(target, pname, params);
}

static void REGAL_CALL debug_glGetTexGendv(GLenum coord, GLenum pname, GLdouble *params)
{
  RegalContext * rCtx = GET_REGAL_CONTEXT();
  DispatchStateScopedStepDown stepDown(rCtx->dsp);
  rCtx->dsp->curr->glGetTexGendv(coord, pname, params);
}

static void REGAL_CALL debug_glGetTexGenfv(GLenum coord, GLenum pname, GLfloat *params)
{
  RegalContext * rCtx = GET_REGAL_CONTEXT();
  DispatchStateScopedStepDown stepDown(rCtx->dsp);
  rCtx->dsp->curr->glGetTexGenfv(coord, pname, params);
}

static void REGAL_CALL debug_glGetTexGeniv(GLenum coord, GLenum pname, GLint *params)
{
  RegalContext * rCtx = GET_REGAL_CONTEXT();
  DispatchStateScopedStepDown stepDown(rCtx->dsp);
  rCtx->dsp->curr->glGetTexGeniv(coord, pname, params);
}

static void REGAL_CALL debug_glGetTexImage(GLenum target, GLint level, GLenum format, GLenum type, GLvoid *pixels)
{
  RegalContext * rCtx = GET_REGAL_CONTEXT();
  DispatchStateScopedStepDown stepDown(rCtx->dsp);
  rCtx->dsp->curr->glGetTexImage(target, level, format, type, pixels);
}

static void REGAL_CALL debug_glGetTexParameterfv(GLenum target, GLenum pname, GLfloat *params)
{
  RegalContext * rCtx = GET_REGAL_CONTEXT();
  DispatchStateScopedStepDown stepDown(rCtx->dsp);
  rCtx->dsp->curr->glGetTexParameterfv(target, pname, params);
}

static void REGAL_CALL debug_glGetTexParameteriv(GLenum target, GLenum pname, GLint *params)
{
  RegalContext * rCtx = GET_REGAL_CONTEXT();
  DispatchStateScopedStepDown stepDown(rCtx->dsp);
  rCtx->dsp->curr->glGetTexParameteriv(target, pname, params);
}

static void REGAL_CALL debug_glGetTexLevelParameterfv(GLenum target, GLint level, GLenum pname, GLfloat *params)
{
  RegalContext * rCtx = GET_REGAL_CONTEXT();
  DispatchStateScopedStepDown stepDown(rCtx->dsp);
  rCtx->dsp->curr->glGetTexLevelParameterfv(target, level, pname, params);
}

static void REGAL_CALL debug_glGetTexLevelParameteriv(GLenum target, GLint level, GLenum pname, GLint *params)
{
  RegalContext * rCtx = GET_REGAL_CONTEXT();
  DispatchStateScopedStepDown stepDown(rCtx->dsp);
  rCtx->dsp->curr->glGetTexLevelParameteriv(target, level, pname, params);
}

static GLboolean REGAL_CALL debug_glIsEnabled(GLenum cap)
{
  RegalContext * rCtx = GET_REGAL_CONTEXT();
  DispatchStateScopedStepDown stepDown(rCtx->dsp);
  GLboolean  ret = rCtx->dsp->curr->glIsEnabled(cap);
  return ret;
}

static GLboolean REGAL_CALL debug_glIsList(GLuint list)
{
  RegalContext * rCtx = GET_REGAL_CONTEXT();
  DispatchStateScopedStepDown stepDown(rCtx->dsp);
  GLboolean  ret = rCtx->dsp->curr->glIsList(list);
  return ret;
}

static void REGAL_CALL debug_glDepthRange(GLclampd zNear, GLclampd zFar)
{
  RegalContext * rCtx = GET_REGAL_CONTEXT();
  DispatchStateScopedStepDown stepDown(rCtx->dsp);
  rCtx->dsp->curr->glDepthRange(zNear, zFar);
}

static void REGAL_CALL debug_glFrustum(GLdouble left, GLdouble right, GLdouble bottom, GLdouble top, GLdouble zNear, GLdouble zFar)
{
  RegalContext * rCtx = GET_REGAL_CONTEXT();
  DispatchStateScopedStepDown stepDown(rCtx->dsp);
  rCtx->dsp->curr->glFrustum(left, right, bottom, top, zNear, zFar);
}

static void REGAL_CALL debug_glLoadIdentity(void)
{
  RegalContext * rCtx = GET_REGAL_CONTEXT();
  DispatchStateScopedStepDown stepDown(rCtx->dsp);
  rCtx->dsp->curr->glLoadIdentity();
}

static void REGAL_CALL debug_glLoadMatrixd(const GLdouble *m)
{
  RegalContext * rCtx = GET_REGAL_CONTEXT();
  DispatchStateScopedStepDown stepDown(rCtx->dsp);
  rCtx->dsp->curr->glLoadMatrixd(m);
}

static void REGAL_CALL debug_glLoadMatrixf(const GLfloat *m)
{
  RegalContext * rCtx = GET_REGAL_CONTEXT();
  DispatchStateScopedStepDown stepDown(rCtx->dsp);
  rCtx->dsp->curr->glLoadMatrixf(m);
}

static void REGAL_CALL debug_glMatrixMode(GLenum mode)
{
  RegalContext * rCtx = GET_REGAL_CONTEXT();
  DispatchStateScopedStepDown stepDown(rCtx->dsp);
  rCtx->dbg->MatrixMode( rCtx, mode );
  rCtx->dsp->curr->glMatrixMode(mode);
}

static void REGAL_CALL debug_glMultMatrixd(const GLdouble *m)
{
  RegalContext * rCtx = GET_REGAL_CONTEXT();
  DispatchStateScopedStepDown stepDown(rCtx->dsp);
  rCtx->dsp->curr->glMultMatrixd(m);
}

static void REGAL_CALL debug_glMultMatrixf(const GLfloat *m)
{
  RegalContext * rCtx = GET_REGAL_CONTEXT();
  DispatchStateScopedStepDown stepDown(rCtx->dsp);
  rCtx->dsp->curr->glMultMatrixf(m);
}

static void REGAL_CALL debug_glOrtho(GLdouble left, GLdouble right, GLdouble bottom, GLdouble top, GLdouble zNear, GLdouble zFar)
{
  RegalContext * rCtx = GET_REGAL_CONTEXT();
  DispatchStateScopedStepDown stepDown(rCtx->dsp);
  rCtx->dsp->curr->glOrtho(left, right, bottom, top, zNear, zFar);
}

static void REGAL_CALL debug_glPopMatrix(void)
{
  RegalContext * rCtx = GET_REGAL_CONTEXT();
  DispatchStateScopedStepDown stepDown(rCtx->dsp);
  rCtx->dsp->curr->glPopMatrix();
}

static void REGAL_CALL debug_glPushMatrix(void)
{
  RegalContext * rCtx = GET_REGAL_CONTEXT();
  DispatchStateScopedStepDown stepDown(rCtx->dsp);
  rCtx->dsp->curr->glPushMatrix();
}

static void REGAL_CALL debug_glRotated(GLdouble angle, GLdouble x, GLdouble y, GLdouble z)
{
  RegalContext * rCtx = GET_REGAL_CONTEXT();
  DispatchStateScopedStepDown stepDown(rCtx->dsp);
  rCtx->dsp->curr->glRotated(angle, x, y, z);
}

static void REGAL_CALL debug_glRotatef(GLfloat angle, GLfloat x, GLfloat y, GLfloat z)
{
  RegalContext * rCtx = GET_REGAL_CONTEXT();
  DispatchStateScopedStepDown stepDown(rCtx->dsp);
  rCtx->dsp->curr->glRotatef(angle, x, y, z);
}

static void REGAL_CALL debug_glScaled(GLdouble x, GLdouble y, GLdouble z)
{
  RegalContext * rCtx = GET_REGAL_CONTEXT();
  DispatchStateScopedStepDown stepDown(rCtx->dsp);
  rCtx->dsp->curr->glScaled(x, y, z);
}

static void REGAL_CALL debug_glScalef(GLfloat x, GLfloat y, GLfloat z)
{
  RegalContext * rCtx = GET_REGAL_CONTEXT();
  DispatchStateScopedStepDown stepDown(rCtx->dsp);
  rCtx->dsp->curr->glScalef(x, y, z);
}

static void REGAL_CALL debug_glTranslated(GLdouble x, GLdouble y, GLdouble z)
{
  RegalContext * rCtx = GET_REGAL_CONTEXT();
  DispatchStateScopedStepDown stepDown(rCtx->dsp);
  rCtx->dsp->curr->glTranslated(x, y, z);
}

static void REGAL_CALL debug_glTranslatef(GLfloat x, GLfloat y, GLfloat z)
{
  RegalContext * rCtx = GET_REGAL_CONTEXT();
  DispatchStateScopedStepDown stepDown(rCtx->dsp);
  rCtx->dsp->curr->glTranslatef(x, y, z);
}

static void REGAL_CALL debug_glViewport(GLint x, GLint y, GLsizei width, GLsizei height)
{
  RegalContext * rCtx = GET_REGAL_CONTEXT();
  DispatchStateScopedStepDown stepDown(rCtx->dsp);
  rCtx->dsp->curr->glViewport(x, y, width, height);
}

// GL_VERSION_1_1

static void REGAL_CALL debug_glArrayElement(GLint index)
{
  RegalContext * rCtx = GET_REGAL_CONTEXT();
  DispatchStateScopedStepDown stepDown(rCtx->dsp);
  rCtx->dsp->curr->glArrayElement(index);
}

static void REGAL_CALL debug_glDrawArrays(GLenum mode, GLint first, GLsizei count)
{
  RegalContext * rCtx = GET_REGAL_CONTEXT();
  DispatchStateScopedStepDown stepDown(rCtx->dsp);
  rCtx->dsp->curr->glDrawArrays(mode, first, count);
}

static void REGAL_CALL debug_glDrawElements(GLenum mode, GLsizei count, GLenum type, const GLvoid *indices)
{
  RegalContext * rCtx = GET_REGAL_CONTEXT();
  DispatchStateScopedStepDown stepDown(rCtx->dsp);
  rCtx->dsp->curr->glDrawElements(mode, count, type, indices);
}

static void REGAL_CALL debug_glInterleavedArrays(GLenum format, GLsizei stride, const GLvoid *pointer)
{
  RegalContext * rCtx = GET_REGAL_CONTEXT();
  DispatchStateScopedStepDown stepDown(rCtx->dsp);
  rCtx->dsp->curr->glInterleavedArrays(format, stride, pointer);
}

static void REGAL_CALL debug_glDisableClientState(GLenum cap)
{
  RegalContext * rCtx = GET_REGAL_CONTEXT();
  DispatchStateScopedStepDown stepDown(rCtx->dsp);
  rCtx->dsp->curr->glDisableClientState(cap);
}

static void REGAL_CALL debug_glEnableClientState(GLenum cap)
{
  RegalContext * rCtx = GET_REGAL_CONTEXT();
  DispatchStateScopedStepDown stepDown(rCtx->dsp);
  rCtx->dsp->curr->glEnableClientState(cap);
}

static void REGAL_CALL debug_glGetPointerv(GLenum pname, GLvoid **params)
{
  RegalContext * rCtx = GET_REGAL_CONTEXT();
  DispatchStateScopedStepDown stepDown(rCtx->dsp);
  rCtx->dsp->curr->glGetPointerv(pname, params);
}

static void REGAL_CALL debug_glColorPointer(GLint size, GLenum type, GLsizei stride, const GLvoid *pointer)
{
  RegalContext * rCtx = GET_REGAL_CONTEXT();
  DispatchStateScopedStepDown stepDown(rCtx->dsp);
  rCtx->dsp->curr->glColorPointer(size, type, stride, pointer);
}

static void REGAL_CALL debug_glEdgeFlagPointer(GLsizei stride, const GLvoid *pointer)
{
  RegalContext * rCtx = GET_REGAL_CONTEXT();
  DispatchStateScopedStepDown stepDown(rCtx->dsp);
  rCtx->dsp->curr->glEdgeFlagPointer(stride, pointer);
}

static void REGAL_CALL debug_glIndexPointer(GLenum type, GLsizei stride, const GLvoid *pointer)
{
  RegalContext * rCtx = GET_REGAL_CONTEXT();
  DispatchStateScopedStepDown stepDown(rCtx->dsp);
  rCtx->dsp->curr->glIndexPointer(type, stride, pointer);
}

static void REGAL_CALL debug_glNormalPointer(GLenum type, GLsizei stride, const GLvoid *pointer)
{
  RegalContext * rCtx = GET_REGAL_CONTEXT();
  DispatchStateScopedStepDown stepDown(rCtx->dsp);
  rCtx->dsp->curr->glNormalPointer(type, stride, pointer);
}

static void REGAL_CALL debug_glTexCoordPointer(GLint size, GLenum type, GLsizei stride, const GLvoid *pointer)
{
  RegalContext * rCtx = GET_REGAL_CONTEXT();
  DispatchStateScopedStepDown stepDown(rCtx->dsp);
  rCtx->dsp->curr->glTexCoordPointer(size, type, stride, pointer);
}

static void REGAL_CALL debug_glVertexPointer(GLint size, GLenum type, GLsizei stride, const GLvoid *pointer)
{
  RegalContext * rCtx = GET_REGAL_CONTEXT();
  DispatchStateScopedStepDown stepDown(rCtx->dsp);
  rCtx->dsp->curr->glVertexPointer(size, type, stride, pointer);
}

static void REGAL_CALL debug_glPolygonOffset(GLfloat factor, GLfloat units)
{
  RegalContext * rCtx = GET_REGAL_CONTEXT();
  DispatchStateScopedStepDown stepDown(rCtx->dsp);
  rCtx->dsp->curr->glPolygonOffset(factor, units);
}

static void REGAL_CALL debug_glCopyTexImage1D(GLenum target, GLint level, GLenum internalformat, GLint x, GLint y, GLsizei width, GLint border)
{
  RegalContext * rCtx = GET_REGAL_CONTEXT();
  DispatchStateScopedStepDown stepDown(rCtx->dsp);
  rCtx->dsp->curr->glCopyTexImage1D(target, level, internalformat, x, y, width, border);
}

static void REGAL_CALL debug_glCopyTexImage2D(GLenum target, GLint level, GLenum internalformat, GLint x, GLint y, GLsizei width, GLsizei height, GLint border)
{
  RegalContext * rCtx = GET_REGAL_CONTEXT();
  DispatchStateScopedStepDown stepDown(rCtx->dsp);
  rCtx->dsp->curr->glCopyTexImage2D(target, level, internalformat, x, y, width, height, border);
}

static void REGAL_CALL debug_glCopyTexSubImage1D(GLenum target, GLint level, GLint xoffset, GLint x, GLint y, GLsizei width)
{
  RegalContext * rCtx = GET_REGAL_CONTEXT();
  DispatchStateScopedStepDown stepDown(rCtx->dsp);
  rCtx->dsp->curr->glCopyTexSubImage1D(target, level, xoffset, x, y, width);
}

static void REGAL_CALL debug_glCopyTexSubImage2D(GLenum target, GLint level, GLint xoffset, GLint yoffset, GLint x, GLint y, GLsizei width, GLsizei height)
{
  RegalContext * rCtx = GET_REGAL_CONTEXT();
  DispatchStateScopedStepDown stepDown(rCtx->dsp);
  rCtx->dsp->curr->glCopyTexSubImage2D(target, level, xoffset, yoffset, x, y, width, height);
}

static void REGAL_CALL debug_glTexSubImage1D(GLenum target, GLint level, GLint xoffset, GLsizei width, GLenum format, GLenum type, const GLvoid *pixels)
{
  RegalContext * rCtx = GET_REGAL_CONTEXT();
  DispatchStateScopedStepDown stepDown(rCtx->dsp);
  rCtx->dsp->curr->glTexSubImage1D(target, level, xoffset, width, format, type, pixels);
}

static void REGAL_CALL debug_glTexSubImage2D(GLenum target, GLint level, GLint xoffset, GLint yoffset, GLsizei width, GLsizei height, GLenum format, GLenum type, const GLvoid *pixels)
{
  RegalContext * rCtx = GET_REGAL_CONTEXT();
  DispatchStateScopedStepDown stepDown(rCtx->dsp);
  rCtx->dsp->curr->glTexSubImage2D(target, level, xoffset, yoffset, width, height, format, type, pixels);
}

static GLboolean REGAL_CALL debug_glAreTexturesResident(GLsizei n, const GLuint *textures, GLboolean *residences)
{
  RegalContext * rCtx = GET_REGAL_CONTEXT();
  DispatchStateScopedStepDown stepDown(rCtx->dsp);
  GLboolean  ret = rCtx->dsp->curr->glAreTexturesResident(n, textures, residences);
  return ret;
}

static void REGAL_CALL debug_glBindTexture(GLenum target, GLuint texture)
{
  RegalContext * rCtx = GET_REGAL_CONTEXT();
  DispatchStateScopedStepDown stepDown(rCtx->dsp);
  rCtx->dsp->curr->glBindTexture(target, texture);
}

static void REGAL_CALL debug_glDeleteTextures(GLsizei n, const GLuint *textures)
{
  RegalContext * rCtx = GET_REGAL_CONTEXT();
  DispatchStateScopedStepDown stepDown(rCtx->dsp);
  rCtx->dsp->curr->glDeleteTextures(n, textures);
}

static void REGAL_CALL debug_glGenTextures(GLsizei n, GLuint *textures)
{
  RegalContext * rCtx = GET_REGAL_CONTEXT();
  DispatchStateScopedStepDown stepDown(rCtx->dsp);
  rCtx->dsp->curr->glGenTextures(n, textures);
}

static GLboolean REGAL_CALL debug_glIsTexture(GLuint texture)
{
  RegalContext * rCtx = GET_REGAL_CONTEXT();
  DispatchStateScopedStepDown stepDown(rCtx->dsp);
  GLboolean  ret = rCtx->dsp->curr->glIsTexture(texture);
  return ret;
}

static void REGAL_CALL debug_glPrioritizeTextures(GLsizei n, const GLuint *textures, const GLclampf *priorities)
{
  RegalContext * rCtx = GET_REGAL_CONTEXT();
  DispatchStateScopedStepDown stepDown(rCtx->dsp);
  rCtx->dsp->curr->glPrioritizeTextures(n, textures, priorities);
}

static void REGAL_CALL debug_glIndexub(GLubyte c)
{
  RegalContext * rCtx = GET_REGAL_CONTEXT();
  DispatchStateScopedStepDown stepDown(rCtx->dsp);
  rCtx->dsp->curr->glIndexub(c);
}

static void REGAL_CALL debug_glIndexubv(const GLubyte *c)
{
  RegalContext * rCtx = GET_REGAL_CONTEXT();
  DispatchStateScopedStepDown stepDown(rCtx->dsp);
  rCtx->dsp->curr->glIndexubv(c);
}

static void REGAL_CALL debug_glPopClientAttrib(void)
{
  RegalContext * rCtx = GET_REGAL_CONTEXT();
  DispatchStateScopedStepDown stepDown(rCtx->dsp);
  rCtx->dsp->curr->glPopClientAttrib();
}

static void REGAL_CALL debug_glPushClientAttrib(GLbitfield mask)
{
  RegalContext * rCtx = GET_REGAL_CONTEXT();
  DispatchStateScopedStepDown stepDown(rCtx->dsp);
  rCtx->dsp->curr->glPushClientAttrib(mask);
}

// GL_VERSION_1_2

static void REGAL_CALL debug_glBlendColor(GLclampf red, GLclampf green, GLclampf blue, GLclampf alpha)
{
  RegalContext * rCtx = GET_REGAL_CONTEXT();
  DispatchStateScopedStepDown stepDown(rCtx->dsp);
  rCtx->dsp->curr->glBlendColor(red, green, blue, alpha);
}

static void REGAL_CALL debug_glBlendEquation(GLenum mode)
{
  RegalContext * rCtx = GET_REGAL_CONTEXT();
  DispatchStateScopedStepDown stepDown(rCtx->dsp);
  rCtx->dsp->curr->glBlendEquation(mode);
}

static void REGAL_CALL debug_glDrawRangeElements(GLenum mode, GLuint start, GLuint end, GLsizei count, GLenum type, const GLvoid *indices)
{
  RegalContext * rCtx = GET_REGAL_CONTEXT();
  DispatchStateScopedStepDown stepDown(rCtx->dsp);
  rCtx->dsp->curr->glDrawRangeElements(mode, start, end, count, type, indices);
}

static void REGAL_CALL debug_glTexImage3D(GLenum target, GLint level, GLint internalformat, GLsizei width, GLsizei height, GLsizei depth, GLint border, GLenum format, GLenum type, const GLvoid *pixels)
{
  RegalContext * rCtx = GET_REGAL_CONTEXT();
  DispatchStateScopedStepDown stepDown(rCtx->dsp);
  rCtx->dsp->curr->glTexImage3D(target, level, internalformat, width, height, depth, border, format, type, pixels);
}

static void REGAL_CALL debug_glTexSubImage3D(GLenum target, GLint level, GLint xoffset, GLint yoffset, GLint zoffset, GLsizei width, GLsizei height, GLsizei depth, GLenum format, GLenum type, const GLvoid *pixels)
{
  RegalContext * rCtx = GET_REGAL_CONTEXT();
  DispatchStateScopedStepDown stepDown(rCtx->dsp);
  rCtx->dsp->curr->glTexSubImage3D(target, level, xoffset, yoffset, zoffset, width, height, depth, format, type, pixels);
}

static void REGAL_CALL debug_glCopyTexSubImage3D(GLenum target, GLint level, GLint xoffset, GLint yoffset, GLint zoffset, GLint x, GLint y, GLsizei width, GLsizei height)
{
  RegalContext * rCtx = GET_REGAL_CONTEXT();
  DispatchStateScopedStepDown stepDown(rCtx->dsp);
  rCtx->dsp->curr->glCopyTexSubImage3D(target, level, xoffset, yoffset, zoffset, x, y, width, height);
}

// GL_ARB_imaging

static void REGAL_CALL debug_glColorTable(GLenum target, GLenum internalformat, GLsizei width, GLenum format, GLenum type, const GLvoid *table)
{
  RegalContext * rCtx = GET_REGAL_CONTEXT();
  DispatchStateScopedStepDown stepDown(rCtx->dsp);
  rCtx->dsp->curr->glColorTable(target, internalformat, width, format, type, table);
}

static void REGAL_CALL debug_glColorTableParameterfv(GLenum target, GLenum pname, const GLfloat *params)
{
  RegalContext * rCtx = GET_REGAL_CONTEXT();
  DispatchStateScopedStepDown stepDown(rCtx->dsp);
  rCtx->dsp->curr->glColorTableParameterfv(target, pname, params);
}

static void REGAL_CALL debug_glColorTableParameteriv(GLenum target, GLenum pname, const GLint *params)
{
  RegalContext * rCtx = GET_REGAL_CONTEXT();
  DispatchStateScopedStepDown stepDown(rCtx->dsp);
  rCtx->dsp->curr->glColorTableParameteriv(target, pname, params);
}

static void REGAL_CALL debug_glCopyColorTable(GLenum target, GLenum internalformat, GLint x, GLint y, GLsizei width)
{
  RegalContext * rCtx = GET_REGAL_CONTEXT();
  DispatchStateScopedStepDown stepDown(rCtx->dsp);
  rCtx->dsp->curr->glCopyColorTable(target, internalformat, x, y, width);
}

static void REGAL_CALL debug_glGetColorTable(GLenum target, GLenum format, GLenum type, GLvoid *table)
{
  RegalContext * rCtx = GET_REGAL_CONTEXT();
  DispatchStateScopedStepDown stepDown(rCtx->dsp);
  rCtx->dsp->curr->glGetColorTable(target, format, type, table);
}

static void REGAL_CALL debug_glGetColorTableParameterfv(GLenum target, GLenum pname, GLfloat *params)
{
  RegalContext * rCtx = GET_REGAL_CONTEXT();
  DispatchStateScopedStepDown stepDown(rCtx->dsp);
  rCtx->dsp->curr->glGetColorTableParameterfv(target, pname, params);
}

static void REGAL_CALL debug_glGetColorTableParameteriv(GLenum target, GLenum pname, GLint *params)
{
  RegalContext * rCtx = GET_REGAL_CONTEXT();
  DispatchStateScopedStepDown stepDown(rCtx->dsp);
  rCtx->dsp->curr->glGetColorTableParameteriv(target, pname, params);
}

static void REGAL_CALL debug_glColorSubTable(GLenum target, GLsizei start, GLsizei count, GLenum format, GLenum type, const GLvoid *data)
{
  RegalContext * rCtx = GET_REGAL_CONTEXT();
  DispatchStateScopedStepDown stepDown(rCtx->dsp);
  rCtx->dsp->curr->glColorSubTable(target, start, count, format, type, data);
}

static void REGAL_CALL debug_glCopyColorSubTable(GLenum target, GLsizei start, GLint x, GLint y, GLsizei width)
{
  RegalContext * rCtx = GET_REGAL_CONTEXT();
  DispatchStateScopedStepDown stepDown(rCtx->dsp);
  rCtx->dsp->curr->glCopyColorSubTable(target, start, x, y, width);
}

static void REGAL_CALL debug_glConvolutionFilter1D(GLenum target, GLenum internalformat, GLsizei width, GLenum format, GLenum type, const GLvoid *image)
{
  RegalContext * rCtx = GET_REGAL_CONTEXT();
  DispatchStateScopedStepDown stepDown(rCtx->dsp);
  rCtx->dsp->curr->glConvolutionFilter1D(target, internalformat, width, format, type, image);
}

static void REGAL_CALL debug_glConvolutionFilter2D(GLenum target, GLenum internalformat, GLsizei width, GLsizei height, GLenum format, GLenum type, const GLvoid *image)
{
  RegalContext * rCtx = GET_REGAL_CONTEXT();
  DispatchStateScopedStepDown stepDown(rCtx->dsp);
  rCtx->dsp->curr->glConvolutionFilter2D(target, internalformat, width, height, format, type, image);
}

static void REGAL_CALL debug_glConvolutionParameterf(GLenum target, GLenum pname, GLfloat params)
{
  RegalContext * rCtx = GET_REGAL_CONTEXT();
  DispatchStateScopedStepDown stepDown(rCtx->dsp);
  rCtx->dsp->curr->glConvolutionParameterf(target, pname, params);
}

static void REGAL_CALL debug_glConvolutionParameterfv(GLenum target, GLenum pname, const GLfloat *params)
{
  RegalContext * rCtx = GET_REGAL_CONTEXT();
  DispatchStateScopedStepDown stepDown(rCtx->dsp);
  rCtx->dsp->curr->glConvolutionParameterfv(target, pname, params);
}

static void REGAL_CALL debug_glConvolutionParameteri(GLenum target, GLenum pname, GLint params)
{
  RegalContext * rCtx = GET_REGAL_CONTEXT();
  DispatchStateScopedStepDown stepDown(rCtx->dsp);
  rCtx->dsp->curr->glConvolutionParameteri(target, pname, params);
}

static void REGAL_CALL debug_glConvolutionParameteriv(GLenum target, GLenum pname, const GLint *params)
{
  RegalContext * rCtx = GET_REGAL_CONTEXT();
  DispatchStateScopedStepDown stepDown(rCtx->dsp);
  rCtx->dsp->curr->glConvolutionParameteriv(target, pname, params);
}

static void REGAL_CALL debug_glCopyConvolutionFilter1D(GLenum target, GLenum internalformat, GLint x, GLint y, GLsizei width)
{
  RegalContext * rCtx = GET_REGAL_CONTEXT();
  DispatchStateScopedStepDown stepDown(rCtx->dsp);
  rCtx->dsp->curr->glCopyConvolutionFilter1D(target, internalformat, x, y, width);
}

static void REGAL_CALL debug_glCopyConvolutionFilter2D(GLenum target, GLenum internalformat, GLint x, GLint y, GLsizei width, GLsizei height)
{
  RegalContext * rCtx = GET_REGAL_CONTEXT();
  DispatchStateScopedStepDown stepDown(rCtx->dsp);
  rCtx->dsp->curr->glCopyConvolutionFilter2D(target, internalformat, x, y, width, height);
}

static void REGAL_CALL debug_glGetConvolutionFilter(GLenum target, GLenum format, GLenum type, GLvoid *image)
{
  RegalContext * rCtx = GET_REGAL_CONTEXT();
  DispatchStateScopedStepDown stepDown(rCtx->dsp);
  rCtx->dsp->curr->glGetConvolutionFilter(target, format, type, image);
}

static void REGAL_CALL debug_glGetConvolutionParameterfv(GLenum target, GLenum pname, GLfloat *params)
{
  RegalContext * rCtx = GET_REGAL_CONTEXT();
  DispatchStateScopedStepDown stepDown(rCtx->dsp);
  rCtx->dsp->curr->glGetConvolutionParameterfv(target, pname, params);
}

static void REGAL_CALL debug_glGetConvolutionParameteriv(GLenum target, GLenum pname, GLint *params)
{
  RegalContext * rCtx = GET_REGAL_CONTEXT();
  DispatchStateScopedStepDown stepDown(rCtx->dsp);
  rCtx->dsp->curr->glGetConvolutionParameteriv(target, pname, params);
}

static void REGAL_CALL debug_glGetSeparableFilter(GLenum target, GLenum format, GLenum type, GLvoid *row, GLvoid *column, GLvoid *span)
{
  RegalContext * rCtx = GET_REGAL_CONTEXT();
  DispatchStateScopedStepDown stepDown(rCtx->dsp);
  rCtx->dsp->curr->glGetSeparableFilter(target, format, type, row, column, span);
}

static void REGAL_CALL debug_glSeparableFilter2D(GLenum target, GLenum internalformat, GLsizei width, GLsizei height, GLenum format, GLenum type, const GLvoid *row, const GLvoid *column)
{
  RegalContext * rCtx = GET_REGAL_CONTEXT();
  DispatchStateScopedStepDown stepDown(rCtx->dsp);
  rCtx->dsp->curr->glSeparableFilter2D(target, internalformat, width, height, format, type, row, column);
}

static void REGAL_CALL debug_glGetHistogram(GLenum target, GLboolean reset, GLenum format, GLenum type, GLvoid *values)
{
  RegalContext * rCtx = GET_REGAL_CONTEXT();
  DispatchStateScopedStepDown stepDown(rCtx->dsp);
  rCtx->dsp->curr->glGetHistogram(target, reset, format, type, values);
}

static void REGAL_CALL debug_glGetHistogramParameterfv(GLenum target, GLenum pname, GLfloat *params)
{
  RegalContext * rCtx = GET_REGAL_CONTEXT();
  DispatchStateScopedStepDown stepDown(rCtx->dsp);
  rCtx->dsp->curr->glGetHistogramParameterfv(target, pname, params);
}

static void REGAL_CALL debug_glGetHistogramParameteriv(GLenum target, GLenum pname, GLint *params)
{
  RegalContext * rCtx = GET_REGAL_CONTEXT();
  DispatchStateScopedStepDown stepDown(rCtx->dsp);
  rCtx->dsp->curr->glGetHistogramParameteriv(target, pname, params);
}

static void REGAL_CALL debug_glGetMinmax(GLenum target, GLboolean reset, GLenum format, GLenum types, GLvoid *values)
{
  RegalContext * rCtx = GET_REGAL_CONTEXT();
  DispatchStateScopedStepDown stepDown(rCtx->dsp);
  rCtx->dsp->curr->glGetMinmax(target, reset, format, types, values);
}

static void REGAL_CALL debug_glGetMinmaxParameterfv(GLenum target, GLenum pname, GLfloat *params)
{
  RegalContext * rCtx = GET_REGAL_CONTEXT();
  DispatchStateScopedStepDown stepDown(rCtx->dsp);
  rCtx->dsp->curr->glGetMinmaxParameterfv(target, pname, params);
}

static void REGAL_CALL debug_glGetMinmaxParameteriv(GLenum target, GLenum pname, GLint *params)
{
  RegalContext * rCtx = GET_REGAL_CONTEXT();
  DispatchStateScopedStepDown stepDown(rCtx->dsp);
  rCtx->dsp->curr->glGetMinmaxParameteriv(target, pname, params);
}

static void REGAL_CALL debug_glHistogram(GLenum target, GLsizei width, GLenum internalformat, GLboolean sink)
{
  RegalContext * rCtx = GET_REGAL_CONTEXT();
  DispatchStateScopedStepDown stepDown(rCtx->dsp);
  rCtx->dsp->curr->glHistogram(target, width, internalformat, sink);
}

static void REGAL_CALL debug_glMinmax(GLenum target, GLenum internalformat, GLboolean sink)
{
  RegalContext * rCtx = GET_REGAL_CONTEXT();
  DispatchStateScopedStepDown stepDown(rCtx->dsp);
  rCtx->dsp->curr->glMinmax(target, internalformat, sink);
}

static void REGAL_CALL debug_glResetHistogram(GLenum target)
{
  RegalContext * rCtx = GET_REGAL_CONTEXT();
  DispatchStateScopedStepDown stepDown(rCtx->dsp);
  rCtx->dsp->curr->glResetHistogram(target);
}

static void REGAL_CALL debug_glResetMinmax(GLenum target)
{
  RegalContext * rCtx = GET_REGAL_CONTEXT();
  DispatchStateScopedStepDown stepDown(rCtx->dsp);
  rCtx->dsp->curr->glResetMinmax(target);
}

// GL_VERSION_1_3

static void REGAL_CALL debug_glActiveTexture(GLenum texture)
{
  RegalContext * rCtx = GET_REGAL_CONTEXT();
  DispatchStateScopedStepDown stepDown(rCtx->dsp);
  rCtx->dbg->ActiveTexture( rCtx, texture );
  rCtx->dsp->curr->glActiveTexture(texture);
}

static void REGAL_CALL debug_glSampleCoverage(GLclampf value, GLboolean invert)
{
  RegalContext * rCtx = GET_REGAL_CONTEXT();
  DispatchStateScopedStepDown stepDown(rCtx->dsp);
  rCtx->dsp->curr->glSampleCoverage(value, invert);
}

static void REGAL_CALL debug_glCompressedTexImage3D(GLenum target, GLint level, GLenum internalformat, GLsizei width, GLsizei height, GLsizei depth, GLint border, GLsizei imageSize, const GLvoid *data)
{
  RegalContext * rCtx = GET_REGAL_CONTEXT();
  DispatchStateScopedStepDown stepDown(rCtx->dsp);
  rCtx->dsp->curr->glCompressedTexImage3D(target, level, internalformat, width, height, depth, border, imageSize, data);
}

static void REGAL_CALL debug_glCompressedTexImage2D(GLenum target, GLint level, GLenum internalformat, GLsizei width, GLsizei height, GLint border, GLsizei imageSize, const GLvoid *data)
{
  RegalContext * rCtx = GET_REGAL_CONTEXT();
  DispatchStateScopedStepDown stepDown(rCtx->dsp);
  rCtx->dsp->curr->glCompressedTexImage2D(target, level, internalformat, width, height, border, imageSize, data);
}

static void REGAL_CALL debug_glCompressedTexImage1D(GLenum target, GLint level, GLenum internalformat, GLsizei width, GLint border, GLsizei imageSize, const GLvoid *data)
{
  RegalContext * rCtx = GET_REGAL_CONTEXT();
  DispatchStateScopedStepDown stepDown(rCtx->dsp);
  rCtx->dsp->curr->glCompressedTexImage1D(target, level, internalformat, width, border, imageSize, data);
}

static void REGAL_CALL debug_glCompressedTexSubImage3D(GLenum target, GLint level, GLint xoffset, GLint yoffset, GLint zoffset, GLsizei width, GLsizei height, GLsizei depth, GLenum format, GLsizei imageSize, const GLvoid *data)
{
  RegalContext * rCtx = GET_REGAL_CONTEXT();
  DispatchStateScopedStepDown stepDown(rCtx->dsp);
  rCtx->dsp->curr->glCompressedTexSubImage3D(target, level, xoffset, yoffset, zoffset, width, height, depth, format, imageSize, data);
}

static void REGAL_CALL debug_glCompressedTexSubImage2D(GLenum target, GLint level, GLint xoffset, GLint yoffset, GLsizei width, GLsizei height, GLenum format, GLsizei imageSize, const GLvoid *data)
{
  RegalContext * rCtx = GET_REGAL_CONTEXT();
  DispatchStateScopedStepDown stepDown(rCtx->dsp);
  rCtx->dsp->curr->glCompressedTexSubImage2D(target, level, xoffset, yoffset, width, height, format, imageSize, data);
}

static void REGAL_CALL debug_glCompressedTexSubImage1D(GLenum target, GLint level, GLint xoffset, GLsizei width, GLenum format, GLsizei imageSize, const GLvoid *data)
{
  RegalContext * rCtx = GET_REGAL_CONTEXT();
  DispatchStateScopedStepDown stepDown(rCtx->dsp);
  rCtx->dsp->curr->glCompressedTexSubImage1D(target, level, xoffset, width, format, imageSize, data);
}

static void REGAL_CALL debug_glGetCompressedTexImage(GLenum target, GLint lod, GLvoid *img)
{
  RegalContext * rCtx = GET_REGAL_CONTEXT();
  DispatchStateScopedStepDown stepDown(rCtx->dsp);
  rCtx->dsp->curr->glGetCompressedTexImage(target, lod, img);
}

static void REGAL_CALL debug_glClientActiveTexture(GLenum texture)
{
  RegalContext * rCtx = GET_REGAL_CONTEXT();
  DispatchStateScopedStepDown stepDown(rCtx->dsp);
  rCtx->dbg->ClientActiveTexture( rCtx, texture );
  rCtx->dsp->curr->glClientActiveTexture(texture);
}

static void REGAL_CALL debug_glMultiTexCoord1d(GLenum target, GLdouble s)
{
  RegalContext * rCtx = GET_REGAL_CONTEXT();
  DispatchStateScopedStepDown stepDown(rCtx->dsp);
  rCtx->dsp->curr->glMultiTexCoord1d(target, s);
}

static void REGAL_CALL debug_glMultiTexCoord1dv(GLenum target, const GLdouble *v)
{
  RegalContext * rCtx = GET_REGAL_CONTEXT();
  DispatchStateScopedStepDown stepDown(rCtx->dsp);
  rCtx->dsp->curr->glMultiTexCoord1dv(target, v);
}

static void REGAL_CALL debug_glMultiTexCoord1f(GLenum target, GLfloat s)
{
  RegalContext * rCtx = GET_REGAL_CONTEXT();
  DispatchStateScopedStepDown stepDown(rCtx->dsp);
  rCtx->dsp->curr->glMultiTexCoord1f(target, s);
}

static void REGAL_CALL debug_glMultiTexCoord1fv(GLenum target, const GLfloat *v)
{
  RegalContext * rCtx = GET_REGAL_CONTEXT();
  DispatchStateScopedStepDown stepDown(rCtx->dsp);
  rCtx->dsp->curr->glMultiTexCoord1fv(target, v);
}

static void REGAL_CALL debug_glMultiTexCoord1i(GLenum target, GLint s)
{
  RegalContext * rCtx = GET_REGAL_CONTEXT();
  DispatchStateScopedStepDown stepDown(rCtx->dsp);
  rCtx->dsp->curr->glMultiTexCoord1i(target, s);
}

static void REGAL_CALL debug_glMultiTexCoord1iv(GLenum target, const GLint *v)
{
  RegalContext * rCtx = GET_REGAL_CONTEXT();
  DispatchStateScopedStepDown stepDown(rCtx->dsp);
  rCtx->dsp->curr->glMultiTexCoord1iv(target, v);
}

static void REGAL_CALL debug_glMultiTexCoord1s(GLenum target, GLshort s)
{
  RegalContext * rCtx = GET_REGAL_CONTEXT();
  DispatchStateScopedStepDown stepDown(rCtx->dsp);
  rCtx->dsp->curr->glMultiTexCoord1s(target, s);
}

static void REGAL_CALL debug_glMultiTexCoord1sv(GLenum target, const GLshort *v)
{
  RegalContext * rCtx = GET_REGAL_CONTEXT();
  DispatchStateScopedStepDown stepDown(rCtx->dsp);
  rCtx->dsp->curr->glMultiTexCoord1sv(target, v);
}

static void REGAL_CALL debug_glMultiTexCoord2d(GLenum target, GLdouble s, GLdouble t)
{
  RegalContext * rCtx = GET_REGAL_CONTEXT();
  DispatchStateScopedStepDown stepDown(rCtx->dsp);
  rCtx->dsp->curr->glMultiTexCoord2d(target, s, t);
}

static void REGAL_CALL debug_glMultiTexCoord2dv(GLenum target, const GLdouble *v)
{
  RegalContext * rCtx = GET_REGAL_CONTEXT();
  DispatchStateScopedStepDown stepDown(rCtx->dsp);
  rCtx->dsp->curr->glMultiTexCoord2dv(target, v);
}

static void REGAL_CALL debug_glMultiTexCoord2f(GLenum target, GLfloat s, GLfloat t)
{
  RegalContext * rCtx = GET_REGAL_CONTEXT();
  DispatchStateScopedStepDown stepDown(rCtx->dsp);
  rCtx->dsp->curr->glMultiTexCoord2f(target, s, t);
}

static void REGAL_CALL debug_glMultiTexCoord2fv(GLenum target, const GLfloat *v)
{
  RegalContext * rCtx = GET_REGAL_CONTEXT();
  DispatchStateScopedStepDown stepDown(rCtx->dsp);
  rCtx->dsp->curr->glMultiTexCoord2fv(target, v);
}

static void REGAL_CALL debug_glMultiTexCoord2i(GLenum target, GLint s, GLint t)
{
  RegalContext * rCtx = GET_REGAL_CONTEXT();
  DispatchStateScopedStepDown stepDown(rCtx->dsp);
  rCtx->dsp->curr->glMultiTexCoord2i(target, s, t);
}

static void REGAL_CALL debug_glMultiTexCoord2iv(GLenum target, const GLint *v)
{
  RegalContext * rCtx = GET_REGAL_CONTEXT();
  DispatchStateScopedStepDown stepDown(rCtx->dsp);
  rCtx->dsp->curr->glMultiTexCoord2iv(target, v);
}

static void REGAL_CALL debug_glMultiTexCoord2s(GLenum target, GLshort s, GLshort t)
{
  RegalContext * rCtx = GET_REGAL_CONTEXT();
  DispatchStateScopedStepDown stepDown(rCtx->dsp);
  rCtx->dsp->curr->glMultiTexCoord2s(target, s, t);
}

static void REGAL_CALL debug_glMultiTexCoord2sv(GLenum target, const GLshort *v)
{
  RegalContext * rCtx = GET_REGAL_CONTEXT();
  DispatchStateScopedStepDown stepDown(rCtx->dsp);
  rCtx->dsp->curr->glMultiTexCoord2sv(target, v);
}

static void REGAL_CALL debug_glMultiTexCoord3d(GLenum target, GLdouble s, GLdouble t, GLdouble r)
{
  RegalContext * rCtx = GET_REGAL_CONTEXT();
  DispatchStateScopedStepDown stepDown(rCtx->dsp);
  rCtx->dsp->curr->glMultiTexCoord3d(target, s, t, r);
}

static void REGAL_CALL debug_glMultiTexCoord3dv(GLenum target, const GLdouble *v)
{
  RegalContext * rCtx = GET_REGAL_CONTEXT();
  DispatchStateScopedStepDown stepDown(rCtx->dsp);
  rCtx->dsp->curr->glMultiTexCoord3dv(target, v);
}

static void REGAL_CALL debug_glMultiTexCoord3f(GLenum target, GLfloat s, GLfloat t, GLfloat r)
{
  RegalContext * rCtx = GET_REGAL_CONTEXT();
  DispatchStateScopedStepDown stepDown(rCtx->dsp);
  rCtx->dsp->curr->glMultiTexCoord3f(target, s, t, r);
}

static void REGAL_CALL debug_glMultiTexCoord3fv(GLenum target, const GLfloat *v)
{
  RegalContext * rCtx = GET_REGAL_CONTEXT();
  DispatchStateScopedStepDown stepDown(rCtx->dsp);
  rCtx->dsp->curr->glMultiTexCoord3fv(target, v);
}

static void REGAL_CALL debug_glMultiTexCoord3i(GLenum target, GLint s, GLint t, GLint r)
{
  RegalContext * rCtx = GET_REGAL_CONTEXT();
  DispatchStateScopedStepDown stepDown(rCtx->dsp);
  rCtx->dsp->curr->glMultiTexCoord3i(target, s, t, r);
}

static void REGAL_CALL debug_glMultiTexCoord3iv(GLenum target, const GLint *v)
{
  RegalContext * rCtx = GET_REGAL_CONTEXT();
  DispatchStateScopedStepDown stepDown(rCtx->dsp);
  rCtx->dsp->curr->glMultiTexCoord3iv(target, v);
}

static void REGAL_CALL debug_glMultiTexCoord3s(GLenum target, GLshort s, GLshort t, GLshort r)
{
  RegalContext * rCtx = GET_REGAL_CONTEXT();
  DispatchStateScopedStepDown stepDown(rCtx->dsp);
  rCtx->dsp->curr->glMultiTexCoord3s(target, s, t, r);
}

static void REGAL_CALL debug_glMultiTexCoord3sv(GLenum target, const GLshort *v)
{
  RegalContext * rCtx = GET_REGAL_CONTEXT();
  DispatchStateScopedStepDown stepDown(rCtx->dsp);
  rCtx->dsp->curr->glMultiTexCoord3sv(target, v);
}

static void REGAL_CALL debug_glMultiTexCoord4d(GLenum target, GLdouble s, GLdouble t, GLdouble r, GLdouble q)
{
  RegalContext * rCtx = GET_REGAL_CONTEXT();
  DispatchStateScopedStepDown stepDown(rCtx->dsp);
  rCtx->dsp->curr->glMultiTexCoord4d(target, s, t, r, q);
}

static void REGAL_CALL debug_glMultiTexCoord4dv(GLenum target, const GLdouble *v)
{
  RegalContext * rCtx = GET_REGAL_CONTEXT();
  DispatchStateScopedStepDown stepDown(rCtx->dsp);
  rCtx->dsp->curr->glMultiTexCoord4dv(target, v);
}

static void REGAL_CALL debug_glMultiTexCoord4f(GLenum target, GLfloat s, GLfloat t, GLfloat r, GLfloat q)
{
  RegalContext * rCtx = GET_REGAL_CONTEXT();
  DispatchStateScopedStepDown stepDown(rCtx->dsp);
  rCtx->dsp->curr->glMultiTexCoord4f(target, s, t, r, q);
}

static void REGAL_CALL debug_glMultiTexCoord4fv(GLenum target, const GLfloat *v)
{
  RegalContext * rCtx = GET_REGAL_CONTEXT();
  DispatchStateScopedStepDown stepDown(rCtx->dsp);
  rCtx->dsp->curr->glMultiTexCoord4fv(target, v);
}

static void REGAL_CALL debug_glMultiTexCoord4i(GLenum target, GLint s, GLint t, GLint r, GLint q)
{
  RegalContext * rCtx = GET_REGAL_CONTEXT();
  DispatchStateScopedStepDown stepDown(rCtx->dsp);
  rCtx->dsp->curr->glMultiTexCoord4i(target, s, t, r, q);
}

static void REGAL_CALL debug_glMultiTexCoord4iv(GLenum target, const GLint *v)
{
  RegalContext * rCtx = GET_REGAL_CONTEXT();
  DispatchStateScopedStepDown stepDown(rCtx->dsp);
  rCtx->dsp->curr->glMultiTexCoord4iv(target, v);
}

static void REGAL_CALL debug_glMultiTexCoord4s(GLenum target, GLshort s, GLshort t, GLshort r, GLshort q)
{
  RegalContext * rCtx = GET_REGAL_CONTEXT();
  DispatchStateScopedStepDown stepDown(rCtx->dsp);
  rCtx->dsp->curr->glMultiTexCoord4s(target, s, t, r, q);
}

static void REGAL_CALL debug_glMultiTexCoord4sv(GLenum target, const GLshort *v)
{
  RegalContext * rCtx = GET_REGAL_CONTEXT();
  DispatchStateScopedStepDown stepDown(rCtx->dsp);
  rCtx->dsp->curr->glMultiTexCoord4sv(target, v);
}

static void REGAL_CALL debug_glLoadTransposeMatrixf(const GLfloat *m)
{
  RegalContext * rCtx = GET_REGAL_CONTEXT();
  DispatchStateScopedStepDown stepDown(rCtx->dsp);
  rCtx->dsp->curr->glLoadTransposeMatrixf(m);
}

static void REGAL_CALL debug_glLoadTransposeMatrixd(const GLdouble *m)
{
  RegalContext * rCtx = GET_REGAL_CONTEXT();
  DispatchStateScopedStepDown stepDown(rCtx->dsp);
  rCtx->dsp->curr->glLoadTransposeMatrixd(m);
}

static void REGAL_CALL debug_glMultTransposeMatrixf(const GLfloat *m)
{
  RegalContext * rCtx = GET_REGAL_CONTEXT();
  DispatchStateScopedStepDown stepDown(rCtx->dsp);
  rCtx->dsp->curr->glMultTransposeMatrixf(m);
}

static void REGAL_CALL debug_glMultTransposeMatrixd(const GLdouble *m)
{
  RegalContext * rCtx = GET_REGAL_CONTEXT();
  DispatchStateScopedStepDown stepDown(rCtx->dsp);
  rCtx->dsp->curr->glMultTransposeMatrixd(m);
}

// GL_VERSION_1_4

static void REGAL_CALL debug_glBlendFuncSeparate(GLenum sfactorRGB, GLenum dfactorRGB, GLenum sfactorAlpha, GLenum dfactorAlpha)
{
  RegalContext * rCtx = GET_REGAL_CONTEXT();
  DispatchStateScopedStepDown stepDown(rCtx->dsp);
  rCtx->dsp->curr->glBlendFuncSeparate(sfactorRGB, dfactorRGB, sfactorAlpha, dfactorAlpha);
}

static void REGAL_CALL debug_glMultiDrawArrays(GLenum mode, const GLint *first, const GLsizei *count, GLsizei primcount)
{
  RegalContext * rCtx = GET_REGAL_CONTEXT();
  DispatchStateScopedStepDown stepDown(rCtx->dsp);
  rCtx->dsp->curr->glMultiDrawArrays(mode, first, count, primcount);
}

static void REGAL_CALL debug_glMultiDrawElements(GLenum mode, const GLsizei *count, GLenum type, const GLvoid **indices, GLsizei primcount)
{
  RegalContext * rCtx = GET_REGAL_CONTEXT();
  DispatchStateScopedStepDown stepDown(rCtx->dsp);
  rCtx->dsp->curr->glMultiDrawElements(mode, count, type, indices, primcount);
}

static void REGAL_CALL debug_glPointParameterf(GLenum pname, GLfloat param)
{
  RegalContext * rCtx = GET_REGAL_CONTEXT();
  DispatchStateScopedStepDown stepDown(rCtx->dsp);
  rCtx->dsp->curr->glPointParameterf(pname, param);
}

static void REGAL_CALL debug_glPointParameterfv(GLenum pname, const GLfloat *params)
{
  RegalContext * rCtx = GET_REGAL_CONTEXT();
  DispatchStateScopedStepDown stepDown(rCtx->dsp);
  rCtx->dsp->curr->glPointParameterfv(pname, params);
}

static void REGAL_CALL debug_glPointParameteri(GLenum pname, GLint param)
{
  RegalContext * rCtx = GET_REGAL_CONTEXT();
  DispatchStateScopedStepDown stepDown(rCtx->dsp);
  rCtx->dsp->curr->glPointParameteri(pname, param);
}

static void REGAL_CALL debug_glPointParameteriv(GLenum pname, const GLint *params)
{
  RegalContext * rCtx = GET_REGAL_CONTEXT();
  DispatchStateScopedStepDown stepDown(rCtx->dsp);
  rCtx->dsp->curr->glPointParameteriv(pname, params);
}

static void REGAL_CALL debug_glFogCoordf(GLfloat coord)
{
  RegalContext * rCtx = GET_REGAL_CONTEXT();
  DispatchStateScopedStepDown stepDown(rCtx->dsp);
  rCtx->dsp->curr->glFogCoordf(coord);
}

static void REGAL_CALL debug_glFogCoordfv(const GLfloat *coord)
{
  RegalContext * rCtx = GET_REGAL_CONTEXT();
  DispatchStateScopedStepDown stepDown(rCtx->dsp);
  rCtx->dsp->curr->glFogCoordfv(coord);
}

static void REGAL_CALL debug_glFogCoordd(GLdouble coord)
{
  RegalContext * rCtx = GET_REGAL_CONTEXT();
  DispatchStateScopedStepDown stepDown(rCtx->dsp);
  rCtx->dsp->curr->glFogCoordd(coord);
}

static void REGAL_CALL debug_glFogCoorddv(const GLdouble *coord)
{
  RegalContext * rCtx = GET_REGAL_CONTEXT();
  DispatchStateScopedStepDown stepDown(rCtx->dsp);
  rCtx->dsp->curr->glFogCoorddv(coord);
}

static void REGAL_CALL debug_glFogCoordPointer(GLenum type, GLsizei stride, const GLvoid *pointer)
{
  RegalContext * rCtx = GET_REGAL_CONTEXT();
  DispatchStateScopedStepDown stepDown(rCtx->dsp);
  rCtx->dsp->curr->glFogCoordPointer(type, stride, pointer);
}

static void REGAL_CALL debug_glSecondaryColor3b(GLbyte red, GLbyte green, GLbyte blue)
{
  RegalContext * rCtx = GET_REGAL_CONTEXT();
  DispatchStateScopedStepDown stepDown(rCtx->dsp);
  rCtx->dsp->curr->glSecondaryColor3b(red, green, blue);
}

static void REGAL_CALL debug_glSecondaryColor3bv(const GLbyte *v)
{
  RegalContext * rCtx = GET_REGAL_CONTEXT();
  DispatchStateScopedStepDown stepDown(rCtx->dsp);
  rCtx->dsp->curr->glSecondaryColor3bv(v);
}

static void REGAL_CALL debug_glSecondaryColor3d(GLdouble red, GLdouble green, GLdouble blue)
{
  RegalContext * rCtx = GET_REGAL_CONTEXT();
  DispatchStateScopedStepDown stepDown(rCtx->dsp);
  rCtx->dsp->curr->glSecondaryColor3d(red, green, blue);
}

static void REGAL_CALL debug_glSecondaryColor3dv(const GLdouble *v)
{
  RegalContext * rCtx = GET_REGAL_CONTEXT();
  DispatchStateScopedStepDown stepDown(rCtx->dsp);
  rCtx->dsp->curr->glSecondaryColor3dv(v);
}

static void REGAL_CALL debug_glSecondaryColor3f(GLfloat red, GLfloat green, GLfloat blue)
{
  RegalContext * rCtx = GET_REGAL_CONTEXT();
  DispatchStateScopedStepDown stepDown(rCtx->dsp);
  rCtx->dsp->curr->glSecondaryColor3f(red, green, blue);
}

static void REGAL_CALL debug_glSecondaryColor3fv(const GLfloat *v)
{
  RegalContext * rCtx = GET_REGAL_CONTEXT();
  DispatchStateScopedStepDown stepDown(rCtx->dsp);
  rCtx->dsp->curr->glSecondaryColor3fv(v);
}

static void REGAL_CALL debug_glSecondaryColor3i(GLint red, GLint green, GLint blue)
{
  RegalContext * rCtx = GET_REGAL_CONTEXT();
  DispatchStateScopedStepDown stepDown(rCtx->dsp);
  rCtx->dsp->curr->glSecondaryColor3i(red, green, blue);
}

static void REGAL_CALL debug_glSecondaryColor3iv(const GLint *v)
{
  RegalContext * rCtx = GET_REGAL_CONTEXT();
  DispatchStateScopedStepDown stepDown(rCtx->dsp);
  rCtx->dsp->curr->glSecondaryColor3iv(v);
}

static void REGAL_CALL debug_glSecondaryColor3s(GLshort red, GLshort green, GLshort blue)
{
  RegalContext * rCtx = GET_REGAL_CONTEXT();
  DispatchStateScopedStepDown stepDown(rCtx->dsp);
  rCtx->dsp->curr->glSecondaryColor3s(red, green, blue);
}

static void REGAL_CALL debug_glSecondaryColor3sv(const GLshort *v)
{
  RegalContext * rCtx = GET_REGAL_CONTEXT();
  DispatchStateScopedStepDown stepDown(rCtx->dsp);
  rCtx->dsp->curr->glSecondaryColor3sv(v);
}

static void REGAL_CALL debug_glSecondaryColor3ub(GLubyte red, GLubyte green, GLubyte blue)
{
  RegalContext * rCtx = GET_REGAL_CONTEXT();
  DispatchStateScopedStepDown stepDown(rCtx->dsp);
  rCtx->dsp->curr->glSecondaryColor3ub(red, green, blue);
}

static void REGAL_CALL debug_glSecondaryColor3ubv(const GLubyte *v)
{
  RegalContext * rCtx = GET_REGAL_CONTEXT();
  DispatchStateScopedStepDown stepDown(rCtx->dsp);
  rCtx->dsp->curr->glSecondaryColor3ubv(v);
}

static void REGAL_CALL debug_glSecondaryColor3ui(GLuint red, GLuint green, GLuint blue)
{
  RegalContext * rCtx = GET_REGAL_CONTEXT();
  DispatchStateScopedStepDown stepDown(rCtx->dsp);
  rCtx->dsp->curr->glSecondaryColor3ui(red, green, blue);
}

static void REGAL_CALL debug_glSecondaryColor3uiv(const GLuint *v)
{
  RegalContext * rCtx = GET_REGAL_CONTEXT();
  DispatchStateScopedStepDown stepDown(rCtx->dsp);
  rCtx->dsp->curr->glSecondaryColor3uiv(v);
}

static void REGAL_CALL debug_glSecondaryColor3us(GLushort red, GLushort green, GLushort blue)
{
  RegalContext * rCtx = GET_REGAL_CONTEXT();
  DispatchStateScopedStepDown stepDown(rCtx->dsp);
  rCtx->dsp->curr->glSecondaryColor3us(red, green, blue);
}

static void REGAL_CALL debug_glSecondaryColor3usv(const GLushort *v)
{
  RegalContext * rCtx = GET_REGAL_CONTEXT();
  DispatchStateScopedStepDown stepDown(rCtx->dsp);
  rCtx->dsp->curr->glSecondaryColor3usv(v);
}

static void REGAL_CALL debug_glSecondaryColorPointer(GLint size, GLenum type, GLsizei stride, const GLvoid *pointer)
{
  RegalContext * rCtx = GET_REGAL_CONTEXT();
  DispatchStateScopedStepDown stepDown(rCtx->dsp);
  rCtx->dsp->curr->glSecondaryColorPointer(size, type, stride, pointer);
}

static void REGAL_CALL debug_glWindowPos2d(GLdouble x, GLdouble y)
{
  RegalContext * rCtx = GET_REGAL_CONTEXT();
  DispatchStateScopedStepDown stepDown(rCtx->dsp);
  rCtx->dsp->curr->glWindowPos2d(x, y);
}

static void REGAL_CALL debug_glWindowPos2dv(const GLdouble *p)
{
  RegalContext * rCtx = GET_REGAL_CONTEXT();
  DispatchStateScopedStepDown stepDown(rCtx->dsp);
  rCtx->dsp->curr->glWindowPos2dv(p);
}

static void REGAL_CALL debug_glWindowPos2f(GLfloat x, GLfloat y)
{
  RegalContext * rCtx = GET_REGAL_CONTEXT();
  DispatchStateScopedStepDown stepDown(rCtx->dsp);
  rCtx->dsp->curr->glWindowPos2f(x, y);
}

static void REGAL_CALL debug_glWindowPos2fv(const GLfloat *p)
{
  RegalContext * rCtx = GET_REGAL_CONTEXT();
  DispatchStateScopedStepDown stepDown(rCtx->dsp);
  rCtx->dsp->curr->glWindowPos2fv(p);
}

static void REGAL_CALL debug_glWindowPos2i(GLint x, GLint y)
{
  RegalContext * rCtx = GET_REGAL_CONTEXT();
  DispatchStateScopedStepDown stepDown(rCtx->dsp);
  rCtx->dsp->curr->glWindowPos2i(x, y);
}

static void REGAL_CALL debug_glWindowPos2iv(const GLint *p)
{
  RegalContext * rCtx = GET_REGAL_CONTEXT();
  DispatchStateScopedStepDown stepDown(rCtx->dsp);
  rCtx->dsp->curr->glWindowPos2iv(p);
}

static void REGAL_CALL debug_glWindowPos2s(GLshort x, GLshort y)
{
  RegalContext * rCtx = GET_REGAL_CONTEXT();
  DispatchStateScopedStepDown stepDown(rCtx->dsp);
  rCtx->dsp->curr->glWindowPos2s(x, y);
}

static void REGAL_CALL debug_glWindowPos2sv(const GLshort *p)
{
  RegalContext * rCtx = GET_REGAL_CONTEXT();
  DispatchStateScopedStepDown stepDown(rCtx->dsp);
  rCtx->dsp->curr->glWindowPos2sv(p);
}

static void REGAL_CALL debug_glWindowPos3d(GLdouble x, GLdouble y, GLdouble z)
{
  RegalContext * rCtx = GET_REGAL_CONTEXT();
  DispatchStateScopedStepDown stepDown(rCtx->dsp);
  rCtx->dsp->curr->glWindowPos3d(x, y, z);
}

static void REGAL_CALL debug_glWindowPos3dv(const GLdouble *p)
{
  RegalContext * rCtx = GET_REGAL_CONTEXT();
  DispatchStateScopedStepDown stepDown(rCtx->dsp);
  rCtx->dsp->curr->glWindowPos3dv(p);
}

static void REGAL_CALL debug_glWindowPos3f(GLfloat x, GLfloat y, GLfloat z)
{
  RegalContext * rCtx = GET_REGAL_CONTEXT();
  DispatchStateScopedStepDown stepDown(rCtx->dsp);
  rCtx->dsp->curr->glWindowPos3f(x, y, z);
}

static void REGAL_CALL debug_glWindowPos3fv(const GLfloat *p)
{
  RegalContext * rCtx = GET_REGAL_CONTEXT();
  DispatchStateScopedStepDown stepDown(rCtx->dsp);
  rCtx->dsp->curr->glWindowPos3fv(p);
}

static void REGAL_CALL debug_glWindowPos3i(GLint x, GLint y, GLint z)
{
  RegalContext * rCtx = GET_REGAL_CONTEXT();
  DispatchStateScopedStepDown stepDown(rCtx->dsp);
  rCtx->dsp->curr->glWindowPos3i(x, y, z);
}

static void REGAL_CALL debug_glWindowPos3iv(const GLint *p)
{
  RegalContext * rCtx = GET_REGAL_CONTEXT();
  DispatchStateScopedStepDown stepDown(rCtx->dsp);
  rCtx->dsp->curr->glWindowPos3iv(p);
}

static void REGAL_CALL debug_glWindowPos3s(GLshort x, GLshort y, GLshort z)
{
  RegalContext * rCtx = GET_REGAL_CONTEXT();
  DispatchStateScopedStepDown stepDown(rCtx->dsp);
  rCtx->dsp->curr->glWindowPos3s(x, y, z);
}

static void REGAL_CALL debug_glWindowPos3sv(const GLshort *p)
{
  RegalContext * rCtx = GET_REGAL_CONTEXT();
  DispatchStateScopedStepDown stepDown(rCtx->dsp);
  rCtx->dsp->curr->glWindowPos3sv(p);
}

// GL_VERSION_1_5

static void REGAL_CALL debug_glGenQueries(GLsizei n, GLuint *ids)
{
  RegalContext * rCtx = GET_REGAL_CONTEXT();
  DispatchStateScopedStepDown stepDown(rCtx->dsp);
  rCtx->dsp->curr->glGenQueries(n, ids);
}

static void REGAL_CALL debug_glDeleteQueries(GLsizei n, const GLuint *ids)
{
  RegalContext * rCtx = GET_REGAL_CONTEXT();
  DispatchStateScopedStepDown stepDown(rCtx->dsp);
  rCtx->dsp->curr->glDeleteQueries(n, ids);
}

static GLboolean REGAL_CALL debug_glIsQuery(GLuint id)
{
  RegalContext * rCtx = GET_REGAL_CONTEXT();
  DispatchStateScopedStepDown stepDown(rCtx->dsp);
  GLboolean  ret = rCtx->dsp->curr->glIsQuery(id);
  return ret;
}

static void REGAL_CALL debug_glBeginQuery(GLenum target, GLuint id)
{
  RegalContext * rCtx = GET_REGAL_CONTEXT();
  DispatchStateScopedStepDown stepDown(rCtx->dsp);
  rCtx->dsp->curr->glBeginQuery(target, id);
}

static void REGAL_CALL debug_glEndQuery(GLenum target)
{
  RegalContext * rCtx = GET_REGAL_CONTEXT();
  DispatchStateScopedStepDown stepDown(rCtx->dsp);
  rCtx->dsp->curr->glEndQuery(target);
}

static void REGAL_CALL debug_glGetQueryiv(GLenum target, GLenum pname, GLint *params)
{
  RegalContext * rCtx = GET_REGAL_CONTEXT();
  DispatchStateScopedStepDown stepDown(rCtx->dsp);
  rCtx->dsp->curr->glGetQueryiv(target, pname, params);
}

static void REGAL_CALL debug_glGetQueryObjectiv(GLuint id, GLenum pname, GLint *params)
{
  RegalContext * rCtx = GET_REGAL_CONTEXT();
  DispatchStateScopedStepDown stepDown(rCtx->dsp);
  rCtx->dsp->curr->glGetQueryObjectiv(id, pname, params);
}

static void REGAL_CALL debug_glGetQueryObjectuiv(GLuint id, GLenum pname, GLuint *params)
{
  RegalContext * rCtx = GET_REGAL_CONTEXT();
  DispatchStateScopedStepDown stepDown(rCtx->dsp);
  rCtx->dsp->curr->glGetQueryObjectuiv(id, pname, params);
}

static void REGAL_CALL debug_glBindBuffer(GLenum target, GLuint buffer)
{
  RegalContext * rCtx = GET_REGAL_CONTEXT();
  DispatchStateScopedStepDown stepDown(rCtx->dsp);
  rCtx->dsp->curr->glBindBuffer(target, buffer);
}

static void REGAL_CALL debug_glDeleteBuffers(GLsizei n, const GLuint *buffers)
{
  RegalContext * rCtx = GET_REGAL_CONTEXT();
  DispatchStateScopedStepDown stepDown(rCtx->dsp);
  rCtx->dsp->curr->glDeleteBuffers(n, buffers);
}

static void REGAL_CALL debug_glGenBuffers(GLsizei n, GLuint *buffers)
{
  RegalContext * rCtx = GET_REGAL_CONTEXT();
  DispatchStateScopedStepDown stepDown(rCtx->dsp);
  rCtx->dsp->curr->glGenBuffers(n, buffers);
}

static GLboolean REGAL_CALL debug_glIsBuffer(GLuint buffer)
{
  RegalContext * rCtx = GET_REGAL_CONTEXT();
  DispatchStateScopedStepDown stepDown(rCtx->dsp);
  GLboolean  ret = rCtx->dsp->curr->glIsBuffer(buffer);
  return ret;
}

static void REGAL_CALL debug_glBufferData(GLenum target, GLsizeiptr size, const GLvoid *data, GLenum usage)
{
  RegalContext * rCtx = GET_REGAL_CONTEXT();
  DispatchStateScopedStepDown stepDown(rCtx->dsp);
  rCtx->dsp->curr->glBufferData(target, size, data, usage);
}

static void REGAL_CALL debug_glBufferSubData(GLenum target, GLintptr offset, GLsizeiptr size, const GLvoid *data)
{
  RegalContext * rCtx = GET_REGAL_CONTEXT();
  DispatchStateScopedStepDown stepDown(rCtx->dsp);
  rCtx->dsp->curr->glBufferSubData(target, offset, size, data);
}

static void REGAL_CALL debug_glGetBufferSubData(GLenum target, GLintptr offset, GLsizeiptr size, GLvoid *data)
{
  RegalContext * rCtx = GET_REGAL_CONTEXT();
  DispatchStateScopedStepDown stepDown(rCtx->dsp);
  rCtx->dsp->curr->glGetBufferSubData(target, offset, size, data);
}

static GLvoid *REGAL_CALL debug_glMapBuffer(GLenum target, GLenum access)
{
  RegalContext * rCtx = GET_REGAL_CONTEXT();
  DispatchStateScopedStepDown stepDown(rCtx->dsp);
  GLvoid * ret = rCtx->dsp->curr->glMapBuffer(target, access);
  return ret;
}

static GLboolean REGAL_CALL debug_glUnmapBuffer(GLenum target)
{
  RegalContext * rCtx = GET_REGAL_CONTEXT();
  DispatchStateScopedStepDown stepDown(rCtx->dsp);
  GLboolean  ret = rCtx->dsp->curr->glUnmapBuffer(target);
  return ret;
}

static void REGAL_CALL debug_glGetBufferParameteriv(GLenum target, GLenum pname, GLint *params)
{
  RegalContext * rCtx = GET_REGAL_CONTEXT();
  DispatchStateScopedStepDown stepDown(rCtx->dsp);
  rCtx->dsp->curr->glGetBufferParameteriv(target, pname, params);
}

static void REGAL_CALL debug_glGetBufferPointerv(GLenum target, GLenum pname, GLvoid **params)
{
  RegalContext * rCtx = GET_REGAL_CONTEXT();
  DispatchStateScopedStepDown stepDown(rCtx->dsp);
  rCtx->dsp->curr->glGetBufferPointerv(target, pname, params);
}

// GL_VERSION_2_0

static void REGAL_CALL debug_glBlendEquationSeparate(GLenum modeRGB, GLenum modeAlpha)
{
  RegalContext * rCtx = GET_REGAL_CONTEXT();
  DispatchStateScopedStepDown stepDown(rCtx->dsp);
  rCtx->dsp->curr->glBlendEquationSeparate(modeRGB, modeAlpha);
}

static void REGAL_CALL debug_glDrawBuffers(GLsizei n, const GLenum *bufs)
{
  RegalContext * rCtx = GET_REGAL_CONTEXT();
  DispatchStateScopedStepDown stepDown(rCtx->dsp);
  rCtx->dsp->curr->glDrawBuffers(n, bufs);
}

static void REGAL_CALL debug_glStencilOpSeparate(GLenum face, GLenum fail, GLenum zfail, GLenum zpass)
{
  RegalContext * rCtx = GET_REGAL_CONTEXT();
  DispatchStateScopedStepDown stepDown(rCtx->dsp);
  rCtx->dsp->curr->glStencilOpSeparate(face, fail, zfail, zpass);
}

static void REGAL_CALL debug_glStencilFuncSeparate(GLenum face, GLenum func, GLint ref, GLuint mask)
{
  RegalContext * rCtx = GET_REGAL_CONTEXT();
  DispatchStateScopedStepDown stepDown(rCtx->dsp);
  rCtx->dsp->curr->glStencilFuncSeparate(face, func, ref, mask);
}

static void REGAL_CALL debug_glStencilMaskSeparate(GLenum face, GLuint mask)
{
  RegalContext * rCtx = GET_REGAL_CONTEXT();
  DispatchStateScopedStepDown stepDown(rCtx->dsp);
  rCtx->dsp->curr->glStencilMaskSeparate(face, mask);
}

static void REGAL_CALL debug_glAttachShader(GLuint program, GLuint shader)
{
  RegalContext * rCtx = GET_REGAL_CONTEXT();
  DispatchStateScopedStepDown stepDown(rCtx->dsp);
  rCtx->dsp->curr->glAttachShader(program, shader);
}

static void REGAL_CALL debug_glBindAttribLocation(GLuint program, GLuint index, const GLchar *name)
{
  RegalContext * rCtx = GET_REGAL_CONTEXT();
  DispatchStateScopedStepDown stepDown(rCtx->dsp);
  rCtx->dsp->curr->glBindAttribLocation(program, index, name);
}

static void REGAL_CALL debug_glCompileShader(GLuint shader)
{
  RegalContext * rCtx = GET_REGAL_CONTEXT();
  DispatchStateScopedStepDown stepDown(rCtx->dsp);
  rCtx->dsp->curr->glCompileShader(shader);
}

static GLuint REGAL_CALL debug_glCreateProgram(void)
{
  RegalContext * rCtx = GET_REGAL_CONTEXT();
  DispatchStateScopedStepDown stepDown(rCtx->dsp);
  GLuint  ret = rCtx->dsp->curr->glCreateProgram();
  return ret;
}

static GLuint REGAL_CALL debug_glCreateShader(GLenum type)
{
  RegalContext * rCtx = GET_REGAL_CONTEXT();
  DispatchStateScopedStepDown stepDown(rCtx->dsp);
  GLuint  ret = rCtx->dsp->curr->glCreateShader(type);
  return ret;
}

static void REGAL_CALL debug_glDeleteProgram(GLuint program)
{
  RegalContext * rCtx = GET_REGAL_CONTEXT();
  DispatchStateScopedStepDown stepDown(rCtx->dsp);
  rCtx->dsp->curr->glDeleteProgram(program);
}

static void REGAL_CALL debug_glDeleteShader(GLuint shader)
{
  RegalContext * rCtx = GET_REGAL_CONTEXT();
  DispatchStateScopedStepDown stepDown(rCtx->dsp);
  rCtx->dsp->curr->glDeleteShader(shader);
}

static void REGAL_CALL debug_glDetachShader(GLuint program, GLuint shader)
{
  RegalContext * rCtx = GET_REGAL_CONTEXT();
  DispatchStateScopedStepDown stepDown(rCtx->dsp);
  rCtx->dsp->curr->glDetachShader(program, shader);
}

static void REGAL_CALL debug_glDisableVertexAttribArray(GLuint index)
{
  RegalContext * rCtx = GET_REGAL_CONTEXT();
  DispatchStateScopedStepDown stepDown(rCtx->dsp);
  rCtx->dsp->curr->glDisableVertexAttribArray(index);
}

static void REGAL_CALL debug_glEnableVertexAttribArray(GLuint index)
{
  RegalContext * rCtx = GET_REGAL_CONTEXT();
  DispatchStateScopedStepDown stepDown(rCtx->dsp);
  rCtx->dsp->curr->glEnableVertexAttribArray(index);
}

static void REGAL_CALL debug_glGetActiveAttrib(GLuint program, GLuint index, GLsizei bufSize, GLsizei *length, GLint *size, GLenum *type, GLchar *name)
{
  RegalContext * rCtx = GET_REGAL_CONTEXT();
  DispatchStateScopedStepDown stepDown(rCtx->dsp);
  rCtx->dsp->curr->glGetActiveAttrib(program, index, bufSize, length, size, type, name);
}

static void REGAL_CALL debug_glGetActiveUniform(GLuint program, GLuint index, GLsizei bufSize, GLsizei *length, GLint *size, GLenum *type, GLchar *name)
{
  RegalContext * rCtx = GET_REGAL_CONTEXT();
  DispatchStateScopedStepDown stepDown(rCtx->dsp);
  rCtx->dsp->curr->glGetActiveUniform(program, index, bufSize, length, size, type, name);
}

static void REGAL_CALL debug_glGetAttachedShaders(GLuint program, GLsizei maxCount, GLsizei *count, GLuint *shaders)
{
  RegalContext * rCtx = GET_REGAL_CONTEXT();
  DispatchStateScopedStepDown stepDown(rCtx->dsp);
  rCtx->dsp->curr->glGetAttachedShaders(program, maxCount, count, shaders);
}

static GLint REGAL_CALL debug_glGetAttribLocation(GLuint program, const GLchar *name)
{
  RegalContext * rCtx = GET_REGAL_CONTEXT();
  DispatchStateScopedStepDown stepDown(rCtx->dsp);
  GLint  ret = rCtx->dsp->curr->glGetAttribLocation(program, name);
  return ret;
}

static void REGAL_CALL debug_glGetProgramiv(GLuint program, GLenum pname, GLint *params)
{
  RegalContext * rCtx = GET_REGAL_CONTEXT();
  DispatchStateScopedStepDown stepDown(rCtx->dsp);
  rCtx->dsp->curr->glGetProgramiv(program, pname, params);
}

static void REGAL_CALL debug_glGetProgramInfoLog(GLuint program, GLsizei bufSize, GLsizei *length, GLchar *infoLog)
{
  RegalContext * rCtx = GET_REGAL_CONTEXT();
  DispatchStateScopedStepDown stepDown(rCtx->dsp);
  rCtx->dsp->curr->glGetProgramInfoLog(program, bufSize, length, infoLog);
}

static void REGAL_CALL debug_glGetShaderiv(GLuint shader, GLenum pname, GLint *params)
{
  RegalContext * rCtx = GET_REGAL_CONTEXT();
  DispatchStateScopedStepDown stepDown(rCtx->dsp);
  rCtx->dsp->curr->glGetShaderiv(shader, pname, params);
}

static void REGAL_CALL debug_glGetShaderInfoLog(GLuint shader, GLsizei bufSize, GLsizei *length, GLchar *infoLog)
{
  RegalContext * rCtx = GET_REGAL_CONTEXT();
  DispatchStateScopedStepDown stepDown(rCtx->dsp);
  rCtx->dsp->curr->glGetShaderInfoLog(shader, bufSize, length, infoLog);
}

static void REGAL_CALL debug_glGetShaderSource(GLuint shader, GLsizei bufSize, GLsizei *length, GLchar *source)
{
  RegalContext * rCtx = GET_REGAL_CONTEXT();
  DispatchStateScopedStepDown stepDown(rCtx->dsp);
  rCtx->dsp->curr->glGetShaderSource(shader, bufSize, length, source);
}

static GLint REGAL_CALL debug_glGetUniformLocation(GLuint program, const GLchar *name)
{
  RegalContext * rCtx = GET_REGAL_CONTEXT();
  DispatchStateScopedStepDown stepDown(rCtx->dsp);
  GLint  ret = rCtx->dsp->curr->glGetUniformLocation(program, name);
  return ret;
}

static void REGAL_CALL debug_glGetUniformfv(GLuint program, GLint location, GLfloat *params)
{
  RegalContext * rCtx = GET_REGAL_CONTEXT();
  DispatchStateScopedStepDown stepDown(rCtx->dsp);
  rCtx->dsp->curr->glGetUniformfv(program, location, params);
}

static void REGAL_CALL debug_glGetUniformiv(GLuint program, GLint location, GLint *params)
{
  RegalContext * rCtx = GET_REGAL_CONTEXT();
  DispatchStateScopedStepDown stepDown(rCtx->dsp);
  rCtx->dsp->curr->glGetUniformiv(program, location, params);
}

static void REGAL_CALL debug_glGetVertexAttribdv(GLuint index, GLenum pname, GLdouble *params)
{
  RegalContext * rCtx = GET_REGAL_CONTEXT();
  DispatchStateScopedStepDown stepDown(rCtx->dsp);
  rCtx->dsp->curr->glGetVertexAttribdv(index, pname, params);
}

static void REGAL_CALL debug_glGetVertexAttribfv(GLuint index, GLenum pname, GLfloat *params)
{
  RegalContext * rCtx = GET_REGAL_CONTEXT();
  DispatchStateScopedStepDown stepDown(rCtx->dsp);
  rCtx->dsp->curr->glGetVertexAttribfv(index, pname, params);
}

static void REGAL_CALL debug_glGetVertexAttribiv(GLuint index, GLenum pname, GLint *params)
{
  RegalContext * rCtx = GET_REGAL_CONTEXT();
  DispatchStateScopedStepDown stepDown(rCtx->dsp);
  rCtx->dsp->curr->glGetVertexAttribiv(index, pname, params);
}

static void REGAL_CALL debug_glGetVertexAttribPointerv(GLuint index, GLenum pname, GLvoid **pointer)
{
  RegalContext * rCtx = GET_REGAL_CONTEXT();
  DispatchStateScopedStepDown stepDown(rCtx->dsp);
  rCtx->dsp->curr->glGetVertexAttribPointerv(index, pname, pointer);
}

static GLboolean REGAL_CALL debug_glIsProgram(GLuint program)
{
  RegalContext * rCtx = GET_REGAL_CONTEXT();
  DispatchStateScopedStepDown stepDown(rCtx->dsp);
  GLboolean  ret = rCtx->dsp->curr->glIsProgram(program);
  return ret;
}

static GLboolean REGAL_CALL debug_glIsShader(GLuint shader)
{
  RegalContext * rCtx = GET_REGAL_CONTEXT();
  DispatchStateScopedStepDown stepDown(rCtx->dsp);
  GLboolean  ret = rCtx->dsp->curr->glIsShader(shader);
  return ret;
}

static void REGAL_CALL debug_glLinkProgram(GLuint program)
{
  RegalContext * rCtx = GET_REGAL_CONTEXT();
  DispatchStateScopedStepDown stepDown(rCtx->dsp);
  rCtx->dsp->curr->glLinkProgram(program);
}

static void REGAL_CALL debug_glShaderSource(GLuint shader, GLsizei count, const GLchar **string, const GLint *length)
{
  RegalContext * rCtx = GET_REGAL_CONTEXT();
  DispatchStateScopedStepDown stepDown(rCtx->dsp);
  rCtx->dsp->curr->glShaderSource(shader, count, string, length);
}

static void REGAL_CALL debug_glUseProgram(GLuint program)
{
  RegalContext * rCtx = GET_REGAL_CONTEXT();
  DispatchStateScopedStepDown stepDown(rCtx->dsp);
  rCtx->dsp->curr->glUseProgram(program);
}

static void REGAL_CALL debug_glUniform1f(GLint location, GLfloat v0)
{
  RegalContext * rCtx = GET_REGAL_CONTEXT();
  DispatchStateScopedStepDown stepDown(rCtx->dsp);
  rCtx->dsp->curr->glUniform1f(location, v0);
}

static void REGAL_CALL debug_glUniform2f(GLint location, GLfloat v0, GLfloat v1)
{
  RegalContext * rCtx = GET_REGAL_CONTEXT();
  DispatchStateScopedStepDown stepDown(rCtx->dsp);
  rCtx->dsp->curr->glUniform2f(location, v0, v1);
}

static void REGAL_CALL debug_glUniform3f(GLint location, GLfloat v0, GLfloat v1, GLfloat v2)
{
  RegalContext * rCtx = GET_REGAL_CONTEXT();
  DispatchStateScopedStepDown stepDown(rCtx->dsp);
  rCtx->dsp->curr->glUniform3f(location, v0, v1, v2);
}

static void REGAL_CALL debug_glUniform4f(GLint location, GLfloat v0, GLfloat v1, GLfloat v2, GLfloat v3)
{
  RegalContext * rCtx = GET_REGAL_CONTEXT();
  DispatchStateScopedStepDown stepDown(rCtx->dsp);
  rCtx->dsp->curr->glUniform4f(location, v0, v1, v2, v3);
}

static void REGAL_CALL debug_glUniform1i(GLint location, GLint v0)
{
  RegalContext * rCtx = GET_REGAL_CONTEXT();
  DispatchStateScopedStepDown stepDown(rCtx->dsp);
  rCtx->dsp->curr->glUniform1i(location, v0);
}

static void REGAL_CALL debug_glUniform2i(GLint location, GLint v0, GLint v1)
{
  RegalContext * rCtx = GET_REGAL_CONTEXT();
  DispatchStateScopedStepDown stepDown(rCtx->dsp);
  rCtx->dsp->curr->glUniform2i(location, v0, v1);
}

static void REGAL_CALL debug_glUniform3i(GLint location, GLint v0, GLint v1, GLint v2)
{
  RegalContext * rCtx = GET_REGAL_CONTEXT();
  DispatchStateScopedStepDown stepDown(rCtx->dsp);
  rCtx->dsp->curr->glUniform3i(location, v0, v1, v2);
}

static void REGAL_CALL debug_glUniform4i(GLint location, GLint v0, GLint v1, GLint v2, GLint v3)
{
  RegalContext * rCtx = GET_REGAL_CONTEXT();
  DispatchStateScopedStepDown stepDown(rCtx->dsp);
  rCtx->dsp->curr->glUniform4i(location, v0, v1, v2, v3);
}

static void REGAL_CALL debug_glUniform1fv(GLint location, GLsizei count, const GLfloat *value)
{
  RegalContext * rCtx = GET_REGAL_CONTEXT();
  DispatchStateScopedStepDown stepDown(rCtx->dsp);
  rCtx->dsp->curr->glUniform1fv(location, count, value);
}

static void REGAL_CALL debug_glUniform2fv(GLint location, GLsizei count, const GLfloat *value)
{
  RegalContext * rCtx = GET_REGAL_CONTEXT();
  DispatchStateScopedStepDown stepDown(rCtx->dsp);
  rCtx->dsp->curr->glUniform2fv(location, count, value);
}

static void REGAL_CALL debug_glUniform3fv(GLint location, GLsizei count, const GLfloat *value)
{
  RegalContext * rCtx = GET_REGAL_CONTEXT();
  DispatchStateScopedStepDown stepDown(rCtx->dsp);
  rCtx->dsp->curr->glUniform3fv(location, count, value);
}

static void REGAL_CALL debug_glUniform4fv(GLint location, GLsizei count, const GLfloat *value)
{
  RegalContext * rCtx = GET_REGAL_CONTEXT();
  DispatchStateScopedStepDown stepDown(rCtx->dsp);
  rCtx->dsp->curr->glUniform4fv(location, count, value);
}

static void REGAL_CALL debug_glUniform1iv(GLint location, GLsizei count, const GLint *value)
{
  RegalContext * rCtx = GET_REGAL_CONTEXT();
  DispatchStateScopedStepDown stepDown(rCtx->dsp);
  rCtx->dsp->curr->glUniform1iv(location, count, value);
}

static void REGAL_CALL debug_glUniform2iv(GLint location, GLsizei count, const GLint *value)
{
  RegalContext * rCtx = GET_REGAL_CONTEXT();
  DispatchStateScopedStepDown stepDown(rCtx->dsp);
  rCtx->dsp->curr->glUniform2iv(location, count, value);
}

static void REGAL_CALL debug_glUniform3iv(GLint location, GLsizei count, const GLint *value)
{
  RegalContext * rCtx = GET_REGAL_CONTEXT();
  DispatchStateScopedStepDown stepDown(rCtx->dsp);
  rCtx->dsp->curr->glUniform3iv(location, count, value);
}

static void REGAL_CALL debug_glUniform4iv(GLint location, GLsizei count, const GLint *value)
{
  RegalContext * rCtx = GET_REGAL_CONTEXT();
  DispatchStateScopedStepDown stepDown(rCtx->dsp);
  rCtx->dsp->curr->glUniform4iv(location, count, value);
}

static void REGAL_CALL debug_glUniformMatrix2fv(GLint location, GLsizei count, GLboolean transpose, const GLfloat *value)
{
  RegalContext * rCtx = GET_REGAL_CONTEXT();
  DispatchStateScopedStepDown stepDown(rCtx->dsp);
  rCtx->dsp->curr->glUniformMatrix2fv(location, count, transpose, value);
}

static void REGAL_CALL debug_glUniformMatrix3fv(GLint location, GLsizei count, GLboolean transpose, const GLfloat *value)
{
  RegalContext * rCtx = GET_REGAL_CONTEXT();
  DispatchStateScopedStepDown stepDown(rCtx->dsp);
  rCtx->dsp->curr->glUniformMatrix3fv(location, count, transpose, value);
}

static void REGAL_CALL debug_glUniformMatrix4fv(GLint location, GLsizei count, GLboolean transpose, const GLfloat *value)
{
  RegalContext * rCtx = GET_REGAL_CONTEXT();
  DispatchStateScopedStepDown stepDown(rCtx->dsp);
  rCtx->dsp->curr->glUniformMatrix4fv(location, count, transpose, value);
}

static void REGAL_CALL debug_glValidateProgram(GLuint program)
{
  RegalContext * rCtx = GET_REGAL_CONTEXT();
  DispatchStateScopedStepDown stepDown(rCtx->dsp);
  rCtx->dsp->curr->glValidateProgram(program);
}

static void REGAL_CALL debug_glVertexAttrib1d(GLuint index, GLdouble x)
{
  RegalContext * rCtx = GET_REGAL_CONTEXT();
  DispatchStateScopedStepDown stepDown(rCtx->dsp);
  rCtx->dsp->curr->glVertexAttrib1d(index, x);
}

static void REGAL_CALL debug_glVertexAttrib1dv(GLuint index, const GLdouble *v)
{
  RegalContext * rCtx = GET_REGAL_CONTEXT();
  DispatchStateScopedStepDown stepDown(rCtx->dsp);
  rCtx->dsp->curr->glVertexAttrib1dv(index, v);
}

static void REGAL_CALL debug_glVertexAttrib1f(GLuint index, GLfloat x)
{
  RegalContext * rCtx = GET_REGAL_CONTEXT();
  DispatchStateScopedStepDown stepDown(rCtx->dsp);
  rCtx->dsp->curr->glVertexAttrib1f(index, x);
}

static void REGAL_CALL debug_glVertexAttrib1fv(GLuint index, const GLfloat *v)
{
  RegalContext * rCtx = GET_REGAL_CONTEXT();
  DispatchStateScopedStepDown stepDown(rCtx->dsp);
  rCtx->dsp->curr->glVertexAttrib1fv(index, v);
}

static void REGAL_CALL debug_glVertexAttrib1s(GLuint index, GLshort x)
{
  RegalContext * rCtx = GET_REGAL_CONTEXT();
  DispatchStateScopedStepDown stepDown(rCtx->dsp);
  rCtx->dsp->curr->glVertexAttrib1s(index, x);
}

static void REGAL_CALL debug_glVertexAttrib1sv(GLuint index, const GLshort *v)
{
  RegalContext * rCtx = GET_REGAL_CONTEXT();
  DispatchStateScopedStepDown stepDown(rCtx->dsp);
  rCtx->dsp->curr->glVertexAttrib1sv(index, v);
}

static void REGAL_CALL debug_glVertexAttrib2d(GLuint index, GLdouble x, GLdouble y)
{
  RegalContext * rCtx = GET_REGAL_CONTEXT();
  DispatchStateScopedStepDown stepDown(rCtx->dsp);
  rCtx->dsp->curr->glVertexAttrib2d(index, x, y);
}

static void REGAL_CALL debug_glVertexAttrib2dv(GLuint index, const GLdouble *v)
{
  RegalContext * rCtx = GET_REGAL_CONTEXT();
  DispatchStateScopedStepDown stepDown(rCtx->dsp);
  rCtx->dsp->curr->glVertexAttrib2dv(index, v);
}

static void REGAL_CALL debug_glVertexAttrib2f(GLuint index, GLfloat x, GLfloat y)
{
  RegalContext * rCtx = GET_REGAL_CONTEXT();
  DispatchStateScopedStepDown stepDown(rCtx->dsp);
  rCtx->dsp->curr->glVertexAttrib2f(index, x, y);
}

static void REGAL_CALL debug_glVertexAttrib2fv(GLuint index, const GLfloat *v)
{
  RegalContext * rCtx = GET_REGAL_CONTEXT();
  DispatchStateScopedStepDown stepDown(rCtx->dsp);
  rCtx->dsp->curr->glVertexAttrib2fv(index, v);
}

static void REGAL_CALL debug_glVertexAttrib2s(GLuint index, GLshort x, GLshort y)
{
  RegalContext * rCtx = GET_REGAL_CONTEXT();
  DispatchStateScopedStepDown stepDown(rCtx->dsp);
  rCtx->dsp->curr->glVertexAttrib2s(index, x, y);
}

static void REGAL_CALL debug_glVertexAttrib2sv(GLuint index, const GLshort *v)
{
  RegalContext * rCtx = GET_REGAL_CONTEXT();
  DispatchStateScopedStepDown stepDown(rCtx->dsp);
  rCtx->dsp->curr->glVertexAttrib2sv(index, v);
}

static void REGAL_CALL debug_glVertexAttrib3d(GLuint index, GLdouble x, GLdouble y, GLdouble z)
{
  RegalContext * rCtx = GET_REGAL_CONTEXT();
  DispatchStateScopedStepDown stepDown(rCtx->dsp);
  rCtx->dsp->curr->glVertexAttrib3d(index, x, y, z);
}

static void REGAL_CALL debug_glVertexAttrib3dv(GLuint index, const GLdouble *v)
{
  RegalContext * rCtx = GET_REGAL_CONTEXT();
  DispatchStateScopedStepDown stepDown(rCtx->dsp);
  rCtx->dsp->curr->glVertexAttrib3dv(index, v);
}

static void REGAL_CALL debug_glVertexAttrib3f(GLuint index, GLfloat x, GLfloat y, GLfloat z)
{
  RegalContext * rCtx = GET_REGAL_CONTEXT();
  DispatchStateScopedStepDown stepDown(rCtx->dsp);
  rCtx->dsp->curr->glVertexAttrib3f(index, x, y, z);
}

static void REGAL_CALL debug_glVertexAttrib3fv(GLuint index, const GLfloat *v)
{
  RegalContext * rCtx = GET_REGAL_CONTEXT();
  DispatchStateScopedStepDown stepDown(rCtx->dsp);
  rCtx->dsp->curr->glVertexAttrib3fv(index, v);
}

static void REGAL_CALL debug_glVertexAttrib3s(GLuint index, GLshort x, GLshort y, GLshort z)
{
  RegalContext * rCtx = GET_REGAL_CONTEXT();
  DispatchStateScopedStepDown stepDown(rCtx->dsp);
  rCtx->dsp->curr->glVertexAttrib3s(index, x, y, z);
}

static void REGAL_CALL debug_glVertexAttrib3sv(GLuint index, const GLshort *v)
{
  RegalContext * rCtx = GET_REGAL_CONTEXT();
  DispatchStateScopedStepDown stepDown(rCtx->dsp);
  rCtx->dsp->curr->glVertexAttrib3sv(index, v);
}

static void REGAL_CALL debug_glVertexAttrib4Nbv(GLuint index, const GLbyte *v)
{
  RegalContext * rCtx = GET_REGAL_CONTEXT();
  DispatchStateScopedStepDown stepDown(rCtx->dsp);
  rCtx->dsp->curr->glVertexAttrib4Nbv(index, v);
}

static void REGAL_CALL debug_glVertexAttrib4Niv(GLuint index, const GLint *v)
{
  RegalContext * rCtx = GET_REGAL_CONTEXT();
  DispatchStateScopedStepDown stepDown(rCtx->dsp);
  rCtx->dsp->curr->glVertexAttrib4Niv(index, v);
}

static void REGAL_CALL debug_glVertexAttrib4Nsv(GLuint index, const GLshort *v)
{
  RegalContext * rCtx = GET_REGAL_CONTEXT();
  DispatchStateScopedStepDown stepDown(rCtx->dsp);
  rCtx->dsp->curr->glVertexAttrib4Nsv(index, v);
}

static void REGAL_CALL debug_glVertexAttrib4Nub(GLuint index, GLubyte x, GLubyte y, GLubyte z, GLubyte w)
{
  RegalContext * rCtx = GET_REGAL_CONTEXT();
  DispatchStateScopedStepDown stepDown(rCtx->dsp);
  rCtx->dsp->curr->glVertexAttrib4Nub(index, x, y, z, w);
}

static void REGAL_CALL debug_glVertexAttrib4Nubv(GLuint index, const GLubyte *v)
{
  RegalContext * rCtx = GET_REGAL_CONTEXT();
  DispatchStateScopedStepDown stepDown(rCtx->dsp);
  rCtx->dsp->curr->glVertexAttrib4Nubv(index, v);
}

static void REGAL_CALL debug_glVertexAttrib4Nuiv(GLuint index, const GLuint *v)
{
  RegalContext * rCtx = GET_REGAL_CONTEXT();
  DispatchStateScopedStepDown stepDown(rCtx->dsp);
  rCtx->dsp->curr->glVertexAttrib4Nuiv(index, v);
}

static void REGAL_CALL debug_glVertexAttrib4Nusv(GLuint index, const GLushort *v)
{
  RegalContext * rCtx = GET_REGAL_CONTEXT();
  DispatchStateScopedStepDown stepDown(rCtx->dsp);
  rCtx->dsp->curr->glVertexAttrib4Nusv(index, v);
}

static void REGAL_CALL debug_glVertexAttrib4bv(GLuint index, const GLbyte *v)
{
  RegalContext * rCtx = GET_REGAL_CONTEXT();
  DispatchStateScopedStepDown stepDown(rCtx->dsp);
  rCtx->dsp->curr->glVertexAttrib4bv(index, v);
}

static void REGAL_CALL debug_glVertexAttrib4d(GLuint index, GLdouble x, GLdouble y, GLdouble z, GLdouble w)
{
  RegalContext * rCtx = GET_REGAL_CONTEXT();
  DispatchStateScopedStepDown stepDown(rCtx->dsp);
  rCtx->dsp->curr->glVertexAttrib4d(index, x, y, z, w);
}

static void REGAL_CALL debug_glVertexAttrib4dv(GLuint index, const GLdouble *v)
{
  RegalContext * rCtx = GET_REGAL_CONTEXT();
  DispatchStateScopedStepDown stepDown(rCtx->dsp);
  rCtx->dsp->curr->glVertexAttrib4dv(index, v);
}

static void REGAL_CALL debug_glVertexAttrib4f(GLuint index, GLfloat x, GLfloat y, GLfloat z, GLfloat w)
{
  RegalContext * rCtx = GET_REGAL_CONTEXT();
  DispatchStateScopedStepDown stepDown(rCtx->dsp);
  rCtx->dsp->curr->glVertexAttrib4f(index, x, y, z, w);
}

static void REGAL_CALL debug_glVertexAttrib4fv(GLuint index, const GLfloat *v)
{
  RegalContext * rCtx = GET_REGAL_CONTEXT();
  DispatchStateScopedStepDown stepDown(rCtx->dsp);
  rCtx->dsp->curr->glVertexAttrib4fv(index, v);
}

static void REGAL_CALL debug_glVertexAttrib4iv(GLuint index, const GLint *v)
{
  RegalContext * rCtx = GET_REGAL_CONTEXT();
  DispatchStateScopedStepDown stepDown(rCtx->dsp);
  rCtx->dsp->curr->glVertexAttrib4iv(index, v);
}

static void REGAL_CALL debug_glVertexAttrib4s(GLuint index, GLshort x, GLshort y, GLshort z, GLshort w)
{
  RegalContext * rCtx = GET_REGAL_CONTEXT();
  DispatchStateScopedStepDown stepDown(rCtx->dsp);
  rCtx->dsp->curr->glVertexAttrib4s(index, x, y, z, w);
}

static void REGAL_CALL debug_glVertexAttrib4sv(GLuint index, const GLshort *v)
{
  RegalContext * rCtx = GET_REGAL_CONTEXT();
  DispatchStateScopedStepDown stepDown(rCtx->dsp);
  rCtx->dsp->curr->glVertexAttrib4sv(index, v);
}

static void REGAL_CALL debug_glVertexAttrib4ubv(GLuint index, const GLubyte *v)
{
  RegalContext * rCtx = GET_REGAL_CONTEXT();
  DispatchStateScopedStepDown stepDown(rCtx->dsp);
  rCtx->dsp->curr->glVertexAttrib4ubv(index, v);
}

static void REGAL_CALL debug_glVertexAttrib4uiv(GLuint index, const GLuint *v)
{
  RegalContext * rCtx = GET_REGAL_CONTEXT();
  DispatchStateScopedStepDown stepDown(rCtx->dsp);
  rCtx->dsp->curr->glVertexAttrib4uiv(index, v);
}

static void REGAL_CALL debug_glVertexAttrib4usv(GLuint index, const GLushort *v)
{
  RegalContext * rCtx = GET_REGAL_CONTEXT();
  DispatchStateScopedStepDown stepDown(rCtx->dsp);
  rCtx->dsp->curr->glVertexAttrib4usv(index, v);
}

static void REGAL_CALL debug_glVertexAttribPointer(GLuint index, GLint size, GLenum type, GLboolean normalized, GLsizei stride, const GLvoid *pointer)
{
  RegalContext * rCtx = GET_REGAL_CONTEXT();
  DispatchStateScopedStepDown stepDown(rCtx->dsp);
  rCtx->dsp->curr->glVertexAttribPointer(index, size, type, normalized, stride, pointer);
}

// GL_VERSION_2_1

static void REGAL_CALL debug_glUniformMatrix2x3fv(GLint location, GLsizei count, GLboolean transpose, const GLfloat *value)
{
  RegalContext * rCtx = GET_REGAL_CONTEXT();
  DispatchStateScopedStepDown stepDown(rCtx->dsp);
  rCtx->dsp->curr->glUniformMatrix2x3fv(location, count, transpose, value);
}

static void REGAL_CALL debug_glUniformMatrix3x2fv(GLint location, GLsizei count, GLboolean transpose, const GLfloat *value)
{
  RegalContext * rCtx = GET_REGAL_CONTEXT();
  DispatchStateScopedStepDown stepDown(rCtx->dsp);
  rCtx->dsp->curr->glUniformMatrix3x2fv(location, count, transpose, value);
}

static void REGAL_CALL debug_glUniformMatrix2x4fv(GLint location, GLsizei count, GLboolean transpose, const GLfloat *value)
{
  RegalContext * rCtx = GET_REGAL_CONTEXT();
  DispatchStateScopedStepDown stepDown(rCtx->dsp);
  rCtx->dsp->curr->glUniformMatrix2x4fv(location, count, transpose, value);
}

static void REGAL_CALL debug_glUniformMatrix4x2fv(GLint location, GLsizei count, GLboolean transpose, const GLfloat *value)
{
  RegalContext * rCtx = GET_REGAL_CONTEXT();
  DispatchStateScopedStepDown stepDown(rCtx->dsp);
  rCtx->dsp->curr->glUniformMatrix4x2fv(location, count, transpose, value);
}

static void REGAL_CALL debug_glUniformMatrix3x4fv(GLint location, GLsizei count, GLboolean transpose, const GLfloat *value)
{
  RegalContext * rCtx = GET_REGAL_CONTEXT();
  DispatchStateScopedStepDown stepDown(rCtx->dsp);
  rCtx->dsp->curr->glUniformMatrix3x4fv(location, count, transpose, value);
}

static void REGAL_CALL debug_glUniformMatrix4x3fv(GLint location, GLsizei count, GLboolean transpose, const GLfloat *value)
{
  RegalContext * rCtx = GET_REGAL_CONTEXT();
  DispatchStateScopedStepDown stepDown(rCtx->dsp);
  rCtx->dsp->curr->glUniformMatrix4x3fv(location, count, transpose, value);
}

// GL_VERSION_3_0

static void REGAL_CALL debug_glColorMaski(GLuint index, GLboolean r, GLboolean g, GLboolean b, GLboolean a)
{
  RegalContext * rCtx = GET_REGAL_CONTEXT();
  DispatchStateScopedStepDown stepDown(rCtx->dsp);
  rCtx->dsp->curr->glColorMaski(index, r, g, b, a);
}

static void REGAL_CALL debug_glGetBooleani_v(GLenum target, GLuint index, GLboolean *data)
{
  RegalContext * rCtx = GET_REGAL_CONTEXT();
  DispatchStateScopedStepDown stepDown(rCtx->dsp);
  rCtx->dsp->curr->glGetBooleani_v(target, index, data);
}

// GL_ARB_uniform_buffer_object

static void REGAL_CALL debug_glGetIntegeri_v(GLenum target, GLuint index, GLint *data)
{
  RegalContext * rCtx = GET_REGAL_CONTEXT();
  DispatchStateScopedStepDown stepDown(rCtx->dsp);
  rCtx->dsp->curr->glGetIntegeri_v(target, index, data);
}

// GL_VERSION_3_0

static void REGAL_CALL debug_glEnablei(GLenum cap, GLuint index)
{
  RegalContext * rCtx = GET_REGAL_CONTEXT();
  DispatchStateScopedStepDown stepDown(rCtx->dsp);
  rCtx->dsp->curr->glEnablei(cap, index);
}

static void REGAL_CALL debug_glDisablei(GLenum cap, GLuint index)
{
  RegalContext * rCtx = GET_REGAL_CONTEXT();
  DispatchStateScopedStepDown stepDown(rCtx->dsp);
  rCtx->dsp->curr->glDisablei(cap, index);
}

static GLboolean REGAL_CALL debug_glIsEnabledi(GLenum target, GLuint index)
{
  RegalContext * rCtx = GET_REGAL_CONTEXT();
  DispatchStateScopedStepDown stepDown(rCtx->dsp);
  GLboolean  ret = rCtx->dsp->curr->glIsEnabledi(target, index);
  return ret;
}

static void REGAL_CALL debug_glBeginTransformFeedback(GLenum primitiveMode)
{
  RegalContext * rCtx = GET_REGAL_CONTEXT();
  DispatchStateScopedStepDown stepDown(rCtx->dsp);
  rCtx->dsp->curr->glBeginTransformFeedback(primitiveMode);
}

static void REGAL_CALL debug_glEndTransformFeedback(void)
{
  RegalContext * rCtx = GET_REGAL_CONTEXT();
  DispatchStateScopedStepDown stepDown(rCtx->dsp);
  rCtx->dsp->curr->glEndTransformFeedback();
}

// GL_ARB_uniform_buffer_object

static void REGAL_CALL debug_glBindBufferRange(GLenum target, GLuint index, GLuint buffer, GLintptr offset, GLsizeiptr size)
{
  RegalContext * rCtx = GET_REGAL_CONTEXT();
  DispatchStateScopedStepDown stepDown(rCtx->dsp);
  rCtx->dsp->curr->glBindBufferRange(target, index, buffer, offset, size);
}

static void REGAL_CALL debug_glBindBufferBase(GLenum target, GLuint index, GLuint buffer)
{
  RegalContext * rCtx = GET_REGAL_CONTEXT();
  DispatchStateScopedStepDown stepDown(rCtx->dsp);
  rCtx->dsp->curr->glBindBufferBase(target, index, buffer);
}

// GL_VERSION_3_0

static void REGAL_CALL debug_glTransformFeedbackVaryings(GLuint program, GLsizei count, const GLchar **varyings, GLenum bufferMode)
{
  RegalContext * rCtx = GET_REGAL_CONTEXT();
  DispatchStateScopedStepDown stepDown(rCtx->dsp);
  rCtx->dsp->curr->glTransformFeedbackVaryings(program, count, varyings, bufferMode);
}

static void REGAL_CALL debug_glGetTransformFeedbackVarying(GLuint program, GLuint index, GLsizei bufSize, GLsizei *length, GLsizei *size, GLenum *type, GLchar *name)
{
  RegalContext * rCtx = GET_REGAL_CONTEXT();
  DispatchStateScopedStepDown stepDown(rCtx->dsp);
  rCtx->dsp->curr->glGetTransformFeedbackVarying(program, index, bufSize, length, size, type, name);
}

static void REGAL_CALL debug_glClampColor(GLenum target, GLenum clamp)
{
  RegalContext * rCtx = GET_REGAL_CONTEXT();
  DispatchStateScopedStepDown stepDown(rCtx->dsp);
  rCtx->dsp->curr->glClampColor(target, clamp);
}

static void REGAL_CALL debug_glBeginConditionalRender(GLuint id, GLenum mode)
{
  RegalContext * rCtx = GET_REGAL_CONTEXT();
  DispatchStateScopedStepDown stepDown(rCtx->dsp);
  rCtx->dsp->curr->glBeginConditionalRender(id, mode);
}

static void REGAL_CALL debug_glEndConditionalRender(void)
{
  RegalContext * rCtx = GET_REGAL_CONTEXT();
  DispatchStateScopedStepDown stepDown(rCtx->dsp);
  rCtx->dsp->curr->glEndConditionalRender();
}

static void REGAL_CALL debug_glVertexAttribIPointer(GLuint index, GLint size, GLenum type, GLsizei stride, const GLvoid *pointer)
{
  RegalContext * rCtx = GET_REGAL_CONTEXT();
  DispatchStateScopedStepDown stepDown(rCtx->dsp);
  rCtx->dsp->curr->glVertexAttribIPointer(index, size, type, stride, pointer);
}

static void REGAL_CALL debug_glGetVertexAttribIiv(GLuint index, GLenum pname, GLint *params)
{
  RegalContext * rCtx = GET_REGAL_CONTEXT();
  DispatchStateScopedStepDown stepDown(rCtx->dsp);
  rCtx->dsp->curr->glGetVertexAttribIiv(index, pname, params);
}

static void REGAL_CALL debug_glGetVertexAttribIuiv(GLuint index, GLenum pname, GLuint *params)
{
  RegalContext * rCtx = GET_REGAL_CONTEXT();
  DispatchStateScopedStepDown stepDown(rCtx->dsp);
  rCtx->dsp->curr->glGetVertexAttribIuiv(index, pname, params);
}

static void REGAL_CALL debug_glVertexAttribI1i(GLuint index, GLint x)
{
  RegalContext * rCtx = GET_REGAL_CONTEXT();
  DispatchStateScopedStepDown stepDown(rCtx->dsp);
  rCtx->dsp->curr->glVertexAttribI1i(index, x);
}

static void REGAL_CALL debug_glVertexAttribI2i(GLuint index, GLint x, GLint y)
{
  RegalContext * rCtx = GET_REGAL_CONTEXT();
  DispatchStateScopedStepDown stepDown(rCtx->dsp);
  rCtx->dsp->curr->glVertexAttribI2i(index, x, y);
}

static void REGAL_CALL debug_glVertexAttribI3i(GLuint index, GLint x, GLint y, GLint z)
{
  RegalContext * rCtx = GET_REGAL_CONTEXT();
  DispatchStateScopedStepDown stepDown(rCtx->dsp);
  rCtx->dsp->curr->glVertexAttribI3i(index, x, y, z);
}

static void REGAL_CALL debug_glVertexAttribI4i(GLuint index, GLint x, GLint y, GLint z, GLint w)
{
  RegalContext * rCtx = GET_REGAL_CONTEXT();
  DispatchStateScopedStepDown stepDown(rCtx->dsp);
  rCtx->dsp->curr->glVertexAttribI4i(index, x, y, z, w);
}

static void REGAL_CALL debug_glVertexAttribI1ui(GLuint index, GLuint x)
{
  RegalContext * rCtx = GET_REGAL_CONTEXT();
  DispatchStateScopedStepDown stepDown(rCtx->dsp);
  rCtx->dsp->curr->glVertexAttribI1ui(index, x);
}

static void REGAL_CALL debug_glVertexAttribI2ui(GLuint index, GLuint x, GLuint y)
{
  RegalContext * rCtx = GET_REGAL_CONTEXT();
  DispatchStateScopedStepDown stepDown(rCtx->dsp);
  rCtx->dsp->curr->glVertexAttribI2ui(index, x, y);
}

static void REGAL_CALL debug_glVertexAttribI3ui(GLuint index, GLuint x, GLuint y, GLuint z)
{
  RegalContext * rCtx = GET_REGAL_CONTEXT();
  DispatchStateScopedStepDown stepDown(rCtx->dsp);
  rCtx->dsp->curr->glVertexAttribI3ui(index, x, y, z);
}

static void REGAL_CALL debug_glVertexAttribI4ui(GLuint index, GLuint x, GLuint y, GLuint z, GLuint w)
{
  RegalContext * rCtx = GET_REGAL_CONTEXT();
  DispatchStateScopedStepDown stepDown(rCtx->dsp);
  rCtx->dsp->curr->glVertexAttribI4ui(index, x, y, z, w);
}

static void REGAL_CALL debug_glVertexAttribI1iv(GLuint index, const GLint *v)
{
  RegalContext * rCtx = GET_REGAL_CONTEXT();
  DispatchStateScopedStepDown stepDown(rCtx->dsp);
  rCtx->dsp->curr->glVertexAttribI1iv(index, v);
}

static void REGAL_CALL debug_glVertexAttribI2iv(GLuint index, const GLint *v)
{
  RegalContext * rCtx = GET_REGAL_CONTEXT();
  DispatchStateScopedStepDown stepDown(rCtx->dsp);
  rCtx->dsp->curr->glVertexAttribI2iv(index, v);
}

static void REGAL_CALL debug_glVertexAttribI3iv(GLuint index, const GLint *v)
{
  RegalContext * rCtx = GET_REGAL_CONTEXT();
  DispatchStateScopedStepDown stepDown(rCtx->dsp);
  rCtx->dsp->curr->glVertexAttribI3iv(index, v);
}

static void REGAL_CALL debug_glVertexAttribI4iv(GLuint index, const GLint *v)
{
  RegalContext * rCtx = GET_REGAL_CONTEXT();
  DispatchStateScopedStepDown stepDown(rCtx->dsp);
  rCtx->dsp->curr->glVertexAttribI4iv(index, v);
}

static void REGAL_CALL debug_glVertexAttribI1uiv(GLuint index, const GLuint *v)
{
  RegalContext * rCtx = GET_REGAL_CONTEXT();
  DispatchStateScopedStepDown stepDown(rCtx->dsp);
  rCtx->dsp->curr->glVertexAttribI1uiv(index, v);
}

static void REGAL_CALL debug_glVertexAttribI2uiv(GLuint index, const GLuint *v)
{
  RegalContext * rCtx = GET_REGAL_CONTEXT();
  DispatchStateScopedStepDown stepDown(rCtx->dsp);
  rCtx->dsp->curr->glVertexAttribI2uiv(index, v);
}

static void REGAL_CALL debug_glVertexAttribI3uiv(GLuint index, const GLuint *v)
{
  RegalContext * rCtx = GET_REGAL_CONTEXT();
  DispatchStateScopedStepDown stepDown(rCtx->dsp);
  rCtx->dsp->curr->glVertexAttribI3uiv(index, v);
}

static void REGAL_CALL debug_glVertexAttribI4uiv(GLuint index, const GLuint *v)
{
  RegalContext * rCtx = GET_REGAL_CONTEXT();
  DispatchStateScopedStepDown stepDown(rCtx->dsp);
  rCtx->dsp->curr->glVertexAttribI4uiv(index, v);
}

static void REGAL_CALL debug_glVertexAttribI4bv(GLuint index, const GLbyte *v)
{
  RegalContext * rCtx = GET_REGAL_CONTEXT();
  DispatchStateScopedStepDown stepDown(rCtx->dsp);
  rCtx->dsp->curr->glVertexAttribI4bv(index, v);
}

static void REGAL_CALL debug_glVertexAttribI4sv(GLuint index, const GLshort *v)
{
  RegalContext * rCtx = GET_REGAL_CONTEXT();
  DispatchStateScopedStepDown stepDown(rCtx->dsp);
  rCtx->dsp->curr->glVertexAttribI4sv(index, v);
}

static void REGAL_CALL debug_glVertexAttribI4ubv(GLuint index, const GLubyte *v)
{
  RegalContext * rCtx = GET_REGAL_CONTEXT();
  DispatchStateScopedStepDown stepDown(rCtx->dsp);
  rCtx->dsp->curr->glVertexAttribI4ubv(index, v);
}

static void REGAL_CALL debug_glVertexAttribI4usv(GLuint index, const GLushort *v)
{
  RegalContext * rCtx = GET_REGAL_CONTEXT();
  DispatchStateScopedStepDown stepDown(rCtx->dsp);
  rCtx->dsp->curr->glVertexAttribI4usv(index, v);
}

static void REGAL_CALL debug_glGetUniformuiv(GLuint program, GLint location, GLuint *params)
{
  RegalContext * rCtx = GET_REGAL_CONTEXT();
  DispatchStateScopedStepDown stepDown(rCtx->dsp);
  rCtx->dsp->curr->glGetUniformuiv(program, location, params);
}

static void REGAL_CALL debug_glBindFragDataLocation(GLuint program, GLuint color, const GLchar *name)
{
  RegalContext * rCtx = GET_REGAL_CONTEXT();
  DispatchStateScopedStepDown stepDown(rCtx->dsp);
  rCtx->dsp->curr->glBindFragDataLocation(program, color, name);
}

static GLint REGAL_CALL debug_glGetFragDataLocation(GLuint program, const GLchar *name)
{
  RegalContext * rCtx = GET_REGAL_CONTEXT();
  DispatchStateScopedStepDown stepDown(rCtx->dsp);
  GLint  ret = rCtx->dsp->curr->glGetFragDataLocation(program, name);
  return ret;
}

static void REGAL_CALL debug_glUniform1ui(GLint location, GLuint v0)
{
  RegalContext * rCtx = GET_REGAL_CONTEXT();
  DispatchStateScopedStepDown stepDown(rCtx->dsp);
  rCtx->dsp->curr->glUniform1ui(location, v0);
}

static void REGAL_CALL debug_glUniform2ui(GLint location, GLuint v0, GLuint v1)
{
  RegalContext * rCtx = GET_REGAL_CONTEXT();
  DispatchStateScopedStepDown stepDown(rCtx->dsp);
  rCtx->dsp->curr->glUniform2ui(location, v0, v1);
}

static void REGAL_CALL debug_glUniform3ui(GLint location, GLuint v0, GLuint v1, GLuint v2)
{
  RegalContext * rCtx = GET_REGAL_CONTEXT();
  DispatchStateScopedStepDown stepDown(rCtx->dsp);
  rCtx->dsp->curr->glUniform3ui(location, v0, v1, v2);
}

static void REGAL_CALL debug_glUniform4ui(GLint location, GLuint v0, GLuint v1, GLuint v2, GLuint v3)
{
  RegalContext * rCtx = GET_REGAL_CONTEXT();
  DispatchStateScopedStepDown stepDown(rCtx->dsp);
  rCtx->dsp->curr->glUniform4ui(location, v0, v1, v2, v3);
}

static void REGAL_CALL debug_glUniform1uiv(GLint location, GLsizei count, const GLuint *value)
{
  RegalContext * rCtx = GET_REGAL_CONTEXT();
  DispatchStateScopedStepDown stepDown(rCtx->dsp);
  rCtx->dsp->curr->glUniform1uiv(location, count, value);
}

static void REGAL_CALL debug_glUniform2uiv(GLint location, GLsizei count, const GLuint *value)
{
  RegalContext * rCtx = GET_REGAL_CONTEXT();
  DispatchStateScopedStepDown stepDown(rCtx->dsp);
  rCtx->dsp->curr->glUniform2uiv(location, count, value);
}

static void REGAL_CALL debug_glUniform3uiv(GLint location, GLsizei count, const GLuint *value)
{
  RegalContext * rCtx = GET_REGAL_CONTEXT();
  DispatchStateScopedStepDown stepDown(rCtx->dsp);
  rCtx->dsp->curr->glUniform3uiv(location, count, value);
}

static void REGAL_CALL debug_glUniform4uiv(GLint location, GLsizei count, const GLuint *value)
{
  RegalContext * rCtx = GET_REGAL_CONTEXT();
  DispatchStateScopedStepDown stepDown(rCtx->dsp);
  rCtx->dsp->curr->glUniform4uiv(location, count, value);
}

static void REGAL_CALL debug_glTexParameterIiv(GLenum target, GLenum pname, const GLint *params)
{
  RegalContext * rCtx = GET_REGAL_CONTEXT();
  DispatchStateScopedStepDown stepDown(rCtx->dsp);
  rCtx->dsp->curr->glTexParameterIiv(target, pname, params);
}

static void REGAL_CALL debug_glTexParameterIuiv(GLenum target, GLenum pname, const GLuint *params)
{
  RegalContext * rCtx = GET_REGAL_CONTEXT();
  DispatchStateScopedStepDown stepDown(rCtx->dsp);
  rCtx->dsp->curr->glTexParameterIuiv(target, pname, params);
}

static void REGAL_CALL debug_glGetTexParameterIiv(GLenum target, GLenum pname, GLint *params)
{
  RegalContext * rCtx = GET_REGAL_CONTEXT();
  DispatchStateScopedStepDown stepDown(rCtx->dsp);
  rCtx->dsp->curr->glGetTexParameterIiv(target, pname, params);
}

static void REGAL_CALL debug_glGetTexParameterIuiv(GLenum target, GLenum pname, GLuint *params)
{
  RegalContext * rCtx = GET_REGAL_CONTEXT();
  DispatchStateScopedStepDown stepDown(rCtx->dsp);
  rCtx->dsp->curr->glGetTexParameterIuiv(target, pname, params);
}

static void REGAL_CALL debug_glClearBufferiv(GLenum buffer, GLint drawbuffer, const GLint *value)
{
  RegalContext * rCtx = GET_REGAL_CONTEXT();
  DispatchStateScopedStepDown stepDown(rCtx->dsp);
  rCtx->dsp->curr->glClearBufferiv(buffer, drawbuffer, value);
}

static void REGAL_CALL debug_glClearBufferuiv(GLenum buffer, GLint drawbuffer, const GLuint *value)
{
  RegalContext * rCtx = GET_REGAL_CONTEXT();
  DispatchStateScopedStepDown stepDown(rCtx->dsp);
  rCtx->dsp->curr->glClearBufferuiv(buffer, drawbuffer, value);
}

static void REGAL_CALL debug_glClearBufferfv(GLenum buffer, GLint drawbuffer, const GLfloat *value)
{
  RegalContext * rCtx = GET_REGAL_CONTEXT();
  DispatchStateScopedStepDown stepDown(rCtx->dsp);
  rCtx->dsp->curr->glClearBufferfv(buffer, drawbuffer, value);
}

static void REGAL_CALL debug_glClearBufferfi(GLenum buffer, GLint drawbuffer, GLfloat depth, GLint stencil)
{
  RegalContext * rCtx = GET_REGAL_CONTEXT();
  DispatchStateScopedStepDown stepDown(rCtx->dsp);
  rCtx->dsp->curr->glClearBufferfi(buffer, drawbuffer, depth, stencil);
}

static const GLubyte *REGAL_CALL debug_glGetStringi(GLenum name, GLuint index)
{
  RegalContext * rCtx = GET_REGAL_CONTEXT();
  DispatchStateScopedStepDown stepDown(rCtx->dsp);
  const GLubyte * ret = rCtx->dsp->curr->glGetStringi(name, index);
  return ret;
}

// GL_VERSION_3_1

static void REGAL_CALL debug_glDrawArraysInstanced(GLenum mode, GLint start, GLsizei count, GLsizei primcount)
{
  RegalContext * rCtx = GET_REGAL_CONTEXT();
  DispatchStateScopedStepDown stepDown(rCtx->dsp);
  rCtx->dsp->curr->glDrawArraysInstanced(mode, start, count, primcount);
}

static void REGAL_CALL debug_glDrawElementsInstanced(GLenum mode, GLsizei count, GLenum type, const GLvoid *indices, GLsizei primcount)
{
  RegalContext * rCtx = GET_REGAL_CONTEXT();
  DispatchStateScopedStepDown stepDown(rCtx->dsp);
  rCtx->dsp->curr->glDrawElementsInstanced(mode, count, type, indices, primcount);
}

static void REGAL_CALL debug_glTexBuffer(GLenum target, GLenum internalformat, GLuint buffer)
{
  RegalContext * rCtx = GET_REGAL_CONTEXT();
  DispatchStateScopedStepDown stepDown(rCtx->dsp);
  rCtx->dsp->curr->glTexBuffer(target, internalformat, buffer);
}

static void REGAL_CALL debug_glPrimitiveRestartIndex(GLuint index)
{
  RegalContext * rCtx = GET_REGAL_CONTEXT();
  DispatchStateScopedStepDown stepDown(rCtx->dsp);
  rCtx->dsp->curr->glPrimitiveRestartIndex(index);
}

// GL_VERSION_3_2

static void REGAL_CALL debug_glGetInteger64i_v(GLenum target, GLuint index, GLint64 *data)
{
  RegalContext * rCtx = GET_REGAL_CONTEXT();
  DispatchStateScopedStepDown stepDown(rCtx->dsp);
  rCtx->dsp->curr->glGetInteger64i_v(target, index, data);
}

static void REGAL_CALL debug_glGetBufferParameteri64v(GLenum target, GLenum pname, GLint64 *params)
{
  RegalContext * rCtx = GET_REGAL_CONTEXT();
  DispatchStateScopedStepDown stepDown(rCtx->dsp);
  rCtx->dsp->curr->glGetBufferParameteri64v(target, pname, params);
}

static void REGAL_CALL debug_glFramebufferTexture(GLenum target, GLenum attachment, GLuint texture, GLint level)
{
  RegalContext * rCtx = GET_REGAL_CONTEXT();
  DispatchStateScopedStepDown stepDown(rCtx->dsp);
  rCtx->dsp->curr->glFramebufferTexture(target, attachment, texture, level);
}

static void REGAL_CALL debug_glFramebufferTextureFace(GLenum target, GLenum attachment, GLuint texture, GLint level, GLenum face)
{
  RegalContext * rCtx = GET_REGAL_CONTEXT();
  DispatchStateScopedStepDown stepDown(rCtx->dsp);
  rCtx->dsp->curr->glFramebufferTextureFace(target, attachment, texture, level, face);
}

// GL_ARB_sampler_objects

static void REGAL_CALL debug_glGenSamplers(GLsizei count, GLuint *samplers)
{
  RegalContext * rCtx = GET_REGAL_CONTEXT();
  DispatchStateScopedStepDown stepDown(rCtx->dsp);
  rCtx->dsp->curr->glGenSamplers(count, samplers);
}

static void REGAL_CALL debug_glDeleteSamplers(GLsizei count, const GLuint *samplers)
{
  RegalContext * rCtx = GET_REGAL_CONTEXT();
  DispatchStateScopedStepDown stepDown(rCtx->dsp);
  rCtx->dsp->curr->glDeleteSamplers(count, samplers);
}

static GLboolean REGAL_CALL debug_glIsSampler(GLuint sampler)
{
  RegalContext * rCtx = GET_REGAL_CONTEXT();
  DispatchStateScopedStepDown stepDown(rCtx->dsp);
  GLboolean  ret = rCtx->dsp->curr->glIsSampler(sampler);
  return ret;
}

static void REGAL_CALL debug_glBindSampler(GLuint unit, GLuint sampler)
{
  RegalContext * rCtx = GET_REGAL_CONTEXT();
  DispatchStateScopedStepDown stepDown(rCtx->dsp);
  rCtx->dsp->curr->glBindSampler(unit, sampler);
}

static void REGAL_CALL debug_glSamplerParameteri(GLuint sampler, GLenum pname, GLint param)
{
  RegalContext * rCtx = GET_REGAL_CONTEXT();
  DispatchStateScopedStepDown stepDown(rCtx->dsp);
  rCtx->dsp->curr->glSamplerParameteri(sampler, pname, param);
}

static void REGAL_CALL debug_glSamplerParameterf(GLuint sampler, GLenum pname, GLfloat param)
{
  RegalContext * rCtx = GET_REGAL_CONTEXT();
  DispatchStateScopedStepDown stepDown(rCtx->dsp);
  rCtx->dsp->curr->glSamplerParameterf(sampler, pname, param);
}

static void REGAL_CALL debug_glSamplerParameteriv(GLuint sampler, GLenum pname, const GLint *params)
{
  RegalContext * rCtx = GET_REGAL_CONTEXT();
  DispatchStateScopedStepDown stepDown(rCtx->dsp);
  rCtx->dsp->curr->glSamplerParameteriv(sampler, pname, params);
}

static void REGAL_CALL debug_glSamplerParameterfv(GLuint sampler, GLenum pname, const GLfloat *params)
{
  RegalContext * rCtx = GET_REGAL_CONTEXT();
  DispatchStateScopedStepDown stepDown(rCtx->dsp);
  rCtx->dsp->curr->glSamplerParameterfv(sampler, pname, params);
}

static void REGAL_CALL debug_glSamplerParameterIiv(GLuint sampler, GLenum pname, const GLint *params)
{
  RegalContext * rCtx = GET_REGAL_CONTEXT();
  DispatchStateScopedStepDown stepDown(rCtx->dsp);
  rCtx->dsp->curr->glSamplerParameterIiv(sampler, pname, params);
}

static void REGAL_CALL debug_glSamplerParameterIuiv(GLuint sampler, GLenum pname, const GLuint *params)
{
  RegalContext * rCtx = GET_REGAL_CONTEXT();
  DispatchStateScopedStepDown stepDown(rCtx->dsp);
  rCtx->dsp->curr->glSamplerParameterIuiv(sampler, pname, params);
}

static void REGAL_CALL debug_glGetSamplerParameteriv(GLuint sampler, GLenum pname, GLint *params)
{
  RegalContext * rCtx = GET_REGAL_CONTEXT();
  DispatchStateScopedStepDown stepDown(rCtx->dsp);
  rCtx->dsp->curr->glGetSamplerParameteriv(sampler, pname, params);
}

static void REGAL_CALL debug_glGetSamplerParameterfv(GLuint sampler, GLenum pname, GLfloat *params)
{
  RegalContext * rCtx = GET_REGAL_CONTEXT();
  DispatchStateScopedStepDown stepDown(rCtx->dsp);
  rCtx->dsp->curr->glGetSamplerParameterfv(sampler, pname, params);
}

static void REGAL_CALL debug_glGetSamplerParameterIiv(GLuint sampler, GLenum pname, GLint *params)
{
  RegalContext * rCtx = GET_REGAL_CONTEXT();
  DispatchStateScopedStepDown stepDown(rCtx->dsp);
  rCtx->dsp->curr->glGetSamplerParameterIiv(sampler, pname, params);
}

static void REGAL_CALL debug_glGetSamplerParameterIuiv(GLuint sampler, GLenum pname, GLuint *params)
{
  RegalContext * rCtx = GET_REGAL_CONTEXT();
  DispatchStateScopedStepDown stepDown(rCtx->dsp);
  rCtx->dsp->curr->glGetSamplerParameterIuiv(sampler, pname, params);
}

// GL_ARB_blend_func_extended

static void REGAL_CALL debug_glBindFragDataLocationIndexed(GLuint program, GLuint colorNumber, GLuint index, const GLchar *name)
{
  RegalContext * rCtx = GET_REGAL_CONTEXT();
  DispatchStateScopedStepDown stepDown(rCtx->dsp);
  rCtx->dsp->curr->glBindFragDataLocationIndexed(program, colorNumber, index, name);
}

static GLint REGAL_CALL debug_glGetFragDataIndex(GLuint program, const GLchar *name)
{
  RegalContext * rCtx = GET_REGAL_CONTEXT();
  DispatchStateScopedStepDown stepDown(rCtx->dsp);
  GLint  ret = rCtx->dsp->curr->glGetFragDataIndex(program, name);
  return ret;
}

// GL_ARB_timer_query

static void REGAL_CALL debug_glGetQueryObjecti64v(GLuint id, GLenum pname, GLint64 *params)
{
  RegalContext * rCtx = GET_REGAL_CONTEXT();
  DispatchStateScopedStepDown stepDown(rCtx->dsp);
  rCtx->dsp->curr->glGetQueryObjecti64v(id, pname, params);
}

static void REGAL_CALL debug_glGetQueryObjectui64v(GLuint id, GLenum pname, GLuint64 *params)
{
  RegalContext * rCtx = GET_REGAL_CONTEXT();
  DispatchStateScopedStepDown stepDown(rCtx->dsp);
  rCtx->dsp->curr->glGetQueryObjectui64v(id, pname, params);
}

static void REGAL_CALL debug_glQueryCounter(GLuint id, GLenum target)
{
  RegalContext * rCtx = GET_REGAL_CONTEXT();
  DispatchStateScopedStepDown stepDown(rCtx->dsp);
  rCtx->dsp->curr->glQueryCounter(id, target);
}

// GL_VERSION_3_3

static void REGAL_CALL debug_glVertexAttribDivisor(GLuint index, GLuint divisor)
{
  RegalContext * rCtx = GET_REGAL_CONTEXT();
  DispatchStateScopedStepDown stepDown(rCtx->dsp);
  rCtx->dsp->curr->glVertexAttribDivisor(index, divisor);
}

// GL_ARB_vertex_type_2_10_10_10_rev

static void REGAL_CALL debug_glVertexP2ui(GLenum type, GLuint coords)
{
  RegalContext * rCtx = GET_REGAL_CONTEXT();
  DispatchStateScopedStepDown stepDown(rCtx->dsp);
  rCtx->dsp->curr->glVertexP2ui(type, coords);
}

static void REGAL_CALL debug_glVertexP2uiv(GLenum type, const GLuint *coords)
{
  RegalContext * rCtx = GET_REGAL_CONTEXT();
  DispatchStateScopedStepDown stepDown(rCtx->dsp);
  rCtx->dsp->curr->glVertexP2uiv(type, coords);
}

static void REGAL_CALL debug_glVertexP3ui(GLenum type, GLuint coords)
{
  RegalContext * rCtx = GET_REGAL_CONTEXT();
  DispatchStateScopedStepDown stepDown(rCtx->dsp);
  rCtx->dsp->curr->glVertexP3ui(type, coords);
}

static void REGAL_CALL debug_glVertexP3uiv(GLenum type, const GLuint *coords)
{
  RegalContext * rCtx = GET_REGAL_CONTEXT();
  DispatchStateScopedStepDown stepDown(rCtx->dsp);
  rCtx->dsp->curr->glVertexP3uiv(type, coords);
}

static void REGAL_CALL debug_glVertexP4ui(GLenum type, GLuint coords)
{
  RegalContext * rCtx = GET_REGAL_CONTEXT();
  DispatchStateScopedStepDown stepDown(rCtx->dsp);
  rCtx->dsp->curr->glVertexP4ui(type, coords);
}

static void REGAL_CALL debug_glVertexP4uiv(GLenum type, const GLuint *coords)
{
  RegalContext * rCtx = GET_REGAL_CONTEXT();
  DispatchStateScopedStepDown stepDown(rCtx->dsp);
  rCtx->dsp->curr->glVertexP4uiv(type, coords);
}

static void REGAL_CALL debug_glTexCoordP1ui(GLenum type, GLuint coords)
{
  RegalContext * rCtx = GET_REGAL_CONTEXT();
  DispatchStateScopedStepDown stepDown(rCtx->dsp);
  rCtx->dsp->curr->glTexCoordP1ui(type, coords);
}

static void REGAL_CALL debug_glTexCoordP1uiv(GLenum type, const GLuint *coords)
{
  RegalContext * rCtx = GET_REGAL_CONTEXT();
  DispatchStateScopedStepDown stepDown(rCtx->dsp);
  rCtx->dsp->curr->glTexCoordP1uiv(type, coords);
}

static void REGAL_CALL debug_glTexCoordP2ui(GLenum type, GLuint coords)
{
  RegalContext * rCtx = GET_REGAL_CONTEXT();
  DispatchStateScopedStepDown stepDown(rCtx->dsp);
  rCtx->dsp->curr->glTexCoordP2ui(type, coords);
}

static void REGAL_CALL debug_glTexCoordP2uiv(GLenum type, const GLuint *coords)
{
  RegalContext * rCtx = GET_REGAL_CONTEXT();
  DispatchStateScopedStepDown stepDown(rCtx->dsp);
  rCtx->dsp->curr->glTexCoordP2uiv(type, coords);
}

static void REGAL_CALL debug_glTexCoordP3ui(GLenum type, GLuint coords)
{
  RegalContext * rCtx = GET_REGAL_CONTEXT();
  DispatchStateScopedStepDown stepDown(rCtx->dsp);
  rCtx->dsp->curr->glTexCoordP3ui(type, coords);
}

static void REGAL_CALL debug_glTexCoordP3uiv(GLenum type, const GLuint *coords)
{
  RegalContext * rCtx = GET_REGAL_CONTEXT();
  DispatchStateScopedStepDown stepDown(rCtx->dsp);
  rCtx->dsp->curr->glTexCoordP3uiv(type, coords);
}

static void REGAL_CALL debug_glTexCoordP4ui(GLenum type, GLuint coords)
{
  RegalContext * rCtx = GET_REGAL_CONTEXT();
  DispatchStateScopedStepDown stepDown(rCtx->dsp);
  rCtx->dsp->curr->glTexCoordP4ui(type, coords);
}

static void REGAL_CALL debug_glTexCoordP4uiv(GLenum type, const GLuint *coords)
{
  RegalContext * rCtx = GET_REGAL_CONTEXT();
  DispatchStateScopedStepDown stepDown(rCtx->dsp);
  rCtx->dsp->curr->glTexCoordP4uiv(type, coords);
}

static void REGAL_CALL debug_glMultiTexCoordP1ui(GLenum texture, GLenum type, GLuint coords)
{
  RegalContext * rCtx = GET_REGAL_CONTEXT();
  DispatchStateScopedStepDown stepDown(rCtx->dsp);
  rCtx->dsp->curr->glMultiTexCoordP1ui(texture, type, coords);
}

static void REGAL_CALL debug_glMultiTexCoordP1uiv(GLenum texture, GLenum type, const GLuint *coords)
{
  RegalContext * rCtx = GET_REGAL_CONTEXT();
  DispatchStateScopedStepDown stepDown(rCtx->dsp);
  rCtx->dsp->curr->glMultiTexCoordP1uiv(texture, type, coords);
}

static void REGAL_CALL debug_glMultiTexCoordP2ui(GLenum texture, GLenum type, GLuint coords)
{
  RegalContext * rCtx = GET_REGAL_CONTEXT();
  DispatchStateScopedStepDown stepDown(rCtx->dsp);
  rCtx->dsp->curr->glMultiTexCoordP2ui(texture, type, coords);
}

static void REGAL_CALL debug_glMultiTexCoordP2uiv(GLenum texture, GLenum type, const GLuint *coords)
{
  RegalContext * rCtx = GET_REGAL_CONTEXT();
  DispatchStateScopedStepDown stepDown(rCtx->dsp);
  rCtx->dsp->curr->glMultiTexCoordP2uiv(texture, type, coords);
}

static void REGAL_CALL debug_glMultiTexCoordP3ui(GLenum texture, GLenum type, GLuint coords)
{
  RegalContext * rCtx = GET_REGAL_CONTEXT();
  DispatchStateScopedStepDown stepDown(rCtx->dsp);
  rCtx->dsp->curr->glMultiTexCoordP3ui(texture, type, coords);
}

static void REGAL_CALL debug_glMultiTexCoordP3uiv(GLenum texture, GLenum type, const GLuint *coords)
{
  RegalContext * rCtx = GET_REGAL_CONTEXT();
  DispatchStateScopedStepDown stepDown(rCtx->dsp);
  rCtx->dsp->curr->glMultiTexCoordP3uiv(texture, type, coords);
}

static void REGAL_CALL debug_glMultiTexCoordP4ui(GLenum texture, GLenum type, GLuint coords)
{
  RegalContext * rCtx = GET_REGAL_CONTEXT();
  DispatchStateScopedStepDown stepDown(rCtx->dsp);
  rCtx->dsp->curr->glMultiTexCoordP4ui(texture, type, coords);
}

static void REGAL_CALL debug_glMultiTexCoordP4uiv(GLenum texture, GLenum type, const GLuint *coords)
{
  RegalContext * rCtx = GET_REGAL_CONTEXT();
  DispatchStateScopedStepDown stepDown(rCtx->dsp);
  rCtx->dsp->curr->glMultiTexCoordP4uiv(texture, type, coords);
}

static void REGAL_CALL debug_glNormalP3ui(GLenum type, GLuint coords)
{
  RegalContext * rCtx = GET_REGAL_CONTEXT();
  DispatchStateScopedStepDown stepDown(rCtx->dsp);
  rCtx->dsp->curr->glNormalP3ui(type, coords);
}

static void REGAL_CALL debug_glNormalP3uiv(GLenum type, const GLuint *coords)
{
  RegalContext * rCtx = GET_REGAL_CONTEXT();
  DispatchStateScopedStepDown stepDown(rCtx->dsp);
  rCtx->dsp->curr->glNormalP3uiv(type, coords);
}

static void REGAL_CALL debug_glColorP3ui(GLenum type, GLuint color)
{
  RegalContext * rCtx = GET_REGAL_CONTEXT();
  DispatchStateScopedStepDown stepDown(rCtx->dsp);
  rCtx->dsp->curr->glColorP3ui(type, color);
}

static void REGAL_CALL debug_glColorP3uiv(GLenum type, const GLuint *color)
{
  RegalContext * rCtx = GET_REGAL_CONTEXT();
  DispatchStateScopedStepDown stepDown(rCtx->dsp);
  rCtx->dsp->curr->glColorP3uiv(type, color);
}

static void REGAL_CALL debug_glColorP4ui(GLenum type, GLuint color)
{
  RegalContext * rCtx = GET_REGAL_CONTEXT();
  DispatchStateScopedStepDown stepDown(rCtx->dsp);
  rCtx->dsp->curr->glColorP4ui(type, color);
}

static void REGAL_CALL debug_glColorP4uiv(GLenum type, const GLuint *color)
{
  RegalContext * rCtx = GET_REGAL_CONTEXT();
  DispatchStateScopedStepDown stepDown(rCtx->dsp);
  rCtx->dsp->curr->glColorP4uiv(type, color);
}

static void REGAL_CALL debug_glSecondaryColorP3ui(GLenum type, GLuint color)
{
  RegalContext * rCtx = GET_REGAL_CONTEXT();
  DispatchStateScopedStepDown stepDown(rCtx->dsp);
  rCtx->dsp->curr->glSecondaryColorP3ui(type, color);
}

static void REGAL_CALL debug_glSecondaryColorP3uiv(GLenum type, const GLuint *color)
{
  RegalContext * rCtx = GET_REGAL_CONTEXT();
  DispatchStateScopedStepDown stepDown(rCtx->dsp);
  rCtx->dsp->curr->glSecondaryColorP3uiv(type, color);
}

static void REGAL_CALL debug_glVertexAttribP1ui(GLuint index, GLenum type, GLboolean normalized, GLuint value)
{
  RegalContext * rCtx = GET_REGAL_CONTEXT();
  DispatchStateScopedStepDown stepDown(rCtx->dsp);
  rCtx->dsp->curr->glVertexAttribP1ui(index, type, normalized, value);
}

static void REGAL_CALL debug_glVertexAttribP1uiv(GLuint index, GLenum type, GLboolean normalized, const GLuint *value)
{
  RegalContext * rCtx = GET_REGAL_CONTEXT();
  DispatchStateScopedStepDown stepDown(rCtx->dsp);
  rCtx->dsp->curr->glVertexAttribP1uiv(index, type, normalized, value);
}

static void REGAL_CALL debug_glVertexAttribP2ui(GLuint index, GLenum type, GLboolean normalized, GLuint value)
{
  RegalContext * rCtx = GET_REGAL_CONTEXT();
  DispatchStateScopedStepDown stepDown(rCtx->dsp);
  rCtx->dsp->curr->glVertexAttribP2ui(index, type, normalized, value);
}

static void REGAL_CALL debug_glVertexAttribP2uiv(GLuint index, GLenum type, GLboolean normalized, const GLuint *value)
{
  RegalContext * rCtx = GET_REGAL_CONTEXT();
  DispatchStateScopedStepDown stepDown(rCtx->dsp);
  rCtx->dsp->curr->glVertexAttribP2uiv(index, type, normalized, value);
}

static void REGAL_CALL debug_glVertexAttribP3ui(GLuint index, GLenum type, GLboolean normalized, GLuint value)
{
  RegalContext * rCtx = GET_REGAL_CONTEXT();
  DispatchStateScopedStepDown stepDown(rCtx->dsp);
  rCtx->dsp->curr->glVertexAttribP3ui(index, type, normalized, value);
}

static void REGAL_CALL debug_glVertexAttribP3uiv(GLuint index, GLenum type, GLboolean normalized, const GLuint *value)
{
  RegalContext * rCtx = GET_REGAL_CONTEXT();
  DispatchStateScopedStepDown stepDown(rCtx->dsp);
  rCtx->dsp->curr->glVertexAttribP3uiv(index, type, normalized, value);
}

static void REGAL_CALL debug_glVertexAttribP4ui(GLuint index, GLenum type, GLboolean normalized, GLuint value)
{
  RegalContext * rCtx = GET_REGAL_CONTEXT();
  DispatchStateScopedStepDown stepDown(rCtx->dsp);
  rCtx->dsp->curr->glVertexAttribP4ui(index, type, normalized, value);
}

static void REGAL_CALL debug_glVertexAttribP4uiv(GLuint index, GLenum type, GLboolean normalized, const GLuint *value)
{
  RegalContext * rCtx = GET_REGAL_CONTEXT();
  DispatchStateScopedStepDown stepDown(rCtx->dsp);
  rCtx->dsp->curr->glVertexAttribP4uiv(index, type, normalized, value);
}

// GL_VERSION_4_0

static void REGAL_CALL debug_glBlendEquationi(GLuint buf, GLenum mode)
{
  RegalContext * rCtx = GET_REGAL_CONTEXT();
  DispatchStateScopedStepDown stepDown(rCtx->dsp);
  rCtx->dsp->curr->glBlendEquationi(buf, mode);
}

static void REGAL_CALL debug_glBlendEquationSeparatei(GLuint buf, GLenum modeRGB, GLenum modeAlpha)
{
  RegalContext * rCtx = GET_REGAL_CONTEXT();
  DispatchStateScopedStepDown stepDown(rCtx->dsp);
  rCtx->dsp->curr->glBlendEquationSeparatei(buf, modeRGB, modeAlpha);
}

static void REGAL_CALL debug_glBlendFunci(GLuint buf, GLenum src, GLenum dst)
{
  RegalContext * rCtx = GET_REGAL_CONTEXT();
  DispatchStateScopedStepDown stepDown(rCtx->dsp);
  rCtx->dsp->curr->glBlendFunci(buf, src, dst);
}

static void REGAL_CALL debug_glBlendFuncSeparatei(GLuint buf, GLenum srcRGB, GLenum dstRGB, GLenum srcAlpha, GLenum dstAlpha)
{
  RegalContext * rCtx = GET_REGAL_CONTEXT();
  DispatchStateScopedStepDown stepDown(rCtx->dsp);
  rCtx->dsp->curr->glBlendFuncSeparatei(buf, srcRGB, dstRGB, srcAlpha, dstAlpha);
}

// GL_ARB_draw_indirect

static void REGAL_CALL debug_glDrawArraysIndirect(GLenum mode, const GLvoid *indirect)
{
  RegalContext * rCtx = GET_REGAL_CONTEXT();
  DispatchStateScopedStepDown stepDown(rCtx->dsp);
  rCtx->dsp->curr->glDrawArraysIndirect(mode, indirect);
}

static void REGAL_CALL debug_glDrawElementsIndirect(GLenum mode, GLenum type, const GLvoid *indirect)
{
  RegalContext * rCtx = GET_REGAL_CONTEXT();
  DispatchStateScopedStepDown stepDown(rCtx->dsp);
  rCtx->dsp->curr->glDrawElementsIndirect(mode, type, indirect);
}

// GL_ARB_gpu_shader_fp64

static void REGAL_CALL debug_glUniform1d(GLint location, GLdouble x)
{
  RegalContext * rCtx = GET_REGAL_CONTEXT();
  DispatchStateScopedStepDown stepDown(rCtx->dsp);
  rCtx->dsp->curr->glUniform1d(location, x);
}

static void REGAL_CALL debug_glUniform2d(GLint location, GLdouble x, GLdouble y)
{
  RegalContext * rCtx = GET_REGAL_CONTEXT();
  DispatchStateScopedStepDown stepDown(rCtx->dsp);
  rCtx->dsp->curr->glUniform2d(location, x, y);
}

static void REGAL_CALL debug_glUniform3d(GLint location, GLdouble x, GLdouble y, GLdouble z)
{
  RegalContext * rCtx = GET_REGAL_CONTEXT();
  DispatchStateScopedStepDown stepDown(rCtx->dsp);
  rCtx->dsp->curr->glUniform3d(location, x, y, z);
}

static void REGAL_CALL debug_glUniform4d(GLint location, GLdouble x, GLdouble y, GLdouble z, GLdouble w)
{
  RegalContext * rCtx = GET_REGAL_CONTEXT();
  DispatchStateScopedStepDown stepDown(rCtx->dsp);
  rCtx->dsp->curr->glUniform4d(location, x, y, z, w);
}

static void REGAL_CALL debug_glUniform1dv(GLint location, GLsizei count, const GLdouble *value)
{
  RegalContext * rCtx = GET_REGAL_CONTEXT();
  DispatchStateScopedStepDown stepDown(rCtx->dsp);
  rCtx->dsp->curr->glUniform1dv(location, count, value);
}

static void REGAL_CALL debug_glUniform2dv(GLint location, GLsizei count, const GLdouble *value)
{
  RegalContext * rCtx = GET_REGAL_CONTEXT();
  DispatchStateScopedStepDown stepDown(rCtx->dsp);
  rCtx->dsp->curr->glUniform2dv(location, count, value);
}

static void REGAL_CALL debug_glUniform3dv(GLint location, GLsizei count, const GLdouble *value)
{
  RegalContext * rCtx = GET_REGAL_CONTEXT();
  DispatchStateScopedStepDown stepDown(rCtx->dsp);
  rCtx->dsp->curr->glUniform3dv(location, count, value);
}

static void REGAL_CALL debug_glUniform4dv(GLint location, GLsizei count, const GLdouble *value)
{
  RegalContext * rCtx = GET_REGAL_CONTEXT();
  DispatchStateScopedStepDown stepDown(rCtx->dsp);
  rCtx->dsp->curr->glUniform4dv(location, count, value);
}

static void REGAL_CALL debug_glUniformMatrix2dv(GLint location, GLsizei count, GLboolean transpose, const GLdouble *value)
{
  RegalContext * rCtx = GET_REGAL_CONTEXT();
  DispatchStateScopedStepDown stepDown(rCtx->dsp);
  rCtx->dsp->curr->glUniformMatrix2dv(location, count, transpose, value);
}

static void REGAL_CALL debug_glUniformMatrix3dv(GLint location, GLsizei count, GLboolean transpose, const GLdouble *value)
{
  RegalContext * rCtx = GET_REGAL_CONTEXT();
  DispatchStateScopedStepDown stepDown(rCtx->dsp);
  rCtx->dsp->curr->glUniformMatrix3dv(location, count, transpose, value);
}

static void REGAL_CALL debug_glUniformMatrix4dv(GLint location, GLsizei count, GLboolean transpose, const GLdouble *value)
{
  RegalContext * rCtx = GET_REGAL_CONTEXT();
  DispatchStateScopedStepDown stepDown(rCtx->dsp);
  rCtx->dsp->curr->glUniformMatrix4dv(location, count, transpose, value);
}

static void REGAL_CALL debug_glUniformMatrix2x3dv(GLint location, GLsizei count, GLboolean transpose, const GLdouble *value)
{
  RegalContext * rCtx = GET_REGAL_CONTEXT();
  DispatchStateScopedStepDown stepDown(rCtx->dsp);
  rCtx->dsp->curr->glUniformMatrix2x3dv(location, count, transpose, value);
}

static void REGAL_CALL debug_glUniformMatrix2x4dv(GLint location, GLsizei count, GLboolean transpose, const GLdouble *value)
{
  RegalContext * rCtx = GET_REGAL_CONTEXT();
  DispatchStateScopedStepDown stepDown(rCtx->dsp);
  rCtx->dsp->curr->glUniformMatrix2x4dv(location, count, transpose, value);
}

static void REGAL_CALL debug_glUniformMatrix3x2dv(GLint location, GLsizei count, GLboolean transpose, const GLdouble *value)
{
  RegalContext * rCtx = GET_REGAL_CONTEXT();
  DispatchStateScopedStepDown stepDown(rCtx->dsp);
  rCtx->dsp->curr->glUniformMatrix3x2dv(location, count, transpose, value);
}

static void REGAL_CALL debug_glUniformMatrix3x4dv(GLint location, GLsizei count, GLboolean transpose, const GLdouble *value)
{
  RegalContext * rCtx = GET_REGAL_CONTEXT();
  DispatchStateScopedStepDown stepDown(rCtx->dsp);
  rCtx->dsp->curr->glUniformMatrix3x4dv(location, count, transpose, value);
}

static void REGAL_CALL debug_glUniformMatrix4x2dv(GLint location, GLsizei count, GLboolean transpose, const GLdouble *value)
{
  RegalContext * rCtx = GET_REGAL_CONTEXT();
  DispatchStateScopedStepDown stepDown(rCtx->dsp);
  rCtx->dsp->curr->glUniformMatrix4x2dv(location, count, transpose, value);
}

static void REGAL_CALL debug_glUniformMatrix4x3dv(GLint location, GLsizei count, GLboolean transpose, const GLdouble *value)
{
  RegalContext * rCtx = GET_REGAL_CONTEXT();
  DispatchStateScopedStepDown stepDown(rCtx->dsp);
  rCtx->dsp->curr->glUniformMatrix4x3dv(location, count, transpose, value);
}

static void REGAL_CALL debug_glGetUniformdv(GLuint program, GLint location, GLdouble *params)
{
  RegalContext * rCtx = GET_REGAL_CONTEXT();
  DispatchStateScopedStepDown stepDown(rCtx->dsp);
  rCtx->dsp->curr->glGetUniformdv(program, location, params);
}

// GL_ARB_sample_shading

static void REGAL_CALL debug_glMinSampleShading(GLclampf value)
{
  RegalContext * rCtx = GET_REGAL_CONTEXT();
  DispatchStateScopedStepDown stepDown(rCtx->dsp);
  rCtx->dsp->curr->glMinSampleShading(value);
}

// GL_ARB_tessellation_shader

static void REGAL_CALL debug_glPatchParameteri(GLenum pname, GLint value)
{
  RegalContext * rCtx = GET_REGAL_CONTEXT();
  DispatchStateScopedStepDown stepDown(rCtx->dsp);
  rCtx->dsp->curr->glPatchParameteri(pname, value);
}

static void REGAL_CALL debug_glPatchParameterfv(GLenum pname, const GLfloat *values)
{
  RegalContext * rCtx = GET_REGAL_CONTEXT();
  DispatchStateScopedStepDown stepDown(rCtx->dsp);
  rCtx->dsp->curr->glPatchParameterfv(pname, values);
}

// GL_ARB_transform_feedback2

static void REGAL_CALL debug_glGenTransformFeedbacks(GLsizei n, GLuint *ids)
{
  RegalContext * rCtx = GET_REGAL_CONTEXT();
  DispatchStateScopedStepDown stepDown(rCtx->dsp);
  rCtx->dsp->curr->glGenTransformFeedbacks(n, ids);
}

static void REGAL_CALL debug_glDeleteTransformFeedbacks(GLsizei n, const GLuint *ids)
{
  RegalContext * rCtx = GET_REGAL_CONTEXT();
  DispatchStateScopedStepDown stepDown(rCtx->dsp);
  rCtx->dsp->curr->glDeleteTransformFeedbacks(n, ids);
}

static void REGAL_CALL debug_glBindTransformFeedback(GLenum target, GLuint id)
{
  RegalContext * rCtx = GET_REGAL_CONTEXT();
  DispatchStateScopedStepDown stepDown(rCtx->dsp);
  rCtx->dsp->curr->glBindTransformFeedback(target, id);
}

static GLboolean REGAL_CALL debug_glIsTransformFeedback(GLuint id)
{
  RegalContext * rCtx = GET_REGAL_CONTEXT();
  DispatchStateScopedStepDown stepDown(rCtx->dsp);
  GLboolean  ret = rCtx->dsp->curr->glIsTransformFeedback(id);
  return ret;
}

static void REGAL_CALL debug_glPauseTransformFeedback(void)
{
  RegalContext * rCtx = GET_REGAL_CONTEXT();
  DispatchStateScopedStepDown stepDown(rCtx->dsp);
  rCtx->dsp->curr->glPauseTransformFeedback();
}

static void REGAL_CALL debug_glResumeTransformFeedback(void)
{
  RegalContext * rCtx = GET_REGAL_CONTEXT();
  DispatchStateScopedStepDown stepDown(rCtx->dsp);
  rCtx->dsp->curr->glResumeTransformFeedback();
}

static void REGAL_CALL debug_glDrawTransformFeedback(GLenum mode, GLuint name)
{
  RegalContext * rCtx = GET_REGAL_CONTEXT();
  DispatchStateScopedStepDown stepDown(rCtx->dsp);
  rCtx->dsp->curr->glDrawTransformFeedback(mode, name);
}

// GL_ARB_transform_feedback3

static void REGAL_CALL debug_glDrawTransformFeedbackStream(GLenum mode, GLuint id, GLuint stream)
{
  RegalContext * rCtx = GET_REGAL_CONTEXT();
  DispatchStateScopedStepDown stepDown(rCtx->dsp);
  rCtx->dsp->curr->glDrawTransformFeedbackStream(mode, id, stream);
}

static void REGAL_CALL debug_glBeginQueryIndexed(GLenum target, GLuint index, GLuint id)
{
  RegalContext * rCtx = GET_REGAL_CONTEXT();
  DispatchStateScopedStepDown stepDown(rCtx->dsp);
  rCtx->dsp->curr->glBeginQueryIndexed(target, index, id);
}

static void REGAL_CALL debug_glEndQueryIndexed(GLenum target, GLuint index)
{
  RegalContext * rCtx = GET_REGAL_CONTEXT();
  DispatchStateScopedStepDown stepDown(rCtx->dsp);
  rCtx->dsp->curr->glEndQueryIndexed(target, index);
}

static void REGAL_CALL debug_glGetQueryIndexediv(GLenum target, GLuint index, GLenum pname, GLint *params)
{
  RegalContext * rCtx = GET_REGAL_CONTEXT();
  DispatchStateScopedStepDown stepDown(rCtx->dsp);
  rCtx->dsp->curr->glGetQueryIndexediv(target, index, pname, params);
}

// GL_ARB_shader_subroutine

static GLint REGAL_CALL debug_glGetSubroutineUniformLocation(GLuint program, GLenum shaderType, const GLchar *name)
{
  RegalContext * rCtx = GET_REGAL_CONTEXT();
  DispatchStateScopedStepDown stepDown(rCtx->dsp);
  GLint  ret = rCtx->dsp->curr->glGetSubroutineUniformLocation(program, shaderType, name);
  return ret;
}

static GLuint REGAL_CALL debug_glGetSubroutineIndex(GLuint program, GLenum shaderType, const GLchar *name)
{
  RegalContext * rCtx = GET_REGAL_CONTEXT();
  DispatchStateScopedStepDown stepDown(rCtx->dsp);
  GLuint  ret = rCtx->dsp->curr->glGetSubroutineIndex(program, shaderType, name);
  return ret;
}

static void REGAL_CALL debug_glGetActiveSubroutineUniformiv(GLuint program, GLenum shaderType, GLuint index, GLenum pname, GLint *values)
{
  RegalContext * rCtx = GET_REGAL_CONTEXT();
  DispatchStateScopedStepDown stepDown(rCtx->dsp);
  rCtx->dsp->curr->glGetActiveSubroutineUniformiv(program, shaderType, index, pname, values);
}

static void REGAL_CALL debug_glGetActiveSubroutineUniformName(GLuint program, GLenum shaderType, GLuint index, GLsizei bufSize, GLsizei *length, GLchar *name)
{
  RegalContext * rCtx = GET_REGAL_CONTEXT();
  DispatchStateScopedStepDown stepDown(rCtx->dsp);
  rCtx->dsp->curr->glGetActiveSubroutineUniformName(program, shaderType, index, bufSize, length, name);
}

static void REGAL_CALL debug_glGetActiveSubroutineName(GLuint program, GLenum shaderType, GLuint index, GLsizei bufSize, GLsizei *length, GLchar *name)
{
  RegalContext * rCtx = GET_REGAL_CONTEXT();
  DispatchStateScopedStepDown stepDown(rCtx->dsp);
  rCtx->dsp->curr->glGetActiveSubroutineName(program, shaderType, index, bufSize, length, name);
}

static void REGAL_CALL debug_glUniformSubroutinesuiv(GLenum shaderType, GLsizei count, const GLuint *indices)
{
  RegalContext * rCtx = GET_REGAL_CONTEXT();
  DispatchStateScopedStepDown stepDown(rCtx->dsp);
  rCtx->dsp->curr->glUniformSubroutinesuiv(shaderType, count, indices);
}

static void REGAL_CALL debug_glGetUniformSubroutineuiv(GLenum shaderType, GLint location, GLuint *params)
{
  RegalContext * rCtx = GET_REGAL_CONTEXT();
  DispatchStateScopedStepDown stepDown(rCtx->dsp);
  rCtx->dsp->curr->glGetUniformSubroutineuiv(shaderType, location, params);
}

static void REGAL_CALL debug_glGetProgramStageiv(GLuint program, GLenum shaderType, GLenum pname, GLint *values)
{
  RegalContext * rCtx = GET_REGAL_CONTEXT();
  DispatchStateScopedStepDown stepDown(rCtx->dsp);
  rCtx->dsp->curr->glGetProgramStageiv(program, shaderType, pname, values);
}

// GL_ARB_vertex_attrib_64bit

static void REGAL_CALL debug_glVertexAttribL1d(GLuint index, GLdouble x)
{
  RegalContext * rCtx = GET_REGAL_CONTEXT();
  DispatchStateScopedStepDown stepDown(rCtx->dsp);
  rCtx->dsp->curr->glVertexAttribL1d(index, x);
}

static void REGAL_CALL debug_glVertexAttribL2d(GLuint index, GLdouble x, GLdouble y)
{
  RegalContext * rCtx = GET_REGAL_CONTEXT();
  DispatchStateScopedStepDown stepDown(rCtx->dsp);
  rCtx->dsp->curr->glVertexAttribL2d(index, x, y);
}

static void REGAL_CALL debug_glVertexAttribL3d(GLuint index, GLdouble x, GLdouble y, GLdouble z)
{
  RegalContext * rCtx = GET_REGAL_CONTEXT();
  DispatchStateScopedStepDown stepDown(rCtx->dsp);
  rCtx->dsp->curr->glVertexAttribL3d(index, x, y, z);
}

static void REGAL_CALL debug_glVertexAttribL4d(GLuint index, GLdouble x, GLdouble y, GLdouble z, GLdouble w)
{
  RegalContext * rCtx = GET_REGAL_CONTEXT();
  DispatchStateScopedStepDown stepDown(rCtx->dsp);
  rCtx->dsp->curr->glVertexAttribL4d(index, x, y, z, w);
}

static void REGAL_CALL debug_glVertexAttribL1dv(GLuint index, const GLdouble *v)
{
  RegalContext * rCtx = GET_REGAL_CONTEXT();
  DispatchStateScopedStepDown stepDown(rCtx->dsp);
  rCtx->dsp->curr->glVertexAttribL1dv(index, v);
}

static void REGAL_CALL debug_glVertexAttribL2dv(GLuint index, const GLdouble *v)
{
  RegalContext * rCtx = GET_REGAL_CONTEXT();
  DispatchStateScopedStepDown stepDown(rCtx->dsp);
  rCtx->dsp->curr->glVertexAttribL2dv(index, v);
}

static void REGAL_CALL debug_glVertexAttribL3dv(GLuint index, const GLdouble *v)
{
  RegalContext * rCtx = GET_REGAL_CONTEXT();
  DispatchStateScopedStepDown stepDown(rCtx->dsp);
  rCtx->dsp->curr->glVertexAttribL3dv(index, v);
}

static void REGAL_CALL debug_glVertexAttribL4dv(GLuint index, const GLdouble *v)
{
  RegalContext * rCtx = GET_REGAL_CONTEXT();
  DispatchStateScopedStepDown stepDown(rCtx->dsp);
  rCtx->dsp->curr->glVertexAttribL4dv(index, v);
}

static void REGAL_CALL debug_glVertexAttribLPointer(GLuint index, GLint size, GLenum type, GLsizei stride, const GLvoid *pointer)
{
  RegalContext * rCtx = GET_REGAL_CONTEXT();
  DispatchStateScopedStepDown stepDown(rCtx->dsp);
  rCtx->dsp->curr->glVertexAttribLPointer(index, size, type, stride, pointer);
}

static void REGAL_CALL debug_glGetVertexAttribLdv(GLuint index, GLenum pname, GLdouble *params)
{
  RegalContext * rCtx = GET_REGAL_CONTEXT();
  DispatchStateScopedStepDown stepDown(rCtx->dsp);
  rCtx->dsp->curr->glGetVertexAttribLdv(index, pname, params);
}

// GL_ARB_ES2_compatibility

static void REGAL_CALL debug_glReleaseShaderCompiler(void)
{
  RegalContext * rCtx = GET_REGAL_CONTEXT();
  DispatchStateScopedStepDown stepDown(rCtx->dsp);
  rCtx->dsp->curr->glReleaseShaderCompiler();
}

static void REGAL_CALL debug_glShaderBinary(GLsizei count, const GLuint *shaders, GLenum binaryformat, const GLvoid *binary, GLsizei length)
{
  RegalContext * rCtx = GET_REGAL_CONTEXT();
  DispatchStateScopedStepDown stepDown(rCtx->dsp);
  rCtx->dsp->curr->glShaderBinary(count, shaders, binaryformat, binary, length);
}

static void REGAL_CALL debug_glGetShaderPrecisionFormat(GLenum shadertype, GLenum precisiontype, GLint *range, GLint *precision)
{
  RegalContext * rCtx = GET_REGAL_CONTEXT();
  DispatchStateScopedStepDown stepDown(rCtx->dsp);
  rCtx->dsp->curr->glGetShaderPrecisionFormat(shadertype, precisiontype, range, precision);
}

static void REGAL_CALL debug_glDepthRangef(GLclampf n, GLclampf f)
{
  RegalContext * rCtx = GET_REGAL_CONTEXT();
  DispatchStateScopedStepDown stepDown(rCtx->dsp);
  rCtx->dsp->curr->glDepthRangef(n, f);
}

static void REGAL_CALL debug_glClearDepthf(GLclampf d)
{
  RegalContext * rCtx = GET_REGAL_CONTEXT();
  DispatchStateScopedStepDown stepDown(rCtx->dsp);
  rCtx->dsp->curr->glClearDepthf(d);
}

// GL_ARB_get_program_binary

static void REGAL_CALL debug_glGetProgramBinary(GLuint program, GLsizei bufSize, GLsizei *length, GLenum *binaryFormat, GLvoid *binary)
{
  RegalContext * rCtx = GET_REGAL_CONTEXT();
  DispatchStateScopedStepDown stepDown(rCtx->dsp);
  rCtx->dsp->curr->glGetProgramBinary(program, bufSize, length, binaryFormat, binary);
}

static void REGAL_CALL debug_glProgramBinary(GLuint program, GLenum binaryFormat, const GLvoid *binary, GLsizei length)
{
  RegalContext * rCtx = GET_REGAL_CONTEXT();
  DispatchStateScopedStepDown stepDown(rCtx->dsp);
  rCtx->dsp->curr->glProgramBinary(program, binaryFormat, binary, length);
}

static void REGAL_CALL debug_glProgramParameteri(GLuint program, GLenum pname, GLint value)
{
  RegalContext * rCtx = GET_REGAL_CONTEXT();
  DispatchStateScopedStepDown stepDown(rCtx->dsp);
  rCtx->dsp->curr->glProgramParameteri(program, pname, value);
}

// GL_ARB_viewport_array

static void REGAL_CALL debug_glViewportArrayv(GLuint first, GLsizei count, const GLfloat *v)
{
  RegalContext * rCtx = GET_REGAL_CONTEXT();
  DispatchStateScopedStepDown stepDown(rCtx->dsp);
  rCtx->dsp->curr->glViewportArrayv(first, count, v);
}

static void REGAL_CALL debug_glViewportIndexedf(GLuint index, GLfloat x, GLfloat y, GLfloat w, GLfloat h)
{
  RegalContext * rCtx = GET_REGAL_CONTEXT();
  DispatchStateScopedStepDown stepDown(rCtx->dsp);
  rCtx->dsp->curr->glViewportIndexedf(index, x, y, w, h);
}

static void REGAL_CALL debug_glViewportIndexedfv(GLuint index, const GLfloat *v)
{
  RegalContext * rCtx = GET_REGAL_CONTEXT();
  DispatchStateScopedStepDown stepDown(rCtx->dsp);
  rCtx->dsp->curr->glViewportIndexedfv(index, v);
}

static void REGAL_CALL debug_glScissorArrayv(GLuint first, GLsizei count, const GLint *v)
{
  RegalContext * rCtx = GET_REGAL_CONTEXT();
  DispatchStateScopedStepDown stepDown(rCtx->dsp);
  rCtx->dsp->curr->glScissorArrayv(first, count, v);
}

static void REGAL_CALL debug_glScissorIndexed(GLuint index, GLint left, GLint bottom, GLint width, GLint height)
{
  RegalContext * rCtx = GET_REGAL_CONTEXT();
  DispatchStateScopedStepDown stepDown(rCtx->dsp);
  rCtx->dsp->curr->glScissorIndexed(index, left, bottom, width, height);
}

static void REGAL_CALL debug_glScissorIndexedv(GLuint index, const GLint *v)
{
  RegalContext * rCtx = GET_REGAL_CONTEXT();
  DispatchStateScopedStepDown stepDown(rCtx->dsp);
  rCtx->dsp->curr->glScissorIndexedv(index, v);
}

static void REGAL_CALL debug_glDepthRangeArrayv(GLuint first, GLsizei count, const GLclampd *v)
{
  RegalContext * rCtx = GET_REGAL_CONTEXT();
  DispatchStateScopedStepDown stepDown(rCtx->dsp);
  rCtx->dsp->curr->glDepthRangeArrayv(first, count, v);
}

static void REGAL_CALL debug_glDepthRangeIndexed(GLuint index, GLclampd n, GLclampd f)
{
  RegalContext * rCtx = GET_REGAL_CONTEXT();
  DispatchStateScopedStepDown stepDown(rCtx->dsp);
  rCtx->dsp->curr->glDepthRangeIndexed(index, n, f);
}

static void REGAL_CALL debug_glGetFloati_v(GLenum target, GLuint index, GLfloat *v)
{
  RegalContext * rCtx = GET_REGAL_CONTEXT();
  DispatchStateScopedStepDown stepDown(rCtx->dsp);
  rCtx->dsp->curr->glGetFloati_v(target, index, v);
}

static void REGAL_CALL debug_glGetDoublei_v(GLenum target, GLuint index, GLdouble *v)
{
  RegalContext * rCtx = GET_REGAL_CONTEXT();
  DispatchStateScopedStepDown stepDown(rCtx->dsp);
  rCtx->dsp->curr->glGetDoublei_v(target, index, v);
}

// GL_ARB_separate_shader_objects

static void REGAL_CALL debug_glActiveShaderProgram(GLuint pipeline, GLuint program)
{
  RegalContext * rCtx = GET_REGAL_CONTEXT();
  DispatchStateScopedStepDown stepDown(rCtx->dsp);
  rCtx->dsp->curr->glActiveShaderProgram(pipeline, program);
}

static void REGAL_CALL debug_glUseProgramStages(GLuint pipeline, GLbitfield stages, GLuint program)
{
  RegalContext * rCtx = GET_REGAL_CONTEXT();
  DispatchStateScopedStepDown stepDown(rCtx->dsp);
  rCtx->dsp->curr->glUseProgramStages(pipeline, stages, program);
}

static GLuint REGAL_CALL debug_glCreateShaderProgramv(GLenum type, GLsizei count, const GLchar **strings)
{
  RegalContext * rCtx = GET_REGAL_CONTEXT();
  DispatchStateScopedStepDown stepDown(rCtx->dsp);
  GLuint  ret = rCtx->dsp->curr->glCreateShaderProgramv(type, count, strings);
  return ret;
}

static void REGAL_CALL debug_glBindProgramPipeline(GLuint pipeline)
{
  RegalContext * rCtx = GET_REGAL_CONTEXT();
  DispatchStateScopedStepDown stepDown(rCtx->dsp);
  rCtx->dsp->curr->glBindProgramPipeline(pipeline);
}

static void REGAL_CALL debug_glDeleteProgramPipelines(GLsizei n, const GLuint *pipelines)
{
  RegalContext * rCtx = GET_REGAL_CONTEXT();
  DispatchStateScopedStepDown stepDown(rCtx->dsp);
  rCtx->dsp->curr->glDeleteProgramPipelines(n, pipelines);
}

static void REGAL_CALL debug_glGenProgramPipelines(GLsizei n, GLuint *pipelines)
{
  RegalContext * rCtx = GET_REGAL_CONTEXT();
  DispatchStateScopedStepDown stepDown(rCtx->dsp);
  rCtx->dsp->curr->glGenProgramPipelines(n, pipelines);
}

static GLboolean REGAL_CALL debug_glIsProgramPipeline(GLuint pipeline)
{
  RegalContext * rCtx = GET_REGAL_CONTEXT();
  DispatchStateScopedStepDown stepDown(rCtx->dsp);
  GLboolean  ret = rCtx->dsp->curr->glIsProgramPipeline(pipeline);
  return ret;
}

static void REGAL_CALL debug_glGetProgramPipelineiv(GLuint pipeline, GLenum pname, GLint *params)
{
  RegalContext * rCtx = GET_REGAL_CONTEXT();
  DispatchStateScopedStepDown stepDown(rCtx->dsp);
  rCtx->dsp->curr->glGetProgramPipelineiv(pipeline, pname, params);
}

static void REGAL_CALL debug_glValidateProgramPipeline(GLuint pipeline)
{
  RegalContext * rCtx = GET_REGAL_CONTEXT();
  DispatchStateScopedStepDown stepDown(rCtx->dsp);
  rCtx->dsp->curr->glValidateProgramPipeline(pipeline);
}

static void REGAL_CALL debug_glGetProgramPipelineInfoLog(GLuint pipeline, GLsizei bufSize, GLsizei *length, GLchar *infoLog)
{
  RegalContext * rCtx = GET_REGAL_CONTEXT();
  DispatchStateScopedStepDown stepDown(rCtx->dsp);
  rCtx->dsp->curr->glGetProgramPipelineInfoLog(pipeline, bufSize, length, infoLog);
}

static void REGAL_CALL debug_glProgramUniform1f(GLuint program, GLint location, GLfloat x)
{
  RegalContext * rCtx = GET_REGAL_CONTEXT();
  DispatchStateScopedStepDown stepDown(rCtx->dsp);
  rCtx->dsp->curr->glProgramUniform1f(program, location, x);
}

static void REGAL_CALL debug_glProgramUniform2f(GLuint program, GLint location, GLfloat x, GLfloat y)
{
  RegalContext * rCtx = GET_REGAL_CONTEXT();
  DispatchStateScopedStepDown stepDown(rCtx->dsp);
  rCtx->dsp->curr->glProgramUniform2f(program, location, x, y);
}

static void REGAL_CALL debug_glProgramUniform3f(GLuint program, GLint location, GLfloat x, GLfloat y, GLfloat z)
{
  RegalContext * rCtx = GET_REGAL_CONTEXT();
  DispatchStateScopedStepDown stepDown(rCtx->dsp);
  rCtx->dsp->curr->glProgramUniform3f(program, location, x, y, z);
}

static void REGAL_CALL debug_glProgramUniform4f(GLuint program, GLint location, GLfloat x, GLfloat y, GLfloat z, GLfloat w)
{
  RegalContext * rCtx = GET_REGAL_CONTEXT();
  DispatchStateScopedStepDown stepDown(rCtx->dsp);
  rCtx->dsp->curr->glProgramUniform4f(program, location, x, y, z, w);
}

static void REGAL_CALL debug_glProgramUniform1i(GLuint program, GLint location, GLint x)
{
  RegalContext * rCtx = GET_REGAL_CONTEXT();
  DispatchStateScopedStepDown stepDown(rCtx->dsp);
  rCtx->dsp->curr->glProgramUniform1i(program, location, x);
}

static void REGAL_CALL debug_glProgramUniform2i(GLuint program, GLint location, GLint x, GLint y)
{
  RegalContext * rCtx = GET_REGAL_CONTEXT();
  DispatchStateScopedStepDown stepDown(rCtx->dsp);
  rCtx->dsp->curr->glProgramUniform2i(program, location, x, y);
}

static void REGAL_CALL debug_glProgramUniform3i(GLuint program, GLint location, GLint x, GLint y, GLint z)
{
  RegalContext * rCtx = GET_REGAL_CONTEXT();
  DispatchStateScopedStepDown stepDown(rCtx->dsp);
  rCtx->dsp->curr->glProgramUniform3i(program, location, x, y, z);
}

static void REGAL_CALL debug_glProgramUniform4i(GLuint program, GLint location, GLint x, GLint y, GLint z, GLint w)
{
  RegalContext * rCtx = GET_REGAL_CONTEXT();
  DispatchStateScopedStepDown stepDown(rCtx->dsp);
  rCtx->dsp->curr->glProgramUniform4i(program, location, x, y, z, w);
}

static void REGAL_CALL debug_glProgramUniform1fv(GLuint program, GLint location, GLsizei count, const GLfloat *value)
{
  RegalContext * rCtx = GET_REGAL_CONTEXT();
  DispatchStateScopedStepDown stepDown(rCtx->dsp);
  rCtx->dsp->curr->glProgramUniform1fv(program, location, count, value);
}

static void REGAL_CALL debug_glProgramUniform2fv(GLuint program, GLint location, GLsizei count, const GLfloat *value)
{
  RegalContext * rCtx = GET_REGAL_CONTEXT();
  DispatchStateScopedStepDown stepDown(rCtx->dsp);
  rCtx->dsp->curr->glProgramUniform2fv(program, location, count, value);
}

static void REGAL_CALL debug_glProgramUniform3fv(GLuint program, GLint location, GLsizei count, const GLfloat *value)
{
  RegalContext * rCtx = GET_REGAL_CONTEXT();
  DispatchStateScopedStepDown stepDown(rCtx->dsp);
  rCtx->dsp->curr->glProgramUniform3fv(program, location, count, value);
}

static void REGAL_CALL debug_glProgramUniform4fv(GLuint program, GLint location, GLsizei count, const GLfloat *value)
{
  RegalContext * rCtx = GET_REGAL_CONTEXT();
  DispatchStateScopedStepDown stepDown(rCtx->dsp);
  rCtx->dsp->curr->glProgramUniform4fv(program, location, count, value);
}

static void REGAL_CALL debug_glProgramUniform1iv(GLuint program, GLint location, GLsizei count, const GLint *value)
{
  RegalContext * rCtx = GET_REGAL_CONTEXT();
  DispatchStateScopedStepDown stepDown(rCtx->dsp);
  rCtx->dsp->curr->glProgramUniform1iv(program, location, count, value);
}

static void REGAL_CALL debug_glProgramUniform2iv(GLuint program, GLint location, GLsizei count, const GLint *value)
{
  RegalContext * rCtx = GET_REGAL_CONTEXT();
  DispatchStateScopedStepDown stepDown(rCtx->dsp);
  rCtx->dsp->curr->glProgramUniform2iv(program, location, count, value);
}

static void REGAL_CALL debug_glProgramUniform3iv(GLuint program, GLint location, GLsizei count, const GLint *value)
{
  RegalContext * rCtx = GET_REGAL_CONTEXT();
  DispatchStateScopedStepDown stepDown(rCtx->dsp);
  rCtx->dsp->curr->glProgramUniform3iv(program, location, count, value);
}

static void REGAL_CALL debug_glProgramUniform4iv(GLuint program, GLint location, GLsizei count, const GLint *value)
{
  RegalContext * rCtx = GET_REGAL_CONTEXT();
  DispatchStateScopedStepDown stepDown(rCtx->dsp);
  rCtx->dsp->curr->glProgramUniform4iv(program, location, count, value);
}

static void REGAL_CALL debug_glProgramUniformMatrix2fv(GLuint program, GLint location, GLsizei count, GLboolean transpose, const GLfloat *value)
{
  RegalContext * rCtx = GET_REGAL_CONTEXT();
  DispatchStateScopedStepDown stepDown(rCtx->dsp);
  rCtx->dsp->curr->glProgramUniformMatrix2fv(program, location, count, transpose, value);
}

static void REGAL_CALL debug_glProgramUniformMatrix3fv(GLuint program, GLint location, GLsizei count, GLboolean transpose, const GLfloat *value)
{
  RegalContext * rCtx = GET_REGAL_CONTEXT();
  DispatchStateScopedStepDown stepDown(rCtx->dsp);
  rCtx->dsp->curr->glProgramUniformMatrix3fv(program, location, count, transpose, value);
}

static void REGAL_CALL debug_glProgramUniformMatrix4fv(GLuint program, GLint location, GLsizei count, GLboolean transpose, const GLfloat *value)
{
  RegalContext * rCtx = GET_REGAL_CONTEXT();
  DispatchStateScopedStepDown stepDown(rCtx->dsp);
  rCtx->dsp->curr->glProgramUniformMatrix4fv(program, location, count, transpose, value);
}

static void REGAL_CALL debug_glProgramUniformMatrix2x3fv(GLuint program, GLint location, GLsizei count, GLboolean transpose, const GLfloat *value)
{
  RegalContext * rCtx = GET_REGAL_CONTEXT();
  DispatchStateScopedStepDown stepDown(rCtx->dsp);
  rCtx->dsp->curr->glProgramUniformMatrix2x3fv(program, location, count, transpose, value);
}

static void REGAL_CALL debug_glProgramUniformMatrix3x2fv(GLuint program, GLint location, GLsizei count, GLboolean transpose, const GLfloat *value)
{
  RegalContext * rCtx = GET_REGAL_CONTEXT();
  DispatchStateScopedStepDown stepDown(rCtx->dsp);
  rCtx->dsp->curr->glProgramUniformMatrix3x2fv(program, location, count, transpose, value);
}

static void REGAL_CALL debug_glProgramUniformMatrix2x4fv(GLuint program, GLint location, GLsizei count, GLboolean transpose, const GLfloat *value)
{
  RegalContext * rCtx = GET_REGAL_CONTEXT();
  DispatchStateScopedStepDown stepDown(rCtx->dsp);
  rCtx->dsp->curr->glProgramUniformMatrix2x4fv(program, location, count, transpose, value);
}

static void REGAL_CALL debug_glProgramUniformMatrix4x2fv(GLuint program, GLint location, GLsizei count, GLboolean transpose, const GLfloat *value)
{
  RegalContext * rCtx = GET_REGAL_CONTEXT();
  DispatchStateScopedStepDown stepDown(rCtx->dsp);
  rCtx->dsp->curr->glProgramUniformMatrix4x2fv(program, location, count, transpose, value);
}

static void REGAL_CALL debug_glProgramUniformMatrix3x4fv(GLuint program, GLint location, GLsizei count, GLboolean transpose, const GLfloat *value)
{
  RegalContext * rCtx = GET_REGAL_CONTEXT();
  DispatchStateScopedStepDown stepDown(rCtx->dsp);
  rCtx->dsp->curr->glProgramUniformMatrix3x4fv(program, location, count, transpose, value);
}

static void REGAL_CALL debug_glProgramUniformMatrix4x3fv(GLuint program, GLint location, GLsizei count, GLboolean transpose, const GLfloat *value)
{
  RegalContext * rCtx = GET_REGAL_CONTEXT();
  DispatchStateScopedStepDown stepDown(rCtx->dsp);
  rCtx->dsp->curr->glProgramUniformMatrix4x3fv(program, location, count, transpose, value);
}

static void REGAL_CALL debug_glProgramUniform1ui(GLuint program, GLint location, GLuint v0)
{
  RegalContext * rCtx = GET_REGAL_CONTEXT();
  DispatchStateScopedStepDown stepDown(rCtx->dsp);
  rCtx->dsp->curr->glProgramUniform1ui(program, location, v0);
}

static void REGAL_CALL debug_glProgramUniform2ui(GLuint program, GLint location, GLuint x, GLuint y)
{
  RegalContext * rCtx = GET_REGAL_CONTEXT();
  DispatchStateScopedStepDown stepDown(rCtx->dsp);
  rCtx->dsp->curr->glProgramUniform2ui(program, location, x, y);
}

static void REGAL_CALL debug_glProgramUniform3ui(GLuint program, GLint location, GLuint x, GLuint y, GLuint z)
{
  RegalContext * rCtx = GET_REGAL_CONTEXT();
  DispatchStateScopedStepDown stepDown(rCtx->dsp);
  rCtx->dsp->curr->glProgramUniform3ui(program, location, x, y, z);
}

static void REGAL_CALL debug_glProgramUniform4ui(GLuint program, GLint location, GLuint x, GLuint y, GLuint z, GLuint w)
{
  RegalContext * rCtx = GET_REGAL_CONTEXT();
  DispatchStateScopedStepDown stepDown(rCtx->dsp);
  rCtx->dsp->curr->glProgramUniform4ui(program, location, x, y, z, w);
}

static void REGAL_CALL debug_glProgramUniform1uiv(GLuint program, GLint location, GLsizei count, const GLuint *value)
{
  RegalContext * rCtx = GET_REGAL_CONTEXT();
  DispatchStateScopedStepDown stepDown(rCtx->dsp);
  rCtx->dsp->curr->glProgramUniform1uiv(program, location, count, value);
}

static void REGAL_CALL debug_glProgramUniform2uiv(GLuint program, GLint location, GLsizei count, const GLuint *value)
{
  RegalContext * rCtx = GET_REGAL_CONTEXT();
  DispatchStateScopedStepDown stepDown(rCtx->dsp);
  rCtx->dsp->curr->glProgramUniform2uiv(program, location, count, value);
}

static void REGAL_CALL debug_glProgramUniform3uiv(GLuint program, GLint location, GLsizei count, const GLuint *value)
{
  RegalContext * rCtx = GET_REGAL_CONTEXT();
  DispatchStateScopedStepDown stepDown(rCtx->dsp);
  rCtx->dsp->curr->glProgramUniform3uiv(program, location, count, value);
}

static void REGAL_CALL debug_glProgramUniform4uiv(GLuint program, GLint location, GLsizei count, const GLuint *value)
{
  RegalContext * rCtx = GET_REGAL_CONTEXT();
  DispatchStateScopedStepDown stepDown(rCtx->dsp);
  rCtx->dsp->curr->glProgramUniform4uiv(program, location, count, value);
}

static void REGAL_CALL debug_glProgramUniform1d(GLuint program, GLint location, GLdouble x)
{
  RegalContext * rCtx = GET_REGAL_CONTEXT();
  DispatchStateScopedStepDown stepDown(rCtx->dsp);
  rCtx->dsp->curr->glProgramUniform1d(program, location, x);
}

static void REGAL_CALL debug_glProgramUniform2d(GLuint program, GLint location, GLdouble x, GLdouble y)
{
  RegalContext * rCtx = GET_REGAL_CONTEXT();
  DispatchStateScopedStepDown stepDown(rCtx->dsp);
  rCtx->dsp->curr->glProgramUniform2d(program, location, x, y);
}

static void REGAL_CALL debug_glProgramUniform3d(GLuint program, GLint location, GLdouble x, GLdouble y, GLdouble z)
{
  RegalContext * rCtx = GET_REGAL_CONTEXT();
  DispatchStateScopedStepDown stepDown(rCtx->dsp);
  rCtx->dsp->curr->glProgramUniform3d(program, location, x, y, z);
}

static void REGAL_CALL debug_glProgramUniform4d(GLuint program, GLint location, GLdouble x, GLdouble y, GLdouble z, GLdouble w)
{
  RegalContext * rCtx = GET_REGAL_CONTEXT();
  DispatchStateScopedStepDown stepDown(rCtx->dsp);
  rCtx->dsp->curr->glProgramUniform4d(program, location, x, y, z, w);
}

static void REGAL_CALL debug_glProgramUniform1dv(GLuint program, GLint location, GLsizei count, const GLdouble *value)
{
  RegalContext * rCtx = GET_REGAL_CONTEXT();
  DispatchStateScopedStepDown stepDown(rCtx->dsp);
  rCtx->dsp->curr->glProgramUniform1dv(program, location, count, value);
}

static void REGAL_CALL debug_glProgramUniform2dv(GLuint program, GLint location, GLsizei count, const GLdouble *value)
{
  RegalContext * rCtx = GET_REGAL_CONTEXT();
  DispatchStateScopedStepDown stepDown(rCtx->dsp);
  rCtx->dsp->curr->glProgramUniform2dv(program, location, count, value);
}

static void REGAL_CALL debug_glProgramUniform3dv(GLuint program, GLint location, GLsizei count, const GLdouble *value)
{
  RegalContext * rCtx = GET_REGAL_CONTEXT();
  DispatchStateScopedStepDown stepDown(rCtx->dsp);
  rCtx->dsp->curr->glProgramUniform3dv(program, location, count, value);
}

static void REGAL_CALL debug_glProgramUniform4dv(GLuint program, GLint location, GLsizei count, const GLdouble *value)
{
  RegalContext * rCtx = GET_REGAL_CONTEXT();
  DispatchStateScopedStepDown stepDown(rCtx->dsp);
  rCtx->dsp->curr->glProgramUniform4dv(program, location, count, value);
}

static void REGAL_CALL debug_glProgramUniformMatrix2dv(GLuint program, GLint location, GLsizei count, GLboolean transpose, const GLdouble *value)
{
  RegalContext * rCtx = GET_REGAL_CONTEXT();
  DispatchStateScopedStepDown stepDown(rCtx->dsp);
  rCtx->dsp->curr->glProgramUniformMatrix2dv(program, location, count, transpose, value);
}

static void REGAL_CALL debug_glProgramUniformMatrix3dv(GLuint program, GLint location, GLsizei count, GLboolean transpose, const GLdouble *value)
{
  RegalContext * rCtx = GET_REGAL_CONTEXT();
  DispatchStateScopedStepDown stepDown(rCtx->dsp);
  rCtx->dsp->curr->glProgramUniformMatrix3dv(program, location, count, transpose, value);
}

static void REGAL_CALL debug_glProgramUniformMatrix4dv(GLuint program, GLint location, GLsizei count, GLboolean transpose, const GLdouble *value)
{
  RegalContext * rCtx = GET_REGAL_CONTEXT();
  DispatchStateScopedStepDown stepDown(rCtx->dsp);
  rCtx->dsp->curr->glProgramUniformMatrix4dv(program, location, count, transpose, value);
}

static void REGAL_CALL debug_glProgramUniformMatrix2x3dv(GLuint program, GLint location, GLsizei count, GLboolean transpose, const GLdouble *value)
{
  RegalContext * rCtx = GET_REGAL_CONTEXT();
  DispatchStateScopedStepDown stepDown(rCtx->dsp);
  rCtx->dsp->curr->glProgramUniformMatrix2x3dv(program, location, count, transpose, value);
}

static void REGAL_CALL debug_glProgramUniformMatrix2x4dv(GLuint program, GLint location, GLsizei count, GLboolean transpose, const GLdouble *value)
{
  RegalContext * rCtx = GET_REGAL_CONTEXT();
  DispatchStateScopedStepDown stepDown(rCtx->dsp);
  rCtx->dsp->curr->glProgramUniformMatrix2x4dv(program, location, count, transpose, value);
}

static void REGAL_CALL debug_glProgramUniformMatrix3x2dv(GLuint program, GLint location, GLsizei count, GLboolean transpose, const GLdouble *value)
{
  RegalContext * rCtx = GET_REGAL_CONTEXT();
  DispatchStateScopedStepDown stepDown(rCtx->dsp);
  rCtx->dsp->curr->glProgramUniformMatrix3x2dv(program, location, count, transpose, value);
}

static void REGAL_CALL debug_glProgramUniformMatrix3x4dv(GLuint program, GLint location, GLsizei count, GLboolean transpose, const GLdouble *value)
{
  RegalContext * rCtx = GET_REGAL_CONTEXT();
  DispatchStateScopedStepDown stepDown(rCtx->dsp);
  rCtx->dsp->curr->glProgramUniformMatrix3x4dv(program, location, count, transpose, value);
}

static void REGAL_CALL debug_glProgramUniformMatrix4x2dv(GLuint program, GLint location, GLsizei count, GLboolean transpose, const GLdouble *value)
{
  RegalContext * rCtx = GET_REGAL_CONTEXT();
  DispatchStateScopedStepDown stepDown(rCtx->dsp);
  rCtx->dsp->curr->glProgramUniformMatrix4x2dv(program, location, count, transpose, value);
}

static void REGAL_CALL debug_glProgramUniformMatrix4x3dv(GLuint program, GLint location, GLsizei count, GLboolean transpose, const GLdouble *value)
{
  RegalContext * rCtx = GET_REGAL_CONTEXT();
  DispatchStateScopedStepDown stepDown(rCtx->dsp);
  rCtx->dsp->curr->glProgramUniformMatrix4x3dv(program, location, count, transpose, value);
}

// GL_ARB_multitexture

static void REGAL_CALL debug_glActiveTextureARB(GLenum texture)
{
  RegalContext * rCtx = GET_REGAL_CONTEXT();
  DispatchStateScopedStepDown stepDown(rCtx->dsp);
  rCtx->dsp->curr->glActiveTextureARB(texture);
}

static void REGAL_CALL debug_glClientActiveTextureARB(GLenum texture)
{
  RegalContext * rCtx = GET_REGAL_CONTEXT();
  DispatchStateScopedStepDown stepDown(rCtx->dsp);
  rCtx->dsp->curr->glClientActiveTextureARB(texture);
}

static void REGAL_CALL debug_glMultiTexCoord1dARB(GLenum target, GLdouble s)
{
  RegalContext * rCtx = GET_REGAL_CONTEXT();
  DispatchStateScopedStepDown stepDown(rCtx->dsp);
  rCtx->dsp->curr->glMultiTexCoord1dARB(target, s);
}

static void REGAL_CALL debug_glMultiTexCoord1dvARB(GLenum target, const GLdouble *v)
{
  RegalContext * rCtx = GET_REGAL_CONTEXT();
  DispatchStateScopedStepDown stepDown(rCtx->dsp);
  rCtx->dsp->curr->glMultiTexCoord1dvARB(target, v);
}

static void REGAL_CALL debug_glMultiTexCoord1fARB(GLenum target, GLfloat s)
{
  RegalContext * rCtx = GET_REGAL_CONTEXT();
  DispatchStateScopedStepDown stepDown(rCtx->dsp);
  rCtx->dsp->curr->glMultiTexCoord1fARB(target, s);
}

static void REGAL_CALL debug_glMultiTexCoord1fvARB(GLenum target, const GLfloat *v)
{
  RegalContext * rCtx = GET_REGAL_CONTEXT();
  DispatchStateScopedStepDown stepDown(rCtx->dsp);
  rCtx->dsp->curr->glMultiTexCoord1fvARB(target, v);
}

static void REGAL_CALL debug_glMultiTexCoord1iARB(GLenum target, GLint s)
{
  RegalContext * rCtx = GET_REGAL_CONTEXT();
  DispatchStateScopedStepDown stepDown(rCtx->dsp);
  rCtx->dsp->curr->glMultiTexCoord1iARB(target, s);
}

static void REGAL_CALL debug_glMultiTexCoord1ivARB(GLenum target, const GLint *v)
{
  RegalContext * rCtx = GET_REGAL_CONTEXT();
  DispatchStateScopedStepDown stepDown(rCtx->dsp);
  rCtx->dsp->curr->glMultiTexCoord1ivARB(target, v);
}

static void REGAL_CALL debug_glMultiTexCoord1sARB(GLenum target, GLshort s)
{
  RegalContext * rCtx = GET_REGAL_CONTEXT();
  DispatchStateScopedStepDown stepDown(rCtx->dsp);
  rCtx->dsp->curr->glMultiTexCoord1sARB(target, s);
}

static void REGAL_CALL debug_glMultiTexCoord1svARB(GLenum target, const GLshort *v)
{
  RegalContext * rCtx = GET_REGAL_CONTEXT();
  DispatchStateScopedStepDown stepDown(rCtx->dsp);
  rCtx->dsp->curr->glMultiTexCoord1svARB(target, v);
}

static void REGAL_CALL debug_glMultiTexCoord2dARB(GLenum target, GLdouble s, GLdouble t)
{
  RegalContext * rCtx = GET_REGAL_CONTEXT();
  DispatchStateScopedStepDown stepDown(rCtx->dsp);
  rCtx->dsp->curr->glMultiTexCoord2dARB(target, s, t);
}

static void REGAL_CALL debug_glMultiTexCoord2dvARB(GLenum target, const GLdouble *v)
{
  RegalContext * rCtx = GET_REGAL_CONTEXT();
  DispatchStateScopedStepDown stepDown(rCtx->dsp);
  rCtx->dsp->curr->glMultiTexCoord2dvARB(target, v);
}

static void REGAL_CALL debug_glMultiTexCoord2fARB(GLenum target, GLfloat s, GLfloat t)
{
  RegalContext * rCtx = GET_REGAL_CONTEXT();
  DispatchStateScopedStepDown stepDown(rCtx->dsp);
  rCtx->dsp->curr->glMultiTexCoord2fARB(target, s, t);
}

static void REGAL_CALL debug_glMultiTexCoord2fvARB(GLenum target, const GLfloat *v)
{
  RegalContext * rCtx = GET_REGAL_CONTEXT();
  DispatchStateScopedStepDown stepDown(rCtx->dsp);
  rCtx->dsp->curr->glMultiTexCoord2fvARB(target, v);
}

static void REGAL_CALL debug_glMultiTexCoord2iARB(GLenum target, GLint s, GLint t)
{
  RegalContext * rCtx = GET_REGAL_CONTEXT();
  DispatchStateScopedStepDown stepDown(rCtx->dsp);
  rCtx->dsp->curr->glMultiTexCoord2iARB(target, s, t);
}

static void REGAL_CALL debug_glMultiTexCoord2ivARB(GLenum target, const GLint *v)
{
  RegalContext * rCtx = GET_REGAL_CONTEXT();
  DispatchStateScopedStepDown stepDown(rCtx->dsp);
  rCtx->dsp->curr->glMultiTexCoord2ivARB(target, v);
}

static void REGAL_CALL debug_glMultiTexCoord2sARB(GLenum target, GLshort s, GLshort t)
{
  RegalContext * rCtx = GET_REGAL_CONTEXT();
  DispatchStateScopedStepDown stepDown(rCtx->dsp);
  rCtx->dsp->curr->glMultiTexCoord2sARB(target, s, t);
}

static void REGAL_CALL debug_glMultiTexCoord2svARB(GLenum target, const GLshort *v)
{
  RegalContext * rCtx = GET_REGAL_CONTEXT();
  DispatchStateScopedStepDown stepDown(rCtx->dsp);
  rCtx->dsp->curr->glMultiTexCoord2svARB(target, v);
}

static void REGAL_CALL debug_glMultiTexCoord3dARB(GLenum target, GLdouble s, GLdouble t, GLdouble r)
{
  RegalContext * rCtx = GET_REGAL_CONTEXT();
  DispatchStateScopedStepDown stepDown(rCtx->dsp);
  rCtx->dsp->curr->glMultiTexCoord3dARB(target, s, t, r);
}

static void REGAL_CALL debug_glMultiTexCoord3dvARB(GLenum target, const GLdouble *v)
{
  RegalContext * rCtx = GET_REGAL_CONTEXT();
  DispatchStateScopedStepDown stepDown(rCtx->dsp);
  rCtx->dsp->curr->glMultiTexCoord3dvARB(target, v);
}

static void REGAL_CALL debug_glMultiTexCoord3fARB(GLenum target, GLfloat s, GLfloat t, GLfloat r)
{
  RegalContext * rCtx = GET_REGAL_CONTEXT();
  DispatchStateScopedStepDown stepDown(rCtx->dsp);
  rCtx->dsp->curr->glMultiTexCoord3fARB(target, s, t, r);
}

static void REGAL_CALL debug_glMultiTexCoord3fvARB(GLenum target, const GLfloat *v)
{
  RegalContext * rCtx = GET_REGAL_CONTEXT();
  DispatchStateScopedStepDown stepDown(rCtx->dsp);
  rCtx->dsp->curr->glMultiTexCoord3fvARB(target, v);
}

static void REGAL_CALL debug_glMultiTexCoord3iARB(GLenum target, GLint s, GLint t, GLint r)
{
  RegalContext * rCtx = GET_REGAL_CONTEXT();
  DispatchStateScopedStepDown stepDown(rCtx->dsp);
  rCtx->dsp->curr->glMultiTexCoord3iARB(target, s, t, r);
}

static void REGAL_CALL debug_glMultiTexCoord3ivARB(GLenum target, const GLint *v)
{
  RegalContext * rCtx = GET_REGAL_CONTEXT();
  DispatchStateScopedStepDown stepDown(rCtx->dsp);
  rCtx->dsp->curr->glMultiTexCoord3ivARB(target, v);
}

static void REGAL_CALL debug_glMultiTexCoord3sARB(GLenum target, GLshort s, GLshort t, GLshort r)
{
  RegalContext * rCtx = GET_REGAL_CONTEXT();
  DispatchStateScopedStepDown stepDown(rCtx->dsp);
  rCtx->dsp->curr->glMultiTexCoord3sARB(target, s, t, r);
}

static void REGAL_CALL debug_glMultiTexCoord3svARB(GLenum target, const GLshort *v)
{
  RegalContext * rCtx = GET_REGAL_CONTEXT();
  DispatchStateScopedStepDown stepDown(rCtx->dsp);
  rCtx->dsp->curr->glMultiTexCoord3svARB(target, v);
}

static void REGAL_CALL debug_glMultiTexCoord4dARB(GLenum target, GLdouble s, GLdouble t, GLdouble r, GLdouble q)
{
  RegalContext * rCtx = GET_REGAL_CONTEXT();
  DispatchStateScopedStepDown stepDown(rCtx->dsp);
  rCtx->dsp->curr->glMultiTexCoord4dARB(target, s, t, r, q);
}

static void REGAL_CALL debug_glMultiTexCoord4dvARB(GLenum target, const GLdouble *v)
{
  RegalContext * rCtx = GET_REGAL_CONTEXT();
  DispatchStateScopedStepDown stepDown(rCtx->dsp);
  rCtx->dsp->curr->glMultiTexCoord4dvARB(target, v);
}

static void REGAL_CALL debug_glMultiTexCoord4fARB(GLenum target, GLfloat s, GLfloat t, GLfloat r, GLfloat q)
{
  RegalContext * rCtx = GET_REGAL_CONTEXT();
  DispatchStateScopedStepDown stepDown(rCtx->dsp);
  rCtx->dsp->curr->glMultiTexCoord4fARB(target, s, t, r, q);
}

static void REGAL_CALL debug_glMultiTexCoord4fvARB(GLenum target, const GLfloat *v)
{
  RegalContext * rCtx = GET_REGAL_CONTEXT();
  DispatchStateScopedStepDown stepDown(rCtx->dsp);
  rCtx->dsp->curr->glMultiTexCoord4fvARB(target, v);
}

static void REGAL_CALL debug_glMultiTexCoord4iARB(GLenum target, GLint s, GLint t, GLint r, GLint q)
{
  RegalContext * rCtx = GET_REGAL_CONTEXT();
  DispatchStateScopedStepDown stepDown(rCtx->dsp);
  rCtx->dsp->curr->glMultiTexCoord4iARB(target, s, t, r, q);
}

static void REGAL_CALL debug_glMultiTexCoord4ivARB(GLenum target, const GLint *v)
{
  RegalContext * rCtx = GET_REGAL_CONTEXT();
  DispatchStateScopedStepDown stepDown(rCtx->dsp);
  rCtx->dsp->curr->glMultiTexCoord4ivARB(target, v);
}

static void REGAL_CALL debug_glMultiTexCoord4sARB(GLenum target, GLshort s, GLshort t, GLshort r, GLshort q)
{
  RegalContext * rCtx = GET_REGAL_CONTEXT();
  DispatchStateScopedStepDown stepDown(rCtx->dsp);
  rCtx->dsp->curr->glMultiTexCoord4sARB(target, s, t, r, q);
}

static void REGAL_CALL debug_glMultiTexCoord4svARB(GLenum target, const GLshort *v)
{
  RegalContext * rCtx = GET_REGAL_CONTEXT();
  DispatchStateScopedStepDown stepDown(rCtx->dsp);
  rCtx->dsp->curr->glMultiTexCoord4svARB(target, v);
}

// GL_ARB_transpose_matrix

static void REGAL_CALL debug_glLoadTransposeMatrixfARB(const GLfloat *m)
{
  RegalContext * rCtx = GET_REGAL_CONTEXT();
  DispatchStateScopedStepDown stepDown(rCtx->dsp);
  rCtx->dsp->curr->glLoadTransposeMatrixfARB(m);
}

static void REGAL_CALL debug_glLoadTransposeMatrixdARB(const GLdouble *m)
{
  RegalContext * rCtx = GET_REGAL_CONTEXT();
  DispatchStateScopedStepDown stepDown(rCtx->dsp);
  rCtx->dsp->curr->glLoadTransposeMatrixdARB(m);
}

static void REGAL_CALL debug_glMultTransposeMatrixfARB(const GLfloat *m)
{
  RegalContext * rCtx = GET_REGAL_CONTEXT();
  DispatchStateScopedStepDown stepDown(rCtx->dsp);
  rCtx->dsp->curr->glMultTransposeMatrixfARB(m);
}

static void REGAL_CALL debug_glMultTransposeMatrixdARB(const GLdouble *m)
{
  RegalContext * rCtx = GET_REGAL_CONTEXT();
  DispatchStateScopedStepDown stepDown(rCtx->dsp);
  rCtx->dsp->curr->glMultTransposeMatrixdARB(m);
}

// GL_ARB_multisample

static void REGAL_CALL debug_glSampleCoverageARB(GLclampf value, GLboolean invert)
{
  RegalContext * rCtx = GET_REGAL_CONTEXT();
  DispatchStateScopedStepDown stepDown(rCtx->dsp);
  rCtx->dsp->curr->glSampleCoverageARB(value, invert);
}

// GL_ARB_texture_compression

static void REGAL_CALL debug_glCompressedTexImage3DARB(GLenum target, GLint level, GLenum internalformat, GLsizei width, GLsizei height, GLsizei depth, GLint border, GLsizei imageSize, const GLvoid *data)
{
  RegalContext * rCtx = GET_REGAL_CONTEXT();
  DispatchStateScopedStepDown stepDown(rCtx->dsp);
  rCtx->dsp->curr->glCompressedTexImage3DARB(target, level, internalformat, width, height, depth, border, imageSize, data);
}

static void REGAL_CALL debug_glCompressedTexImage2DARB(GLenum target, GLint level, GLenum internalformat, GLsizei width, GLsizei height, GLint border, GLsizei imageSize, const GLvoid *data)
{
  RegalContext * rCtx = GET_REGAL_CONTEXT();
  DispatchStateScopedStepDown stepDown(rCtx->dsp);
  rCtx->dsp->curr->glCompressedTexImage2DARB(target, level, internalformat, width, height, border, imageSize, data);
}

static void REGAL_CALL debug_glCompressedTexImage1DARB(GLenum target, GLint level, GLenum internalformat, GLsizei width, GLint border, GLsizei imageSize, const GLvoid *data)
{
  RegalContext * rCtx = GET_REGAL_CONTEXT();
  DispatchStateScopedStepDown stepDown(rCtx->dsp);
  rCtx->dsp->curr->glCompressedTexImage1DARB(target, level, internalformat, width, border, imageSize, data);
}

static void REGAL_CALL debug_glCompressedTexSubImage3DARB(GLenum target, GLint level, GLint xoffset, GLint yoffset, GLint zoffset, GLsizei width, GLsizei height, GLsizei depth, GLenum format, GLsizei imageSize, const GLvoid *data)
{
  RegalContext * rCtx = GET_REGAL_CONTEXT();
  DispatchStateScopedStepDown stepDown(rCtx->dsp);
  rCtx->dsp->curr->glCompressedTexSubImage3DARB(target, level, xoffset, yoffset, zoffset, width, height, depth, format, imageSize, data);
}

static void REGAL_CALL debug_glCompressedTexSubImage2DARB(GLenum target, GLint level, GLint xoffset, GLint yoffset, GLsizei width, GLsizei height, GLenum format, GLsizei imageSize, const GLvoid *data)
{
  RegalContext * rCtx = GET_REGAL_CONTEXT();
  DispatchStateScopedStepDown stepDown(rCtx->dsp);
  rCtx->dsp->curr->glCompressedTexSubImage2DARB(target, level, xoffset, yoffset, width, height, format, imageSize, data);
}

static void REGAL_CALL debug_glCompressedTexSubImage1DARB(GLenum target, GLint level, GLint xoffset, GLsizei width, GLenum format, GLsizei imageSize, const GLvoid *data)
{
  RegalContext * rCtx = GET_REGAL_CONTEXT();
  DispatchStateScopedStepDown stepDown(rCtx->dsp);
  rCtx->dsp->curr->glCompressedTexSubImage1DARB(target, level, xoffset, width, format, imageSize, data);
}

static void REGAL_CALL debug_glGetCompressedTexImageARB(GLenum target, GLint lod, GLvoid *img)
{
  RegalContext * rCtx = GET_REGAL_CONTEXT();
  DispatchStateScopedStepDown stepDown(rCtx->dsp);
  rCtx->dsp->curr->glGetCompressedTexImageARB(target, lod, img);
}

// GL_ARB_point_parameters

static void REGAL_CALL debug_glPointParameterfARB(GLenum pname, GLfloat param)
{
  RegalContext * rCtx = GET_REGAL_CONTEXT();
  DispatchStateScopedStepDown stepDown(rCtx->dsp);
  rCtx->dsp->curr->glPointParameterfARB(pname, param);
}

static void REGAL_CALL debug_glPointParameterfvARB(GLenum pname, const GLfloat *params)
{
  RegalContext * rCtx = GET_REGAL_CONTEXT();
  DispatchStateScopedStepDown stepDown(rCtx->dsp);
  rCtx->dsp->curr->glPointParameterfvARB(pname, params);
}

// GL_ARB_vertex_blend

static void REGAL_CALL debug_glWeightbvARB(GLint size, GLbyte *weights)
{
  RegalContext * rCtx = GET_REGAL_CONTEXT();
  DispatchStateScopedStepDown stepDown(rCtx->dsp);
  rCtx->dsp->curr->glWeightbvARB(size, weights);
}

static void REGAL_CALL debug_glWeightsvARB(GLint size, GLshort *weights)
{
  RegalContext * rCtx = GET_REGAL_CONTEXT();
  DispatchStateScopedStepDown stepDown(rCtx->dsp);
  rCtx->dsp->curr->glWeightsvARB(size, weights);
}

static void REGAL_CALL debug_glWeightivARB(GLint size, GLint *weights)
{
  RegalContext * rCtx = GET_REGAL_CONTEXT();
  DispatchStateScopedStepDown stepDown(rCtx->dsp);
  rCtx->dsp->curr->glWeightivARB(size, weights);
}

static void REGAL_CALL debug_glWeightfvARB(GLint size, GLfloat *weights)
{
  RegalContext * rCtx = GET_REGAL_CONTEXT();
  DispatchStateScopedStepDown stepDown(rCtx->dsp);
  rCtx->dsp->curr->glWeightfvARB(size, weights);
}

static void REGAL_CALL debug_glWeightdvARB(GLint size, GLdouble *weights)
{
  RegalContext * rCtx = GET_REGAL_CONTEXT();
  DispatchStateScopedStepDown stepDown(rCtx->dsp);
  rCtx->dsp->curr->glWeightdvARB(size, weights);
}

static void REGAL_CALL debug_glWeightubvARB(GLint size, GLubyte *weights)
{
  RegalContext * rCtx = GET_REGAL_CONTEXT();
  DispatchStateScopedStepDown stepDown(rCtx->dsp);
  rCtx->dsp->curr->glWeightubvARB(size, weights);
}

static void REGAL_CALL debug_glWeightusvARB(GLint size, GLushort *weights)
{
  RegalContext * rCtx = GET_REGAL_CONTEXT();
  DispatchStateScopedStepDown stepDown(rCtx->dsp);
  rCtx->dsp->curr->glWeightusvARB(size, weights);
}

static void REGAL_CALL debug_glWeightuivARB(GLint size, GLuint *weights)
{
  RegalContext * rCtx = GET_REGAL_CONTEXT();
  DispatchStateScopedStepDown stepDown(rCtx->dsp);
  rCtx->dsp->curr->glWeightuivARB(size, weights);
}

static void REGAL_CALL debug_glWeightPointerARB(GLint size, GLenum type, GLsizei stride, GLvoid *pointer)
{
  RegalContext * rCtx = GET_REGAL_CONTEXT();
  DispatchStateScopedStepDown stepDown(rCtx->dsp);
  rCtx->dsp->curr->glWeightPointerARB(size, type, stride, pointer);
}

static void REGAL_CALL debug_glVertexBlendARB(GLint count)
{
  RegalContext * rCtx = GET_REGAL_CONTEXT();
  DispatchStateScopedStepDown stepDown(rCtx->dsp);
  rCtx->dsp->curr->glVertexBlendARB(count);
}

// GL_ARB_matrix_palette

static void REGAL_CALL debug_glCurrentPaletteMatrixARB(GLint index)
{
  RegalContext * rCtx = GET_REGAL_CONTEXT();
  DispatchStateScopedStepDown stepDown(rCtx->dsp);
  rCtx->dsp->curr->glCurrentPaletteMatrixARB(index);
}

static void REGAL_CALL debug_glMatrixIndexubvARB(GLint size, GLubyte *indices)
{
  RegalContext * rCtx = GET_REGAL_CONTEXT();
  DispatchStateScopedStepDown stepDown(rCtx->dsp);
  rCtx->dsp->curr->glMatrixIndexubvARB(size, indices);
}

static void REGAL_CALL debug_glMatrixIndexusvARB(GLint size, GLushort *indices)
{
  RegalContext * rCtx = GET_REGAL_CONTEXT();
  DispatchStateScopedStepDown stepDown(rCtx->dsp);
  rCtx->dsp->curr->glMatrixIndexusvARB(size, indices);
}

static void REGAL_CALL debug_glMatrixIndexuivARB(GLint size, GLuint *indices)
{
  RegalContext * rCtx = GET_REGAL_CONTEXT();
  DispatchStateScopedStepDown stepDown(rCtx->dsp);
  rCtx->dsp->curr->glMatrixIndexuivARB(size, indices);
}

static void REGAL_CALL debug_glMatrixIndexPointerARB(GLint size, GLenum type, GLsizei stride, GLvoid *pointer)
{
  RegalContext * rCtx = GET_REGAL_CONTEXT();
  DispatchStateScopedStepDown stepDown(rCtx->dsp);
  rCtx->dsp->curr->glMatrixIndexPointerARB(size, type, stride, pointer);
}

// GL_ARB_window_pos

static void REGAL_CALL debug_glWindowPos2dARB(GLdouble x, GLdouble y)
{
  RegalContext * rCtx = GET_REGAL_CONTEXT();
  DispatchStateScopedStepDown stepDown(rCtx->dsp);
  rCtx->dsp->curr->glWindowPos2dARB(x, y);
}

static void REGAL_CALL debug_glWindowPos2dvARB(const GLdouble *p)
{
  RegalContext * rCtx = GET_REGAL_CONTEXT();
  DispatchStateScopedStepDown stepDown(rCtx->dsp);
  rCtx->dsp->curr->glWindowPos2dvARB(p);
}

static void REGAL_CALL debug_glWindowPos2fARB(GLfloat x, GLfloat y)
{
  RegalContext * rCtx = GET_REGAL_CONTEXT();
  DispatchStateScopedStepDown stepDown(rCtx->dsp);
  rCtx->dsp->curr->glWindowPos2fARB(x, y);
}

static void REGAL_CALL debug_glWindowPos2fvARB(const GLfloat *p)
{
  RegalContext * rCtx = GET_REGAL_CONTEXT();
  DispatchStateScopedStepDown stepDown(rCtx->dsp);
  rCtx->dsp->curr->glWindowPos2fvARB(p);
}

static void REGAL_CALL debug_glWindowPos2iARB(GLint x, GLint y)
{
  RegalContext * rCtx = GET_REGAL_CONTEXT();
  DispatchStateScopedStepDown stepDown(rCtx->dsp);
  rCtx->dsp->curr->glWindowPos2iARB(x, y);
}

static void REGAL_CALL debug_glWindowPos2ivARB(const GLint *p)
{
  RegalContext * rCtx = GET_REGAL_CONTEXT();
  DispatchStateScopedStepDown stepDown(rCtx->dsp);
  rCtx->dsp->curr->glWindowPos2ivARB(p);
}

static void REGAL_CALL debug_glWindowPos2sARB(GLshort x, GLshort y)
{
  RegalContext * rCtx = GET_REGAL_CONTEXT();
  DispatchStateScopedStepDown stepDown(rCtx->dsp);
  rCtx->dsp->curr->glWindowPos2sARB(x, y);
}

static void REGAL_CALL debug_glWindowPos2svARB(const GLshort *p)
{
  RegalContext * rCtx = GET_REGAL_CONTEXT();
  DispatchStateScopedStepDown stepDown(rCtx->dsp);
  rCtx->dsp->curr->glWindowPos2svARB(p);
}

static void REGAL_CALL debug_glWindowPos3dARB(GLdouble x, GLdouble y, GLdouble z)
{
  RegalContext * rCtx = GET_REGAL_CONTEXT();
  DispatchStateScopedStepDown stepDown(rCtx->dsp);
  rCtx->dsp->curr->glWindowPos3dARB(x, y, z);
}

static void REGAL_CALL debug_glWindowPos3dvARB(const GLdouble *p)
{
  RegalContext * rCtx = GET_REGAL_CONTEXT();
  DispatchStateScopedStepDown stepDown(rCtx->dsp);
  rCtx->dsp->curr->glWindowPos3dvARB(p);
}

static void REGAL_CALL debug_glWindowPos3fARB(GLfloat x, GLfloat y, GLfloat z)
{
  RegalContext * rCtx = GET_REGAL_CONTEXT();
  DispatchStateScopedStepDown stepDown(rCtx->dsp);
  rCtx->dsp->curr->glWindowPos3fARB(x, y, z);
}

static void REGAL_CALL debug_glWindowPos3fvARB(const GLfloat *p)
{
  RegalContext * rCtx = GET_REGAL_CONTEXT();
  DispatchStateScopedStepDown stepDown(rCtx->dsp);
  rCtx->dsp->curr->glWindowPos3fvARB(p);
}

static void REGAL_CALL debug_glWindowPos3iARB(GLint x, GLint y, GLint z)
{
  RegalContext * rCtx = GET_REGAL_CONTEXT();
  DispatchStateScopedStepDown stepDown(rCtx->dsp);
  rCtx->dsp->curr->glWindowPos3iARB(x, y, z);
}

static void REGAL_CALL debug_glWindowPos3ivARB(const GLint *p)
{
  RegalContext * rCtx = GET_REGAL_CONTEXT();
  DispatchStateScopedStepDown stepDown(rCtx->dsp);
  rCtx->dsp->curr->glWindowPos3ivARB(p);
}

static void REGAL_CALL debug_glWindowPos3sARB(GLshort x, GLshort y, GLshort z)
{
  RegalContext * rCtx = GET_REGAL_CONTEXT();
  DispatchStateScopedStepDown stepDown(rCtx->dsp);
  rCtx->dsp->curr->glWindowPos3sARB(x, y, z);
}

static void REGAL_CALL debug_glWindowPos3svARB(const GLshort *p)
{
  RegalContext * rCtx = GET_REGAL_CONTEXT();
  DispatchStateScopedStepDown stepDown(rCtx->dsp);
  rCtx->dsp->curr->glWindowPos3svARB(p);
}

// GL_ARB_vertex_program

static void REGAL_CALL debug_glVertexAttrib1dARB(GLuint index, GLdouble x)
{
  RegalContext * rCtx = GET_REGAL_CONTEXT();
  DispatchStateScopedStepDown stepDown(rCtx->dsp);
  rCtx->dsp->curr->glVertexAttrib1dARB(index, x);
}

static void REGAL_CALL debug_glVertexAttrib1dvARB(GLuint index, const GLdouble *v)
{
  RegalContext * rCtx = GET_REGAL_CONTEXT();
  DispatchStateScopedStepDown stepDown(rCtx->dsp);
  rCtx->dsp->curr->glVertexAttrib1dvARB(index, v);
}

static void REGAL_CALL debug_glVertexAttrib1fARB(GLuint index, GLfloat x)
{
  RegalContext * rCtx = GET_REGAL_CONTEXT();
  DispatchStateScopedStepDown stepDown(rCtx->dsp);
  rCtx->dsp->curr->glVertexAttrib1fARB(index, x);
}

static void REGAL_CALL debug_glVertexAttrib1fvARB(GLuint index, const GLfloat *v)
{
  RegalContext * rCtx = GET_REGAL_CONTEXT();
  DispatchStateScopedStepDown stepDown(rCtx->dsp);
  rCtx->dsp->curr->glVertexAttrib1fvARB(index, v);
}

static void REGAL_CALL debug_glVertexAttrib1sARB(GLuint index, GLshort x)
{
  RegalContext * rCtx = GET_REGAL_CONTEXT();
  DispatchStateScopedStepDown stepDown(rCtx->dsp);
  rCtx->dsp->curr->glVertexAttrib1sARB(index, x);
}

static void REGAL_CALL debug_glVertexAttrib1svARB(GLuint index, const GLshort *v)
{
  RegalContext * rCtx = GET_REGAL_CONTEXT();
  DispatchStateScopedStepDown stepDown(rCtx->dsp);
  rCtx->dsp->curr->glVertexAttrib1svARB(index, v);
}

static void REGAL_CALL debug_glVertexAttrib2dARB(GLuint index, GLdouble x, GLdouble y)
{
  RegalContext * rCtx = GET_REGAL_CONTEXT();
  DispatchStateScopedStepDown stepDown(rCtx->dsp);
  rCtx->dsp->curr->glVertexAttrib2dARB(index, x, y);
}

static void REGAL_CALL debug_glVertexAttrib2dvARB(GLuint index, const GLdouble *v)
{
  RegalContext * rCtx = GET_REGAL_CONTEXT();
  DispatchStateScopedStepDown stepDown(rCtx->dsp);
  rCtx->dsp->curr->glVertexAttrib2dvARB(index, v);
}

static void REGAL_CALL debug_glVertexAttrib2fARB(GLuint index, GLfloat x, GLfloat y)
{
  RegalContext * rCtx = GET_REGAL_CONTEXT();
  DispatchStateScopedStepDown stepDown(rCtx->dsp);
  rCtx->dsp->curr->glVertexAttrib2fARB(index, x, y);
}

static void REGAL_CALL debug_glVertexAttrib2fvARB(GLuint index, const GLfloat *v)
{
  RegalContext * rCtx = GET_REGAL_CONTEXT();
  DispatchStateScopedStepDown stepDown(rCtx->dsp);
  rCtx->dsp->curr->glVertexAttrib2fvARB(index, v);
}

static void REGAL_CALL debug_glVertexAttrib2sARB(GLuint index, GLshort x, GLshort y)
{
  RegalContext * rCtx = GET_REGAL_CONTEXT();
  DispatchStateScopedStepDown stepDown(rCtx->dsp);
  rCtx->dsp->curr->glVertexAttrib2sARB(index, x, y);
}

static void REGAL_CALL debug_glVertexAttrib2svARB(GLuint index, const GLshort *v)
{
  RegalContext * rCtx = GET_REGAL_CONTEXT();
  DispatchStateScopedStepDown stepDown(rCtx->dsp);
  rCtx->dsp->curr->glVertexAttrib2svARB(index, v);
}

static void REGAL_CALL debug_glVertexAttrib3dARB(GLuint index, GLdouble x, GLdouble y, GLdouble z)
{
  RegalContext * rCtx = GET_REGAL_CONTEXT();
  DispatchStateScopedStepDown stepDown(rCtx->dsp);
  rCtx->dsp->curr->glVertexAttrib3dARB(index, x, y, z);
}

static void REGAL_CALL debug_glVertexAttrib3dvARB(GLuint index, const GLdouble *v)
{
  RegalContext * rCtx = GET_REGAL_CONTEXT();
  DispatchStateScopedStepDown stepDown(rCtx->dsp);
  rCtx->dsp->curr->glVertexAttrib3dvARB(index, v);
}

static void REGAL_CALL debug_glVertexAttrib3fARB(GLuint index, GLfloat x, GLfloat y, GLfloat z)
{
  RegalContext * rCtx = GET_REGAL_CONTEXT();
  DispatchStateScopedStepDown stepDown(rCtx->dsp);
  rCtx->dsp->curr->glVertexAttrib3fARB(index, x, y, z);
}

static void REGAL_CALL debug_glVertexAttrib3fvARB(GLuint index, const GLfloat *v)
{
  RegalContext * rCtx = GET_REGAL_CONTEXT();
  DispatchStateScopedStepDown stepDown(rCtx->dsp);
  rCtx->dsp->curr->glVertexAttrib3fvARB(index, v);
}

static void REGAL_CALL debug_glVertexAttrib3sARB(GLuint index, GLshort x, GLshort y, GLshort z)
{
  RegalContext * rCtx = GET_REGAL_CONTEXT();
  DispatchStateScopedStepDown stepDown(rCtx->dsp);
  rCtx->dsp->curr->glVertexAttrib3sARB(index, x, y, z);
}

static void REGAL_CALL debug_glVertexAttrib3svARB(GLuint index, const GLshort *v)
{
  RegalContext * rCtx = GET_REGAL_CONTEXT();
  DispatchStateScopedStepDown stepDown(rCtx->dsp);
  rCtx->dsp->curr->glVertexAttrib3svARB(index, v);
}

static void REGAL_CALL debug_glVertexAttrib4NbvARB(GLuint index, const GLbyte *v)
{
  RegalContext * rCtx = GET_REGAL_CONTEXT();
  DispatchStateScopedStepDown stepDown(rCtx->dsp);
  rCtx->dsp->curr->glVertexAttrib4NbvARB(index, v);
}

static void REGAL_CALL debug_glVertexAttrib4NivARB(GLuint index, const GLint *v)
{
  RegalContext * rCtx = GET_REGAL_CONTEXT();
  DispatchStateScopedStepDown stepDown(rCtx->dsp);
  rCtx->dsp->curr->glVertexAttrib4NivARB(index, v);
}

static void REGAL_CALL debug_glVertexAttrib4NsvARB(GLuint index, const GLshort *v)
{
  RegalContext * rCtx = GET_REGAL_CONTEXT();
  DispatchStateScopedStepDown stepDown(rCtx->dsp);
  rCtx->dsp->curr->glVertexAttrib4NsvARB(index, v);
}

static void REGAL_CALL debug_glVertexAttrib4NubARB(GLuint index, GLubyte x, GLubyte y, GLubyte z, GLubyte w)
{
  RegalContext * rCtx = GET_REGAL_CONTEXT();
  DispatchStateScopedStepDown stepDown(rCtx->dsp);
  rCtx->dsp->curr->glVertexAttrib4NubARB(index, x, y, z, w);
}

static void REGAL_CALL debug_glVertexAttrib4NubvARB(GLuint index, const GLubyte *v)
{
  RegalContext * rCtx = GET_REGAL_CONTEXT();
  DispatchStateScopedStepDown stepDown(rCtx->dsp);
  rCtx->dsp->curr->glVertexAttrib4NubvARB(index, v);
}

static void REGAL_CALL debug_glVertexAttrib4NuivARB(GLuint index, const GLuint *v)
{
  RegalContext * rCtx = GET_REGAL_CONTEXT();
  DispatchStateScopedStepDown stepDown(rCtx->dsp);
  rCtx->dsp->curr->glVertexAttrib4NuivARB(index, v);
}

static void REGAL_CALL debug_glVertexAttrib4NusvARB(GLuint index, const GLushort *v)
{
  RegalContext * rCtx = GET_REGAL_CONTEXT();
  DispatchStateScopedStepDown stepDown(rCtx->dsp);
  rCtx->dsp->curr->glVertexAttrib4NusvARB(index, v);
}

static void REGAL_CALL debug_glVertexAttrib4bvARB(GLuint index, const GLbyte *v)
{
  RegalContext * rCtx = GET_REGAL_CONTEXT();
  DispatchStateScopedStepDown stepDown(rCtx->dsp);
  rCtx->dsp->curr->glVertexAttrib4bvARB(index, v);
}

static void REGAL_CALL debug_glVertexAttrib4dARB(GLuint index, GLdouble x, GLdouble y, GLdouble z, GLdouble w)
{
  RegalContext * rCtx = GET_REGAL_CONTEXT();
  DispatchStateScopedStepDown stepDown(rCtx->dsp);
  rCtx->dsp->curr->glVertexAttrib4dARB(index, x, y, z, w);
}

static void REGAL_CALL debug_glVertexAttrib4dvARB(GLuint index, const GLdouble *v)
{
  RegalContext * rCtx = GET_REGAL_CONTEXT();
  DispatchStateScopedStepDown stepDown(rCtx->dsp);
  rCtx->dsp->curr->glVertexAttrib4dvARB(index, v);
}

static void REGAL_CALL debug_glVertexAttrib4fARB(GLuint index, GLfloat x, GLfloat y, GLfloat z, GLfloat w)
{
  RegalContext * rCtx = GET_REGAL_CONTEXT();
  DispatchStateScopedStepDown stepDown(rCtx->dsp);
  rCtx->dsp->curr->glVertexAttrib4fARB(index, x, y, z, w);
}

static void REGAL_CALL debug_glVertexAttrib4fvARB(GLuint index, const GLfloat *v)
{
  RegalContext * rCtx = GET_REGAL_CONTEXT();
  DispatchStateScopedStepDown stepDown(rCtx->dsp);
  rCtx->dsp->curr->glVertexAttrib4fvARB(index, v);
}

static void REGAL_CALL debug_glVertexAttrib4ivARB(GLuint index, const GLint *v)
{
  RegalContext * rCtx = GET_REGAL_CONTEXT();
  DispatchStateScopedStepDown stepDown(rCtx->dsp);
  rCtx->dsp->curr->glVertexAttrib4ivARB(index, v);
}

static void REGAL_CALL debug_glVertexAttrib4sARB(GLuint index, GLshort x, GLshort y, GLshort z, GLshort w)
{
  RegalContext * rCtx = GET_REGAL_CONTEXT();
  DispatchStateScopedStepDown stepDown(rCtx->dsp);
  rCtx->dsp->curr->glVertexAttrib4sARB(index, x, y, z, w);
}

static void REGAL_CALL debug_glVertexAttrib4svARB(GLuint index, const GLshort *v)
{
  RegalContext * rCtx = GET_REGAL_CONTEXT();
  DispatchStateScopedStepDown stepDown(rCtx->dsp);
  rCtx->dsp->curr->glVertexAttrib4svARB(index, v);
}

static void REGAL_CALL debug_glVertexAttrib4ubvARB(GLuint index, const GLubyte *v)
{
  RegalContext * rCtx = GET_REGAL_CONTEXT();
  DispatchStateScopedStepDown stepDown(rCtx->dsp);
  rCtx->dsp->curr->glVertexAttrib4ubvARB(index, v);
}

static void REGAL_CALL debug_glVertexAttrib4uivARB(GLuint index, const GLuint *v)
{
  RegalContext * rCtx = GET_REGAL_CONTEXT();
  DispatchStateScopedStepDown stepDown(rCtx->dsp);
  rCtx->dsp->curr->glVertexAttrib4uivARB(index, v);
}

static void REGAL_CALL debug_glVertexAttrib4usvARB(GLuint index, const GLushort *v)
{
  RegalContext * rCtx = GET_REGAL_CONTEXT();
  DispatchStateScopedStepDown stepDown(rCtx->dsp);
  rCtx->dsp->curr->glVertexAttrib4usvARB(index, v);
}

static void REGAL_CALL debug_glVertexAttribPointerARB(GLuint index, GLint size, GLenum type, GLboolean normalized, GLsizei stride, const GLvoid *pointer)
{
  RegalContext * rCtx = GET_REGAL_CONTEXT();
  DispatchStateScopedStepDown stepDown(rCtx->dsp);
  rCtx->dsp->curr->glVertexAttribPointerARB(index, size, type, normalized, stride, pointer);
}

static void REGAL_CALL debug_glEnableVertexAttribArrayARB(GLuint index)
{
  RegalContext * rCtx = GET_REGAL_CONTEXT();
  DispatchStateScopedStepDown stepDown(rCtx->dsp);
  rCtx->dsp->curr->glEnableVertexAttribArrayARB(index);
}

static void REGAL_CALL debug_glDisableVertexAttribArrayARB(GLuint index)
{
  RegalContext * rCtx = GET_REGAL_CONTEXT();
  DispatchStateScopedStepDown stepDown(rCtx->dsp);
  rCtx->dsp->curr->glDisableVertexAttribArrayARB(index);
}

static void REGAL_CALL debug_glProgramStringARB(GLenum target, GLenum format, GLsizei len, const GLvoid *string)
{
  RegalContext * rCtx = GET_REGAL_CONTEXT();
  DispatchStateScopedStepDown stepDown(rCtx->dsp);
  rCtx->dsp->curr->glProgramStringARB(target, format, len, string);
}

static void REGAL_CALL debug_glBindProgramARB(GLenum target, GLuint program)
{
  RegalContext * rCtx = GET_REGAL_CONTEXT();
  DispatchStateScopedStepDown stepDown(rCtx->dsp);
  rCtx->dsp->curr->glBindProgramARB(target, program);
}

static void REGAL_CALL debug_glDeleteProgramsARB(GLsizei n, const GLuint *programs)
{
  RegalContext * rCtx = GET_REGAL_CONTEXT();
  DispatchStateScopedStepDown stepDown(rCtx->dsp);
  rCtx->dsp->curr->glDeleteProgramsARB(n, programs);
}

static void REGAL_CALL debug_glGenProgramsARB(GLsizei n, GLuint *programs)
{
  RegalContext * rCtx = GET_REGAL_CONTEXT();
  DispatchStateScopedStepDown stepDown(rCtx->dsp);
  rCtx->dsp->curr->glGenProgramsARB(n, programs);
}

static void REGAL_CALL debug_glProgramEnvParameter4dARB(GLenum target, GLuint index, GLdouble x, GLdouble y, GLdouble z, GLdouble w)
{
  RegalContext * rCtx = GET_REGAL_CONTEXT();
  DispatchStateScopedStepDown stepDown(rCtx->dsp);
  rCtx->dsp->curr->glProgramEnvParameter4dARB(target, index, x, y, z, w);
}

static void REGAL_CALL debug_glProgramEnvParameter4dvARB(GLenum target, GLuint index, const GLdouble *params)
{
  RegalContext * rCtx = GET_REGAL_CONTEXT();
  DispatchStateScopedStepDown stepDown(rCtx->dsp);
  rCtx->dsp->curr->glProgramEnvParameter4dvARB(target, index, params);
}

static void REGAL_CALL debug_glProgramEnvParameter4fARB(GLenum target, GLuint index, GLfloat x, GLfloat y, GLfloat z, GLfloat w)
{
  RegalContext * rCtx = GET_REGAL_CONTEXT();
  DispatchStateScopedStepDown stepDown(rCtx->dsp);
  rCtx->dsp->curr->glProgramEnvParameter4fARB(target, index, x, y, z, w);
}

static void REGAL_CALL debug_glProgramEnvParameter4fvARB(GLenum target, GLuint index, const GLfloat *params)
{
  RegalContext * rCtx = GET_REGAL_CONTEXT();
  DispatchStateScopedStepDown stepDown(rCtx->dsp);
  rCtx->dsp->curr->glProgramEnvParameter4fvARB(target, index, params);
}

static void REGAL_CALL debug_glProgramLocalParameter4dARB(GLenum target, GLuint index, GLdouble x, GLdouble y, GLdouble z, GLdouble w)
{
  RegalContext * rCtx = GET_REGAL_CONTEXT();
  DispatchStateScopedStepDown stepDown(rCtx->dsp);
  rCtx->dsp->curr->glProgramLocalParameter4dARB(target, index, x, y, z, w);
}

static void REGAL_CALL debug_glProgramLocalParameter4dvARB(GLenum target, GLuint index, const GLdouble *params)
{
  RegalContext * rCtx = GET_REGAL_CONTEXT();
  DispatchStateScopedStepDown stepDown(rCtx->dsp);
  rCtx->dsp->curr->glProgramLocalParameter4dvARB(target, index, params);
}

static void REGAL_CALL debug_glProgramLocalParameter4fARB(GLenum target, GLuint index, GLfloat x, GLfloat y, GLfloat z, GLfloat w)
{
  RegalContext * rCtx = GET_REGAL_CONTEXT();
  DispatchStateScopedStepDown stepDown(rCtx->dsp);
  rCtx->dsp->curr->glProgramLocalParameter4fARB(target, index, x, y, z, w);
}

static void REGAL_CALL debug_glProgramLocalParameter4fvARB(GLenum target, GLuint index, const GLfloat *params)
{
  RegalContext * rCtx = GET_REGAL_CONTEXT();
  DispatchStateScopedStepDown stepDown(rCtx->dsp);
  rCtx->dsp->curr->glProgramLocalParameter4fvARB(target, index, params);
}

static void REGAL_CALL debug_glGetProgramEnvParameterdvARB(GLenum target, GLuint index, GLdouble *params)
{
  RegalContext * rCtx = GET_REGAL_CONTEXT();
  DispatchStateScopedStepDown stepDown(rCtx->dsp);
  rCtx->dsp->curr->glGetProgramEnvParameterdvARB(target, index, params);
}

static void REGAL_CALL debug_glGetProgramEnvParameterfvARB(GLenum target, GLuint index, GLfloat *params)
{
  RegalContext * rCtx = GET_REGAL_CONTEXT();
  DispatchStateScopedStepDown stepDown(rCtx->dsp);
  rCtx->dsp->curr->glGetProgramEnvParameterfvARB(target, index, params);
}

static void REGAL_CALL debug_glGetProgramLocalParameterdvARB(GLenum target, GLuint index, GLdouble *params)
{
  RegalContext * rCtx = GET_REGAL_CONTEXT();
  DispatchStateScopedStepDown stepDown(rCtx->dsp);
  rCtx->dsp->curr->glGetProgramLocalParameterdvARB(target, index, params);
}

static void REGAL_CALL debug_glGetProgramLocalParameterfvARB(GLenum target, GLuint index, GLfloat *params)
{
  RegalContext * rCtx = GET_REGAL_CONTEXT();
  DispatchStateScopedStepDown stepDown(rCtx->dsp);
  rCtx->dsp->curr->glGetProgramLocalParameterfvARB(target, index, params);
}

static void REGAL_CALL debug_glGetProgramivARB(GLenum target, GLenum pname, GLint *params)
{
  RegalContext * rCtx = GET_REGAL_CONTEXT();
  DispatchStateScopedStepDown stepDown(rCtx->dsp);
  rCtx->dsp->curr->glGetProgramivARB(target, pname, params);
}

static void REGAL_CALL debug_glGetProgramStringARB(GLenum target, GLenum pname, GLvoid *string)
{
  RegalContext * rCtx = GET_REGAL_CONTEXT();
  DispatchStateScopedStepDown stepDown(rCtx->dsp);
  rCtx->dsp->curr->glGetProgramStringARB(target, pname, string);
}

static void REGAL_CALL debug_glGetVertexAttribdvARB(GLuint index, GLenum pname, GLdouble *params)
{
  RegalContext * rCtx = GET_REGAL_CONTEXT();
  DispatchStateScopedStepDown stepDown(rCtx->dsp);
  rCtx->dsp->curr->glGetVertexAttribdvARB(index, pname, params);
}

static void REGAL_CALL debug_glGetVertexAttribfvARB(GLuint index, GLenum pname, GLfloat *params)
{
  RegalContext * rCtx = GET_REGAL_CONTEXT();
  DispatchStateScopedStepDown stepDown(rCtx->dsp);
  rCtx->dsp->curr->glGetVertexAttribfvARB(index, pname, params);
}

static void REGAL_CALL debug_glGetVertexAttribivARB(GLuint index, GLenum pname, GLint *params)
{
  RegalContext * rCtx = GET_REGAL_CONTEXT();
  DispatchStateScopedStepDown stepDown(rCtx->dsp);
  rCtx->dsp->curr->glGetVertexAttribivARB(index, pname, params);
}

static void REGAL_CALL debug_glGetVertexAttribPointervARB(GLuint index, GLenum pname, GLvoid **pointer)
{
  RegalContext * rCtx = GET_REGAL_CONTEXT();
  DispatchStateScopedStepDown stepDown(rCtx->dsp);
  rCtx->dsp->curr->glGetVertexAttribPointervARB(index, pname, pointer);
}

static GLboolean REGAL_CALL debug_glIsProgramARB(GLuint program)
{
  RegalContext * rCtx = GET_REGAL_CONTEXT();
  DispatchStateScopedStepDown stepDown(rCtx->dsp);
  GLboolean  ret = rCtx->dsp->curr->glIsProgramARB(program);
  return ret;
}

// GL_ARB_vertex_buffer_object

static void REGAL_CALL debug_glBindBufferARB(GLenum target, GLuint buffer)
{
  RegalContext * rCtx = GET_REGAL_CONTEXT();
  DispatchStateScopedStepDown stepDown(rCtx->dsp);
  rCtx->dsp->curr->glBindBufferARB(target, buffer);
}

static void REGAL_CALL debug_glDeleteBuffersARB(GLsizei n, const GLuint *buffers)
{
  RegalContext * rCtx = GET_REGAL_CONTEXT();
  DispatchStateScopedStepDown stepDown(rCtx->dsp);
  rCtx->dsp->curr->glDeleteBuffersARB(n, buffers);
}

static void REGAL_CALL debug_glGenBuffersARB(GLsizei n, GLuint *buffers)
{
  RegalContext * rCtx = GET_REGAL_CONTEXT();
  DispatchStateScopedStepDown stepDown(rCtx->dsp);
  rCtx->dsp->curr->glGenBuffersARB(n, buffers);
}

static GLboolean REGAL_CALL debug_glIsBufferARB(GLuint buffer)
{
  RegalContext * rCtx = GET_REGAL_CONTEXT();
  DispatchStateScopedStepDown stepDown(rCtx->dsp);
  GLboolean  ret = rCtx->dsp->curr->glIsBufferARB(buffer);
  return ret;
}

static void REGAL_CALL debug_glBufferDataARB(GLenum target, GLsizeiptrARB size, const GLvoid *data, GLenum usage)
{
  RegalContext * rCtx = GET_REGAL_CONTEXT();
  DispatchStateScopedStepDown stepDown(rCtx->dsp);
  rCtx->dsp->curr->glBufferDataARB(target, size, data, usage);
}

static void REGAL_CALL debug_glBufferSubDataARB(GLenum target, GLintptrARB offset, GLsizeiptrARB size, const GLvoid *data)
{
  RegalContext * rCtx = GET_REGAL_CONTEXT();
  DispatchStateScopedStepDown stepDown(rCtx->dsp);
  rCtx->dsp->curr->glBufferSubDataARB(target, offset, size, data);
}

static void REGAL_CALL debug_glGetBufferSubDataARB(GLenum target, GLintptrARB offset, GLsizeiptrARB size, GLvoid *data)
{
  RegalContext * rCtx = GET_REGAL_CONTEXT();
  DispatchStateScopedStepDown stepDown(rCtx->dsp);
  rCtx->dsp->curr->glGetBufferSubDataARB(target, offset, size, data);
}

static GLvoid *REGAL_CALL debug_glMapBufferARB(GLenum target, GLenum access)
{
  RegalContext * rCtx = GET_REGAL_CONTEXT();
  DispatchStateScopedStepDown stepDown(rCtx->dsp);
  GLvoid * ret = rCtx->dsp->curr->glMapBufferARB(target, access);
  return ret;
}

static GLboolean REGAL_CALL debug_glUnmapBufferARB(GLenum target)
{
  RegalContext * rCtx = GET_REGAL_CONTEXT();
  DispatchStateScopedStepDown stepDown(rCtx->dsp);
  GLboolean  ret = rCtx->dsp->curr->glUnmapBufferARB(target);
  return ret;
}

static void REGAL_CALL debug_glGetBufferParameterivARB(GLenum target, GLenum pname, GLint *params)
{
  RegalContext * rCtx = GET_REGAL_CONTEXT();
  DispatchStateScopedStepDown stepDown(rCtx->dsp);
  rCtx->dsp->curr->glGetBufferParameterivARB(target, pname, params);
}

static void REGAL_CALL debug_glGetBufferPointervARB(GLenum target, GLenum pname, GLvoid **params)
{
  RegalContext * rCtx = GET_REGAL_CONTEXT();
  DispatchStateScopedStepDown stepDown(rCtx->dsp);
  rCtx->dsp->curr->glGetBufferPointervARB(target, pname, params);
}

// GL_ARB_occlusion_query

static void REGAL_CALL debug_glGenQueriesARB(GLsizei n, GLuint *ids)
{
  RegalContext * rCtx = GET_REGAL_CONTEXT();
  DispatchStateScopedStepDown stepDown(rCtx->dsp);
  rCtx->dsp->curr->glGenQueriesARB(n, ids);
}

static void REGAL_CALL debug_glDeleteQueriesARB(GLsizei n, const GLuint *ids)
{
  RegalContext * rCtx = GET_REGAL_CONTEXT();
  DispatchStateScopedStepDown stepDown(rCtx->dsp);
  rCtx->dsp->curr->glDeleteQueriesARB(n, ids);
}

static GLboolean REGAL_CALL debug_glIsQueryARB(GLuint id)
{
  RegalContext * rCtx = GET_REGAL_CONTEXT();
  DispatchStateScopedStepDown stepDown(rCtx->dsp);
  GLboolean  ret = rCtx->dsp->curr->glIsQueryARB(id);
  return ret;
}

static void REGAL_CALL debug_glBeginQueryARB(GLenum target, GLuint id)
{
  RegalContext * rCtx = GET_REGAL_CONTEXT();
  DispatchStateScopedStepDown stepDown(rCtx->dsp);
  rCtx->dsp->curr->glBeginQueryARB(target, id);
}

static void REGAL_CALL debug_glEndQueryARB(GLenum target)
{
  RegalContext * rCtx = GET_REGAL_CONTEXT();
  DispatchStateScopedStepDown stepDown(rCtx->dsp);
  rCtx->dsp->curr->glEndQueryARB(target);
}

static void REGAL_CALL debug_glGetQueryivARB(GLenum target, GLenum pname, GLint *params)
{
  RegalContext * rCtx = GET_REGAL_CONTEXT();
  DispatchStateScopedStepDown stepDown(rCtx->dsp);
  rCtx->dsp->curr->glGetQueryivARB(target, pname, params);
}

static void REGAL_CALL debug_glGetQueryObjectivARB(GLuint id, GLenum pname, GLint *params)
{
  RegalContext * rCtx = GET_REGAL_CONTEXT();
  DispatchStateScopedStepDown stepDown(rCtx->dsp);
  rCtx->dsp->curr->glGetQueryObjectivARB(id, pname, params);
}

static void REGAL_CALL debug_glGetQueryObjectuivARB(GLuint id, GLenum pname, GLuint *params)
{
  RegalContext * rCtx = GET_REGAL_CONTEXT();
  DispatchStateScopedStepDown stepDown(rCtx->dsp);
  rCtx->dsp->curr->glGetQueryObjectuivARB(id, pname, params);
}

// GL_ARB_shader_objects

static void REGAL_CALL debug_glDeleteObjectARB(GLhandleARB obj)
{
  RegalContext * rCtx = GET_REGAL_CONTEXT();
  DispatchStateScopedStepDown stepDown(rCtx->dsp);
  rCtx->dsp->curr->glDeleteObjectARB(obj);
}

static GLhandleARB REGAL_CALL debug_glGetHandleARB(GLenum pname)
{
  RegalContext * rCtx = GET_REGAL_CONTEXT();
  DispatchStateScopedStepDown stepDown(rCtx->dsp);
  GLhandleARB  ret = rCtx->dsp->curr->glGetHandleARB(pname);
  return ret;
}

static void REGAL_CALL debug_glDetachObjectARB(GLhandleARB containerObj, GLhandleARB attachedObj)
{
  RegalContext * rCtx = GET_REGAL_CONTEXT();
  DispatchStateScopedStepDown stepDown(rCtx->dsp);
  rCtx->dsp->curr->glDetachObjectARB(containerObj, attachedObj);
}

static GLhandleARB REGAL_CALL debug_glCreateShaderObjectARB(GLenum shaderType)
{
  RegalContext * rCtx = GET_REGAL_CONTEXT();
  DispatchStateScopedStepDown stepDown(rCtx->dsp);
  GLhandleARB  ret = rCtx->dsp->curr->glCreateShaderObjectARB(shaderType);
  return ret;
}

static void REGAL_CALL debug_glShaderSourceARB(GLhandleARB shaderObj, GLsizei count, const GLcharARB **string, const GLint *length)
{
  RegalContext * rCtx = GET_REGAL_CONTEXT();
  DispatchStateScopedStepDown stepDown(rCtx->dsp);
  rCtx->dsp->curr->glShaderSourceARB(shaderObj, count, string, length);
}

static void REGAL_CALL debug_glCompileShaderARB(GLhandleARB shaderObj)
{
  RegalContext * rCtx = GET_REGAL_CONTEXT();
  DispatchStateScopedStepDown stepDown(rCtx->dsp);
  rCtx->dsp->curr->glCompileShaderARB(shaderObj);
}

static GLhandleARB REGAL_CALL debug_glCreateProgramObjectARB(void)
{
  RegalContext * rCtx = GET_REGAL_CONTEXT();
  DispatchStateScopedStepDown stepDown(rCtx->dsp);
  GLhandleARB  ret = rCtx->dsp->curr->glCreateProgramObjectARB();
  return ret;
}

static void REGAL_CALL debug_glAttachObjectARB(GLhandleARB containerObj, GLhandleARB obj)
{
  RegalContext * rCtx = GET_REGAL_CONTEXT();
  DispatchStateScopedStepDown stepDown(rCtx->dsp);
  rCtx->dsp->curr->glAttachObjectARB(containerObj, obj);
}

static void REGAL_CALL debug_glLinkProgramARB(GLhandleARB programObj)
{
  RegalContext * rCtx = GET_REGAL_CONTEXT();
  DispatchStateScopedStepDown stepDown(rCtx->dsp);
  rCtx->dsp->curr->glLinkProgramARB(programObj);
}

static void REGAL_CALL debug_glUseProgramObjectARB(GLhandleARB programObj)
{
  RegalContext * rCtx = GET_REGAL_CONTEXT();
  DispatchStateScopedStepDown stepDown(rCtx->dsp);
  rCtx->dsp->curr->glUseProgramObjectARB(programObj);
}

static void REGAL_CALL debug_glValidateProgramARB(GLhandleARB programObj)
{
  RegalContext * rCtx = GET_REGAL_CONTEXT();
  DispatchStateScopedStepDown stepDown(rCtx->dsp);
  rCtx->dsp->curr->glValidateProgramARB(programObj);
}

static void REGAL_CALL debug_glUniform1fARB(GLint location, GLfloat v0)
{
  RegalContext * rCtx = GET_REGAL_CONTEXT();
  DispatchStateScopedStepDown stepDown(rCtx->dsp);
  rCtx->dsp->curr->glUniform1fARB(location, v0);
}

static void REGAL_CALL debug_glUniform2fARB(GLint location, GLfloat v0, GLfloat v1)
{
  RegalContext * rCtx = GET_REGAL_CONTEXT();
  DispatchStateScopedStepDown stepDown(rCtx->dsp);
  rCtx->dsp->curr->glUniform2fARB(location, v0, v1);
}

static void REGAL_CALL debug_glUniform3fARB(GLint location, GLfloat v0, GLfloat v1, GLfloat v2)
{
  RegalContext * rCtx = GET_REGAL_CONTEXT();
  DispatchStateScopedStepDown stepDown(rCtx->dsp);
  rCtx->dsp->curr->glUniform3fARB(location, v0, v1, v2);
}

static void REGAL_CALL debug_glUniform4fARB(GLint location, GLfloat v0, GLfloat v1, GLfloat v2, GLfloat v3)
{
  RegalContext * rCtx = GET_REGAL_CONTEXT();
  DispatchStateScopedStepDown stepDown(rCtx->dsp);
  rCtx->dsp->curr->glUniform4fARB(location, v0, v1, v2, v3);
}

static void REGAL_CALL debug_glUniform1iARB(GLint location, GLint v0)
{
  RegalContext * rCtx = GET_REGAL_CONTEXT();
  DispatchStateScopedStepDown stepDown(rCtx->dsp);
  rCtx->dsp->curr->glUniform1iARB(location, v0);
}

static void REGAL_CALL debug_glUniform2iARB(GLint location, GLint v0, GLint v1)
{
  RegalContext * rCtx = GET_REGAL_CONTEXT();
  DispatchStateScopedStepDown stepDown(rCtx->dsp);
  rCtx->dsp->curr->glUniform2iARB(location, v0, v1);
}

static void REGAL_CALL debug_glUniform3iARB(GLint location, GLint v0, GLint v1, GLint v2)
{
  RegalContext * rCtx = GET_REGAL_CONTEXT();
  DispatchStateScopedStepDown stepDown(rCtx->dsp);
  rCtx->dsp->curr->glUniform3iARB(location, v0, v1, v2);
}

static void REGAL_CALL debug_glUniform4iARB(GLint location, GLint v0, GLint v1, GLint v2, GLint v3)
{
  RegalContext * rCtx = GET_REGAL_CONTEXT();
  DispatchStateScopedStepDown stepDown(rCtx->dsp);
  rCtx->dsp->curr->glUniform4iARB(location, v0, v1, v2, v3);
}

static void REGAL_CALL debug_glUniform1fvARB(GLint location, GLsizei count, const GLfloat *value)
{
  RegalContext * rCtx = GET_REGAL_CONTEXT();
  DispatchStateScopedStepDown stepDown(rCtx->dsp);
  rCtx->dsp->curr->glUniform1fvARB(location, count, value);
}

static void REGAL_CALL debug_glUniform2fvARB(GLint location, GLsizei count, const GLfloat *value)
{
  RegalContext * rCtx = GET_REGAL_CONTEXT();
  DispatchStateScopedStepDown stepDown(rCtx->dsp);
  rCtx->dsp->curr->glUniform2fvARB(location, count, value);
}

static void REGAL_CALL debug_glUniform3fvARB(GLint location, GLsizei count, const GLfloat *value)
{
  RegalContext * rCtx = GET_REGAL_CONTEXT();
  DispatchStateScopedStepDown stepDown(rCtx->dsp);
  rCtx->dsp->curr->glUniform3fvARB(location, count, value);
}

static void REGAL_CALL debug_glUniform4fvARB(GLint location, GLsizei count, const GLfloat *value)
{
  RegalContext * rCtx = GET_REGAL_CONTEXT();
  DispatchStateScopedStepDown stepDown(rCtx->dsp);
  rCtx->dsp->curr->glUniform4fvARB(location, count, value);
}

static void REGAL_CALL debug_glUniform1ivARB(GLint location, GLsizei count, const GLint *value)
{
  RegalContext * rCtx = GET_REGAL_CONTEXT();
  DispatchStateScopedStepDown stepDown(rCtx->dsp);
  rCtx->dsp->curr->glUniform1ivARB(location, count, value);
}

static void REGAL_CALL debug_glUniform2ivARB(GLint location, GLsizei count, const GLint *value)
{
  RegalContext * rCtx = GET_REGAL_CONTEXT();
  DispatchStateScopedStepDown stepDown(rCtx->dsp);
  rCtx->dsp->curr->glUniform2ivARB(location, count, value);
}

static void REGAL_CALL debug_glUniform3ivARB(GLint location, GLsizei count, const GLint *value)
{
  RegalContext * rCtx = GET_REGAL_CONTEXT();
  DispatchStateScopedStepDown stepDown(rCtx->dsp);
  rCtx->dsp->curr->glUniform3ivARB(location, count, value);
}

static void REGAL_CALL debug_glUniform4ivARB(GLint location, GLsizei count, const GLint *value)
{
  RegalContext * rCtx = GET_REGAL_CONTEXT();
  DispatchStateScopedStepDown stepDown(rCtx->dsp);
  rCtx->dsp->curr->glUniform4ivARB(location, count, value);
}

static void REGAL_CALL debug_glUniformMatrix2fvARB(GLint location, GLsizei count, GLboolean transpose, const GLfloat *value)
{
  RegalContext * rCtx = GET_REGAL_CONTEXT();
  DispatchStateScopedStepDown stepDown(rCtx->dsp);
  rCtx->dsp->curr->glUniformMatrix2fvARB(location, count, transpose, value);
}

static void REGAL_CALL debug_glUniformMatrix3fvARB(GLint location, GLsizei count, GLboolean transpose, const GLfloat *value)
{
  RegalContext * rCtx = GET_REGAL_CONTEXT();
  DispatchStateScopedStepDown stepDown(rCtx->dsp);
  rCtx->dsp->curr->glUniformMatrix3fvARB(location, count, transpose, value);
}

static void REGAL_CALL debug_glUniformMatrix4fvARB(GLint location, GLsizei count, GLboolean transpose, const GLfloat *value)
{
  RegalContext * rCtx = GET_REGAL_CONTEXT();
  DispatchStateScopedStepDown stepDown(rCtx->dsp);
  rCtx->dsp->curr->glUniformMatrix4fvARB(location, count, transpose, value);
}

static void REGAL_CALL debug_glGetObjectParameterfvARB(GLhandleARB obj, GLenum pname, GLfloat *params)
{
  RegalContext * rCtx = GET_REGAL_CONTEXT();
  DispatchStateScopedStepDown stepDown(rCtx->dsp);
  rCtx->dsp->curr->glGetObjectParameterfvARB(obj, pname, params);
}

static void REGAL_CALL debug_glGetObjectParameterivARB(GLhandleARB obj, GLenum pname, GLint *params)
{
  RegalContext * rCtx = GET_REGAL_CONTEXT();
  DispatchStateScopedStepDown stepDown(rCtx->dsp);
  rCtx->dsp->curr->glGetObjectParameterivARB(obj, pname, params);
}

static void REGAL_CALL debug_glGetInfoLogARB(GLhandleARB obj, GLsizei maxLength, GLsizei *length, GLcharARB *infoLog)
{
  RegalContext * rCtx = GET_REGAL_CONTEXT();
  DispatchStateScopedStepDown stepDown(rCtx->dsp);
  rCtx->dsp->curr->glGetInfoLogARB(obj, maxLength, length, infoLog);
}

static void REGAL_CALL debug_glGetAttachedObjectsARB(GLhandleARB containerObj, GLsizei maxCount, GLsizei *count, GLhandleARB *obj)
{
  RegalContext * rCtx = GET_REGAL_CONTEXT();
  DispatchStateScopedStepDown stepDown(rCtx->dsp);
  rCtx->dsp->curr->glGetAttachedObjectsARB(containerObj, maxCount, count, obj);
}

static GLint REGAL_CALL debug_glGetUniformLocationARB(GLhandleARB programObj, const GLcharARB *name)
{
  RegalContext * rCtx = GET_REGAL_CONTEXT();
  DispatchStateScopedStepDown stepDown(rCtx->dsp);
  GLint  ret = rCtx->dsp->curr->glGetUniformLocationARB(programObj, name);
  return ret;
}

static void REGAL_CALL debug_glGetActiveUniformARB(GLhandleARB programObj, GLuint index, GLsizei maxLength, GLsizei *length, GLint *size, GLenum *type, GLcharARB *name)
{
  RegalContext * rCtx = GET_REGAL_CONTEXT();
  DispatchStateScopedStepDown stepDown(rCtx->dsp);
  rCtx->dsp->curr->glGetActiveUniformARB(programObj, index, maxLength, length, size, type, name);
}

static void REGAL_CALL debug_glGetUniformfvARB(GLhandleARB programObj, GLint location, GLfloat *params)
{
  RegalContext * rCtx = GET_REGAL_CONTEXT();
  DispatchStateScopedStepDown stepDown(rCtx->dsp);
  rCtx->dsp->curr->glGetUniformfvARB(programObj, location, params);
}

static void REGAL_CALL debug_glGetUniformivARB(GLhandleARB programObj, GLint location, GLint *params)
{
  RegalContext * rCtx = GET_REGAL_CONTEXT();
  DispatchStateScopedStepDown stepDown(rCtx->dsp);
  rCtx->dsp->curr->glGetUniformivARB(programObj, location, params);
}

static void REGAL_CALL debug_glGetShaderSourceARB(GLhandleARB obj, GLsizei maxLength, GLsizei *length, GLcharARB *source)
{
  RegalContext * rCtx = GET_REGAL_CONTEXT();
  DispatchStateScopedStepDown stepDown(rCtx->dsp);
  rCtx->dsp->curr->glGetShaderSourceARB(obj, maxLength, length, source);
}

// GL_ARB_vertex_shader

static void REGAL_CALL debug_glBindAttribLocationARB(GLhandleARB programObj, GLuint index, const GLcharARB *name)
{
  RegalContext * rCtx = GET_REGAL_CONTEXT();
  DispatchStateScopedStepDown stepDown(rCtx->dsp);
  rCtx->dsp->curr->glBindAttribLocationARB(programObj, index, name);
}

static void REGAL_CALL debug_glGetActiveAttribARB(GLhandleARB programObj, GLuint index, GLsizei maxLength, GLsizei *length, GLint *size, GLenum *type, GLcharARB *name)
{
  RegalContext * rCtx = GET_REGAL_CONTEXT();
  DispatchStateScopedStepDown stepDown(rCtx->dsp);
  rCtx->dsp->curr->glGetActiveAttribARB(programObj, index, maxLength, length, size, type, name);
}

static GLint REGAL_CALL debug_glGetAttribLocationARB(GLhandleARB programObj, const GLcharARB *name)
{
  RegalContext * rCtx = GET_REGAL_CONTEXT();
  DispatchStateScopedStepDown stepDown(rCtx->dsp);
  GLint  ret = rCtx->dsp->curr->glGetAttribLocationARB(programObj, name);
  return ret;
}

// GL_ARB_draw_buffers

static void REGAL_CALL debug_glDrawBuffersARB(GLsizei n, const GLenum *bufs)
{
  RegalContext * rCtx = GET_REGAL_CONTEXT();
  DispatchStateScopedStepDown stepDown(rCtx->dsp);
  rCtx->dsp->curr->glDrawBuffersARB(n, bufs);
}

// GL_ARB_color_buffer_float

static void REGAL_CALL debug_glClampColorARB(GLenum target, GLenum clamp)
{
  RegalContext * rCtx = GET_REGAL_CONTEXT();
  DispatchStateScopedStepDown stepDown(rCtx->dsp);
  rCtx->dsp->curr->glClampColorARB(target, clamp);
}

// GL_ARB_draw_instanced

static void REGAL_CALL debug_glDrawArraysInstancedARB(GLenum mode, GLint start, GLsizei count, GLsizei primcount)
{
  RegalContext * rCtx = GET_REGAL_CONTEXT();
  DispatchStateScopedStepDown stepDown(rCtx->dsp);
  rCtx->dsp->curr->glDrawArraysInstancedARB(mode, start, count, primcount);
}

static void REGAL_CALL debug_glDrawElementsInstancedARB(GLenum mode, GLsizei count, GLenum type, const GLvoid *indices, GLsizei primcount)
{
  RegalContext * rCtx = GET_REGAL_CONTEXT();
  DispatchStateScopedStepDown stepDown(rCtx->dsp);
  rCtx->dsp->curr->glDrawElementsInstancedARB(mode, count, type, indices, primcount);
}

// GL_ARB_framebuffer_object

static GLboolean REGAL_CALL debug_glIsRenderbuffer(GLuint renderbuffer)
{
  RegalContext * rCtx = GET_REGAL_CONTEXT();
  DispatchStateScopedStepDown stepDown(rCtx->dsp);
  GLboolean  ret = rCtx->dsp->curr->glIsRenderbuffer(renderbuffer);
  return ret;
}

static void REGAL_CALL debug_glBindRenderbuffer(GLenum target, GLuint renderbuffer)
{
  RegalContext * rCtx = GET_REGAL_CONTEXT();
  DispatchStateScopedStepDown stepDown(rCtx->dsp);
  rCtx->dsp->curr->glBindRenderbuffer(target, renderbuffer);
}

static void REGAL_CALL debug_glDeleteRenderbuffers(GLsizei n, const GLuint *renderbuffers)
{
  RegalContext * rCtx = GET_REGAL_CONTEXT();
  DispatchStateScopedStepDown stepDown(rCtx->dsp);
  rCtx->dsp->curr->glDeleteRenderbuffers(n, renderbuffers);
}

static void REGAL_CALL debug_glGenRenderbuffers(GLsizei n, GLuint *renderbuffers)
{
  RegalContext * rCtx = GET_REGAL_CONTEXT();
  DispatchStateScopedStepDown stepDown(rCtx->dsp);
  rCtx->dsp->curr->glGenRenderbuffers(n, renderbuffers);
}

static void REGAL_CALL debug_glRenderbufferStorage(GLenum target, GLenum internalformat, GLsizei width, GLsizei height)
{
  RegalContext * rCtx = GET_REGAL_CONTEXT();
  DispatchStateScopedStepDown stepDown(rCtx->dsp);
  rCtx->dsp->curr->glRenderbufferStorage(target, internalformat, width, height);
}

static void REGAL_CALL debug_glGetRenderbufferParameteriv(GLenum target, GLenum pname, GLint *params)
{
  RegalContext * rCtx = GET_REGAL_CONTEXT();
  DispatchStateScopedStepDown stepDown(rCtx->dsp);
  rCtx->dsp->curr->glGetRenderbufferParameteriv(target, pname, params);
}

static GLboolean REGAL_CALL debug_glIsFramebuffer(GLuint framebuffer)
{
  RegalContext * rCtx = GET_REGAL_CONTEXT();
  DispatchStateScopedStepDown stepDown(rCtx->dsp);
  GLboolean  ret = rCtx->dsp->curr->glIsFramebuffer(framebuffer);
  return ret;
}

static void REGAL_CALL debug_glBindFramebuffer(GLenum target, GLuint framebuffer)
{
  RegalContext * rCtx = GET_REGAL_CONTEXT();
  DispatchStateScopedStepDown stepDown(rCtx->dsp);
  rCtx->dsp->curr->glBindFramebuffer(target, framebuffer);
}

static void REGAL_CALL debug_glDeleteFramebuffers(GLsizei n, const GLuint *framebuffers)
{
  RegalContext * rCtx = GET_REGAL_CONTEXT();
  DispatchStateScopedStepDown stepDown(rCtx->dsp);
  rCtx->dsp->curr->glDeleteFramebuffers(n, framebuffers);
}

static void REGAL_CALL debug_glGenFramebuffers(GLsizei n, GLuint *framebuffers)
{
  RegalContext * rCtx = GET_REGAL_CONTEXT();
  DispatchStateScopedStepDown stepDown(rCtx->dsp);
  rCtx->dsp->curr->glGenFramebuffers(n, framebuffers);
}

static GLenum REGAL_CALL debug_glCheckFramebufferStatus(GLenum target)
{
  RegalContext * rCtx = GET_REGAL_CONTEXT();
  DispatchStateScopedStepDown stepDown(rCtx->dsp);
  GLenum  ret = rCtx->dsp->curr->glCheckFramebufferStatus(target);
  return ret;
}

static void REGAL_CALL debug_glFramebufferTexture1D(GLenum target, GLenum attachment, GLenum textarget, GLuint texture, GLint level)
{
  RegalContext * rCtx = GET_REGAL_CONTEXT();
  DispatchStateScopedStepDown stepDown(rCtx->dsp);
  rCtx->dsp->curr->glFramebufferTexture1D(target, attachment, textarget, texture, level);
}

static void REGAL_CALL debug_glFramebufferTexture2D(GLenum target, GLenum attachment, GLenum textarget, GLuint texture, GLint level)
{
  RegalContext * rCtx = GET_REGAL_CONTEXT();
  DispatchStateScopedStepDown stepDown(rCtx->dsp);
  rCtx->dsp->curr->glFramebufferTexture2D(target, attachment, textarget, texture, level);
}

static void REGAL_CALL debug_glFramebufferTexture3D(GLenum target, GLenum attachment, GLenum textarget, GLuint texture, GLint level, GLint layer)
{
  RegalContext * rCtx = GET_REGAL_CONTEXT();
  DispatchStateScopedStepDown stepDown(rCtx->dsp);
  rCtx->dsp->curr->glFramebufferTexture3D(target, attachment, textarget, texture, level, layer);
}

static void REGAL_CALL debug_glFramebufferRenderbuffer(GLenum target, GLenum attachment, GLenum renderbuffertarget, GLuint renderbuffer)
{
  RegalContext * rCtx = GET_REGAL_CONTEXT();
  DispatchStateScopedStepDown stepDown(rCtx->dsp);
  rCtx->dsp->curr->glFramebufferRenderbuffer(target, attachment, renderbuffertarget, renderbuffer);
}

static void REGAL_CALL debug_glGetFramebufferAttachmentParameteriv(GLenum target, GLenum attachment, GLenum pname, GLint *params)
{
  RegalContext * rCtx = GET_REGAL_CONTEXT();
  DispatchStateScopedStepDown stepDown(rCtx->dsp);
  rCtx->dsp->curr->glGetFramebufferAttachmentParameteriv(target, attachment, pname, params);
}

static void REGAL_CALL debug_glGenerateMipmap(GLenum target)
{
  RegalContext * rCtx = GET_REGAL_CONTEXT();
  DispatchStateScopedStepDown stepDown(rCtx->dsp);
  rCtx->dsp->curr->glGenerateMipmap(target);
}

static void REGAL_CALL debug_glBlitFramebuffer(GLint srcX0, GLint srcY0, GLint srcX1, GLint srcY1, GLint dstX0, GLint dstY0, GLint dstX1, GLint dstY1, GLbitfield mask, GLenum filter)
{
  RegalContext * rCtx = GET_REGAL_CONTEXT();
  DispatchStateScopedStepDown stepDown(rCtx->dsp);
  rCtx->dsp->curr->glBlitFramebuffer(srcX0, srcY0, srcX1, srcY1, dstX0, dstY0, dstX1, dstY1, mask, filter);
}

static void REGAL_CALL debug_glRenderbufferStorageMultisample(GLenum target, GLsizei samples, GLenum internalformat, GLsizei width, GLsizei height)
{
  RegalContext * rCtx = GET_REGAL_CONTEXT();
  DispatchStateScopedStepDown stepDown(rCtx->dsp);
  rCtx->dsp->curr->glRenderbufferStorageMultisample(target, samples, internalformat, width, height);
}

static void REGAL_CALL debug_glFramebufferTextureLayer(GLenum target, GLenum attachment, GLuint texture, GLint level, GLint layer)
{
  RegalContext * rCtx = GET_REGAL_CONTEXT();
  DispatchStateScopedStepDown stepDown(rCtx->dsp);
  rCtx->dsp->curr->glFramebufferTextureLayer(target, attachment, texture, level, layer);
}

// GL_ARB_geometry_shader4

static void REGAL_CALL debug_glProgramParameteriARB(GLuint program, GLenum pname, GLint value)
{
  RegalContext * rCtx = GET_REGAL_CONTEXT();
  DispatchStateScopedStepDown stepDown(rCtx->dsp);
  rCtx->dsp->curr->glProgramParameteriARB(program, pname, value);
}

static void REGAL_CALL debug_glFramebufferTextureARB(GLenum target, GLenum attachment, GLuint texture, GLint level)
{
  RegalContext * rCtx = GET_REGAL_CONTEXT();
  DispatchStateScopedStepDown stepDown(rCtx->dsp);
  rCtx->dsp->curr->glFramebufferTextureARB(target, attachment, texture, level);
}

static void REGAL_CALL debug_glFramebufferTextureLayerARB(GLenum target, GLenum attachment, GLuint texture, GLint level, GLint layer)
{
  RegalContext * rCtx = GET_REGAL_CONTEXT();
  DispatchStateScopedStepDown stepDown(rCtx->dsp);
  rCtx->dsp->curr->glFramebufferTextureLayerARB(target, attachment, texture, level, layer);
}

static void REGAL_CALL debug_glFramebufferTextureFaceARB(GLenum target, GLenum attachment, GLuint texture, GLint level, GLenum face)
{
  RegalContext * rCtx = GET_REGAL_CONTEXT();
  DispatchStateScopedStepDown stepDown(rCtx->dsp);
  rCtx->dsp->curr->glFramebufferTextureFaceARB(target, attachment, texture, level, face);
}

// GL_ARB_instanced_arrays

static void REGAL_CALL debug_glVertexAttribDivisorARB(GLuint index, GLuint divisor)
{
  RegalContext * rCtx = GET_REGAL_CONTEXT();
  DispatchStateScopedStepDown stepDown(rCtx->dsp);
  rCtx->dsp->curr->glVertexAttribDivisorARB(index, divisor);
}

// GL_ARB_map_buffer_range

static GLvoid *REGAL_CALL debug_glMapBufferRange(GLenum target, GLintptr offset, GLsizeiptr length, GLbitfield access)
{
  RegalContext * rCtx = GET_REGAL_CONTEXT();
  DispatchStateScopedStepDown stepDown(rCtx->dsp);
  GLvoid * ret = rCtx->dsp->curr->glMapBufferRange(target, offset, length, access);
  return ret;
}

static void REGAL_CALL debug_glFlushMappedBufferRange(GLenum target, GLintptr offset, GLsizeiptr length)
{
  RegalContext * rCtx = GET_REGAL_CONTEXT();
  DispatchStateScopedStepDown stepDown(rCtx->dsp);
  rCtx->dsp->curr->glFlushMappedBufferRange(target, offset, length);
}

// GL_ARB_texture_buffer_object

static void REGAL_CALL debug_glTexBufferARB(GLenum target, GLenum internalformat, GLuint buffer)
{
  RegalContext * rCtx = GET_REGAL_CONTEXT();
  DispatchStateScopedStepDown stepDown(rCtx->dsp);
  rCtx->dsp->curr->glTexBufferARB(target, internalformat, buffer);
}

// GL_ARB_vertex_array_object

static void REGAL_CALL debug_glBindVertexArray(GLuint array)
{
  RegalContext * rCtx = GET_REGAL_CONTEXT();
  DispatchStateScopedStepDown stepDown(rCtx->dsp);
  rCtx->dsp->curr->glBindVertexArray(array);
}

static void REGAL_CALL debug_glDeleteVertexArrays(GLsizei n, const GLuint *arrays)
{
  RegalContext * rCtx = GET_REGAL_CONTEXT();
  DispatchStateScopedStepDown stepDown(rCtx->dsp);
  rCtx->dsp->curr->glDeleteVertexArrays(n, arrays);
}

static void REGAL_CALL debug_glGenVertexArrays(GLsizei n, GLuint *arrays)
{
  RegalContext * rCtx = GET_REGAL_CONTEXT();
  DispatchStateScopedStepDown stepDown(rCtx->dsp);
  rCtx->dsp->curr->glGenVertexArrays(n, arrays);
}

static GLboolean REGAL_CALL debug_glIsVertexArray(GLuint array)
{
  RegalContext * rCtx = GET_REGAL_CONTEXT();
  DispatchStateScopedStepDown stepDown(rCtx->dsp);
  GLboolean  ret = rCtx->dsp->curr->glIsVertexArray(array);
  return ret;
}

// GL_ARB_uniform_buffer_object

static void REGAL_CALL debug_glGetUniformIndices(GLuint program, GLsizei uniformCount, const GLchar **uniformNames, GLuint *uniformIndices)
{
  RegalContext * rCtx = GET_REGAL_CONTEXT();
  DispatchStateScopedStepDown stepDown(rCtx->dsp);
  rCtx->dsp->curr->glGetUniformIndices(program, uniformCount, uniformNames, uniformIndices);
}

static void REGAL_CALL debug_glGetActiveUniformsiv(GLuint program, GLsizei uniformCount, const GLuint *uniformIndices, GLenum pname, GLint *params)
{
  RegalContext * rCtx = GET_REGAL_CONTEXT();
  DispatchStateScopedStepDown stepDown(rCtx->dsp);
  rCtx->dsp->curr->glGetActiveUniformsiv(program, uniformCount, uniformIndices, pname, params);
}

static void REGAL_CALL debug_glGetActiveUniformName(GLuint program, GLuint uniformIndex, GLsizei bufSize, GLsizei *length, GLchar *uniformName)
{
  RegalContext * rCtx = GET_REGAL_CONTEXT();
  DispatchStateScopedStepDown stepDown(rCtx->dsp);
  rCtx->dsp->curr->glGetActiveUniformName(program, uniformIndex, bufSize, length, uniformName);
}

static GLuint REGAL_CALL debug_glGetUniformBlockIndex(GLuint program, const GLchar *uniformBlockName)
{
  RegalContext * rCtx = GET_REGAL_CONTEXT();
  DispatchStateScopedStepDown stepDown(rCtx->dsp);
  GLuint  ret = rCtx->dsp->curr->glGetUniformBlockIndex(program, uniformBlockName);
  return ret;
}

static void REGAL_CALL debug_glGetActiveUniformBlockiv(GLuint program, GLuint uniformBlockIndex, GLenum pname, GLint *params)
{
  RegalContext * rCtx = GET_REGAL_CONTEXT();
  DispatchStateScopedStepDown stepDown(rCtx->dsp);
  rCtx->dsp->curr->glGetActiveUniformBlockiv(program, uniformBlockIndex, pname, params);
}

static void REGAL_CALL debug_glGetActiveUniformBlockName(GLuint program, GLuint uniformBlockIndex, GLsizei bufSize, GLsizei *length, GLchar *uniformBlockName)
{
  RegalContext * rCtx = GET_REGAL_CONTEXT();
  DispatchStateScopedStepDown stepDown(rCtx->dsp);
  rCtx->dsp->curr->glGetActiveUniformBlockName(program, uniformBlockIndex, bufSize, length, uniformBlockName);
}

static void REGAL_CALL debug_glUniformBlockBinding(GLuint program, GLuint uniformBlockIndex, GLuint uniformBlockBinding)
{
  RegalContext * rCtx = GET_REGAL_CONTEXT();
  DispatchStateScopedStepDown stepDown(rCtx->dsp);
  rCtx->dsp->curr->glUniformBlockBinding(program, uniformBlockIndex, uniformBlockBinding);
}

// GL_ARB_copy_buffer

static void REGAL_CALL debug_glCopyBufferSubData(GLenum readtarget, GLenum writetarget, GLintptr readoffset, GLintptr writeoffset, GLsizeiptr size)
{
  RegalContext * rCtx = GET_REGAL_CONTEXT();
  DispatchStateScopedStepDown stepDown(rCtx->dsp);
  rCtx->dsp->curr->glCopyBufferSubData(readtarget, writetarget, readoffset, writeoffset, size);
}

// GL_ARB_draw_elements_base_vertex

static void REGAL_CALL debug_glDrawElementsBaseVertex(GLenum mode, GLsizei count, GLenum type, GLvoid *indices, GLint basevertex)
{
  RegalContext * rCtx = GET_REGAL_CONTEXT();
  DispatchStateScopedStepDown stepDown(rCtx->dsp);
  rCtx->dsp->curr->glDrawElementsBaseVertex(mode, count, type, indices, basevertex);
}

static void REGAL_CALL debug_glDrawRangeElementsBaseVertex(GLenum mode, GLuint start, GLuint end, GLsizei count, GLenum type, GLvoid *indices, GLint basevertex)
{
  RegalContext * rCtx = GET_REGAL_CONTEXT();
  DispatchStateScopedStepDown stepDown(rCtx->dsp);
  rCtx->dsp->curr->glDrawRangeElementsBaseVertex(mode, start, end, count, type, indices, basevertex);
}

static void REGAL_CALL debug_glDrawElementsInstancedBaseVertex(GLenum mode, GLsizei count, GLenum type, const GLvoid *indices, GLsizei primcount, GLint basevertex)
{
  RegalContext * rCtx = GET_REGAL_CONTEXT();
  DispatchStateScopedStepDown stepDown(rCtx->dsp);
  rCtx->dsp->curr->glDrawElementsInstancedBaseVertex(mode, count, type, indices, primcount, basevertex);
}

static void REGAL_CALL debug_glMultiDrawElementsBaseVertex(GLenum mode, GLsizei *count, GLenum type, GLvoid **indices, GLsizei primcount, GLint *basevertex)
{
  RegalContext * rCtx = GET_REGAL_CONTEXT();
  DispatchStateScopedStepDown stepDown(rCtx->dsp);
  rCtx->dsp->curr->glMultiDrawElementsBaseVertex(mode, count, type, indices, primcount, basevertex);
}

// GL_ARB_provoking_vertex

static void REGAL_CALL debug_glProvokingVertex(GLenum mode)
{
  RegalContext * rCtx = GET_REGAL_CONTEXT();
  DispatchStateScopedStepDown stepDown(rCtx->dsp);
  rCtx->dsp->curr->glProvokingVertex(mode);
}

// GL_ARB_sync

static GLsync REGAL_CALL debug_glFenceSync(GLenum condition, GLbitfield flags)
{
  RegalContext * rCtx = GET_REGAL_CONTEXT();
  DispatchStateScopedStepDown stepDown(rCtx->dsp);
  GLsync  ret = rCtx->dsp->curr->glFenceSync(condition, flags);
  return ret;
}

static GLboolean REGAL_CALL debug_glIsSync(GLsync sync)
{
  RegalContext * rCtx = GET_REGAL_CONTEXT();
  DispatchStateScopedStepDown stepDown(rCtx->dsp);
  GLboolean  ret = rCtx->dsp->curr->glIsSync(sync);
  return ret;
}

static void REGAL_CALL debug_glDeleteSync(GLsync sync)
{
  RegalContext * rCtx = GET_REGAL_CONTEXT();
  DispatchStateScopedStepDown stepDown(rCtx->dsp);
  rCtx->dsp->curr->glDeleteSync(sync);
}

static GLenum REGAL_CALL debug_glClientWaitSync(GLsync sync, GLbitfield flags, GLuint64 timeout)
{
  RegalContext * rCtx = GET_REGAL_CONTEXT();
  DispatchStateScopedStepDown stepDown(rCtx->dsp);
  GLenum  ret = rCtx->dsp->curr->glClientWaitSync(sync, flags, timeout);
  return ret;
}

static void REGAL_CALL debug_glWaitSync(GLsync sync, GLbitfield flags, GLuint64 timeout)
{
  RegalContext * rCtx = GET_REGAL_CONTEXT();
  DispatchStateScopedStepDown stepDown(rCtx->dsp);
  rCtx->dsp->curr->glWaitSync(sync, flags, timeout);
}

static void REGAL_CALL debug_glGetInteger64v(GLenum pname, GLint64 *params)
{
  RegalContext * rCtx = GET_REGAL_CONTEXT();
  DispatchStateScopedStepDown stepDown(rCtx->dsp);
  rCtx->dsp->curr->glGetInteger64v(pname, params);
}

static void REGAL_CALL debug_glGetSynciv(GLsync sync, GLenum pname, GLsizei bufSize, GLsizei *length, GLint *values)
{
  RegalContext * rCtx = GET_REGAL_CONTEXT();
  DispatchStateScopedStepDown stepDown(rCtx->dsp);
  rCtx->dsp->curr->glGetSynciv(sync, pname, bufSize, length, values);
}

// GL_ARB_texture_multisample

static void REGAL_CALL debug_glTexImage2DMultisample(GLenum target, GLsizei samples, GLint internalformat, GLsizei width, GLsizei height, GLboolean fixedsamplelocations)
{
  RegalContext * rCtx = GET_REGAL_CONTEXT();
  DispatchStateScopedStepDown stepDown(rCtx->dsp);
  rCtx->dsp->curr->glTexImage2DMultisample(target, samples, internalformat, width, height, fixedsamplelocations);
}

static void REGAL_CALL debug_glTexImage3DMultisample(GLenum target, GLsizei samples, GLint internalformat, GLsizei width, GLsizei height, GLsizei depth, GLboolean fixedsamplelocations)
{
  RegalContext * rCtx = GET_REGAL_CONTEXT();
  DispatchStateScopedStepDown stepDown(rCtx->dsp);
  rCtx->dsp->curr->glTexImage3DMultisample(target, samples, internalformat, width, height, depth, fixedsamplelocations);
}

static void REGAL_CALL debug_glGetMultisamplefv(GLenum pname, GLuint index, GLfloat *val)
{
  RegalContext * rCtx = GET_REGAL_CONTEXT();
  DispatchStateScopedStepDown stepDown(rCtx->dsp);
  rCtx->dsp->curr->glGetMultisamplefv(pname, index, val);
}

static void REGAL_CALL debug_glSampleMaski(GLuint index, GLbitfield mask)
{
  RegalContext * rCtx = GET_REGAL_CONTEXT();
  DispatchStateScopedStepDown stepDown(rCtx->dsp);
  rCtx->dsp->curr->glSampleMaski(index, mask);
}

// GL_ARB_draw_buffers_blend

static void REGAL_CALL debug_glBlendEquationiARB(GLuint buf, GLenum mode)
{
  RegalContext * rCtx = GET_REGAL_CONTEXT();
  DispatchStateScopedStepDown stepDown(rCtx->dsp);
  rCtx->dsp->curr->glBlendEquationiARB(buf, mode);
}

static void REGAL_CALL debug_glBlendEquationSeparateiARB(GLuint buf, GLenum modeRGB, GLenum modeAlpha)
{
  RegalContext * rCtx = GET_REGAL_CONTEXT();
  DispatchStateScopedStepDown stepDown(rCtx->dsp);
  rCtx->dsp->curr->glBlendEquationSeparateiARB(buf, modeRGB, modeAlpha);
}

static void REGAL_CALL debug_glBlendFunciARB(GLuint buf, GLenum src, GLenum dst)
{
  RegalContext * rCtx = GET_REGAL_CONTEXT();
  DispatchStateScopedStepDown stepDown(rCtx->dsp);
  rCtx->dsp->curr->glBlendFunciARB(buf, src, dst);
}

static void REGAL_CALL debug_glBlendFuncSeparateiARB(GLuint buf, GLenum srcRGB, GLenum dstRGB, GLenum srcAlpha, GLenum dstAlpha)
{
  RegalContext * rCtx = GET_REGAL_CONTEXT();
  DispatchStateScopedStepDown stepDown(rCtx->dsp);
  rCtx->dsp->curr->glBlendFuncSeparateiARB(buf, srcRGB, dstRGB, srcAlpha, dstAlpha);
}

// GL_ARB_sample_shading

static void REGAL_CALL debug_glMinSampleShadingARB(GLclampf value)
{
  RegalContext * rCtx = GET_REGAL_CONTEXT();
  DispatchStateScopedStepDown stepDown(rCtx->dsp);
  rCtx->dsp->curr->glMinSampleShadingARB(value);
}

// GL_ARB_shading_language_include

static void REGAL_CALL debug_glNamedStringARB(GLenum type, GLint namelen, const GLchar *name, GLint stringlen, const GLchar *string)
{
  RegalContext * rCtx = GET_REGAL_CONTEXT();
  DispatchStateScopedStepDown stepDown(rCtx->dsp);
  rCtx->dsp->curr->glNamedStringARB(type, namelen, name, stringlen, string);
}

static void REGAL_CALL debug_glDeleteNamedStringARB(GLint namelen, const GLchar *name)
{
  RegalContext * rCtx = GET_REGAL_CONTEXT();
  DispatchStateScopedStepDown stepDown(rCtx->dsp);
  rCtx->dsp->curr->glDeleteNamedStringARB(namelen, name);
}

static void REGAL_CALL debug_glCompileShaderIncludeARB(GLuint shader, GLsizei count, const GLchar **path, const GLint *length)
{
  RegalContext * rCtx = GET_REGAL_CONTEXT();
  DispatchStateScopedStepDown stepDown(rCtx->dsp);
  rCtx->dsp->curr->glCompileShaderIncludeARB(shader, count, path, length);
}

static GLboolean REGAL_CALL debug_glIsNamedStringARB(GLint namelen, const GLchar *name)
{
  RegalContext * rCtx = GET_REGAL_CONTEXT();
  DispatchStateScopedStepDown stepDown(rCtx->dsp);
  GLboolean  ret = rCtx->dsp->curr->glIsNamedStringARB(namelen, name);
  return ret;
}

static void REGAL_CALL debug_glGetNamedStringARB(GLint namelen, const GLchar *name, GLsizei bufSize, GLint *stringlen, GLchar *string)
{
  RegalContext * rCtx = GET_REGAL_CONTEXT();
  DispatchStateScopedStepDown stepDown(rCtx->dsp);
  rCtx->dsp->curr->glGetNamedStringARB(namelen, name, bufSize, stringlen, string);
}

static void REGAL_CALL debug_glGetNamedStringivARB(GLint namelen, const GLchar *name, GLenum pname, GLint *params)
{
  RegalContext * rCtx = GET_REGAL_CONTEXT();
  DispatchStateScopedStepDown stepDown(rCtx->dsp);
  rCtx->dsp->curr->glGetNamedStringivARB(namelen, name, pname, params);
}

// GL_ARB_debug_output

static void REGAL_CALL debug_glDebugMessageControlARB(GLenum source, GLenum type, GLenum severity, GLsizei count, const GLuint *ids, GLboolean enabled)
{
  RegalContext * rCtx = GET_REGAL_CONTEXT();
  DispatchStateScopedStepDown stepDown(rCtx->dsp);
  rCtx->dsp->curr->glDebugMessageControlARB(source, type, severity, count, ids, enabled);
}

static void REGAL_CALL debug_glDebugMessageInsertARB(GLenum source, GLenum type, GLuint id, GLenum severity, GLsizei length, const GLchar *buf)
{
  RegalContext * rCtx = GET_REGAL_CONTEXT();
  DispatchStateScopedStepDown stepDown(rCtx->dsp);
  rCtx->dsp->curr->glDebugMessageInsertARB(source, type, id, severity, length, buf);
}

static void REGAL_CALL debug_glDebugMessageCallbackARB(GLDEBUGPROCARB callback, GLvoid *userParam)
{
  RegalContext * rCtx = GET_REGAL_CONTEXT();
  DispatchStateScopedStepDown stepDown(rCtx->dsp);
  rCtx->dsp->curr->glDebugMessageCallbackARB(callback, userParam);
}

static GLuint REGAL_CALL debug_glGetDebugMessageLogARB(GLuint count, GLsizei bufsize, GLenum *sources, GLenum *types, GLuint *ids, GLenum *severities, GLsizei *lengths, GLchar *messageLog)
{
  RegalContext * rCtx = GET_REGAL_CONTEXT();
  DispatchStateScopedStepDown stepDown(rCtx->dsp);
  GLuint  ret = rCtx->dsp->curr->glGetDebugMessageLogARB(count, bufsize, sources, types, ids, severities, lengths, messageLog);
  return ret;
}

// GL_ARB_robustness

static GLenum REGAL_CALL debug_glGetGraphicsResetStatusARB(void)
{
  RegalContext * rCtx = GET_REGAL_CONTEXT();
  DispatchStateScopedStepDown stepDown(rCtx->dsp);
  GLenum  ret = rCtx->dsp->curr->glGetGraphicsResetStatusARB();
  return ret;
}

static void REGAL_CALL debug_glGetnMapdvARB(GLenum target, GLenum query, GLsizei bufSize, GLdouble *v)
{
  RegalContext * rCtx = GET_REGAL_CONTEXT();
  DispatchStateScopedStepDown stepDown(rCtx->dsp);
  rCtx->dsp->curr->glGetnMapdvARB(target, query, bufSize, v);
}

static void REGAL_CALL debug_glGetnMapfvARB(GLenum target, GLenum query, GLsizei bufSize, GLfloat *v)
{
  RegalContext * rCtx = GET_REGAL_CONTEXT();
  DispatchStateScopedStepDown stepDown(rCtx->dsp);
  rCtx->dsp->curr->glGetnMapfvARB(target, query, bufSize, v);
}

static void REGAL_CALL debug_glGetnMapivARB(GLenum target, GLenum query, GLsizei bufSize, GLint *v)
{
  RegalContext * rCtx = GET_REGAL_CONTEXT();
  DispatchStateScopedStepDown stepDown(rCtx->dsp);
  rCtx->dsp->curr->glGetnMapivARB(target, query, bufSize, v);
}

static void REGAL_CALL debug_glGetnPixelMapfvARB(GLenum map, GLsizei bufSize, GLfloat *values)
{
  RegalContext * rCtx = GET_REGAL_CONTEXT();
  DispatchStateScopedStepDown stepDown(rCtx->dsp);
  rCtx->dsp->curr->glGetnPixelMapfvARB(map, bufSize, values);
}

static void REGAL_CALL debug_glGetnPixelMapuivARB(GLenum map, GLsizei bufSize, GLuint *values)
{
  RegalContext * rCtx = GET_REGAL_CONTEXT();
  DispatchStateScopedStepDown stepDown(rCtx->dsp);
  rCtx->dsp->curr->glGetnPixelMapuivARB(map, bufSize, values);
}

static void REGAL_CALL debug_glGetnPixelMapusvARB(GLenum map, GLsizei bufSize, GLushort *values)
{
  RegalContext * rCtx = GET_REGAL_CONTEXT();
  DispatchStateScopedStepDown stepDown(rCtx->dsp);
  rCtx->dsp->curr->glGetnPixelMapusvARB(map, bufSize, values);
}

static void REGAL_CALL debug_glGetnPolygonStippleARB(GLsizei bufSize, GLubyte *pattern)
{
  RegalContext * rCtx = GET_REGAL_CONTEXT();
  DispatchStateScopedStepDown stepDown(rCtx->dsp);
  rCtx->dsp->curr->glGetnPolygonStippleARB(bufSize, pattern);
}

static void REGAL_CALL debug_glGetnTexImageARB(GLenum target, GLint level, GLenum format, GLenum type, GLsizei bufSize, GLvoid *img)
{
  RegalContext * rCtx = GET_REGAL_CONTEXT();
  DispatchStateScopedStepDown stepDown(rCtx->dsp);
  rCtx->dsp->curr->glGetnTexImageARB(target, level, format, type, bufSize, img);
}

static void REGAL_CALL debug_glReadnPixelsARB(GLint x, GLint y, GLsizei width, GLsizei height, GLenum format, GLenum type, GLsizei bufSize, GLvoid *data)
{
  RegalContext * rCtx = GET_REGAL_CONTEXT();
  DispatchStateScopedStepDown stepDown(rCtx->dsp);
  rCtx->dsp->curr->glReadnPixelsARB(x, y, width, height, format, type, bufSize, data);
}

static void REGAL_CALL debug_glGetnColorTableARB(GLenum target, GLenum format, GLenum type, GLsizei bufSize, GLvoid *table)
{
  RegalContext * rCtx = GET_REGAL_CONTEXT();
  DispatchStateScopedStepDown stepDown(rCtx->dsp);
  rCtx->dsp->curr->glGetnColorTableARB(target, format, type, bufSize, table);
}

static void REGAL_CALL debug_glGetnConvolutionFilterARB(GLenum target, GLenum format, GLenum type, GLsizei bufSize, GLvoid *image)
{
  RegalContext * rCtx = GET_REGAL_CONTEXT();
  DispatchStateScopedStepDown stepDown(rCtx->dsp);
  rCtx->dsp->curr->glGetnConvolutionFilterARB(target, format, type, bufSize, image);
}

static void REGAL_CALL debug_glGetnSeparableFilterARB(GLenum target, GLenum format, GLenum type, GLsizei rowBufSize, GLvoid *row, GLsizei columnBufSize, GLvoid *column, GLvoid *span)
{
  RegalContext * rCtx = GET_REGAL_CONTEXT();
  DispatchStateScopedStepDown stepDown(rCtx->dsp);
  rCtx->dsp->curr->glGetnSeparableFilterARB(target, format, type, rowBufSize, row, columnBufSize, column, span);
}

static void REGAL_CALL debug_glGetnHistogramARB(GLenum target, GLboolean reset, GLenum format, GLenum type, GLsizei bufSize, GLvoid *values)
{
  RegalContext * rCtx = GET_REGAL_CONTEXT();
  DispatchStateScopedStepDown stepDown(rCtx->dsp);
  rCtx->dsp->curr->glGetnHistogramARB(target, reset, format, type, bufSize, values);
}

static void REGAL_CALL debug_glGetnMinmaxARB(GLenum target, GLboolean reset, GLenum format, GLenum type, GLsizei bufSize, GLvoid *values)
{
  RegalContext * rCtx = GET_REGAL_CONTEXT();
  DispatchStateScopedStepDown stepDown(rCtx->dsp);
  rCtx->dsp->curr->glGetnMinmaxARB(target, reset, format, type, bufSize, values);
}

static void REGAL_CALL debug_glGetnCompressedTexImageARB(GLenum target, GLint lod, GLsizei bufSize, GLvoid *img)
{
  RegalContext * rCtx = GET_REGAL_CONTEXT();
  DispatchStateScopedStepDown stepDown(rCtx->dsp);
  rCtx->dsp->curr->glGetnCompressedTexImageARB(target, lod, bufSize, img);
}

static void REGAL_CALL debug_glGetnUniformfvARB(GLuint program, GLint location, GLsizei bufSize, GLfloat *params)
{
  RegalContext * rCtx = GET_REGAL_CONTEXT();
  DispatchStateScopedStepDown stepDown(rCtx->dsp);
  rCtx->dsp->curr->glGetnUniformfvARB(program, location, bufSize, params);
}

static void REGAL_CALL debug_glGetnUniformivARB(GLuint program, GLint location, GLsizei bufSize, GLint *params)
{
  RegalContext * rCtx = GET_REGAL_CONTEXT();
  DispatchStateScopedStepDown stepDown(rCtx->dsp);
  rCtx->dsp->curr->glGetnUniformivARB(program, location, bufSize, params);
}

static void REGAL_CALL debug_glGetnUniformuivARB(GLuint program, GLint location, GLsizei bufSize, GLuint *params)
{
  RegalContext * rCtx = GET_REGAL_CONTEXT();
  DispatchStateScopedStepDown stepDown(rCtx->dsp);
  rCtx->dsp->curr->glGetnUniformuivARB(program, location, bufSize, params);
}

static void REGAL_CALL debug_glGetnUniformdvARB(GLuint program, GLint location, GLsizei bufSize, GLdouble *params)
{
  RegalContext * rCtx = GET_REGAL_CONTEXT();
  DispatchStateScopedStepDown stepDown(rCtx->dsp);
  rCtx->dsp->curr->glGetnUniformdvARB(program, location, bufSize, params);
}

// GL_EXT_blend_color

static void REGAL_CALL debug_glBlendColorEXT(GLclampf red, GLclampf green, GLclampf blue, GLclampf alpha)
{
  RegalContext * rCtx = GET_REGAL_CONTEXT();
  DispatchStateScopedStepDown stepDown(rCtx->dsp);
  rCtx->dsp->curr->glBlendColorEXT(red, green, blue, alpha);
}

// GL_EXT_polygon_offset

static void REGAL_CALL debug_glPolygonOffsetEXT(GLfloat factor, GLfloat bias)
{
  RegalContext * rCtx = GET_REGAL_CONTEXT();
  DispatchStateScopedStepDown stepDown(rCtx->dsp);
  rCtx->dsp->curr->glPolygonOffsetEXT(factor, bias);
}

// GL_EXT_texture3D

static void REGAL_CALL debug_glTexImage3DEXT(GLenum target, GLint level, GLenum internalformat, GLsizei width, GLsizei height, GLsizei depth, GLint border, GLenum format, GLenum type, const GLvoid *pixels)
{
  RegalContext * rCtx = GET_REGAL_CONTEXT();
  DispatchStateScopedStepDown stepDown(rCtx->dsp);
  rCtx->dsp->curr->glTexImage3DEXT(target, level, internalformat, width, height, depth, border, format, type, pixels);
}

// GL_SGIS_texture_filter4

static void REGAL_CALL debug_glGetTexFilterFuncSGIS(GLenum target, GLenum filter, GLfloat *weights)
{
  RegalContext * rCtx = GET_REGAL_CONTEXT();
  DispatchStateScopedStepDown stepDown(rCtx->dsp);
  rCtx->dsp->curr->glGetTexFilterFuncSGIS(target, filter, weights);
}

static void REGAL_CALL debug_glTexFilterFuncSGIS(GLenum target, GLenum filter, GLsizei n, const GLfloat *weights)
{
  RegalContext * rCtx = GET_REGAL_CONTEXT();
  DispatchStateScopedStepDown stepDown(rCtx->dsp);
  rCtx->dsp->curr->glTexFilterFuncSGIS(target, filter, n, weights);
}

// GL_EXT_subtexture

static void REGAL_CALL debug_glTexSubImage1DEXT(GLenum target, GLint level, GLint xoffset, GLsizei width, GLenum format, GLenum type, const GLvoid *pixels)
{
  RegalContext * rCtx = GET_REGAL_CONTEXT();
  DispatchStateScopedStepDown stepDown(rCtx->dsp);
  rCtx->dsp->curr->glTexSubImage1DEXT(target, level, xoffset, width, format, type, pixels);
}

static void REGAL_CALL debug_glTexSubImage2DEXT(GLenum target, GLint level, GLint xoffset, GLint yoffset, GLsizei width, GLsizei height, GLenum format, GLenum type, const GLvoid *pixels)
{
  RegalContext * rCtx = GET_REGAL_CONTEXT();
  DispatchStateScopedStepDown stepDown(rCtx->dsp);
  rCtx->dsp->curr->glTexSubImage2DEXT(target, level, xoffset, yoffset, width, height, format, type, pixels);
}

static void REGAL_CALL debug_glTexSubImage3DEXT(GLenum target, GLint level, GLint xoffset, GLint yoffset, GLint zoffset, GLsizei width, GLsizei height, GLsizei depth, GLenum format, GLenum type, const GLvoid *pixels)
{
  RegalContext * rCtx = GET_REGAL_CONTEXT();
  DispatchStateScopedStepDown stepDown(rCtx->dsp);
  rCtx->dsp->curr->glTexSubImage3DEXT(target, level, xoffset, yoffset, zoffset, width, height, depth, format, type, pixels);
}

// GL_EXT_copy_texture

static void REGAL_CALL debug_glCopyTexImage1DEXT(GLenum target, GLint level, GLenum internalformat, GLint x, GLint y, GLsizei width, GLint border)
{
  RegalContext * rCtx = GET_REGAL_CONTEXT();
  DispatchStateScopedStepDown stepDown(rCtx->dsp);
  rCtx->dsp->curr->glCopyTexImage1DEXT(target, level, internalformat, x, y, width, border);
}

static void REGAL_CALL debug_glCopyTexImage2DEXT(GLenum target, GLint level, GLenum internalformat, GLint x, GLint y, GLsizei width, GLsizei height, GLint border)
{
  RegalContext * rCtx = GET_REGAL_CONTEXT();
  DispatchStateScopedStepDown stepDown(rCtx->dsp);
  rCtx->dsp->curr->glCopyTexImage2DEXT(target, level, internalformat, x, y, width, height, border);
}

static void REGAL_CALL debug_glCopyTexSubImage1DEXT(GLenum target, GLint level, GLint xoffset, GLint x, GLint y, GLsizei width)
{
  RegalContext * rCtx = GET_REGAL_CONTEXT();
  DispatchStateScopedStepDown stepDown(rCtx->dsp);
  rCtx->dsp->curr->glCopyTexSubImage1DEXT(target, level, xoffset, x, y, width);
}

static void REGAL_CALL debug_glCopyTexSubImage2DEXT(GLenum target, GLint level, GLint xoffset, GLint yoffset, GLint x, GLint y, GLsizei width, GLsizei height)
{
  RegalContext * rCtx = GET_REGAL_CONTEXT();
  DispatchStateScopedStepDown stepDown(rCtx->dsp);
  rCtx->dsp->curr->glCopyTexSubImage2DEXT(target, level, xoffset, yoffset, x, y, width, height);
}

static void REGAL_CALL debug_glCopyTexSubImage3DEXT(GLenum target, GLint level, GLint xoffset, GLint yoffset, GLint zoffset, GLint x, GLint y, GLsizei width, GLsizei height)
{
  RegalContext * rCtx = GET_REGAL_CONTEXT();
  DispatchStateScopedStepDown stepDown(rCtx->dsp);
  rCtx->dsp->curr->glCopyTexSubImage3DEXT(target, level, xoffset, yoffset, zoffset, x, y, width, height);
}

// GL_EXT_histogram

static void REGAL_CALL debug_glGetHistogramEXT(GLenum target, GLboolean reset, GLenum format, GLenum type, GLvoid *values)
{
  RegalContext * rCtx = GET_REGAL_CONTEXT();
  DispatchStateScopedStepDown stepDown(rCtx->dsp);
  rCtx->dsp->curr->glGetHistogramEXT(target, reset, format, type, values);
}

static void REGAL_CALL debug_glGetHistogramParameterfvEXT(GLenum target, GLenum pname, GLfloat *params)
{
  RegalContext * rCtx = GET_REGAL_CONTEXT();
  DispatchStateScopedStepDown stepDown(rCtx->dsp);
  rCtx->dsp->curr->glGetHistogramParameterfvEXT(target, pname, params);
}

static void REGAL_CALL debug_glGetHistogramParameterivEXT(GLenum target, GLenum pname, GLint *params)
{
  RegalContext * rCtx = GET_REGAL_CONTEXT();
  DispatchStateScopedStepDown stepDown(rCtx->dsp);
  rCtx->dsp->curr->glGetHistogramParameterivEXT(target, pname, params);
}

static void REGAL_CALL debug_glGetMinmaxEXT(GLenum target, GLboolean reset, GLenum format, GLenum type, GLvoid *values)
{
  RegalContext * rCtx = GET_REGAL_CONTEXT();
  DispatchStateScopedStepDown stepDown(rCtx->dsp);
  rCtx->dsp->curr->glGetMinmaxEXT(target, reset, format, type, values);
}

static void REGAL_CALL debug_glGetMinmaxParameterfvEXT(GLenum target, GLenum pname, GLfloat *params)
{
  RegalContext * rCtx = GET_REGAL_CONTEXT();
  DispatchStateScopedStepDown stepDown(rCtx->dsp);
  rCtx->dsp->curr->glGetMinmaxParameterfvEXT(target, pname, params);
}

static void REGAL_CALL debug_glGetMinmaxParameterivEXT(GLenum target, GLenum pname, GLint *params)
{
  RegalContext * rCtx = GET_REGAL_CONTEXT();
  DispatchStateScopedStepDown stepDown(rCtx->dsp);
  rCtx->dsp->curr->glGetMinmaxParameterivEXT(target, pname, params);
}

static void REGAL_CALL debug_glHistogramEXT(GLenum target, GLsizei width, GLenum internalformat, GLboolean sink)
{
  RegalContext * rCtx = GET_REGAL_CONTEXT();
  DispatchStateScopedStepDown stepDown(rCtx->dsp);
  rCtx->dsp->curr->glHistogramEXT(target, width, internalformat, sink);
}

static void REGAL_CALL debug_glMinmaxEXT(GLenum target, GLenum internalformat, GLboolean sink)
{
  RegalContext * rCtx = GET_REGAL_CONTEXT();
  DispatchStateScopedStepDown stepDown(rCtx->dsp);
  rCtx->dsp->curr->glMinmaxEXT(target, internalformat, sink);
}

static void REGAL_CALL debug_glResetHistogramEXT(GLenum target)
{
  RegalContext * rCtx = GET_REGAL_CONTEXT();
  DispatchStateScopedStepDown stepDown(rCtx->dsp);
  rCtx->dsp->curr->glResetHistogramEXT(target);
}

static void REGAL_CALL debug_glResetMinmaxEXT(GLenum target)
{
  RegalContext * rCtx = GET_REGAL_CONTEXT();
  DispatchStateScopedStepDown stepDown(rCtx->dsp);
  rCtx->dsp->curr->glResetMinmaxEXT(target);
}

// GL_EXT_convolution

static void REGAL_CALL debug_glConvolutionFilter1DEXT(GLenum target, GLenum internalformat, GLsizei width, GLenum format, GLenum type, const GLvoid *image)
{
  RegalContext * rCtx = GET_REGAL_CONTEXT();
  DispatchStateScopedStepDown stepDown(rCtx->dsp);
  rCtx->dsp->curr->glConvolutionFilter1DEXT(target, internalformat, width, format, type, image);
}

static void REGAL_CALL debug_glConvolutionFilter2DEXT(GLenum target, GLenum internalformat, GLsizei width, GLsizei height, GLenum format, GLenum type, const GLvoid *image)
{
  RegalContext * rCtx = GET_REGAL_CONTEXT();
  DispatchStateScopedStepDown stepDown(rCtx->dsp);
  rCtx->dsp->curr->glConvolutionFilter2DEXT(target, internalformat, width, height, format, type, image);
}

static void REGAL_CALL debug_glConvolutionParameterfEXT(GLenum target, GLenum pname, GLfloat param)
{
  RegalContext * rCtx = GET_REGAL_CONTEXT();
  DispatchStateScopedStepDown stepDown(rCtx->dsp);
  rCtx->dsp->curr->glConvolutionParameterfEXT(target, pname, param);
}

static void REGAL_CALL debug_glConvolutionParameterfvEXT(GLenum target, GLenum pname, const GLfloat *params)
{
  RegalContext * rCtx = GET_REGAL_CONTEXT();
  DispatchStateScopedStepDown stepDown(rCtx->dsp);
  rCtx->dsp->curr->glConvolutionParameterfvEXT(target, pname, params);
}

static void REGAL_CALL debug_glConvolutionParameteriEXT(GLenum target, GLenum pname, GLint param)
{
  RegalContext * rCtx = GET_REGAL_CONTEXT();
  DispatchStateScopedStepDown stepDown(rCtx->dsp);
  rCtx->dsp->curr->glConvolutionParameteriEXT(target, pname, param);
}

static void REGAL_CALL debug_glConvolutionParameterivEXT(GLenum target, GLenum pname, const GLint *params)
{
  RegalContext * rCtx = GET_REGAL_CONTEXT();
  DispatchStateScopedStepDown stepDown(rCtx->dsp);
  rCtx->dsp->curr->glConvolutionParameterivEXT(target, pname, params);
}

static void REGAL_CALL debug_glCopyConvolutionFilter1DEXT(GLenum target, GLenum internalformat, GLint x, GLint y, GLsizei width)
{
  RegalContext * rCtx = GET_REGAL_CONTEXT();
  DispatchStateScopedStepDown stepDown(rCtx->dsp);
  rCtx->dsp->curr->glCopyConvolutionFilter1DEXT(target, internalformat, x, y, width);
}

static void REGAL_CALL debug_glCopyConvolutionFilter2DEXT(GLenum target, GLenum internalformat, GLint x, GLint y, GLsizei width, GLsizei height)
{
  RegalContext * rCtx = GET_REGAL_CONTEXT();
  DispatchStateScopedStepDown stepDown(rCtx->dsp);
  rCtx->dsp->curr->glCopyConvolutionFilter2DEXT(target, internalformat, x, y, width, height);
}

static void REGAL_CALL debug_glGetConvolutionFilterEXT(GLenum target, GLenum format, GLenum type, GLvoid *image)
{
  RegalContext * rCtx = GET_REGAL_CONTEXT();
  DispatchStateScopedStepDown stepDown(rCtx->dsp);
  rCtx->dsp->curr->glGetConvolutionFilterEXT(target, format, type, image);
}

static void REGAL_CALL debug_glGetConvolutionParameterfvEXT(GLenum target, GLenum pname, GLfloat *params)
{
  RegalContext * rCtx = GET_REGAL_CONTEXT();
  DispatchStateScopedStepDown stepDown(rCtx->dsp);
  rCtx->dsp->curr->glGetConvolutionParameterfvEXT(target, pname, params);
}

static void REGAL_CALL debug_glGetConvolutionParameterivEXT(GLenum target, GLenum pname, GLint *params)
{
  RegalContext * rCtx = GET_REGAL_CONTEXT();
  DispatchStateScopedStepDown stepDown(rCtx->dsp);
  rCtx->dsp->curr->glGetConvolutionParameterivEXT(target, pname, params);
}

static void REGAL_CALL debug_glGetSeparableFilterEXT(GLenum target, GLenum format, GLenum type, GLvoid *row, GLvoid *column, GLvoid *span)
{
  RegalContext * rCtx = GET_REGAL_CONTEXT();
  DispatchStateScopedStepDown stepDown(rCtx->dsp);
  rCtx->dsp->curr->glGetSeparableFilterEXT(target, format, type, row, column, span);
}

static void REGAL_CALL debug_glSeparableFilter2DEXT(GLenum target, GLenum internalformat, GLsizei width, GLsizei height, GLenum format, GLenum type, const GLvoid *row, const GLvoid *column)
{
  RegalContext * rCtx = GET_REGAL_CONTEXT();
  DispatchStateScopedStepDown stepDown(rCtx->dsp);
  rCtx->dsp->curr->glSeparableFilter2DEXT(target, internalformat, width, height, format, type, row, column);
}

// GL_SGI_color_table

static void REGAL_CALL debug_glColorTableSGI(GLenum target, GLenum internalformat, GLsizei width, GLenum format, GLenum type, const GLvoid *table)
{
  RegalContext * rCtx = GET_REGAL_CONTEXT();
  DispatchStateScopedStepDown stepDown(rCtx->dsp);
  rCtx->dsp->curr->glColorTableSGI(target, internalformat, width, format, type, table);
}

static void REGAL_CALL debug_glColorTableParameterfvSGI(GLenum target, GLenum pname, const GLfloat *params)
{
  RegalContext * rCtx = GET_REGAL_CONTEXT();
  DispatchStateScopedStepDown stepDown(rCtx->dsp);
  rCtx->dsp->curr->glColorTableParameterfvSGI(target, pname, params);
}

static void REGAL_CALL debug_glColorTableParameterivSGI(GLenum target, GLenum pname, const GLint *params)
{
  RegalContext * rCtx = GET_REGAL_CONTEXT();
  DispatchStateScopedStepDown stepDown(rCtx->dsp);
  rCtx->dsp->curr->glColorTableParameterivSGI(target, pname, params);
}

static void REGAL_CALL debug_glCopyColorTableSGI(GLenum target, GLenum internalformat, GLint x, GLint y, GLsizei width)
{
  RegalContext * rCtx = GET_REGAL_CONTEXT();
  DispatchStateScopedStepDown stepDown(rCtx->dsp);
  rCtx->dsp->curr->glCopyColorTableSGI(target, internalformat, x, y, width);
}

static void REGAL_CALL debug_glGetColorTableSGI(GLenum target, GLenum format, GLenum type, GLvoid *table)
{
  RegalContext * rCtx = GET_REGAL_CONTEXT();
  DispatchStateScopedStepDown stepDown(rCtx->dsp);
  rCtx->dsp->curr->glGetColorTableSGI(target, format, type, table);
}

static void REGAL_CALL debug_glGetColorTableParameterfvSGI(GLenum target, GLenum pname, GLfloat *params)
{
  RegalContext * rCtx = GET_REGAL_CONTEXT();
  DispatchStateScopedStepDown stepDown(rCtx->dsp);
  rCtx->dsp->curr->glGetColorTableParameterfvSGI(target, pname, params);
}

static void REGAL_CALL debug_glGetColorTableParameterivSGI(GLenum target, GLenum pname, GLint *params)
{
  RegalContext * rCtx = GET_REGAL_CONTEXT();
  DispatchStateScopedStepDown stepDown(rCtx->dsp);
  rCtx->dsp->curr->glGetColorTableParameterivSGI(target, pname, params);
}

// GL_SGIX_pixel_texture

static void REGAL_CALL debug_glPixelTexGenSGIX(GLenum mode)
{
  RegalContext * rCtx = GET_REGAL_CONTEXT();
  DispatchStateScopedStepDown stepDown(rCtx->dsp);
  rCtx->dsp->curr->glPixelTexGenSGIX(mode);
}

// GL_SGIS_pixel_texture

static void REGAL_CALL debug_glPixelTexGenParameteriSGIS(GLenum pname, GLint param)
{
  RegalContext * rCtx = GET_REGAL_CONTEXT();
  DispatchStateScopedStepDown stepDown(rCtx->dsp);
  rCtx->dsp->curr->glPixelTexGenParameteriSGIS(pname, param);
}

static void REGAL_CALL debug_glPixelTexGenParameterivSGIS(GLenum pname, const GLint *params)
{
  RegalContext * rCtx = GET_REGAL_CONTEXT();
  DispatchStateScopedStepDown stepDown(rCtx->dsp);
  rCtx->dsp->curr->glPixelTexGenParameterivSGIS(pname, params);
}

static void REGAL_CALL debug_glPixelTexGenParameterfSGIS(GLenum pname, GLfloat param)
{
  RegalContext * rCtx = GET_REGAL_CONTEXT();
  DispatchStateScopedStepDown stepDown(rCtx->dsp);
  rCtx->dsp->curr->glPixelTexGenParameterfSGIS(pname, param);
}

static void REGAL_CALL debug_glPixelTexGenParameterfvSGIS(GLenum pname, const GLfloat *params)
{
  RegalContext * rCtx = GET_REGAL_CONTEXT();
  DispatchStateScopedStepDown stepDown(rCtx->dsp);
  rCtx->dsp->curr->glPixelTexGenParameterfvSGIS(pname, params);
}

static void REGAL_CALL debug_glGetPixelTexGenParameterivSGIS(GLenum pname, GLint *params)
{
  RegalContext * rCtx = GET_REGAL_CONTEXT();
  DispatchStateScopedStepDown stepDown(rCtx->dsp);
  rCtx->dsp->curr->glGetPixelTexGenParameterivSGIS(pname, params);
}

static void REGAL_CALL debug_glGetPixelTexGenParameterfvSGIS(GLenum pname, GLfloat *params)
{
  RegalContext * rCtx = GET_REGAL_CONTEXT();
  DispatchStateScopedStepDown stepDown(rCtx->dsp);
  rCtx->dsp->curr->glGetPixelTexGenParameterfvSGIS(pname, params);
}

// GL_SGIS_texture4D

static void REGAL_CALL debug_glTexImage4DSGIS(GLenum target, GLint level, GLenum internalformat, GLsizei width, GLsizei height, GLsizei depth, GLsizei size4d, GLint border, GLenum format, GLenum type, const GLvoid *pixels)
{
  RegalContext * rCtx = GET_REGAL_CONTEXT();
  DispatchStateScopedStepDown stepDown(rCtx->dsp);
  rCtx->dsp->curr->glTexImage4DSGIS(target, level, internalformat, width, height, depth, size4d, border, format, type, pixels);
}

static void REGAL_CALL debug_glTexSubImage4DSGIS(GLenum target, GLint level, GLint xoffset, GLint yoffset, GLint zoffset, GLint woffset, GLsizei width, GLsizei height, GLsizei depth, GLsizei size4d, GLenum format, GLenum type, const GLvoid *pixels)
{
  RegalContext * rCtx = GET_REGAL_CONTEXT();
  DispatchStateScopedStepDown stepDown(rCtx->dsp);
  rCtx->dsp->curr->glTexSubImage4DSGIS(target, level, xoffset, yoffset, zoffset, woffset, width, height, depth, size4d, format, type, pixels);
}

// GL_EXT_texture_object

static GLboolean REGAL_CALL debug_glAreTexturesResidentEXT(GLsizei n, const GLuint *textures, GLboolean *residences)
{
  RegalContext * rCtx = GET_REGAL_CONTEXT();
  DispatchStateScopedStepDown stepDown(rCtx->dsp);
  GLboolean  ret = rCtx->dsp->curr->glAreTexturesResidentEXT(n, textures, residences);
  return ret;
}

static void REGAL_CALL debug_glBindTextureEXT(GLenum target, GLuint texture)
{
  RegalContext * rCtx = GET_REGAL_CONTEXT();
  DispatchStateScopedStepDown stepDown(rCtx->dsp);
  rCtx->dsp->curr->glBindTextureEXT(target, texture);
}

static void REGAL_CALL debug_glDeleteTexturesEXT(GLsizei n, const GLuint *textures)
{
  RegalContext * rCtx = GET_REGAL_CONTEXT();
  DispatchStateScopedStepDown stepDown(rCtx->dsp);
  rCtx->dsp->curr->glDeleteTexturesEXT(n, textures);
}

static void REGAL_CALL debug_glGenTexturesEXT(GLsizei n, GLuint *textures)
{
  RegalContext * rCtx = GET_REGAL_CONTEXT();
  DispatchStateScopedStepDown stepDown(rCtx->dsp);
  rCtx->dsp->curr->glGenTexturesEXT(n, textures);
}

static GLboolean REGAL_CALL debug_glIsTextureEXT(GLuint texture)
{
  RegalContext * rCtx = GET_REGAL_CONTEXT();
  DispatchStateScopedStepDown stepDown(rCtx->dsp);
  GLboolean  ret = rCtx->dsp->curr->glIsTextureEXT(texture);
  return ret;
}

static void REGAL_CALL debug_glPrioritizeTexturesEXT(GLsizei n, const GLuint *textures, const GLclampf *priorities)
{
  RegalContext * rCtx = GET_REGAL_CONTEXT();
  DispatchStateScopedStepDown stepDown(rCtx->dsp);
  rCtx->dsp->curr->glPrioritizeTexturesEXT(n, textures, priorities);
}

// GL_SGIS_detail_texture

static void REGAL_CALL debug_glDetailTexFuncSGIS(GLenum target, GLsizei n, const GLfloat *points)
{
  RegalContext * rCtx = GET_REGAL_CONTEXT();
  DispatchStateScopedStepDown stepDown(rCtx->dsp);
  rCtx->dsp->curr->glDetailTexFuncSGIS(target, n, points);
}

static void REGAL_CALL debug_glGetDetailTexFuncSGIS(GLenum target, GLfloat *points)
{
  RegalContext * rCtx = GET_REGAL_CONTEXT();
  DispatchStateScopedStepDown stepDown(rCtx->dsp);
  rCtx->dsp->curr->glGetDetailTexFuncSGIS(target, points);
}

// GL_SGIS_sharpen_texture

static void REGAL_CALL debug_glSharpenTexFuncSGIS(GLenum target, GLsizei n, const GLfloat *points)
{
  RegalContext * rCtx = GET_REGAL_CONTEXT();
  DispatchStateScopedStepDown stepDown(rCtx->dsp);
  rCtx->dsp->curr->glSharpenTexFuncSGIS(target, n, points);
}

static void REGAL_CALL debug_glGetSharpenTexFuncSGIS(GLenum target, GLfloat *points)
{
  RegalContext * rCtx = GET_REGAL_CONTEXT();
  DispatchStateScopedStepDown stepDown(rCtx->dsp);
  rCtx->dsp->curr->glGetSharpenTexFuncSGIS(target, points);
}

// GL_SGIS_multisample

static void REGAL_CALL debug_glSampleMaskSGIS(GLclampf value, GLboolean invert)
{
  RegalContext * rCtx = GET_REGAL_CONTEXT();
  DispatchStateScopedStepDown stepDown(rCtx->dsp);
  rCtx->dsp->curr->glSampleMaskSGIS(value, invert);
}

static void REGAL_CALL debug_glSamplePatternSGIS(GLenum pattern)
{
  RegalContext * rCtx = GET_REGAL_CONTEXT();
  DispatchStateScopedStepDown stepDown(rCtx->dsp);
  rCtx->dsp->curr->glSamplePatternSGIS(pattern);
}

// GL_EXT_vertex_array

static void REGAL_CALL debug_glArrayElementEXT(GLint i)
{
  RegalContext * rCtx = GET_REGAL_CONTEXT();
  DispatchStateScopedStepDown stepDown(rCtx->dsp);
  rCtx->dsp->curr->glArrayElementEXT(i);
}

static void REGAL_CALL debug_glColorPointerEXT(GLint size, GLenum type, GLsizei stride, GLsizei count, const GLvoid *pointer)
{
  RegalContext * rCtx = GET_REGAL_CONTEXT();
  DispatchStateScopedStepDown stepDown(rCtx->dsp);
  rCtx->dsp->curr->glColorPointerEXT(size, type, stride, count, pointer);
}

static void REGAL_CALL debug_glDrawArraysEXT(GLenum mode, GLint first, GLsizei count)
{
  RegalContext * rCtx = GET_REGAL_CONTEXT();
  DispatchStateScopedStepDown stepDown(rCtx->dsp);
  rCtx->dsp->curr->glDrawArraysEXT(mode, first, count);
}

static void REGAL_CALL debug_glEdgeFlagPointerEXT(GLsizei stride, GLsizei count, const GLboolean *pointer)
{
  RegalContext * rCtx = GET_REGAL_CONTEXT();
  DispatchStateScopedStepDown stepDown(rCtx->dsp);
  rCtx->dsp->curr->glEdgeFlagPointerEXT(stride, count, pointer);
}

static void REGAL_CALL debug_glGetPointervEXT(GLenum pname, GLvoid **params)
{
  RegalContext * rCtx = GET_REGAL_CONTEXT();
  DispatchStateScopedStepDown stepDown(rCtx->dsp);
  rCtx->dsp->curr->glGetPointervEXT(pname, params);
}

static void REGAL_CALL debug_glIndexPointerEXT(GLenum type, GLsizei stride, GLsizei count, const GLvoid *pointer)
{
  RegalContext * rCtx = GET_REGAL_CONTEXT();
  DispatchStateScopedStepDown stepDown(rCtx->dsp);
  rCtx->dsp->curr->glIndexPointerEXT(type, stride, count, pointer);
}

static void REGAL_CALL debug_glNormalPointerEXT(GLenum type, GLsizei stride, GLsizei count, const GLvoid *pointer)
{
  RegalContext * rCtx = GET_REGAL_CONTEXT();
  DispatchStateScopedStepDown stepDown(rCtx->dsp);
  rCtx->dsp->curr->glNormalPointerEXT(type, stride, count, pointer);
}

static void REGAL_CALL debug_glTexCoordPointerEXT(GLint size, GLenum type, GLsizei stride, GLsizei count, const GLvoid *pointer)
{
  RegalContext * rCtx = GET_REGAL_CONTEXT();
  DispatchStateScopedStepDown stepDown(rCtx->dsp);
  rCtx->dsp->curr->glTexCoordPointerEXT(size, type, stride, count, pointer);
}

static void REGAL_CALL debug_glVertexPointerEXT(GLint size, GLenum type, GLsizei stride, GLsizei count, const GLvoid *pointer)
{
  RegalContext * rCtx = GET_REGAL_CONTEXT();
  DispatchStateScopedStepDown stepDown(rCtx->dsp);
  rCtx->dsp->curr->glVertexPointerEXT(size, type, stride, count, pointer);
}

// GL_EXT_blend_minmax

static void REGAL_CALL debug_glBlendEquationEXT(GLenum mode)
{
  RegalContext * rCtx = GET_REGAL_CONTEXT();
  DispatchStateScopedStepDown stepDown(rCtx->dsp);
  rCtx->dsp->curr->glBlendEquationEXT(mode);
}

// GL_SGIX_sprite

static void REGAL_CALL debug_glSpriteParameterfSGIX(GLenum pname, GLfloat param)
{
  RegalContext * rCtx = GET_REGAL_CONTEXT();
  DispatchStateScopedStepDown stepDown(rCtx->dsp);
  rCtx->dsp->curr->glSpriteParameterfSGIX(pname, param);
}

static void REGAL_CALL debug_glSpriteParameterfvSGIX(GLenum pname, const GLfloat *params)
{
  RegalContext * rCtx = GET_REGAL_CONTEXT();
  DispatchStateScopedStepDown stepDown(rCtx->dsp);
  rCtx->dsp->curr->glSpriteParameterfvSGIX(pname, params);
}

static void REGAL_CALL debug_glSpriteParameteriSGIX(GLenum pname, GLint param)
{
  RegalContext * rCtx = GET_REGAL_CONTEXT();
  DispatchStateScopedStepDown stepDown(rCtx->dsp);
  rCtx->dsp->curr->glSpriteParameteriSGIX(pname, param);
}

static void REGAL_CALL debug_glSpriteParameterivSGIX(GLenum pname, const GLint *params)
{
  RegalContext * rCtx = GET_REGAL_CONTEXT();
  DispatchStateScopedStepDown stepDown(rCtx->dsp);
  rCtx->dsp->curr->glSpriteParameterivSGIX(pname, params);
}

// GL_EXT_point_parameters

static void REGAL_CALL debug_glPointParameterfEXT(GLenum pname, GLfloat param)
{
  RegalContext * rCtx = GET_REGAL_CONTEXT();
  DispatchStateScopedStepDown stepDown(rCtx->dsp);
  rCtx->dsp->curr->glPointParameterfEXT(pname, param);
}

static void REGAL_CALL debug_glPointParameterfvEXT(GLenum pname, const GLfloat *params)
{
  RegalContext * rCtx = GET_REGAL_CONTEXT();
  DispatchStateScopedStepDown stepDown(rCtx->dsp);
  rCtx->dsp->curr->glPointParameterfvEXT(pname, params);
}

// GL_SGIS_point_parameters

static void REGAL_CALL debug_glPointParameterfSGIS(GLenum pname, GLfloat param)
{
  RegalContext * rCtx = GET_REGAL_CONTEXT();
  DispatchStateScopedStepDown stepDown(rCtx->dsp);
  rCtx->dsp->curr->glPointParameterfSGIS(pname, param);
}

static void REGAL_CALL debug_glPointParameterfvSGIS(GLenum pname, const GLfloat *params)
{
  RegalContext * rCtx = GET_REGAL_CONTEXT();
  DispatchStateScopedStepDown stepDown(rCtx->dsp);
  rCtx->dsp->curr->glPointParameterfvSGIS(pname, params);
}

// GL_SGIX_instruments

static GLint REGAL_CALL debug_glGetInstrumentsSGIX(void)
{
  RegalContext * rCtx = GET_REGAL_CONTEXT();
  DispatchStateScopedStepDown stepDown(rCtx->dsp);
  GLint  ret = rCtx->dsp->curr->glGetInstrumentsSGIX();
  return ret;
}

static void REGAL_CALL debug_glInstrumentsBufferSGIX(GLsizei size, GLint *buffer)
{
  RegalContext * rCtx = GET_REGAL_CONTEXT();
  DispatchStateScopedStepDown stepDown(rCtx->dsp);
  rCtx->dsp->curr->glInstrumentsBufferSGIX(size, buffer);
}

static GLint REGAL_CALL debug_glPollInstrumentsSGIX(GLint *marker_p)
{
  RegalContext * rCtx = GET_REGAL_CONTEXT();
  DispatchStateScopedStepDown stepDown(rCtx->dsp);
  GLint  ret = rCtx->dsp->curr->glPollInstrumentsSGIX(marker_p);
  return ret;
}

static void REGAL_CALL debug_glReadInstrumentsSGIX(GLint marker)
{
  RegalContext * rCtx = GET_REGAL_CONTEXT();
  DispatchStateScopedStepDown stepDown(rCtx->dsp);
  rCtx->dsp->curr->glReadInstrumentsSGIX(marker);
}

static void REGAL_CALL debug_glStartInstrumentsSGIX(void)
{
  RegalContext * rCtx = GET_REGAL_CONTEXT();
  DispatchStateScopedStepDown stepDown(rCtx->dsp);
  rCtx->dsp->curr->glStartInstrumentsSGIX();
}

static void REGAL_CALL debug_glStopInstrumentsSGIX(GLint marker)
{
  RegalContext * rCtx = GET_REGAL_CONTEXT();
  DispatchStateScopedStepDown stepDown(rCtx->dsp);
  rCtx->dsp->curr->glStopInstrumentsSGIX(marker);
}

// GL_SGIX_framezoom

static void REGAL_CALL debug_glFrameZoomSGIX(GLint factor)
{
  RegalContext * rCtx = GET_REGAL_CONTEXT();
  DispatchStateScopedStepDown stepDown(rCtx->dsp);
  rCtx->dsp->curr->glFrameZoomSGIX(factor);
}

// GL_SGIX_tag_sample_buffer

static void REGAL_CALL debug_glTagSampleBufferSGIX(void)
{
  RegalContext * rCtx = GET_REGAL_CONTEXT();
  DispatchStateScopedStepDown stepDown(rCtx->dsp);
  rCtx->dsp->curr->glTagSampleBufferSGIX();
}

// GL_SGIX_polynomial_ffd

static void REGAL_CALL debug_glDeformationMap3dSGIX(GLenum target, GLdouble u1, GLdouble u2, GLint ustride, GLint uorder, GLdouble v1, GLdouble v2, GLint vstride, GLint vorder, GLdouble w1, GLdouble w2, GLint wstride, GLint worder, const GLdouble *points)
{
  RegalContext * rCtx = GET_REGAL_CONTEXT();
  DispatchStateScopedStepDown stepDown(rCtx->dsp);
  rCtx->dsp->curr->glDeformationMap3dSGIX(target, u1, u2, ustride, uorder, v1, v2, vstride, vorder, w1, w2, wstride, worder, points);
}

static void REGAL_CALL debug_glDeformationMap3fSGIX(GLenum target, GLfloat u1, GLfloat u2, GLint ustride, GLint uorder, GLfloat v1, GLfloat v2, GLint vstride, GLint vorder, GLfloat w1, GLfloat w2, GLint wstride, GLint worder, const GLfloat *points)
{
  RegalContext * rCtx = GET_REGAL_CONTEXT();
  DispatchStateScopedStepDown stepDown(rCtx->dsp);
  rCtx->dsp->curr->glDeformationMap3fSGIX(target, u1, u2, ustride, uorder, v1, v2, vstride, vorder, w1, w2, wstride, worder, points);
}

static void REGAL_CALL debug_glDeformSGIX(GLbitfield mask)
{
  RegalContext * rCtx = GET_REGAL_CONTEXT();
  DispatchStateScopedStepDown stepDown(rCtx->dsp);
  rCtx->dsp->curr->glDeformSGIX(mask);
}

static void REGAL_CALL debug_glLoadIdentityDeformationMapSGIX(GLbitfield mask)
{
  RegalContext * rCtx = GET_REGAL_CONTEXT();
  DispatchStateScopedStepDown stepDown(rCtx->dsp);
  rCtx->dsp->curr->glLoadIdentityDeformationMapSGIX(mask);
}

// GL_SGIX_reference_plane

static void REGAL_CALL debug_glReferencePlaneSGIX(const GLdouble *equation)
{
  RegalContext * rCtx = GET_REGAL_CONTEXT();
  DispatchStateScopedStepDown stepDown(rCtx->dsp);
  rCtx->dsp->curr->glReferencePlaneSGIX(equation);
}

// GL_SGIX_flush_raster

static void REGAL_CALL debug_glFlushRasterSGIX(void)
{
  RegalContext * rCtx = GET_REGAL_CONTEXT();
  DispatchStateScopedStepDown stepDown(rCtx->dsp);
  rCtx->dsp->curr->glFlushRasterSGIX();
}

// GL_SGIS_fog_function

static void REGAL_CALL debug_glFogFuncSGIS(GLsizei n, const GLfloat *points)
{
  RegalContext * rCtx = GET_REGAL_CONTEXT();
  DispatchStateScopedStepDown stepDown(rCtx->dsp);
  rCtx->dsp->curr->glFogFuncSGIS(n, points);
}

static void REGAL_CALL debug_glGetFogFuncSGIS(GLfloat *points)
{
  RegalContext * rCtx = GET_REGAL_CONTEXT();
  DispatchStateScopedStepDown stepDown(rCtx->dsp);
  rCtx->dsp->curr->glGetFogFuncSGIS(points);
}

// GL_HP_image_transform

static void REGAL_CALL debug_glImageTransformParameteriHP(GLenum target, GLenum pname, GLint param)
{
  RegalContext * rCtx = GET_REGAL_CONTEXT();
  DispatchStateScopedStepDown stepDown(rCtx->dsp);
  rCtx->dsp->curr->glImageTransformParameteriHP(target, pname, param);
}

static void REGAL_CALL debug_glImageTransformParameterfHP(GLenum target, GLenum pname, GLfloat param)
{
  RegalContext * rCtx = GET_REGAL_CONTEXT();
  DispatchStateScopedStepDown stepDown(rCtx->dsp);
  rCtx->dsp->curr->glImageTransformParameterfHP(target, pname, param);
}

static void REGAL_CALL debug_glImageTransformParameterivHP(GLenum target, GLenum pname, const GLint *params)
{
  RegalContext * rCtx = GET_REGAL_CONTEXT();
  DispatchStateScopedStepDown stepDown(rCtx->dsp);
  rCtx->dsp->curr->glImageTransformParameterivHP(target, pname, params);
}

static void REGAL_CALL debug_glImageTransformParameterfvHP(GLenum target, GLenum pname, const GLfloat *params)
{
  RegalContext * rCtx = GET_REGAL_CONTEXT();
  DispatchStateScopedStepDown stepDown(rCtx->dsp);
  rCtx->dsp->curr->glImageTransformParameterfvHP(target, pname, params);
}

static void REGAL_CALL debug_glGetImageTransformParameterivHP(GLenum target, GLenum pname, GLint *params)
{
  RegalContext * rCtx = GET_REGAL_CONTEXT();
  DispatchStateScopedStepDown stepDown(rCtx->dsp);
  rCtx->dsp->curr->glGetImageTransformParameterivHP(target, pname, params);
}

static void REGAL_CALL debug_glGetImageTransformParameterfvHP(GLenum target, GLenum pname, GLfloat *params)
{
  RegalContext * rCtx = GET_REGAL_CONTEXT();
  DispatchStateScopedStepDown stepDown(rCtx->dsp);
  rCtx->dsp->curr->glGetImageTransformParameterfvHP(target, pname, params);
}

// GL_EXT_color_subtable

static void REGAL_CALL debug_glColorSubTableEXT(GLenum target, GLsizei start, GLsizei count, GLenum format, GLenum type, const GLvoid *table)
{
  RegalContext * rCtx = GET_REGAL_CONTEXT();
  DispatchStateScopedStepDown stepDown(rCtx->dsp);
  rCtx->dsp->curr->glColorSubTableEXT(target, start, count, format, type, table);
}

static void REGAL_CALL debug_glCopyColorSubTableEXT(GLenum target, GLsizei start, GLint x, GLint y, GLsizei width)
{
  RegalContext * rCtx = GET_REGAL_CONTEXT();
  DispatchStateScopedStepDown stepDown(rCtx->dsp);
  rCtx->dsp->curr->glCopyColorSubTableEXT(target, start, x, y, width);
}

// GL_PGI_misc_hints

static void REGAL_CALL debug_glHintPGI(GLenum target, GLint mode)
{
  RegalContext * rCtx = GET_REGAL_CONTEXT();
  DispatchStateScopedStepDown stepDown(rCtx->dsp);
  rCtx->dsp->curr->glHintPGI(target, mode);
}

// GL_EXT_paletted_texture

static void REGAL_CALL debug_glColorTableEXT(GLenum target, GLenum internalFormat, GLsizei width, GLenum format, GLenum type, const GLvoid *table)
{
  RegalContext * rCtx = GET_REGAL_CONTEXT();
  DispatchStateScopedStepDown stepDown(rCtx->dsp);
  rCtx->dsp->curr->glColorTableEXT(target, internalFormat, width, format, type, table);
}

static void REGAL_CALL debug_glGetColorTableEXT(GLenum target, GLenum format, GLenum type, GLvoid *data)
{
  RegalContext * rCtx = GET_REGAL_CONTEXT();
  DispatchStateScopedStepDown stepDown(rCtx->dsp);
  rCtx->dsp->curr->glGetColorTableEXT(target, format, type, data);
}

static void REGAL_CALL debug_glGetColorTableParameterivEXT(GLenum target, GLenum pname, GLint *params)
{
  RegalContext * rCtx = GET_REGAL_CONTEXT();
  DispatchStateScopedStepDown stepDown(rCtx->dsp);
  rCtx->dsp->curr->glGetColorTableParameterivEXT(target, pname, params);
}

static void REGAL_CALL debug_glGetColorTableParameterfvEXT(GLenum target, GLenum pname, GLfloat *params)
{
  RegalContext * rCtx = GET_REGAL_CONTEXT();
  DispatchStateScopedStepDown stepDown(rCtx->dsp);
  rCtx->dsp->curr->glGetColorTableParameterfvEXT(target, pname, params);
}

// GL_SGIX_list_priority

static void REGAL_CALL debug_glGetListParameterfvSGIX(GLuint list, GLenum pname, GLfloat *params)
{
  RegalContext * rCtx = GET_REGAL_CONTEXT();
  DispatchStateScopedStepDown stepDown(rCtx->dsp);
  rCtx->dsp->curr->glGetListParameterfvSGIX(list, pname, params);
}

static void REGAL_CALL debug_glGetListParameterivSGIX(GLuint list, GLenum pname, GLint *params)
{
  RegalContext * rCtx = GET_REGAL_CONTEXT();
  DispatchStateScopedStepDown stepDown(rCtx->dsp);
  rCtx->dsp->curr->glGetListParameterivSGIX(list, pname, params);
}

static void REGAL_CALL debug_glListParameterfSGIX(GLuint list, GLenum pname, GLfloat param)
{
  RegalContext * rCtx = GET_REGAL_CONTEXT();
  DispatchStateScopedStepDown stepDown(rCtx->dsp);
  rCtx->dsp->curr->glListParameterfSGIX(list, pname, param);
}

static void REGAL_CALL debug_glListParameterfvSGIX(GLuint list, GLenum pname, const GLfloat *params)
{
  RegalContext * rCtx = GET_REGAL_CONTEXT();
  DispatchStateScopedStepDown stepDown(rCtx->dsp);
  rCtx->dsp->curr->glListParameterfvSGIX(list, pname, params);
}

static void REGAL_CALL debug_glListParameteriSGIX(GLuint list, GLenum pname, GLint param)
{
  RegalContext * rCtx = GET_REGAL_CONTEXT();
  DispatchStateScopedStepDown stepDown(rCtx->dsp);
  rCtx->dsp->curr->glListParameteriSGIX(list, pname, param);
}

static void REGAL_CALL debug_glListParameterivSGIX(GLuint list, GLenum pname, const GLint *params)
{
  RegalContext * rCtx = GET_REGAL_CONTEXT();
  DispatchStateScopedStepDown stepDown(rCtx->dsp);
  rCtx->dsp->curr->glListParameterivSGIX(list, pname, params);
}

// GL_EXT_index_material

static void REGAL_CALL debug_glIndexMaterialEXT(GLenum face, GLenum mode)
{
  RegalContext * rCtx = GET_REGAL_CONTEXT();
  DispatchStateScopedStepDown stepDown(rCtx->dsp);
  rCtx->dsp->curr->glIndexMaterialEXT(face, mode);
}

// GL_EXT_index_func

static void REGAL_CALL debug_glIndexFuncEXT(GLenum func, GLfloat ref)
{
  RegalContext * rCtx = GET_REGAL_CONTEXT();
  DispatchStateScopedStepDown stepDown(rCtx->dsp);
  rCtx->dsp->curr->glIndexFuncEXT(func, ref);
}

// GL_EXT_compiled_vertex_array

static void REGAL_CALL debug_glLockArraysEXT(GLint first, GLsizei count)
{
  RegalContext * rCtx = GET_REGAL_CONTEXT();
  DispatchStateScopedStepDown stepDown(rCtx->dsp);
  rCtx->dsp->curr->glLockArraysEXT(first, count);
}

static void REGAL_CALL debug_glUnlockArraysEXT(void)
{
  RegalContext * rCtx = GET_REGAL_CONTEXT();
  DispatchStateScopedStepDown stepDown(rCtx->dsp);
  rCtx->dsp->curr->glUnlockArraysEXT();
}

// GL_EXT_cull_vertex

static void REGAL_CALL debug_glCullParameterdvEXT(GLenum pname, GLdouble *params)
{
  RegalContext * rCtx = GET_REGAL_CONTEXT();
  DispatchStateScopedStepDown stepDown(rCtx->dsp);
  rCtx->dsp->curr->glCullParameterdvEXT(pname, params);
}

static void REGAL_CALL debug_glCullParameterfvEXT(GLenum pname, GLfloat *params)
{
  RegalContext * rCtx = GET_REGAL_CONTEXT();
  DispatchStateScopedStepDown stepDown(rCtx->dsp);
  rCtx->dsp->curr->glCullParameterfvEXT(pname, params);
}

// GL_SGIX_fragment_lighting

static void REGAL_CALL debug_glFragmentColorMaterialSGIX(GLenum face, GLenum mode)
{
  RegalContext * rCtx = GET_REGAL_CONTEXT();
  DispatchStateScopedStepDown stepDown(rCtx->dsp);
  rCtx->dsp->curr->glFragmentColorMaterialSGIX(face, mode);
}

static void REGAL_CALL debug_glFragmentLightfSGIX(GLenum light, GLenum pname, GLfloat param)
{
  RegalContext * rCtx = GET_REGAL_CONTEXT();
  DispatchStateScopedStepDown stepDown(rCtx->dsp);
  rCtx->dsp->curr->glFragmentLightfSGIX(light, pname, param);
}

static void REGAL_CALL debug_glFragmentLightfvSGIX(GLenum light, GLenum pname, const GLfloat *params)
{
  RegalContext * rCtx = GET_REGAL_CONTEXT();
  DispatchStateScopedStepDown stepDown(rCtx->dsp);
  rCtx->dsp->curr->glFragmentLightfvSGIX(light, pname, params);
}

static void REGAL_CALL debug_glFragmentLightiSGIX(GLenum light, GLenum pname, GLint param)
{
  RegalContext * rCtx = GET_REGAL_CONTEXT();
  DispatchStateScopedStepDown stepDown(rCtx->dsp);
  rCtx->dsp->curr->glFragmentLightiSGIX(light, pname, param);
}

static void REGAL_CALL debug_glFragmentLightivSGIX(GLenum light, GLenum pname, const GLint *params)
{
  RegalContext * rCtx = GET_REGAL_CONTEXT();
  DispatchStateScopedStepDown stepDown(rCtx->dsp);
  rCtx->dsp->curr->glFragmentLightivSGIX(light, pname, params);
}

static void REGAL_CALL debug_glFragmentLightModelfSGIX(GLenum pname, GLfloat param)
{
  RegalContext * rCtx = GET_REGAL_CONTEXT();
  DispatchStateScopedStepDown stepDown(rCtx->dsp);
  rCtx->dsp->curr->glFragmentLightModelfSGIX(pname, param);
}

static void REGAL_CALL debug_glFragmentLightModelfvSGIX(GLenum pname, const GLfloat *params)
{
  RegalContext * rCtx = GET_REGAL_CONTEXT();
  DispatchStateScopedStepDown stepDown(rCtx->dsp);
  rCtx->dsp->curr->glFragmentLightModelfvSGIX(pname, params);
}

static void REGAL_CALL debug_glFragmentLightModeliSGIX(GLenum pname, GLint param)
{
  RegalContext * rCtx = GET_REGAL_CONTEXT();
  DispatchStateScopedStepDown stepDown(rCtx->dsp);
  rCtx->dsp->curr->glFragmentLightModeliSGIX(pname, param);
}

static void REGAL_CALL debug_glFragmentLightModelivSGIX(GLenum pname, const GLint *params)
{
  RegalContext * rCtx = GET_REGAL_CONTEXT();
  DispatchStateScopedStepDown stepDown(rCtx->dsp);
  rCtx->dsp->curr->glFragmentLightModelivSGIX(pname, params);
}

static void REGAL_CALL debug_glFragmentMaterialfSGIX(GLenum face, GLenum pname, GLfloat param)
{
  RegalContext * rCtx = GET_REGAL_CONTEXT();
  DispatchStateScopedStepDown stepDown(rCtx->dsp);
  rCtx->dsp->curr->glFragmentMaterialfSGIX(face, pname, param);
}

static void REGAL_CALL debug_glFragmentMaterialfvSGIX(GLenum face, GLenum pname, const GLfloat *params)
{
  RegalContext * rCtx = GET_REGAL_CONTEXT();
  DispatchStateScopedStepDown stepDown(rCtx->dsp);
  rCtx->dsp->curr->glFragmentMaterialfvSGIX(face, pname, params);
}

static void REGAL_CALL debug_glFragmentMaterialiSGIX(GLenum face, GLenum pname, GLint param)
{
  RegalContext * rCtx = GET_REGAL_CONTEXT();
  DispatchStateScopedStepDown stepDown(rCtx->dsp);
  rCtx->dsp->curr->glFragmentMaterialiSGIX(face, pname, param);
}

static void REGAL_CALL debug_glFragmentMaterialivSGIX(GLenum face, GLenum pname, const GLint *params)
{
  RegalContext * rCtx = GET_REGAL_CONTEXT();
  DispatchStateScopedStepDown stepDown(rCtx->dsp);
  rCtx->dsp->curr->glFragmentMaterialivSGIX(face, pname, params);
}

static void REGAL_CALL debug_glGetFragmentLightfvSGIX(GLenum light, GLenum pname, GLfloat *params)
{
  RegalContext * rCtx = GET_REGAL_CONTEXT();
  DispatchStateScopedStepDown stepDown(rCtx->dsp);
  rCtx->dsp->curr->glGetFragmentLightfvSGIX(light, pname, params);
}

static void REGAL_CALL debug_glGetFragmentLightivSGIX(GLenum light, GLenum pname, GLint *params)
{
  RegalContext * rCtx = GET_REGAL_CONTEXT();
  DispatchStateScopedStepDown stepDown(rCtx->dsp);
  rCtx->dsp->curr->glGetFragmentLightivSGIX(light, pname, params);
}

static void REGAL_CALL debug_glGetFragmentMaterialfvSGIX(GLenum face, GLenum pname, GLfloat *params)
{
  RegalContext * rCtx = GET_REGAL_CONTEXT();
  DispatchStateScopedStepDown stepDown(rCtx->dsp);
  rCtx->dsp->curr->glGetFragmentMaterialfvSGIX(face, pname, params);
}

static void REGAL_CALL debug_glGetFragmentMaterialivSGIX(GLenum face, GLenum pname, GLint *params)
{
  RegalContext * rCtx = GET_REGAL_CONTEXT();
  DispatchStateScopedStepDown stepDown(rCtx->dsp);
  rCtx->dsp->curr->glGetFragmentMaterialivSGIX(face, pname, params);
}

static void REGAL_CALL debug_glLightEnviSGIX(GLenum pname, GLint param)
{
  RegalContext * rCtx = GET_REGAL_CONTEXT();
  DispatchStateScopedStepDown stepDown(rCtx->dsp);
  rCtx->dsp->curr->glLightEnviSGIX(pname, param);
}

// GL_EXT_draw_range_elements

static void REGAL_CALL debug_glDrawRangeElementsEXT(GLenum mode, GLuint start, GLuint end, GLsizei count, GLenum type, const GLvoid *indices)
{
  RegalContext * rCtx = GET_REGAL_CONTEXT();
  DispatchStateScopedStepDown stepDown(rCtx->dsp);
  rCtx->dsp->curr->glDrawRangeElementsEXT(mode, start, end, count, type, indices);
}

// GL_EXT_light_texture

static void REGAL_CALL debug_glApplyTextureEXT(GLenum mode)
{
  RegalContext * rCtx = GET_REGAL_CONTEXT();
  DispatchStateScopedStepDown stepDown(rCtx->dsp);
  rCtx->dsp->curr->glApplyTextureEXT(mode);
}

static void REGAL_CALL debug_glTextureLightEXT(GLenum pname)
{
  RegalContext * rCtx = GET_REGAL_CONTEXT();
  DispatchStateScopedStepDown stepDown(rCtx->dsp);
  rCtx->dsp->curr->glTextureLightEXT(pname);
}

static void REGAL_CALL debug_glTextureMaterialEXT(GLenum face, GLenum mode)
{
  RegalContext * rCtx = GET_REGAL_CONTEXT();
  DispatchStateScopedStepDown stepDown(rCtx->dsp);
  rCtx->dsp->curr->glTextureMaterialEXT(face, mode);
}

// GL_EXT_scene_marker

static void REGAL_CALL debug_glBeginSceneEXT(void)
{
  RegalContext * rCtx = GET_REGAL_CONTEXT();
  DispatchStateScopedStepDown stepDown(rCtx->dsp);
  rCtx->dsp->curr->glBeginSceneEXT();
}

static void REGAL_CALL debug_glEndSceneEXT(void)
{
  RegalContext * rCtx = GET_REGAL_CONTEXT();
  DispatchStateScopedStepDown stepDown(rCtx->dsp);
  rCtx->dsp->curr->glEndSceneEXT();
}

// GL_SGIX_async

static void REGAL_CALL debug_glAsyncMarkerSGIX(GLuint marker)
{
  RegalContext * rCtx = GET_REGAL_CONTEXT();
  DispatchStateScopedStepDown stepDown(rCtx->dsp);
  rCtx->dsp->curr->glAsyncMarkerSGIX(marker);
}

static GLint REGAL_CALL debug_glFinishAsyncSGIX(GLuint *markerp)
{
  RegalContext * rCtx = GET_REGAL_CONTEXT();
  DispatchStateScopedStepDown stepDown(rCtx->dsp);
  GLint  ret = rCtx->dsp->curr->glFinishAsyncSGIX(markerp);
  return ret;
}

static GLint REGAL_CALL debug_glPollAsyncSGIX(GLuint *markerp)
{
  RegalContext * rCtx = GET_REGAL_CONTEXT();
  DispatchStateScopedStepDown stepDown(rCtx->dsp);
  GLint  ret = rCtx->dsp->curr->glPollAsyncSGIX(markerp);
  return ret;
}

static GLuint REGAL_CALL debug_glGenAsyncMarkersSGIX(GLsizei range)
{
  RegalContext * rCtx = GET_REGAL_CONTEXT();
  DispatchStateScopedStepDown stepDown(rCtx->dsp);
  GLuint  ret = rCtx->dsp->curr->glGenAsyncMarkersSGIX(range);
  return ret;
}

static void REGAL_CALL debug_glDeleteAsyncMarkersSGIX(GLuint marker, GLsizei range)
{
  RegalContext * rCtx = GET_REGAL_CONTEXT();
  DispatchStateScopedStepDown stepDown(rCtx->dsp);
  rCtx->dsp->curr->glDeleteAsyncMarkersSGIX(marker, range);
}

static GLboolean REGAL_CALL debug_glIsAsyncMarkerSGIX(GLuint marker)
{
  RegalContext * rCtx = GET_REGAL_CONTEXT();
  DispatchStateScopedStepDown stepDown(rCtx->dsp);
  GLboolean  ret = rCtx->dsp->curr->glIsAsyncMarkerSGIX(marker);
  return ret;
}

// GL_INTEL_parallel_arrays

static void REGAL_CALL debug_glVertexPointervINTEL(GLint size, GLenum type, const GLvoid **pointer)
{
  RegalContext * rCtx = GET_REGAL_CONTEXT();
  DispatchStateScopedStepDown stepDown(rCtx->dsp);
  rCtx->dsp->curr->glVertexPointervINTEL(size, type, pointer);
}

static void REGAL_CALL debug_glNormalPointervINTEL(GLenum type, const GLvoid **pointer)
{
  RegalContext * rCtx = GET_REGAL_CONTEXT();
  DispatchStateScopedStepDown stepDown(rCtx->dsp);
  rCtx->dsp->curr->glNormalPointervINTEL(type, pointer);
}

static void REGAL_CALL debug_glColorPointervINTEL(GLint size, GLenum type, const GLvoid **pointer)
{
  RegalContext * rCtx = GET_REGAL_CONTEXT();
  DispatchStateScopedStepDown stepDown(rCtx->dsp);
  rCtx->dsp->curr->glColorPointervINTEL(size, type, pointer);
}

static void REGAL_CALL debug_glTexCoordPointervINTEL(GLint size, GLenum type, const GLvoid **pointer)
{
  RegalContext * rCtx = GET_REGAL_CONTEXT();
  DispatchStateScopedStepDown stepDown(rCtx->dsp);
  rCtx->dsp->curr->glTexCoordPointervINTEL(size, type, pointer);
}

// GL_EXT_pixel_transform

static void REGAL_CALL debug_glPixelTransformParameteriEXT(GLenum target, GLenum pname, const GLint param)
{
  RegalContext * rCtx = GET_REGAL_CONTEXT();
  DispatchStateScopedStepDown stepDown(rCtx->dsp);
  rCtx->dsp->curr->glPixelTransformParameteriEXT(target, pname, param);
}

static void REGAL_CALL debug_glPixelTransformParameterfEXT(GLenum target, GLenum pname, const GLfloat param)
{
  RegalContext * rCtx = GET_REGAL_CONTEXT();
  DispatchStateScopedStepDown stepDown(rCtx->dsp);
  rCtx->dsp->curr->glPixelTransformParameterfEXT(target, pname, param);
}

static void REGAL_CALL debug_glPixelTransformParameterivEXT(GLenum target, GLenum pname, const GLint *params)
{
  RegalContext * rCtx = GET_REGAL_CONTEXT();
  DispatchStateScopedStepDown stepDown(rCtx->dsp);
  rCtx->dsp->curr->glPixelTransformParameterivEXT(target, pname, params);
}

static void REGAL_CALL debug_glPixelTransformParameterfvEXT(GLenum target, GLenum pname, const GLfloat *params)
{
  RegalContext * rCtx = GET_REGAL_CONTEXT();
  DispatchStateScopedStepDown stepDown(rCtx->dsp);
  rCtx->dsp->curr->glPixelTransformParameterfvEXT(target, pname, params);
}

// GL_EXT_secondary_color

static void REGAL_CALL debug_glSecondaryColor3bEXT(GLbyte red, GLbyte green, GLbyte blue)
{
  RegalContext * rCtx = GET_REGAL_CONTEXT();
  DispatchStateScopedStepDown stepDown(rCtx->dsp);
  rCtx->dsp->curr->glSecondaryColor3bEXT(red, green, blue);
}

static void REGAL_CALL debug_glSecondaryColor3bvEXT(const GLbyte *v)
{
  RegalContext * rCtx = GET_REGAL_CONTEXT();
  DispatchStateScopedStepDown stepDown(rCtx->dsp);
  rCtx->dsp->curr->glSecondaryColor3bvEXT(v);
}

static void REGAL_CALL debug_glSecondaryColor3dEXT(GLdouble red, GLdouble green, GLdouble blue)
{
  RegalContext * rCtx = GET_REGAL_CONTEXT();
  DispatchStateScopedStepDown stepDown(rCtx->dsp);
  rCtx->dsp->curr->glSecondaryColor3dEXT(red, green, blue);
}

static void REGAL_CALL debug_glSecondaryColor3dvEXT(const GLdouble *v)
{
  RegalContext * rCtx = GET_REGAL_CONTEXT();
  DispatchStateScopedStepDown stepDown(rCtx->dsp);
  rCtx->dsp->curr->glSecondaryColor3dvEXT(v);
}

static void REGAL_CALL debug_glSecondaryColor3fEXT(GLfloat red, GLfloat green, GLfloat blue)
{
  RegalContext * rCtx = GET_REGAL_CONTEXT();
  DispatchStateScopedStepDown stepDown(rCtx->dsp);
  rCtx->dsp->curr->glSecondaryColor3fEXT(red, green, blue);
}

static void REGAL_CALL debug_glSecondaryColor3fvEXT(const GLfloat *v)
{
  RegalContext * rCtx = GET_REGAL_CONTEXT();
  DispatchStateScopedStepDown stepDown(rCtx->dsp);
  rCtx->dsp->curr->glSecondaryColor3fvEXT(v);
}

static void REGAL_CALL debug_glSecondaryColor3iEXT(GLint red, GLint green, GLint blue)
{
  RegalContext * rCtx = GET_REGAL_CONTEXT();
  DispatchStateScopedStepDown stepDown(rCtx->dsp);
  rCtx->dsp->curr->glSecondaryColor3iEXT(red, green, blue);
}

static void REGAL_CALL debug_glSecondaryColor3ivEXT(const GLint *v)
{
  RegalContext * rCtx = GET_REGAL_CONTEXT();
  DispatchStateScopedStepDown stepDown(rCtx->dsp);
  rCtx->dsp->curr->glSecondaryColor3ivEXT(v);
}

static void REGAL_CALL debug_glSecondaryColor3sEXT(GLshort red, GLshort green, GLshort blue)
{
  RegalContext * rCtx = GET_REGAL_CONTEXT();
  DispatchStateScopedStepDown stepDown(rCtx->dsp);
  rCtx->dsp->curr->glSecondaryColor3sEXT(red, green, blue);
}

static void REGAL_CALL debug_glSecondaryColor3svEXT(const GLshort *v)
{
  RegalContext * rCtx = GET_REGAL_CONTEXT();
  DispatchStateScopedStepDown stepDown(rCtx->dsp);
  rCtx->dsp->curr->glSecondaryColor3svEXT(v);
}

static void REGAL_CALL debug_glSecondaryColor3ubEXT(GLubyte red, GLubyte green, GLubyte blue)
{
  RegalContext * rCtx = GET_REGAL_CONTEXT();
  DispatchStateScopedStepDown stepDown(rCtx->dsp);
  rCtx->dsp->curr->glSecondaryColor3ubEXT(red, green, blue);
}

static void REGAL_CALL debug_glSecondaryColor3ubvEXT(const GLubyte *v)
{
  RegalContext * rCtx = GET_REGAL_CONTEXT();
  DispatchStateScopedStepDown stepDown(rCtx->dsp);
  rCtx->dsp->curr->glSecondaryColor3ubvEXT(v);
}

static void REGAL_CALL debug_glSecondaryColor3uiEXT(GLuint red, GLuint green, GLuint blue)
{
  RegalContext * rCtx = GET_REGAL_CONTEXT();
  DispatchStateScopedStepDown stepDown(rCtx->dsp);
  rCtx->dsp->curr->glSecondaryColor3uiEXT(red, green, blue);
}

static void REGAL_CALL debug_glSecondaryColor3uivEXT(const GLuint *v)
{
  RegalContext * rCtx = GET_REGAL_CONTEXT();
  DispatchStateScopedStepDown stepDown(rCtx->dsp);
  rCtx->dsp->curr->glSecondaryColor3uivEXT(v);
}

static void REGAL_CALL debug_glSecondaryColor3usEXT(GLushort red, GLushort green, GLushort blue)
{
  RegalContext * rCtx = GET_REGAL_CONTEXT();
  DispatchStateScopedStepDown stepDown(rCtx->dsp);
  rCtx->dsp->curr->glSecondaryColor3usEXT(red, green, blue);
}

static void REGAL_CALL debug_glSecondaryColor3usvEXT(const GLushort *v)
{
  RegalContext * rCtx = GET_REGAL_CONTEXT();
  DispatchStateScopedStepDown stepDown(rCtx->dsp);
  rCtx->dsp->curr->glSecondaryColor3usvEXT(v);
}

static void REGAL_CALL debug_glSecondaryColorPointerEXT(GLint size, GLenum type, GLsizei stride, const GLvoid *pointer)
{
  RegalContext * rCtx = GET_REGAL_CONTEXT();
  DispatchStateScopedStepDown stepDown(rCtx->dsp);
  rCtx->dsp->curr->glSecondaryColorPointerEXT(size, type, stride, pointer);
}

// GL_EXT_texture_perturb_normal

static void REGAL_CALL debug_glTextureNormalEXT(GLenum mode)
{
  RegalContext * rCtx = GET_REGAL_CONTEXT();
  DispatchStateScopedStepDown stepDown(rCtx->dsp);
  rCtx->dsp->curr->glTextureNormalEXT(mode);
}

// GL_EXT_multi_draw_arrays

static void REGAL_CALL debug_glMultiDrawArraysEXT(GLenum mode, const GLint *first, const GLsizei *count, GLsizei primcount)
{
  RegalContext * rCtx = GET_REGAL_CONTEXT();
  DispatchStateScopedStepDown stepDown(rCtx->dsp);
  rCtx->dsp->curr->glMultiDrawArraysEXT(mode, first, count, primcount);
}

static void REGAL_CALL debug_glMultiDrawElementsEXT(GLenum mode, GLsizei *count, GLenum type, const GLvoid **indices, GLsizei primcount)
{
  RegalContext * rCtx = GET_REGAL_CONTEXT();
  DispatchStateScopedStepDown stepDown(rCtx->dsp);
  rCtx->dsp->curr->glMultiDrawElementsEXT(mode, count, type, indices, primcount);
}

// GL_EXT_fog_coord

static void REGAL_CALL debug_glFogCoordfEXT(GLfloat coord)
{
  RegalContext * rCtx = GET_REGAL_CONTEXT();
  DispatchStateScopedStepDown stepDown(rCtx->dsp);
  rCtx->dsp->curr->glFogCoordfEXT(coord);
}

static void REGAL_CALL debug_glFogCoordfvEXT(const GLfloat *coord)
{
  RegalContext * rCtx = GET_REGAL_CONTEXT();
  DispatchStateScopedStepDown stepDown(rCtx->dsp);
  rCtx->dsp->curr->glFogCoordfvEXT(coord);
}

static void REGAL_CALL debug_glFogCoorddEXT(GLdouble coord)
{
  RegalContext * rCtx = GET_REGAL_CONTEXT();
  DispatchStateScopedStepDown stepDown(rCtx->dsp);
  rCtx->dsp->curr->glFogCoorddEXT(coord);
}

static void REGAL_CALL debug_glFogCoorddvEXT(const GLdouble *coord)
{
  RegalContext * rCtx = GET_REGAL_CONTEXT();
  DispatchStateScopedStepDown stepDown(rCtx->dsp);
  rCtx->dsp->curr->glFogCoorddvEXT(coord);
}

static void REGAL_CALL debug_glFogCoordPointerEXT(GLenum type, GLsizei stride, const GLvoid *pointer)
{
  RegalContext * rCtx = GET_REGAL_CONTEXT();
  DispatchStateScopedStepDown stepDown(rCtx->dsp);
  rCtx->dsp->curr->glFogCoordPointerEXT(type, stride, pointer);
}

// GL_EXT_coordinate_frame

static void REGAL_CALL debug_glTangent3bEXT(GLbyte tx, GLbyte ty, GLbyte tz)
{
  RegalContext * rCtx = GET_REGAL_CONTEXT();
  DispatchStateScopedStepDown stepDown(rCtx->dsp);
  rCtx->dsp->curr->glTangent3bEXT(tx, ty, tz);
}

static void REGAL_CALL debug_glTangent3bvEXT(const GLbyte *v)
{
  RegalContext * rCtx = GET_REGAL_CONTEXT();
  DispatchStateScopedStepDown stepDown(rCtx->dsp);
  rCtx->dsp->curr->glTangent3bvEXT(v);
}

static void REGAL_CALL debug_glTangent3dEXT(GLdouble tx, GLdouble ty, GLdouble tz)
{
  RegalContext * rCtx = GET_REGAL_CONTEXT();
  DispatchStateScopedStepDown stepDown(rCtx->dsp);
  rCtx->dsp->curr->glTangent3dEXT(tx, ty, tz);
}

static void REGAL_CALL debug_glTangent3dvEXT(const GLdouble *v)
{
  RegalContext * rCtx = GET_REGAL_CONTEXT();
  DispatchStateScopedStepDown stepDown(rCtx->dsp);
  rCtx->dsp->curr->glTangent3dvEXT(v);
}

static void REGAL_CALL debug_glTangent3fEXT(GLfloat tx, GLfloat ty, GLfloat tz)
{
  RegalContext * rCtx = GET_REGAL_CONTEXT();
  DispatchStateScopedStepDown stepDown(rCtx->dsp);
  rCtx->dsp->curr->glTangent3fEXT(tx, ty, tz);
}

static void REGAL_CALL debug_glTangent3fvEXT(const GLfloat *v)
{
  RegalContext * rCtx = GET_REGAL_CONTEXT();
  DispatchStateScopedStepDown stepDown(rCtx->dsp);
  rCtx->dsp->curr->glTangent3fvEXT(v);
}

static void REGAL_CALL debug_glTangent3iEXT(GLint tx, GLint ty, GLint tz)
{
  RegalContext * rCtx = GET_REGAL_CONTEXT();
  DispatchStateScopedStepDown stepDown(rCtx->dsp);
  rCtx->dsp->curr->glTangent3iEXT(tx, ty, tz);
}

static void REGAL_CALL debug_glTangent3ivEXT(const GLint *v)
{
  RegalContext * rCtx = GET_REGAL_CONTEXT();
  DispatchStateScopedStepDown stepDown(rCtx->dsp);
  rCtx->dsp->curr->glTangent3ivEXT(v);
}

static void REGAL_CALL debug_glTangent3sEXT(GLshort tx, GLshort ty, GLshort tz)
{
  RegalContext * rCtx = GET_REGAL_CONTEXT();
  DispatchStateScopedStepDown stepDown(rCtx->dsp);
  rCtx->dsp->curr->glTangent3sEXT(tx, ty, tz);
}

static void REGAL_CALL debug_glTangent3svEXT(const GLshort *v)
{
  RegalContext * rCtx = GET_REGAL_CONTEXT();
  DispatchStateScopedStepDown stepDown(rCtx->dsp);
  rCtx->dsp->curr->glTangent3svEXT(v);
}

static void REGAL_CALL debug_glBinormal3bEXT(GLbyte bx, GLbyte by, GLbyte bz)
{
  RegalContext * rCtx = GET_REGAL_CONTEXT();
  DispatchStateScopedStepDown stepDown(rCtx->dsp);
  rCtx->dsp->curr->glBinormal3bEXT(bx, by, bz);
}

static void REGAL_CALL debug_glBinormal3bvEXT(const GLbyte *v)
{
  RegalContext * rCtx = GET_REGAL_CONTEXT();
  DispatchStateScopedStepDown stepDown(rCtx->dsp);
  rCtx->dsp->curr->glBinormal3bvEXT(v);
}

static void REGAL_CALL debug_glBinormal3dEXT(GLdouble bx, GLdouble by, GLdouble bz)
{
  RegalContext * rCtx = GET_REGAL_CONTEXT();
  DispatchStateScopedStepDown stepDown(rCtx->dsp);
  rCtx->dsp->curr->glBinormal3dEXT(bx, by, bz);
}

static void REGAL_CALL debug_glBinormal3dvEXT(const GLdouble *v)
{
  RegalContext * rCtx = GET_REGAL_CONTEXT();
  DispatchStateScopedStepDown stepDown(rCtx->dsp);
  rCtx->dsp->curr->glBinormal3dvEXT(v);
}

static void REGAL_CALL debug_glBinormal3fEXT(GLfloat bx, GLfloat by, GLfloat bz)
{
  RegalContext * rCtx = GET_REGAL_CONTEXT();
  DispatchStateScopedStepDown stepDown(rCtx->dsp);
  rCtx->dsp->curr->glBinormal3fEXT(bx, by, bz);
}

static void REGAL_CALL debug_glBinormal3fvEXT(const GLfloat *v)
{
  RegalContext * rCtx = GET_REGAL_CONTEXT();
  DispatchStateScopedStepDown stepDown(rCtx->dsp);
  rCtx->dsp->curr->glBinormal3fvEXT(v);
}

static void REGAL_CALL debug_glBinormal3iEXT(GLint bx, GLint by, GLint bz)
{
  RegalContext * rCtx = GET_REGAL_CONTEXT();
  DispatchStateScopedStepDown stepDown(rCtx->dsp);
  rCtx->dsp->curr->glBinormal3iEXT(bx, by, bz);
}

static void REGAL_CALL debug_glBinormal3ivEXT(const GLint *v)
{
  RegalContext * rCtx = GET_REGAL_CONTEXT();
  DispatchStateScopedStepDown stepDown(rCtx->dsp);
  rCtx->dsp->curr->glBinormal3ivEXT(v);
}

static void REGAL_CALL debug_glBinormal3sEXT(GLshort bx, GLshort by, GLshort bz)
{
  RegalContext * rCtx = GET_REGAL_CONTEXT();
  DispatchStateScopedStepDown stepDown(rCtx->dsp);
  rCtx->dsp->curr->glBinormal3sEXT(bx, by, bz);
}

static void REGAL_CALL debug_glBinormal3svEXT(const GLshort *v)
{
  RegalContext * rCtx = GET_REGAL_CONTEXT();
  DispatchStateScopedStepDown stepDown(rCtx->dsp);
  rCtx->dsp->curr->glBinormal3svEXT(v);
}

static void REGAL_CALL debug_glTangentPointerEXT(GLenum type, GLsizei stride, const GLvoid *pointer)
{
  RegalContext * rCtx = GET_REGAL_CONTEXT();
  DispatchStateScopedStepDown stepDown(rCtx->dsp);
  rCtx->dsp->curr->glTangentPointerEXT(type, stride, pointer);
}

static void REGAL_CALL debug_glBinormalPointerEXT(GLenum type, GLsizei stride, const GLvoid *pointer)
{
  RegalContext * rCtx = GET_REGAL_CONTEXT();
  DispatchStateScopedStepDown stepDown(rCtx->dsp);
  rCtx->dsp->curr->glBinormalPointerEXT(type, stride, pointer);
}

// GL_SUNX_constant_data

static void REGAL_CALL debug_glFinishTextureSUNX(void)
{
  RegalContext * rCtx = GET_REGAL_CONTEXT();
  DispatchStateScopedStepDown stepDown(rCtx->dsp);
  rCtx->dsp->curr->glFinishTextureSUNX();
}

// GL_SUN_global_alpha

static void REGAL_CALL debug_glGlobalAlphaFactorbSUN(GLbyte factor)
{
  RegalContext * rCtx = GET_REGAL_CONTEXT();
  DispatchStateScopedStepDown stepDown(rCtx->dsp);
  rCtx->dsp->curr->glGlobalAlphaFactorbSUN(factor);
}

static void REGAL_CALL debug_glGlobalAlphaFactorsSUN(GLshort factor)
{
  RegalContext * rCtx = GET_REGAL_CONTEXT();
  DispatchStateScopedStepDown stepDown(rCtx->dsp);
  rCtx->dsp->curr->glGlobalAlphaFactorsSUN(factor);
}

static void REGAL_CALL debug_glGlobalAlphaFactoriSUN(GLint factor)
{
  RegalContext * rCtx = GET_REGAL_CONTEXT();
  DispatchStateScopedStepDown stepDown(rCtx->dsp);
  rCtx->dsp->curr->glGlobalAlphaFactoriSUN(factor);
}

static void REGAL_CALL debug_glGlobalAlphaFactorfSUN(GLfloat factor)
{
  RegalContext * rCtx = GET_REGAL_CONTEXT();
  DispatchStateScopedStepDown stepDown(rCtx->dsp);
  rCtx->dsp->curr->glGlobalAlphaFactorfSUN(factor);
}

static void REGAL_CALL debug_glGlobalAlphaFactordSUN(GLdouble factor)
{
  RegalContext * rCtx = GET_REGAL_CONTEXT();
  DispatchStateScopedStepDown stepDown(rCtx->dsp);
  rCtx->dsp->curr->glGlobalAlphaFactordSUN(factor);
}

static void REGAL_CALL debug_glGlobalAlphaFactorubSUN(GLubyte factor)
{
  RegalContext * rCtx = GET_REGAL_CONTEXT();
  DispatchStateScopedStepDown stepDown(rCtx->dsp);
  rCtx->dsp->curr->glGlobalAlphaFactorubSUN(factor);
}

static void REGAL_CALL debug_glGlobalAlphaFactorusSUN(GLushort factor)
{
  RegalContext * rCtx = GET_REGAL_CONTEXT();
  DispatchStateScopedStepDown stepDown(rCtx->dsp);
  rCtx->dsp->curr->glGlobalAlphaFactorusSUN(factor);
}

static void REGAL_CALL debug_glGlobalAlphaFactoruiSUN(GLuint factor)
{
  RegalContext * rCtx = GET_REGAL_CONTEXT();
  DispatchStateScopedStepDown stepDown(rCtx->dsp);
  rCtx->dsp->curr->glGlobalAlphaFactoruiSUN(factor);
}

// GL_SUN_triangle_list

static void REGAL_CALL debug_glReplacementCodeuiSUN(GLuint code)
{
  RegalContext * rCtx = GET_REGAL_CONTEXT();
  DispatchStateScopedStepDown stepDown(rCtx->dsp);
  rCtx->dsp->curr->glReplacementCodeuiSUN(code);
}

static void REGAL_CALL debug_glReplacementCodeusSUN(GLushort code)
{
  RegalContext * rCtx = GET_REGAL_CONTEXT();
  DispatchStateScopedStepDown stepDown(rCtx->dsp);
  rCtx->dsp->curr->glReplacementCodeusSUN(code);
}

static void REGAL_CALL debug_glReplacementCodeubSUN(GLubyte code)
{
  RegalContext * rCtx = GET_REGAL_CONTEXT();
  DispatchStateScopedStepDown stepDown(rCtx->dsp);
  rCtx->dsp->curr->glReplacementCodeubSUN(code);
}

static void REGAL_CALL debug_glReplacementCodeuivSUN(const GLuint *code)
{
  RegalContext * rCtx = GET_REGAL_CONTEXT();
  DispatchStateScopedStepDown stepDown(rCtx->dsp);
  rCtx->dsp->curr->glReplacementCodeuivSUN(code);
}

static void REGAL_CALL debug_glReplacementCodeusvSUN(const GLushort *code)
{
  RegalContext * rCtx = GET_REGAL_CONTEXT();
  DispatchStateScopedStepDown stepDown(rCtx->dsp);
  rCtx->dsp->curr->glReplacementCodeusvSUN(code);
}

static void REGAL_CALL debug_glReplacementCodeubvSUN(const GLubyte *code)
{
  RegalContext * rCtx = GET_REGAL_CONTEXT();
  DispatchStateScopedStepDown stepDown(rCtx->dsp);
  rCtx->dsp->curr->glReplacementCodeubvSUN(code);
}

static void REGAL_CALL debug_glReplacementCodePointerSUN(GLenum type, GLsizei stride, const GLvoid **pointer)
{
  RegalContext * rCtx = GET_REGAL_CONTEXT();
  DispatchStateScopedStepDown stepDown(rCtx->dsp);
  rCtx->dsp->curr->glReplacementCodePointerSUN(type, stride, pointer);
}

// GL_SUN_vertex

static void REGAL_CALL debug_glColor4ubVertex2fSUN(GLubyte r, GLubyte g, GLubyte b, GLubyte a, GLfloat x, GLfloat y)
{
  RegalContext * rCtx = GET_REGAL_CONTEXT();
  DispatchStateScopedStepDown stepDown(rCtx->dsp);
  rCtx->dsp->curr->glColor4ubVertex2fSUN(r, g, b, a, x, y);
}

static void REGAL_CALL debug_glColor4ubVertex2fvSUN(const GLubyte *c, const GLfloat *v)
{
  RegalContext * rCtx = GET_REGAL_CONTEXT();
  DispatchStateScopedStepDown stepDown(rCtx->dsp);
  rCtx->dsp->curr->glColor4ubVertex2fvSUN(c, v);
}

static void REGAL_CALL debug_glColor4ubVertex3fSUN(GLubyte r, GLubyte g, GLubyte b, GLubyte a, GLfloat x, GLfloat y, GLfloat z)
{
  RegalContext * rCtx = GET_REGAL_CONTEXT();
  DispatchStateScopedStepDown stepDown(rCtx->dsp);
  rCtx->dsp->curr->glColor4ubVertex3fSUN(r, g, b, a, x, y, z);
}

static void REGAL_CALL debug_glColor4ubVertex3fvSUN(const GLubyte *c, const GLfloat *v)
{
  RegalContext * rCtx = GET_REGAL_CONTEXT();
  DispatchStateScopedStepDown stepDown(rCtx->dsp);
  rCtx->dsp->curr->glColor4ubVertex3fvSUN(c, v);
}

static void REGAL_CALL debug_glColor3fVertex3fSUN(GLfloat r, GLfloat g, GLfloat b, GLfloat x, GLfloat y, GLfloat z)
{
  RegalContext * rCtx = GET_REGAL_CONTEXT();
  DispatchStateScopedStepDown stepDown(rCtx->dsp);
  rCtx->dsp->curr->glColor3fVertex3fSUN(r, g, b, x, y, z);
}

static void REGAL_CALL debug_glColor3fVertex3fvSUN(const GLfloat *c, const GLfloat *v)
{
  RegalContext * rCtx = GET_REGAL_CONTEXT();
  DispatchStateScopedStepDown stepDown(rCtx->dsp);
  rCtx->dsp->curr->glColor3fVertex3fvSUN(c, v);
}

static void REGAL_CALL debug_glNormal3fVertex3fSUN(GLfloat nx, GLfloat ny, GLfloat nz, GLfloat x, GLfloat y, GLfloat z)
{
  RegalContext * rCtx = GET_REGAL_CONTEXT();
  DispatchStateScopedStepDown stepDown(rCtx->dsp);
  rCtx->dsp->curr->glNormal3fVertex3fSUN(nx, ny, nz, x, y, z);
}

static void REGAL_CALL debug_glNormal3fVertex3fvSUN(const GLfloat *n, const GLfloat *v)
{
  RegalContext * rCtx = GET_REGAL_CONTEXT();
  DispatchStateScopedStepDown stepDown(rCtx->dsp);
  rCtx->dsp->curr->glNormal3fVertex3fvSUN(n, v);
}

static void REGAL_CALL debug_glColor4fNormal3fVertex3fSUN(GLfloat r, GLfloat g, GLfloat b, GLfloat a, GLfloat nx, GLfloat ny, GLfloat nz, GLfloat x, GLfloat y, GLfloat z)
{
  RegalContext * rCtx = GET_REGAL_CONTEXT();
  DispatchStateScopedStepDown stepDown(rCtx->dsp);
  rCtx->dsp->curr->glColor4fNormal3fVertex3fSUN(r, g, b, a, nx, ny, nz, x, y, z);
}

static void REGAL_CALL debug_glColor4fNormal3fVertex3fvSUN(const GLfloat *c, const GLfloat *n, const GLfloat *v)
{
  RegalContext * rCtx = GET_REGAL_CONTEXT();
  DispatchStateScopedStepDown stepDown(rCtx->dsp);
  rCtx->dsp->curr->glColor4fNormal3fVertex3fvSUN(c, n, v);
}

static void REGAL_CALL debug_glTexCoord2fVertex3fSUN(GLfloat s, GLfloat t, GLfloat x, GLfloat y, GLfloat z)
{
  RegalContext * rCtx = GET_REGAL_CONTEXT();
  DispatchStateScopedStepDown stepDown(rCtx->dsp);
  rCtx->dsp->curr->glTexCoord2fVertex3fSUN(s, t, x, y, z);
}

static void REGAL_CALL debug_glTexCoord2fVertex3fvSUN(const GLfloat *tc, const GLfloat *v)
{
  RegalContext * rCtx = GET_REGAL_CONTEXT();
  DispatchStateScopedStepDown stepDown(rCtx->dsp);
  rCtx->dsp->curr->glTexCoord2fVertex3fvSUN(tc, v);
}

static void REGAL_CALL debug_glTexCoord4fVertex4fSUN(GLfloat s, GLfloat t, GLfloat p, GLfloat q, GLfloat x, GLfloat y, GLfloat z, GLfloat w)
{
  RegalContext * rCtx = GET_REGAL_CONTEXT();
  DispatchStateScopedStepDown stepDown(rCtx->dsp);
  rCtx->dsp->curr->glTexCoord4fVertex4fSUN(s, t, p, q, x, y, z, w);
}

static void REGAL_CALL debug_glTexCoord4fVertex4fvSUN(const GLfloat *tc, const GLfloat *v)
{
  RegalContext * rCtx = GET_REGAL_CONTEXT();
  DispatchStateScopedStepDown stepDown(rCtx->dsp);
  rCtx->dsp->curr->glTexCoord4fVertex4fvSUN(tc, v);
}

static void REGAL_CALL debug_glTexCoord2fColor4ubVertex3fSUN(GLfloat s, GLfloat t, GLubyte r, GLubyte g, GLubyte b, GLubyte a, GLfloat x, GLfloat y, GLfloat z)
{
  RegalContext * rCtx = GET_REGAL_CONTEXT();
  DispatchStateScopedStepDown stepDown(rCtx->dsp);
  rCtx->dsp->curr->glTexCoord2fColor4ubVertex3fSUN(s, t, r, g, b, a, x, y, z);
}

static void REGAL_CALL debug_glTexCoord2fColor4ubVertex3fvSUN(const GLfloat *tc, const GLubyte *c, const GLfloat *v)
{
  RegalContext * rCtx = GET_REGAL_CONTEXT();
  DispatchStateScopedStepDown stepDown(rCtx->dsp);
  rCtx->dsp->curr->glTexCoord2fColor4ubVertex3fvSUN(tc, c, v);
}

static void REGAL_CALL debug_glTexCoord2fColor3fVertex3fSUN(GLfloat s, GLfloat t, GLfloat r, GLfloat g, GLfloat b, GLfloat x, GLfloat y, GLfloat z)
{
  RegalContext * rCtx = GET_REGAL_CONTEXT();
  DispatchStateScopedStepDown stepDown(rCtx->dsp);
  rCtx->dsp->curr->glTexCoord2fColor3fVertex3fSUN(s, t, r, g, b, x, y, z);
}

static void REGAL_CALL debug_glTexCoord2fColor3fVertex3fvSUN(const GLfloat *tc, const GLfloat *c, const GLfloat *v)
{
  RegalContext * rCtx = GET_REGAL_CONTEXT();
  DispatchStateScopedStepDown stepDown(rCtx->dsp);
  rCtx->dsp->curr->glTexCoord2fColor3fVertex3fvSUN(tc, c, v);
}

static void REGAL_CALL debug_glTexCoord2fNormal3fVertex3fSUN(GLfloat s, GLfloat t, GLfloat nx, GLfloat ny, GLfloat nz, GLfloat x, GLfloat y, GLfloat z)
{
  RegalContext * rCtx = GET_REGAL_CONTEXT();
  DispatchStateScopedStepDown stepDown(rCtx->dsp);
  rCtx->dsp->curr->glTexCoord2fNormal3fVertex3fSUN(s, t, nx, ny, nz, x, y, z);
}

static void REGAL_CALL debug_glTexCoord2fNormal3fVertex3fvSUN(const GLfloat *tc, const GLfloat *n, const GLfloat *v)
{
  RegalContext * rCtx = GET_REGAL_CONTEXT();
  DispatchStateScopedStepDown stepDown(rCtx->dsp);
  rCtx->dsp->curr->glTexCoord2fNormal3fVertex3fvSUN(tc, n, v);
}

static void REGAL_CALL debug_glTexCoord2fColor4fNormal3fVertex3fSUN(GLfloat s, GLfloat t, GLfloat r, GLfloat g, GLfloat b, GLfloat a, GLfloat nx, GLfloat ny, GLfloat nz, GLfloat x, GLfloat y, GLfloat z)
{
  RegalContext * rCtx = GET_REGAL_CONTEXT();
  DispatchStateScopedStepDown stepDown(rCtx->dsp);
  rCtx->dsp->curr->glTexCoord2fColor4fNormal3fVertex3fSUN(s, t, r, g, b, a, nx, ny, nz, x, y, z);
}

static void REGAL_CALL debug_glTexCoord2fColor4fNormal3fVertex3fvSUN(const GLfloat *tc, const GLfloat *c, const GLfloat *n, const GLfloat *v)
{
  RegalContext * rCtx = GET_REGAL_CONTEXT();
  DispatchStateScopedStepDown stepDown(rCtx->dsp);
  rCtx->dsp->curr->glTexCoord2fColor4fNormal3fVertex3fvSUN(tc, c, n, v);
}

static void REGAL_CALL debug_glTexCoord4fColor4fNormal3fVertex4fSUN(GLfloat s, GLfloat t, GLfloat p, GLfloat q, GLfloat r, GLfloat g, GLfloat b, GLfloat a, GLfloat nx, GLfloat ny, GLfloat nz, GLfloat x, GLfloat y, GLfloat z, GLfloat w)
{
  RegalContext * rCtx = GET_REGAL_CONTEXT();
  DispatchStateScopedStepDown stepDown(rCtx->dsp);
  rCtx->dsp->curr->glTexCoord4fColor4fNormal3fVertex4fSUN(s, t, p, q, r, g, b, a, nx, ny, nz, x, y, z, w);
}

static void REGAL_CALL debug_glTexCoord4fColor4fNormal3fVertex4fvSUN(const GLfloat *tc, const GLfloat *c, const GLfloat *n, const GLfloat *v)
{
  RegalContext * rCtx = GET_REGAL_CONTEXT();
  DispatchStateScopedStepDown stepDown(rCtx->dsp);
  rCtx->dsp->curr->glTexCoord4fColor4fNormal3fVertex4fvSUN(tc, c, n, v);
}

static void REGAL_CALL debug_glReplacementCodeuiVertex3fSUN(GLuint rc, GLfloat x, GLfloat y, GLfloat z)
{
  RegalContext * rCtx = GET_REGAL_CONTEXT();
  DispatchStateScopedStepDown stepDown(rCtx->dsp);
  rCtx->dsp->curr->glReplacementCodeuiVertex3fSUN(rc, x, y, z);
}

static void REGAL_CALL debug_glReplacementCodeuiVertex3fvSUN(const GLuint *rc, const GLfloat *v)
{
  RegalContext * rCtx = GET_REGAL_CONTEXT();
  DispatchStateScopedStepDown stepDown(rCtx->dsp);
  rCtx->dsp->curr->glReplacementCodeuiVertex3fvSUN(rc, v);
}

static void REGAL_CALL debug_glReplacementCodeuiColor4ubVertex3fSUN(GLuint rc, GLubyte r, GLubyte g, GLubyte b, GLubyte a, GLfloat x, GLfloat y, GLfloat z)
{
  RegalContext * rCtx = GET_REGAL_CONTEXT();
  DispatchStateScopedStepDown stepDown(rCtx->dsp);
  rCtx->dsp->curr->glReplacementCodeuiColor4ubVertex3fSUN(rc, r, g, b, a, x, y, z);
}

static void REGAL_CALL debug_glReplacementCodeuiColor4ubVertex3fvSUN(const GLuint *rc, const GLubyte *c, const GLfloat *v)
{
  RegalContext * rCtx = GET_REGAL_CONTEXT();
  DispatchStateScopedStepDown stepDown(rCtx->dsp);
  rCtx->dsp->curr->glReplacementCodeuiColor4ubVertex3fvSUN(rc, c, v);
}

static void REGAL_CALL debug_glReplacementCodeuiColor3fVertex3fSUN(GLuint rc, GLfloat r, GLfloat g, GLfloat b, GLfloat x, GLfloat y, GLfloat z)
{
  RegalContext * rCtx = GET_REGAL_CONTEXT();
  DispatchStateScopedStepDown stepDown(rCtx->dsp);
  rCtx->dsp->curr->glReplacementCodeuiColor3fVertex3fSUN(rc, r, g, b, x, y, z);
}

static void REGAL_CALL debug_glReplacementCodeuiColor3fVertex3fvSUN(const GLuint *rc, const GLfloat *c, const GLfloat *v)
{
  RegalContext * rCtx = GET_REGAL_CONTEXT();
  DispatchStateScopedStepDown stepDown(rCtx->dsp);
  rCtx->dsp->curr->glReplacementCodeuiColor3fVertex3fvSUN(rc, c, v);
}

static void REGAL_CALL debug_glReplacementCodeuiNormal3fVertex3fSUN(GLuint rc, GLfloat nx, GLfloat ny, GLfloat nz, GLfloat x, GLfloat y, GLfloat z)
{
  RegalContext * rCtx = GET_REGAL_CONTEXT();
  DispatchStateScopedStepDown stepDown(rCtx->dsp);
  rCtx->dsp->curr->glReplacementCodeuiNormal3fVertex3fSUN(rc, nx, ny, nz, x, y, z);
}

static void REGAL_CALL debug_glReplacementCodeuiNormal3fVertex3fvSUN(const GLuint *rc, const GLfloat *n, const GLfloat *v)
{
  RegalContext * rCtx = GET_REGAL_CONTEXT();
  DispatchStateScopedStepDown stepDown(rCtx->dsp);
  rCtx->dsp->curr->glReplacementCodeuiNormal3fVertex3fvSUN(rc, n, v);
}

static void REGAL_CALL debug_glReplacementCodeuiColor4fNormal3fVertex3fSUN(GLuint rc, GLfloat r, GLfloat g, GLfloat b, GLfloat a, GLfloat nx, GLfloat ny, GLfloat nz, GLfloat x, GLfloat y, GLfloat z)
{
  RegalContext * rCtx = GET_REGAL_CONTEXT();
  DispatchStateScopedStepDown stepDown(rCtx->dsp);
  rCtx->dsp->curr->glReplacementCodeuiColor4fNormal3fVertex3fSUN(rc, r, g, b, a, nx, ny, nz, x, y, z);
}

static void REGAL_CALL debug_glReplacementCodeuiColor4fNormal3fVertex3fvSUN(const GLuint *rc, const GLfloat *c, const GLfloat *n, const GLfloat *v)
{
  RegalContext * rCtx = GET_REGAL_CONTEXT();
  DispatchStateScopedStepDown stepDown(rCtx->dsp);
  rCtx->dsp->curr->glReplacementCodeuiColor4fNormal3fVertex3fvSUN(rc, c, n, v);
}

static void REGAL_CALL debug_glReplacementCodeuiTexCoord2fVertex3fSUN(GLuint rc, GLfloat s, GLfloat t, GLfloat x, GLfloat y, GLfloat z)
{
  RegalContext * rCtx = GET_REGAL_CONTEXT();
  DispatchStateScopedStepDown stepDown(rCtx->dsp);
  rCtx->dsp->curr->glReplacementCodeuiTexCoord2fVertex3fSUN(rc, s, t, x, y, z);
}

static void REGAL_CALL debug_glReplacementCodeuiTexCoord2fVertex3fvSUN(const GLuint *rc, const GLfloat *tc, const GLfloat *v)
{
  RegalContext * rCtx = GET_REGAL_CONTEXT();
  DispatchStateScopedStepDown stepDown(rCtx->dsp);
  rCtx->dsp->curr->glReplacementCodeuiTexCoord2fVertex3fvSUN(rc, tc, v);
}

static void REGAL_CALL debug_glReplacementCodeuiTexCoord2fNormal3fVertex3fSUN(GLuint rc, GLfloat s, GLfloat t, GLfloat nx, GLfloat ny, GLfloat nz, GLfloat x, GLfloat y, GLfloat z)
{
  RegalContext * rCtx = GET_REGAL_CONTEXT();
  DispatchStateScopedStepDown stepDown(rCtx->dsp);
  rCtx->dsp->curr->glReplacementCodeuiTexCoord2fNormal3fVertex3fSUN(rc, s, t, nx, ny, nz, x, y, z);
}

static void REGAL_CALL debug_glReplacementCodeuiTexCoord2fNormal3fVertex3fvSUN(const GLuint *rc, const GLfloat *tc, const GLfloat *n, const GLfloat *v)
{
  RegalContext * rCtx = GET_REGAL_CONTEXT();
  DispatchStateScopedStepDown stepDown(rCtx->dsp);
  rCtx->dsp->curr->glReplacementCodeuiTexCoord2fNormal3fVertex3fvSUN(rc, tc, n, v);
}

static void REGAL_CALL debug_glReplacementCodeuiTexCoord2fColor4fNormal3fVertex3fSUN(GLuint rc, GLfloat s, GLfloat t, GLfloat r, GLfloat g, GLfloat b, GLfloat a, GLfloat nx, GLfloat ny, GLfloat nz, GLfloat x, GLfloat y, GLfloat z)
{
  RegalContext * rCtx = GET_REGAL_CONTEXT();
  DispatchStateScopedStepDown stepDown(rCtx->dsp);
  rCtx->dsp->curr->glReplacementCodeuiTexCoord2fColor4fNormal3fVertex3fSUN(rc, s, t, r, g, b, a, nx, ny, nz, x, y, z);
}

static void REGAL_CALL debug_glReplacementCodeuiTexCoord2fColor4fNormal3fVertex3fvSUN(const GLuint *rc, const GLfloat *tc, const GLfloat *c, const GLfloat *n, const GLfloat *v)
{
  RegalContext * rCtx = GET_REGAL_CONTEXT();
  DispatchStateScopedStepDown stepDown(rCtx->dsp);
  rCtx->dsp->curr->glReplacementCodeuiTexCoord2fColor4fNormal3fVertex3fvSUN(rc, tc, c, n, v);
}

// GL_EXT_blend_func_separate

static void REGAL_CALL debug_glBlendFuncSeparateEXT(GLenum sfactorRGB, GLenum dfactorRGB, GLenum sfactorAlpha, GLenum dfactorAlpha)
{
  RegalContext * rCtx = GET_REGAL_CONTEXT();
  DispatchStateScopedStepDown stepDown(rCtx->dsp);
  rCtx->dsp->curr->glBlendFuncSeparateEXT(sfactorRGB, dfactorRGB, sfactorAlpha, dfactorAlpha);
}

// GL_INGR_blend_func_separate

static void REGAL_CALL debug_glBlendFuncSeparateINGR(GLenum sfactorRGB, GLenum dfactorRGB, GLenum sfactorAlpha, GLenum dfactorAlpha)
{
  RegalContext * rCtx = GET_REGAL_CONTEXT();
  DispatchStateScopedStepDown stepDown(rCtx->dsp);
  rCtx->dsp->curr->glBlendFuncSeparateINGR(sfactorRGB, dfactorRGB, sfactorAlpha, dfactorAlpha);
}

// GL_EXT_vertex_weighting

static void REGAL_CALL debug_glVertexWeightfEXT(GLfloat weight)
{
  RegalContext * rCtx = GET_REGAL_CONTEXT();
  DispatchStateScopedStepDown stepDown(rCtx->dsp);
  rCtx->dsp->curr->glVertexWeightfEXT(weight);
}

static void REGAL_CALL debug_glVertexWeightfvEXT(const GLfloat *weight)
{
  RegalContext * rCtx = GET_REGAL_CONTEXT();
  DispatchStateScopedStepDown stepDown(rCtx->dsp);
  rCtx->dsp->curr->glVertexWeightfvEXT(weight);
}

static void REGAL_CALL debug_glVertexWeightPointerEXT(GLsizei size, GLenum type, GLsizei stride, const GLvoid *pointer)
{
  RegalContext * rCtx = GET_REGAL_CONTEXT();
  DispatchStateScopedStepDown stepDown(rCtx->dsp);
  rCtx->dsp->curr->glVertexWeightPointerEXT(size, type, stride, pointer);
}

// GL_NV_vertex_array_range

static void REGAL_CALL debug_glFlushVertexArrayRangeNV(void)
{
  RegalContext * rCtx = GET_REGAL_CONTEXT();
  DispatchStateScopedStepDown stepDown(rCtx->dsp);
  rCtx->dsp->curr->glFlushVertexArrayRangeNV();
}

static void REGAL_CALL debug_glVertexArrayRangeNV(GLsizei size, const GLvoid *pointer)
{
  RegalContext * rCtx = GET_REGAL_CONTEXT();
  DispatchStateScopedStepDown stepDown(rCtx->dsp);
  rCtx->dsp->curr->glVertexArrayRangeNV(size, pointer);
}

// GL_NV_register_combiners

static void REGAL_CALL debug_glCombinerParameterfvNV(GLenum pname, const GLfloat *params)
{
  RegalContext * rCtx = GET_REGAL_CONTEXT();
  DispatchStateScopedStepDown stepDown(rCtx->dsp);
  rCtx->dsp->curr->glCombinerParameterfvNV(pname, params);
}

static void REGAL_CALL debug_glCombinerParameterfNV(GLenum pname, GLfloat param)
{
  RegalContext * rCtx = GET_REGAL_CONTEXT();
  DispatchStateScopedStepDown stepDown(rCtx->dsp);
  rCtx->dsp->curr->glCombinerParameterfNV(pname, param);
}

static void REGAL_CALL debug_glCombinerParameterivNV(GLenum pname, const GLint *params)
{
  RegalContext * rCtx = GET_REGAL_CONTEXT();
  DispatchStateScopedStepDown stepDown(rCtx->dsp);
  rCtx->dsp->curr->glCombinerParameterivNV(pname, params);
}

static void REGAL_CALL debug_glCombinerParameteriNV(GLenum pname, GLint param)
{
  RegalContext * rCtx = GET_REGAL_CONTEXT();
  DispatchStateScopedStepDown stepDown(rCtx->dsp);
  rCtx->dsp->curr->glCombinerParameteriNV(pname, param);
}

static void REGAL_CALL debug_glCombinerInputNV(GLenum stage, GLenum portion, GLenum variable, GLenum input, GLenum mapping, GLenum componentUsage)
{
  RegalContext * rCtx = GET_REGAL_CONTEXT();
  DispatchStateScopedStepDown stepDown(rCtx->dsp);
  rCtx->dsp->curr->glCombinerInputNV(stage, portion, variable, input, mapping, componentUsage);
}

static void REGAL_CALL debug_glCombinerOutputNV(GLenum stage, GLenum portion, GLenum abOutput, GLenum cdOutput, GLenum sumOutput, GLenum scale, GLenum bias, GLboolean abDotProduct, GLboolean cdDotProduct, GLboolean muxSum)
{
  RegalContext * rCtx = GET_REGAL_CONTEXT();
  DispatchStateScopedStepDown stepDown(rCtx->dsp);
  rCtx->dsp->curr->glCombinerOutputNV(stage, portion, abOutput, cdOutput, sumOutput, scale, bias, abDotProduct, cdDotProduct, muxSum);
}

static void REGAL_CALL debug_glFinalCombinerInputNV(GLenum variable, GLenum input, GLenum mapping, GLenum componentUsage)
{
  RegalContext * rCtx = GET_REGAL_CONTEXT();
  DispatchStateScopedStepDown stepDown(rCtx->dsp);
  rCtx->dsp->curr->glFinalCombinerInputNV(variable, input, mapping, componentUsage);
}

static void REGAL_CALL debug_glGetCombinerInputParameterfvNV(GLenum stage, GLenum portion, GLenum variable, GLenum pname, GLfloat *params)
{
  RegalContext * rCtx = GET_REGAL_CONTEXT();
  DispatchStateScopedStepDown stepDown(rCtx->dsp);
  rCtx->dsp->curr->glGetCombinerInputParameterfvNV(stage, portion, variable, pname, params);
}

static void REGAL_CALL debug_glGetCombinerInputParameterivNV(GLenum stage, GLenum portion, GLenum variable, GLenum pname, GLint *params)
{
  RegalContext * rCtx = GET_REGAL_CONTEXT();
  DispatchStateScopedStepDown stepDown(rCtx->dsp);
  rCtx->dsp->curr->glGetCombinerInputParameterivNV(stage, portion, variable, pname, params);
}

static void REGAL_CALL debug_glGetCombinerOutputParameterfvNV(GLenum stage, GLenum portion, GLenum pname, GLfloat *params)
{
  RegalContext * rCtx = GET_REGAL_CONTEXT();
  DispatchStateScopedStepDown stepDown(rCtx->dsp);
  rCtx->dsp->curr->glGetCombinerOutputParameterfvNV(stage, portion, pname, params);
}

static void REGAL_CALL debug_glGetCombinerOutputParameterivNV(GLenum stage, GLenum portion, GLenum pname, GLint *params)
{
  RegalContext * rCtx = GET_REGAL_CONTEXT();
  DispatchStateScopedStepDown stepDown(rCtx->dsp);
  rCtx->dsp->curr->glGetCombinerOutputParameterivNV(stage, portion, pname, params);
}

static void REGAL_CALL debug_glGetFinalCombinerInputParameterfvNV(GLenum variable, GLenum pname, GLfloat *params)
{
  RegalContext * rCtx = GET_REGAL_CONTEXT();
  DispatchStateScopedStepDown stepDown(rCtx->dsp);
  rCtx->dsp->curr->glGetFinalCombinerInputParameterfvNV(variable, pname, params);
}

static void REGAL_CALL debug_glGetFinalCombinerInputParameterivNV(GLenum variable, GLenum pname, GLint *params)
{
  RegalContext * rCtx = GET_REGAL_CONTEXT();
  DispatchStateScopedStepDown stepDown(rCtx->dsp);
  rCtx->dsp->curr->glGetFinalCombinerInputParameterivNV(variable, pname, params);
}

// GL_MESA_resize_buffers

static void REGAL_CALL debug_glResizeBuffersMESA(void)
{
  RegalContext * rCtx = GET_REGAL_CONTEXT();
  DispatchStateScopedStepDown stepDown(rCtx->dsp);
  rCtx->dsp->curr->glResizeBuffersMESA();
}

// GL_MESA_window_pos

static void REGAL_CALL debug_glWindowPos2dMESA(GLdouble x, GLdouble y)
{
  RegalContext * rCtx = GET_REGAL_CONTEXT();
  DispatchStateScopedStepDown stepDown(rCtx->dsp);
  rCtx->dsp->curr->glWindowPos2dMESA(x, y);
}

static void REGAL_CALL debug_glWindowPos2dvMESA(const GLdouble *v)
{
  RegalContext * rCtx = GET_REGAL_CONTEXT();
  DispatchStateScopedStepDown stepDown(rCtx->dsp);
  rCtx->dsp->curr->glWindowPos2dvMESA(v);
}

static void REGAL_CALL debug_glWindowPos2fMESA(GLfloat x, GLfloat y)
{
  RegalContext * rCtx = GET_REGAL_CONTEXT();
  DispatchStateScopedStepDown stepDown(rCtx->dsp);
  rCtx->dsp->curr->glWindowPos2fMESA(x, y);
}

static void REGAL_CALL debug_glWindowPos2fvMESA(const GLfloat *v)
{
  RegalContext * rCtx = GET_REGAL_CONTEXT();
  DispatchStateScopedStepDown stepDown(rCtx->dsp);
  rCtx->dsp->curr->glWindowPos2fvMESA(v);
}

static void REGAL_CALL debug_glWindowPos2iMESA(GLint x, GLint y)
{
  RegalContext * rCtx = GET_REGAL_CONTEXT();
  DispatchStateScopedStepDown stepDown(rCtx->dsp);
  rCtx->dsp->curr->glWindowPos2iMESA(x, y);
}

static void REGAL_CALL debug_glWindowPos2ivMESA(const GLint *v)
{
  RegalContext * rCtx = GET_REGAL_CONTEXT();
  DispatchStateScopedStepDown stepDown(rCtx->dsp);
  rCtx->dsp->curr->glWindowPos2ivMESA(v);
}

static void REGAL_CALL debug_glWindowPos2sMESA(GLshort x, GLshort y)
{
  RegalContext * rCtx = GET_REGAL_CONTEXT();
  DispatchStateScopedStepDown stepDown(rCtx->dsp);
  rCtx->dsp->curr->glWindowPos2sMESA(x, y);
}

static void REGAL_CALL debug_glWindowPos2svMESA(const GLshort *v)
{
  RegalContext * rCtx = GET_REGAL_CONTEXT();
  DispatchStateScopedStepDown stepDown(rCtx->dsp);
  rCtx->dsp->curr->glWindowPos2svMESA(v);
}

static void REGAL_CALL debug_glWindowPos3dMESA(GLdouble x, GLdouble y, GLdouble z)
{
  RegalContext * rCtx = GET_REGAL_CONTEXT();
  DispatchStateScopedStepDown stepDown(rCtx->dsp);
  rCtx->dsp->curr->glWindowPos3dMESA(x, y, z);
}

static void REGAL_CALL debug_glWindowPos3dvMESA(const GLdouble *v)
{
  RegalContext * rCtx = GET_REGAL_CONTEXT();
  DispatchStateScopedStepDown stepDown(rCtx->dsp);
  rCtx->dsp->curr->glWindowPos3dvMESA(v);
}

static void REGAL_CALL debug_glWindowPos3fMESA(GLfloat x, GLfloat y, GLfloat z)
{
  RegalContext * rCtx = GET_REGAL_CONTEXT();
  DispatchStateScopedStepDown stepDown(rCtx->dsp);
  rCtx->dsp->curr->glWindowPos3fMESA(x, y, z);
}

static void REGAL_CALL debug_glWindowPos3fvMESA(const GLfloat *v)
{
  RegalContext * rCtx = GET_REGAL_CONTEXT();
  DispatchStateScopedStepDown stepDown(rCtx->dsp);
  rCtx->dsp->curr->glWindowPos3fvMESA(v);
}

static void REGAL_CALL debug_glWindowPos3iMESA(GLint x, GLint y, GLint z)
{
  RegalContext * rCtx = GET_REGAL_CONTEXT();
  DispatchStateScopedStepDown stepDown(rCtx->dsp);
  rCtx->dsp->curr->glWindowPos3iMESA(x, y, z);
}

static void REGAL_CALL debug_glWindowPos3ivMESA(const GLint *v)
{
  RegalContext * rCtx = GET_REGAL_CONTEXT();
  DispatchStateScopedStepDown stepDown(rCtx->dsp);
  rCtx->dsp->curr->glWindowPos3ivMESA(v);
}

static void REGAL_CALL debug_glWindowPos3sMESA(GLshort x, GLshort y, GLshort z)
{
  RegalContext * rCtx = GET_REGAL_CONTEXT();
  DispatchStateScopedStepDown stepDown(rCtx->dsp);
  rCtx->dsp->curr->glWindowPos3sMESA(x, y, z);
}

static void REGAL_CALL debug_glWindowPos3svMESA(const GLshort *v)
{
  RegalContext * rCtx = GET_REGAL_CONTEXT();
  DispatchStateScopedStepDown stepDown(rCtx->dsp);
  rCtx->dsp->curr->glWindowPos3svMESA(v);
}

static void REGAL_CALL debug_glWindowPos4dMESA(GLdouble x, GLdouble y, GLdouble z, GLdouble w)
{
  RegalContext * rCtx = GET_REGAL_CONTEXT();
  DispatchStateScopedStepDown stepDown(rCtx->dsp);
  rCtx->dsp->curr->glWindowPos4dMESA(x, y, z, w);
}

static void REGAL_CALL debug_glWindowPos4dvMESA(const GLdouble *v)
{
  RegalContext * rCtx = GET_REGAL_CONTEXT();
  DispatchStateScopedStepDown stepDown(rCtx->dsp);
  rCtx->dsp->curr->glWindowPos4dvMESA(v);
}

static void REGAL_CALL debug_glWindowPos4fMESA(GLfloat x, GLfloat y, GLfloat z, GLfloat w)
{
  RegalContext * rCtx = GET_REGAL_CONTEXT();
  DispatchStateScopedStepDown stepDown(rCtx->dsp);
  rCtx->dsp->curr->glWindowPos4fMESA(x, y, z, w);
}

static void REGAL_CALL debug_glWindowPos4fvMESA(const GLfloat *v)
{
  RegalContext * rCtx = GET_REGAL_CONTEXT();
  DispatchStateScopedStepDown stepDown(rCtx->dsp);
  rCtx->dsp->curr->glWindowPos4fvMESA(v);
}

static void REGAL_CALL debug_glWindowPos4iMESA(GLint x, GLint y, GLint z, GLint w)
{
  RegalContext * rCtx = GET_REGAL_CONTEXT();
  DispatchStateScopedStepDown stepDown(rCtx->dsp);
  rCtx->dsp->curr->glWindowPos4iMESA(x, y, z, w);
}

static void REGAL_CALL debug_glWindowPos4ivMESA(const GLint *v)
{
  RegalContext * rCtx = GET_REGAL_CONTEXT();
  DispatchStateScopedStepDown stepDown(rCtx->dsp);
  rCtx->dsp->curr->glWindowPos4ivMESA(v);
}

static void REGAL_CALL debug_glWindowPos4sMESA(GLshort x, GLshort y, GLshort z, GLshort w)
{
  RegalContext * rCtx = GET_REGAL_CONTEXT();
  DispatchStateScopedStepDown stepDown(rCtx->dsp);
  rCtx->dsp->curr->glWindowPos4sMESA(x, y, z, w);
}

static void REGAL_CALL debug_glWindowPos4svMESA(const GLshort *v)
{
  RegalContext * rCtx = GET_REGAL_CONTEXT();
  DispatchStateScopedStepDown stepDown(rCtx->dsp);
  rCtx->dsp->curr->glWindowPos4svMESA(v);
}

// GL_IBM_multimode_draw_arrays

static void REGAL_CALL debug_glMultiModeDrawArraysIBM(const GLenum *mode, const GLint *first, const GLsizei *count, GLsizei primcount, GLint modestride)
{
  RegalContext * rCtx = GET_REGAL_CONTEXT();
  DispatchStateScopedStepDown stepDown(rCtx->dsp);
  rCtx->dsp->curr->glMultiModeDrawArraysIBM(mode, first, count, primcount, modestride);
}

static void REGAL_CALL debug_glMultiModeDrawElementsIBM(const GLenum *mode, const GLsizei *count, GLenum type, const GLvoid * const *indices, GLsizei primcount, GLint modestride)
{
  RegalContext * rCtx = GET_REGAL_CONTEXT();
  DispatchStateScopedStepDown stepDown(rCtx->dsp);
  rCtx->dsp->curr->glMultiModeDrawElementsIBM(mode, count, type, indices, primcount, modestride);
}

// GL_IBM_vertex_array_lists

static void REGAL_CALL debug_glColorPointerListIBM(GLint size, GLenum type, GLint stride, const GLvoid **pointer, GLint ptrstride)
{
  RegalContext * rCtx = GET_REGAL_CONTEXT();
  DispatchStateScopedStepDown stepDown(rCtx->dsp);
  rCtx->dsp->curr->glColorPointerListIBM(size, type, stride, pointer, ptrstride);
}

static void REGAL_CALL debug_glSecondaryColorPointerListIBM(GLint size, GLenum type, GLint stride, const GLvoid **pointer, GLint ptrstride)
{
  RegalContext * rCtx = GET_REGAL_CONTEXT();
  DispatchStateScopedStepDown stepDown(rCtx->dsp);
  rCtx->dsp->curr->glSecondaryColorPointerListIBM(size, type, stride, pointer, ptrstride);
}

static void REGAL_CALL debug_glEdgeFlagPointerListIBM(GLint stride, const GLboolean **pointer, GLint ptrstride)
{
  RegalContext * rCtx = GET_REGAL_CONTEXT();
  DispatchStateScopedStepDown stepDown(rCtx->dsp);
  rCtx->dsp->curr->glEdgeFlagPointerListIBM(stride, pointer, ptrstride);
}

static void REGAL_CALL debug_glFogCoordPointerListIBM(GLenum type, GLint stride, const GLvoid **pointer, GLint ptrstride)
{
  RegalContext * rCtx = GET_REGAL_CONTEXT();
  DispatchStateScopedStepDown stepDown(rCtx->dsp);
  rCtx->dsp->curr->glFogCoordPointerListIBM(type, stride, pointer, ptrstride);
}

static void REGAL_CALL debug_glIndexPointerListIBM(GLenum type, GLint stride, const GLvoid **pointer, GLint ptrstride)
{
  RegalContext * rCtx = GET_REGAL_CONTEXT();
  DispatchStateScopedStepDown stepDown(rCtx->dsp);
  rCtx->dsp->curr->glIndexPointerListIBM(type, stride, pointer, ptrstride);
}

static void REGAL_CALL debug_glNormalPointerListIBM(GLenum type, GLint stride, const GLvoid **pointer, GLint ptrstride)
{
  RegalContext * rCtx = GET_REGAL_CONTEXT();
  DispatchStateScopedStepDown stepDown(rCtx->dsp);
  rCtx->dsp->curr->glNormalPointerListIBM(type, stride, pointer, ptrstride);
}

static void REGAL_CALL debug_glTexCoordPointerListIBM(GLint size, GLenum type, GLint stride, const GLvoid **pointer, GLint ptrstride)
{
  RegalContext * rCtx = GET_REGAL_CONTEXT();
  DispatchStateScopedStepDown stepDown(rCtx->dsp);
  rCtx->dsp->curr->glTexCoordPointerListIBM(size, type, stride, pointer, ptrstride);
}

static void REGAL_CALL debug_glVertexPointerListIBM(GLint size, GLenum type, GLint stride, const GLvoid **pointer, GLint ptrstride)
{
  RegalContext * rCtx = GET_REGAL_CONTEXT();
  DispatchStateScopedStepDown stepDown(rCtx->dsp);
  rCtx->dsp->curr->glVertexPointerListIBM(size, type, stride, pointer, ptrstride);
}

// GL_3DFX_tbuffer

static void REGAL_CALL debug_glTbufferMask3DFX(GLuint mask)
{
  RegalContext * rCtx = GET_REGAL_CONTEXT();
  DispatchStateScopedStepDown stepDown(rCtx->dsp);
  rCtx->dsp->curr->glTbufferMask3DFX(mask);
}

// GL_EXT_multisample

static void REGAL_CALL debug_glSampleMaskEXT(GLclampf value, GLboolean invert)
{
  RegalContext * rCtx = GET_REGAL_CONTEXT();
  DispatchStateScopedStepDown stepDown(rCtx->dsp);
  rCtx->dsp->curr->glSampleMaskEXT(value, invert);
}

static void REGAL_CALL debug_glSamplePatternEXT(GLenum pattern)
{
  RegalContext * rCtx = GET_REGAL_CONTEXT();
  DispatchStateScopedStepDown stepDown(rCtx->dsp);
  rCtx->dsp->curr->glSamplePatternEXT(pattern);
}

// GL_SGIS_texture_color_mask

static void REGAL_CALL debug_glTextureColorMaskSGIS(GLboolean red, GLboolean green, GLboolean blue, GLboolean alpha)
{
  RegalContext * rCtx = GET_REGAL_CONTEXT();
  DispatchStateScopedStepDown stepDown(rCtx->dsp);
  rCtx->dsp->curr->glTextureColorMaskSGIS(red, green, blue, alpha);
}

// GL_SGIX_igloo_interface

static void REGAL_CALL debug_glIglooInterfaceSGIX(GLenum pname, const GLvoid *params)
{
  RegalContext * rCtx = GET_REGAL_CONTEXT();
  DispatchStateScopedStepDown stepDown(rCtx->dsp);
  rCtx->dsp->curr->glIglooInterfaceSGIX(pname, params);
}

// GL_NV_fence

static void REGAL_CALL debug_glDeleteFencesNV(GLsizei n, const GLuint *fences)
{
  RegalContext * rCtx = GET_REGAL_CONTEXT();
  DispatchStateScopedStepDown stepDown(rCtx->dsp);
  rCtx->dsp->curr->glDeleteFencesNV(n, fences);
}

static void REGAL_CALL debug_glGenFencesNV(GLsizei n, GLuint *fences)
{
  RegalContext * rCtx = GET_REGAL_CONTEXT();
  DispatchStateScopedStepDown stepDown(rCtx->dsp);
  rCtx->dsp->curr->glGenFencesNV(n, fences);
}

static GLboolean REGAL_CALL debug_glIsFenceNV(GLuint fence)
{
  RegalContext * rCtx = GET_REGAL_CONTEXT();
  DispatchStateScopedStepDown stepDown(rCtx->dsp);
  GLboolean  ret = rCtx->dsp->curr->glIsFenceNV(fence);
  return ret;
}

static GLboolean REGAL_CALL debug_glTestFenceNV(GLuint fence)
{
  RegalContext * rCtx = GET_REGAL_CONTEXT();
  DispatchStateScopedStepDown stepDown(rCtx->dsp);
  GLboolean  ret = rCtx->dsp->curr->glTestFenceNV(fence);
  return ret;
}

static void REGAL_CALL debug_glGetFenceivNV(GLuint fence, GLenum pname, GLint *params)
{
  RegalContext * rCtx = GET_REGAL_CONTEXT();
  DispatchStateScopedStepDown stepDown(rCtx->dsp);
  rCtx->dsp->curr->glGetFenceivNV(fence, pname, params);
}

static void REGAL_CALL debug_glFinishFenceNV(GLuint fence)
{
  RegalContext * rCtx = GET_REGAL_CONTEXT();
  DispatchStateScopedStepDown stepDown(rCtx->dsp);
  rCtx->dsp->curr->glFinishFenceNV(fence);
}

static void REGAL_CALL debug_glSetFenceNV(GLuint fence, GLenum condition)
{
  RegalContext * rCtx = GET_REGAL_CONTEXT();
  DispatchStateScopedStepDown stepDown(rCtx->dsp);
  rCtx->dsp->curr->glSetFenceNV(fence, condition);
}

// GL_NV_evaluators

static void REGAL_CALL debug_glMapControlPointsNV(GLenum target, GLuint index, GLenum type, GLsizei ustride, GLsizei vstride, GLint uorder, GLint vorder, GLboolean packed, const GLvoid *points)
{
  RegalContext * rCtx = GET_REGAL_CONTEXT();
  DispatchStateScopedStepDown stepDown(rCtx->dsp);
  rCtx->dsp->curr->glMapControlPointsNV(target, index, type, ustride, vstride, uorder, vorder, packed, points);
}

static void REGAL_CALL debug_glMapParameterivNV(GLenum target, GLenum pname, const GLint *params)
{
  RegalContext * rCtx = GET_REGAL_CONTEXT();
  DispatchStateScopedStepDown stepDown(rCtx->dsp);
  rCtx->dsp->curr->glMapParameterivNV(target, pname, params);
}

static void REGAL_CALL debug_glMapParameterfvNV(GLenum target, GLenum pname, const GLfloat *params)
{
  RegalContext * rCtx = GET_REGAL_CONTEXT();
  DispatchStateScopedStepDown stepDown(rCtx->dsp);
  rCtx->dsp->curr->glMapParameterfvNV(target, pname, params);
}

static void REGAL_CALL debug_glGetMapControlPointsNV(GLenum target, GLuint index, GLenum type, GLsizei ustride, GLsizei vstride, GLboolean packed, GLvoid *points)
{
  RegalContext * rCtx = GET_REGAL_CONTEXT();
  DispatchStateScopedStepDown stepDown(rCtx->dsp);
  rCtx->dsp->curr->glGetMapControlPointsNV(target, index, type, ustride, vstride, packed, points);
}

static void REGAL_CALL debug_glGetMapParameterivNV(GLenum target, GLenum pname, GLint *params)
{
  RegalContext * rCtx = GET_REGAL_CONTEXT();
  DispatchStateScopedStepDown stepDown(rCtx->dsp);
  rCtx->dsp->curr->glGetMapParameterivNV(target, pname, params);
}

static void REGAL_CALL debug_glGetMapParameterfvNV(GLenum target, GLenum pname, GLfloat *params)
{
  RegalContext * rCtx = GET_REGAL_CONTEXT();
  DispatchStateScopedStepDown stepDown(rCtx->dsp);
  rCtx->dsp->curr->glGetMapParameterfvNV(target, pname, params);
}

static void REGAL_CALL debug_glGetMapAttribParameterivNV(GLenum target, GLuint index, GLenum pname, GLint *params)
{
  RegalContext * rCtx = GET_REGAL_CONTEXT();
  DispatchStateScopedStepDown stepDown(rCtx->dsp);
  rCtx->dsp->curr->glGetMapAttribParameterivNV(target, index, pname, params);
}

static void REGAL_CALL debug_glGetMapAttribParameterfvNV(GLenum target, GLuint index, GLenum pname, GLfloat *params)
{
  RegalContext * rCtx = GET_REGAL_CONTEXT();
  DispatchStateScopedStepDown stepDown(rCtx->dsp);
  rCtx->dsp->curr->glGetMapAttribParameterfvNV(target, index, pname, params);
}

static void REGAL_CALL debug_glEvalMapsNV(GLenum target, GLenum mode)
{
  RegalContext * rCtx = GET_REGAL_CONTEXT();
  DispatchStateScopedStepDown stepDown(rCtx->dsp);
  rCtx->dsp->curr->glEvalMapsNV(target, mode);
}

// GL_NV_register_combiners2

static void REGAL_CALL debug_glCombinerStageParameterfvNV(GLenum stage, GLenum pname, const GLfloat *params)
{
  RegalContext * rCtx = GET_REGAL_CONTEXT();
  DispatchStateScopedStepDown stepDown(rCtx->dsp);
  rCtx->dsp->curr->glCombinerStageParameterfvNV(stage, pname, params);
}

static void REGAL_CALL debug_glGetCombinerStageParameterfvNV(GLenum stage, GLenum pname, GLfloat *params)
{
  RegalContext * rCtx = GET_REGAL_CONTEXT();
  DispatchStateScopedStepDown stepDown(rCtx->dsp);
  rCtx->dsp->curr->glGetCombinerStageParameterfvNV(stage, pname, params);
}

// GL_NV_vertex_program

static GLboolean REGAL_CALL debug_glAreProgramsResidentNV(GLsizei n, const GLuint *programs, GLboolean *residences)
{
  RegalContext * rCtx = GET_REGAL_CONTEXT();
  DispatchStateScopedStepDown stepDown(rCtx->dsp);
  GLboolean  ret = rCtx->dsp->curr->glAreProgramsResidentNV(n, programs, residences);
  return ret;
}

static void REGAL_CALL debug_glBindProgramNV(GLenum target, GLuint id)
{
  RegalContext * rCtx = GET_REGAL_CONTEXT();
  DispatchStateScopedStepDown stepDown(rCtx->dsp);
  rCtx->dsp->curr->glBindProgramNV(target, id);
}

static void REGAL_CALL debug_glDeleteProgramsNV(GLsizei n, const GLuint *programs)
{
  RegalContext * rCtx = GET_REGAL_CONTEXT();
  DispatchStateScopedStepDown stepDown(rCtx->dsp);
  rCtx->dsp->curr->glDeleteProgramsNV(n, programs);
}

static void REGAL_CALL debug_glExecuteProgramNV(GLenum target, GLuint id, const GLfloat *params)
{
  RegalContext * rCtx = GET_REGAL_CONTEXT();
  DispatchStateScopedStepDown stepDown(rCtx->dsp);
  rCtx->dsp->curr->glExecuteProgramNV(target, id, params);
}

static void REGAL_CALL debug_glGenProgramsNV(GLsizei n, GLuint *programs)
{
  RegalContext * rCtx = GET_REGAL_CONTEXT();
  DispatchStateScopedStepDown stepDown(rCtx->dsp);
  rCtx->dsp->curr->glGenProgramsNV(n, programs);
}

static void REGAL_CALL debug_glGetProgramParameterdvNV(GLenum target, GLuint index, GLenum pname, GLdouble *params)
{
  RegalContext * rCtx = GET_REGAL_CONTEXT();
  DispatchStateScopedStepDown stepDown(rCtx->dsp);
  rCtx->dsp->curr->glGetProgramParameterdvNV(target, index, pname, params);
}

static void REGAL_CALL debug_glGetProgramParameterfvNV(GLenum target, GLuint index, GLenum pname, GLfloat *params)
{
  RegalContext * rCtx = GET_REGAL_CONTEXT();
  DispatchStateScopedStepDown stepDown(rCtx->dsp);
  rCtx->dsp->curr->glGetProgramParameterfvNV(target, index, pname, params);
}

static void REGAL_CALL debug_glGetProgramivNV(GLuint id, GLenum pname, GLint *params)
{
  RegalContext * rCtx = GET_REGAL_CONTEXT();
  DispatchStateScopedStepDown stepDown(rCtx->dsp);
  rCtx->dsp->curr->glGetProgramivNV(id, pname, params);
}

static void REGAL_CALL debug_glGetProgramStringNV(GLuint id, GLenum pname, GLubyte *program)
{
  RegalContext * rCtx = GET_REGAL_CONTEXT();
  DispatchStateScopedStepDown stepDown(rCtx->dsp);
  rCtx->dsp->curr->glGetProgramStringNV(id, pname, program);
}

static void REGAL_CALL debug_glGetTrackMatrixivNV(GLenum target, GLuint address, GLenum pname, GLint *params)
{
  RegalContext * rCtx = GET_REGAL_CONTEXT();
  DispatchStateScopedStepDown stepDown(rCtx->dsp);
  rCtx->dsp->curr->glGetTrackMatrixivNV(target, address, pname, params);
}

static void REGAL_CALL debug_glGetVertexAttribdvNV(GLuint index, GLenum pname, GLdouble *params)
{
  RegalContext * rCtx = GET_REGAL_CONTEXT();
  DispatchStateScopedStepDown stepDown(rCtx->dsp);
  rCtx->dsp->curr->glGetVertexAttribdvNV(index, pname, params);
}

static void REGAL_CALL debug_glGetVertexAttribfvNV(GLuint index, GLenum pname, GLfloat *params)
{
  RegalContext * rCtx = GET_REGAL_CONTEXT();
  DispatchStateScopedStepDown stepDown(rCtx->dsp);
  rCtx->dsp->curr->glGetVertexAttribfvNV(index, pname, params);
}

static void REGAL_CALL debug_glGetVertexAttribivNV(GLuint index, GLenum pname, GLint *params)
{
  RegalContext * rCtx = GET_REGAL_CONTEXT();
  DispatchStateScopedStepDown stepDown(rCtx->dsp);
  rCtx->dsp->curr->glGetVertexAttribivNV(index, pname, params);
}

static void REGAL_CALL debug_glGetVertexAttribPointervNV(GLuint index, GLenum pname, GLvoid **pointer)
{
  RegalContext * rCtx = GET_REGAL_CONTEXT();
  DispatchStateScopedStepDown stepDown(rCtx->dsp);
  rCtx->dsp->curr->glGetVertexAttribPointervNV(index, pname, pointer);
}

static GLboolean REGAL_CALL debug_glIsProgramNV(GLuint id)
{
  RegalContext * rCtx = GET_REGAL_CONTEXT();
  DispatchStateScopedStepDown stepDown(rCtx->dsp);
  GLboolean  ret = rCtx->dsp->curr->glIsProgramNV(id);
  return ret;
}

static void REGAL_CALL debug_glLoadProgramNV(GLenum target, GLuint id, GLsizei len, const GLubyte *program)
{
  RegalContext * rCtx = GET_REGAL_CONTEXT();
  DispatchStateScopedStepDown stepDown(rCtx->dsp);
  rCtx->dsp->curr->glLoadProgramNV(target, id, len, program);
}

static void REGAL_CALL debug_glProgramParameter4dNV(GLenum target, GLuint index, GLdouble x, GLdouble y, GLdouble z, GLdouble w)
{
  RegalContext * rCtx = GET_REGAL_CONTEXT();
  DispatchStateScopedStepDown stepDown(rCtx->dsp);
  rCtx->dsp->curr->glProgramParameter4dNV(target, index, x, y, z, w);
}

static void REGAL_CALL debug_glProgramParameter4dvNV(GLenum target, GLuint index, const GLdouble *v)
{
  RegalContext * rCtx = GET_REGAL_CONTEXT();
  DispatchStateScopedStepDown stepDown(rCtx->dsp);
  rCtx->dsp->curr->glProgramParameter4dvNV(target, index, v);
}

static void REGAL_CALL debug_glProgramParameter4fNV(GLenum target, GLuint index, GLfloat x, GLfloat y, GLfloat z, GLfloat w)
{
  RegalContext * rCtx = GET_REGAL_CONTEXT();
  DispatchStateScopedStepDown stepDown(rCtx->dsp);
  rCtx->dsp->curr->glProgramParameter4fNV(target, index, x, y, z, w);
}

static void REGAL_CALL debug_glProgramParameter4fvNV(GLenum target, GLuint index, const GLfloat *v)
{
  RegalContext * rCtx = GET_REGAL_CONTEXT();
  DispatchStateScopedStepDown stepDown(rCtx->dsp);
  rCtx->dsp->curr->glProgramParameter4fvNV(target, index, v);
}

static void REGAL_CALL debug_glProgramParameters4dvNV(GLenum target, GLuint index, GLuint count, const GLdouble *v)
{
  RegalContext * rCtx = GET_REGAL_CONTEXT();
  DispatchStateScopedStepDown stepDown(rCtx->dsp);
  rCtx->dsp->curr->glProgramParameters4dvNV(target, index, count, v);
}

static void REGAL_CALL debug_glProgramParameters4fvNV(GLenum target, GLuint index, GLuint count, const GLfloat *v)
{
  RegalContext * rCtx = GET_REGAL_CONTEXT();
  DispatchStateScopedStepDown stepDown(rCtx->dsp);
  rCtx->dsp->curr->glProgramParameters4fvNV(target, index, count, v);
}

static void REGAL_CALL debug_glRequestResidentProgramsNV(GLsizei n, const GLuint *programs)
{
  RegalContext * rCtx = GET_REGAL_CONTEXT();
  DispatchStateScopedStepDown stepDown(rCtx->dsp);
  rCtx->dsp->curr->glRequestResidentProgramsNV(n, programs);
}

static void REGAL_CALL debug_glTrackMatrixNV(GLenum target, GLuint address, GLenum matrix, GLenum transform)
{
  RegalContext * rCtx = GET_REGAL_CONTEXT();
  DispatchStateScopedStepDown stepDown(rCtx->dsp);
  rCtx->dsp->curr->glTrackMatrixNV(target, address, matrix, transform);
}

static void REGAL_CALL debug_glVertexAttribPointerNV(GLuint index, GLint fsize, GLenum type, GLsizei stride, const GLvoid *pointer)
{
  RegalContext * rCtx = GET_REGAL_CONTEXT();
  DispatchStateScopedStepDown stepDown(rCtx->dsp);
  rCtx->dsp->curr->glVertexAttribPointerNV(index, fsize, type, stride, pointer);
}

static void REGAL_CALL debug_glVertexAttrib1dNV(GLuint index, GLdouble x)
{
  RegalContext * rCtx = GET_REGAL_CONTEXT();
  DispatchStateScopedStepDown stepDown(rCtx->dsp);
  rCtx->dsp->curr->glVertexAttrib1dNV(index, x);
}

static void REGAL_CALL debug_glVertexAttrib1dvNV(GLuint index, const GLdouble *v)
{
  RegalContext * rCtx = GET_REGAL_CONTEXT();
  DispatchStateScopedStepDown stepDown(rCtx->dsp);
  rCtx->dsp->curr->glVertexAttrib1dvNV(index, v);
}

static void REGAL_CALL debug_glVertexAttrib1fNV(GLuint index, GLfloat x)
{
  RegalContext * rCtx = GET_REGAL_CONTEXT();
  DispatchStateScopedStepDown stepDown(rCtx->dsp);
  rCtx->dsp->curr->glVertexAttrib1fNV(index, x);
}

static void REGAL_CALL debug_glVertexAttrib1fvNV(GLuint index, const GLfloat *v)
{
  RegalContext * rCtx = GET_REGAL_CONTEXT();
  DispatchStateScopedStepDown stepDown(rCtx->dsp);
  rCtx->dsp->curr->glVertexAttrib1fvNV(index, v);
}

static void REGAL_CALL debug_glVertexAttrib1sNV(GLuint index, GLshort x)
{
  RegalContext * rCtx = GET_REGAL_CONTEXT();
  DispatchStateScopedStepDown stepDown(rCtx->dsp);
  rCtx->dsp->curr->glVertexAttrib1sNV(index, x);
}

static void REGAL_CALL debug_glVertexAttrib1svNV(GLuint index, const GLshort *v)
{
  RegalContext * rCtx = GET_REGAL_CONTEXT();
  DispatchStateScopedStepDown stepDown(rCtx->dsp);
  rCtx->dsp->curr->glVertexAttrib1svNV(index, v);
}

static void REGAL_CALL debug_glVertexAttrib2dNV(GLuint index, GLdouble x, GLdouble y)
{
  RegalContext * rCtx = GET_REGAL_CONTEXT();
  DispatchStateScopedStepDown stepDown(rCtx->dsp);
  rCtx->dsp->curr->glVertexAttrib2dNV(index, x, y);
}

static void REGAL_CALL debug_glVertexAttrib2dvNV(GLuint index, const GLdouble *v)
{
  RegalContext * rCtx = GET_REGAL_CONTEXT();
  DispatchStateScopedStepDown stepDown(rCtx->dsp);
  rCtx->dsp->curr->glVertexAttrib2dvNV(index, v);
}

static void REGAL_CALL debug_glVertexAttrib2fNV(GLuint index, GLfloat x, GLfloat y)
{
  RegalContext * rCtx = GET_REGAL_CONTEXT();
  DispatchStateScopedStepDown stepDown(rCtx->dsp);
  rCtx->dsp->curr->glVertexAttrib2fNV(index, x, y);
}

static void REGAL_CALL debug_glVertexAttrib2fvNV(GLuint index, const GLfloat *v)
{
  RegalContext * rCtx = GET_REGAL_CONTEXT();
  DispatchStateScopedStepDown stepDown(rCtx->dsp);
  rCtx->dsp->curr->glVertexAttrib2fvNV(index, v);
}

static void REGAL_CALL debug_glVertexAttrib2sNV(GLuint index, GLshort x, GLshort y)
{
  RegalContext * rCtx = GET_REGAL_CONTEXT();
  DispatchStateScopedStepDown stepDown(rCtx->dsp);
  rCtx->dsp->curr->glVertexAttrib2sNV(index, x, y);
}

static void REGAL_CALL debug_glVertexAttrib2svNV(GLuint index, const GLshort *v)
{
  RegalContext * rCtx = GET_REGAL_CONTEXT();
  DispatchStateScopedStepDown stepDown(rCtx->dsp);
  rCtx->dsp->curr->glVertexAttrib2svNV(index, v);
}

static void REGAL_CALL debug_glVertexAttrib3dNV(GLuint index, GLdouble x, GLdouble y, GLdouble z)
{
  RegalContext * rCtx = GET_REGAL_CONTEXT();
  DispatchStateScopedStepDown stepDown(rCtx->dsp);
  rCtx->dsp->curr->glVertexAttrib3dNV(index, x, y, z);
}

static void REGAL_CALL debug_glVertexAttrib3dvNV(GLuint index, const GLdouble *v)
{
  RegalContext * rCtx = GET_REGAL_CONTEXT();
  DispatchStateScopedStepDown stepDown(rCtx->dsp);
  rCtx->dsp->curr->glVertexAttrib3dvNV(index, v);
}

static void REGAL_CALL debug_glVertexAttrib3fNV(GLuint index, GLfloat x, GLfloat y, GLfloat z)
{
  RegalContext * rCtx = GET_REGAL_CONTEXT();
  DispatchStateScopedStepDown stepDown(rCtx->dsp);
  rCtx->dsp->curr->glVertexAttrib3fNV(index, x, y, z);
}

static void REGAL_CALL debug_glVertexAttrib3fvNV(GLuint index, const GLfloat *v)
{
  RegalContext * rCtx = GET_REGAL_CONTEXT();
  DispatchStateScopedStepDown stepDown(rCtx->dsp);
  rCtx->dsp->curr->glVertexAttrib3fvNV(index, v);
}

static void REGAL_CALL debug_glVertexAttrib3sNV(GLuint index, GLshort x, GLshort y, GLshort z)
{
  RegalContext * rCtx = GET_REGAL_CONTEXT();
  DispatchStateScopedStepDown stepDown(rCtx->dsp);
  rCtx->dsp->curr->glVertexAttrib3sNV(index, x, y, z);
}

static void REGAL_CALL debug_glVertexAttrib3svNV(GLuint index, const GLshort *v)
{
  RegalContext * rCtx = GET_REGAL_CONTEXT();
  DispatchStateScopedStepDown stepDown(rCtx->dsp);
  rCtx->dsp->curr->glVertexAttrib3svNV(index, v);
}

static void REGAL_CALL debug_glVertexAttrib4dNV(GLuint index, GLdouble x, GLdouble y, GLdouble z, GLdouble w)
{
  RegalContext * rCtx = GET_REGAL_CONTEXT();
  DispatchStateScopedStepDown stepDown(rCtx->dsp);
  rCtx->dsp->curr->glVertexAttrib4dNV(index, x, y, z, w);
}

static void REGAL_CALL debug_glVertexAttrib4dvNV(GLuint index, const GLdouble *v)
{
  RegalContext * rCtx = GET_REGAL_CONTEXT();
  DispatchStateScopedStepDown stepDown(rCtx->dsp);
  rCtx->dsp->curr->glVertexAttrib4dvNV(index, v);
}

static void REGAL_CALL debug_glVertexAttrib4fNV(GLuint index, GLfloat x, GLfloat y, GLfloat z, GLfloat w)
{
  RegalContext * rCtx = GET_REGAL_CONTEXT();
  DispatchStateScopedStepDown stepDown(rCtx->dsp);
  rCtx->dsp->curr->glVertexAttrib4fNV(index, x, y, z, w);
}

static void REGAL_CALL debug_glVertexAttrib4fvNV(GLuint index, const GLfloat *v)
{
  RegalContext * rCtx = GET_REGAL_CONTEXT();
  DispatchStateScopedStepDown stepDown(rCtx->dsp);
  rCtx->dsp->curr->glVertexAttrib4fvNV(index, v);
}

static void REGAL_CALL debug_glVertexAttrib4sNV(GLuint index, GLshort x, GLshort y, GLshort z, GLshort w)
{
  RegalContext * rCtx = GET_REGAL_CONTEXT();
  DispatchStateScopedStepDown stepDown(rCtx->dsp);
  rCtx->dsp->curr->glVertexAttrib4sNV(index, x, y, z, w);
}

static void REGAL_CALL debug_glVertexAttrib4svNV(GLuint index, const GLshort *v)
{
  RegalContext * rCtx = GET_REGAL_CONTEXT();
  DispatchStateScopedStepDown stepDown(rCtx->dsp);
  rCtx->dsp->curr->glVertexAttrib4svNV(index, v);
}

static void REGAL_CALL debug_glVertexAttrib4ubNV(GLuint index, GLubyte x, GLubyte y, GLubyte z, GLubyte w)
{
  RegalContext * rCtx = GET_REGAL_CONTEXT();
  DispatchStateScopedStepDown stepDown(rCtx->dsp);
  rCtx->dsp->curr->glVertexAttrib4ubNV(index, x, y, z, w);
}

static void REGAL_CALL debug_glVertexAttrib4ubvNV(GLuint index, const GLubyte *v)
{
  RegalContext * rCtx = GET_REGAL_CONTEXT();
  DispatchStateScopedStepDown stepDown(rCtx->dsp);
  rCtx->dsp->curr->glVertexAttrib4ubvNV(index, v);
}

static void REGAL_CALL debug_glVertexAttribs1dvNV(GLuint index, GLsizei n, const GLdouble *v)
{
  RegalContext * rCtx = GET_REGAL_CONTEXT();
  DispatchStateScopedStepDown stepDown(rCtx->dsp);
  rCtx->dsp->curr->glVertexAttribs1dvNV(index, n, v);
}

static void REGAL_CALL debug_glVertexAttribs1fvNV(GLuint index, GLsizei n, const GLfloat *v)
{
  RegalContext * rCtx = GET_REGAL_CONTEXT();
  DispatchStateScopedStepDown stepDown(rCtx->dsp);
  rCtx->dsp->curr->glVertexAttribs1fvNV(index, n, v);
}

static void REGAL_CALL debug_glVertexAttribs1svNV(GLuint index, GLsizei n, const GLshort *v)
{
  RegalContext * rCtx = GET_REGAL_CONTEXT();
  DispatchStateScopedStepDown stepDown(rCtx->dsp);
  rCtx->dsp->curr->glVertexAttribs1svNV(index, n, v);
}

static void REGAL_CALL debug_glVertexAttribs2dvNV(GLuint index, GLsizei n, const GLdouble *v)
{
  RegalContext * rCtx = GET_REGAL_CONTEXT();
  DispatchStateScopedStepDown stepDown(rCtx->dsp);
  rCtx->dsp->curr->glVertexAttribs2dvNV(index, n, v);
}

static void REGAL_CALL debug_glVertexAttribs2fvNV(GLuint index, GLsizei n, const GLfloat *v)
{
  RegalContext * rCtx = GET_REGAL_CONTEXT();
  DispatchStateScopedStepDown stepDown(rCtx->dsp);
  rCtx->dsp->curr->glVertexAttribs2fvNV(index, n, v);
}

static void REGAL_CALL debug_glVertexAttribs2svNV(GLuint index, GLsizei n, const GLshort *v)
{
  RegalContext * rCtx = GET_REGAL_CONTEXT();
  DispatchStateScopedStepDown stepDown(rCtx->dsp);
  rCtx->dsp->curr->glVertexAttribs2svNV(index, n, v);
}

static void REGAL_CALL debug_glVertexAttribs3dvNV(GLuint index, GLsizei n, const GLdouble *v)
{
  RegalContext * rCtx = GET_REGAL_CONTEXT();
  DispatchStateScopedStepDown stepDown(rCtx->dsp);
  rCtx->dsp->curr->glVertexAttribs3dvNV(index, n, v);
}

static void REGAL_CALL debug_glVertexAttribs3fvNV(GLuint index, GLsizei n, const GLfloat *v)
{
  RegalContext * rCtx = GET_REGAL_CONTEXT();
  DispatchStateScopedStepDown stepDown(rCtx->dsp);
  rCtx->dsp->curr->glVertexAttribs3fvNV(index, n, v);
}

static void REGAL_CALL debug_glVertexAttribs3svNV(GLuint index, GLsizei n, const GLshort *v)
{
  RegalContext * rCtx = GET_REGAL_CONTEXT();
  DispatchStateScopedStepDown stepDown(rCtx->dsp);
  rCtx->dsp->curr->glVertexAttribs3svNV(index, n, v);
}

static void REGAL_CALL debug_glVertexAttribs4dvNV(GLuint index, GLsizei n, const GLdouble *v)
{
  RegalContext * rCtx = GET_REGAL_CONTEXT();
  DispatchStateScopedStepDown stepDown(rCtx->dsp);
  rCtx->dsp->curr->glVertexAttribs4dvNV(index, n, v);
}

static void REGAL_CALL debug_glVertexAttribs4fvNV(GLuint index, GLsizei n, const GLfloat *v)
{
  RegalContext * rCtx = GET_REGAL_CONTEXT();
  DispatchStateScopedStepDown stepDown(rCtx->dsp);
  rCtx->dsp->curr->glVertexAttribs4fvNV(index, n, v);
}

static void REGAL_CALL debug_glVertexAttribs4svNV(GLuint index, GLsizei n, const GLshort *v)
{
  RegalContext * rCtx = GET_REGAL_CONTEXT();
  DispatchStateScopedStepDown stepDown(rCtx->dsp);
  rCtx->dsp->curr->glVertexAttribs4svNV(index, n, v);
}

static void REGAL_CALL debug_glVertexAttribs4ubvNV(GLuint index, GLsizei n, const GLubyte *v)
{
  RegalContext * rCtx = GET_REGAL_CONTEXT();
  DispatchStateScopedStepDown stepDown(rCtx->dsp);
  rCtx->dsp->curr->glVertexAttribs4ubvNV(index, n, v);
}

// GL_ATI_envmap_bumpmap

static void REGAL_CALL debug_glTexBumpParameterivATI(GLenum pname, GLint *param)
{
  RegalContext * rCtx = GET_REGAL_CONTEXT();
  DispatchStateScopedStepDown stepDown(rCtx->dsp);
  rCtx->dsp->curr->glTexBumpParameterivATI(pname, param);
}

static void REGAL_CALL debug_glTexBumpParameterfvATI(GLenum pname, GLfloat *param)
{
  RegalContext * rCtx = GET_REGAL_CONTEXT();
  DispatchStateScopedStepDown stepDown(rCtx->dsp);
  rCtx->dsp->curr->glTexBumpParameterfvATI(pname, param);
}

static void REGAL_CALL debug_glGetTexBumpParameterivATI(GLenum pname, GLint *param)
{
  RegalContext * rCtx = GET_REGAL_CONTEXT();
  DispatchStateScopedStepDown stepDown(rCtx->dsp);
  rCtx->dsp->curr->glGetTexBumpParameterivATI(pname, param);
}

static void REGAL_CALL debug_glGetTexBumpParameterfvATI(GLenum pname, GLfloat *param)
{
  RegalContext * rCtx = GET_REGAL_CONTEXT();
  DispatchStateScopedStepDown stepDown(rCtx->dsp);
  rCtx->dsp->curr->glGetTexBumpParameterfvATI(pname, param);
}

// GL_ATI_fragment_shader

static GLuint REGAL_CALL debug_glGenFragmentShadersATI(GLuint range)
{
  RegalContext * rCtx = GET_REGAL_CONTEXT();
  DispatchStateScopedStepDown stepDown(rCtx->dsp);
  GLuint  ret = rCtx->dsp->curr->glGenFragmentShadersATI(range);
  return ret;
}

static void REGAL_CALL debug_glBindFragmentShaderATI(GLuint id)
{
  RegalContext * rCtx = GET_REGAL_CONTEXT();
  DispatchStateScopedStepDown stepDown(rCtx->dsp);
  rCtx->dsp->curr->glBindFragmentShaderATI(id);
}

static void REGAL_CALL debug_glDeleteFragmentShaderATI(GLuint id)
{
  RegalContext * rCtx = GET_REGAL_CONTEXT();
  DispatchStateScopedStepDown stepDown(rCtx->dsp);
  rCtx->dsp->curr->glDeleteFragmentShaderATI(id);
}

static void REGAL_CALL debug_glBeginFragmentShaderATI(void)
{
  RegalContext * rCtx = GET_REGAL_CONTEXT();
  DispatchStateScopedStepDown stepDown(rCtx->dsp);
  rCtx->dsp->curr->glBeginFragmentShaderATI();
}

static void REGAL_CALL debug_glEndFragmentShaderATI(void)
{
  RegalContext * rCtx = GET_REGAL_CONTEXT();
  DispatchStateScopedStepDown stepDown(rCtx->dsp);
  rCtx->dsp->curr->glEndFragmentShaderATI();
}

static void REGAL_CALL debug_glPassTexCoordATI(GLuint dst, GLuint coord, GLenum swizzle)
{
  RegalContext * rCtx = GET_REGAL_CONTEXT();
  DispatchStateScopedStepDown stepDown(rCtx->dsp);
  rCtx->dsp->curr->glPassTexCoordATI(dst, coord, swizzle);
}

static void REGAL_CALL debug_glSampleMapATI(GLuint dst, GLuint interp, GLenum swizzle)
{
  RegalContext * rCtx = GET_REGAL_CONTEXT();
  DispatchStateScopedStepDown stepDown(rCtx->dsp);
  rCtx->dsp->curr->glSampleMapATI(dst, interp, swizzle);
}

static void REGAL_CALL debug_glColorFragmentOp1ATI(GLenum op, GLuint dst, GLuint dstMask, GLuint dstMod, GLuint arg1, GLuint arg1Rep, GLuint arg1Mod)
{
  RegalContext * rCtx = GET_REGAL_CONTEXT();
  DispatchStateScopedStepDown stepDown(rCtx->dsp);
  rCtx->dsp->curr->glColorFragmentOp1ATI(op, dst, dstMask, dstMod, arg1, arg1Rep, arg1Mod);
}

static void REGAL_CALL debug_glColorFragmentOp2ATI(GLenum op, GLuint dst, GLuint dstMask, GLuint dstMod, GLuint arg1, GLuint arg1Rep, GLuint arg1Mod, GLuint arg2, GLuint arg2Rep, GLuint arg2Mod)
{
  RegalContext * rCtx = GET_REGAL_CONTEXT();
  DispatchStateScopedStepDown stepDown(rCtx->dsp);
  rCtx->dsp->curr->glColorFragmentOp2ATI(op, dst, dstMask, dstMod, arg1, arg1Rep, arg1Mod, arg2, arg2Rep, arg2Mod);
}

static void REGAL_CALL debug_glColorFragmentOp3ATI(GLenum op, GLuint dst, GLuint dstMask, GLuint dstMod, GLuint arg1, GLuint arg1Rep, GLuint arg1Mod, GLuint arg2, GLuint arg2Rep, GLuint arg2Mod, GLuint arg3, GLuint arg3Rep, GLuint arg3Mod)
{
  RegalContext * rCtx = GET_REGAL_CONTEXT();
  DispatchStateScopedStepDown stepDown(rCtx->dsp);
  rCtx->dsp->curr->glColorFragmentOp3ATI(op, dst, dstMask, dstMod, arg1, arg1Rep, arg1Mod, arg2, arg2Rep, arg2Mod, arg3, arg3Rep, arg3Mod);
}

static void REGAL_CALL debug_glAlphaFragmentOp1ATI(GLenum op, GLuint dst, GLuint dstMod, GLuint arg1, GLuint arg1Rep, GLuint arg1Mod)
{
  RegalContext * rCtx = GET_REGAL_CONTEXT();
  DispatchStateScopedStepDown stepDown(rCtx->dsp);
  rCtx->dsp->curr->glAlphaFragmentOp1ATI(op, dst, dstMod, arg1, arg1Rep, arg1Mod);
}

static void REGAL_CALL debug_glAlphaFragmentOp2ATI(GLenum op, GLuint dst, GLuint dstMod, GLuint arg1, GLuint arg1Rep, GLuint arg1Mod, GLuint arg2, GLuint arg2Rep, GLuint arg2Mod)
{
  RegalContext * rCtx = GET_REGAL_CONTEXT();
  DispatchStateScopedStepDown stepDown(rCtx->dsp);
  rCtx->dsp->curr->glAlphaFragmentOp2ATI(op, dst, dstMod, arg1, arg1Rep, arg1Mod, arg2, arg2Rep, arg2Mod);
}

static void REGAL_CALL debug_glAlphaFragmentOp3ATI(GLenum op, GLuint dst, GLuint dstMod, GLuint arg1, GLuint arg1Rep, GLuint arg1Mod, GLuint arg2, GLuint arg2Rep, GLuint arg2Mod, GLuint arg3, GLuint arg3Rep, GLuint arg3Mod)
{
  RegalContext * rCtx = GET_REGAL_CONTEXT();
  DispatchStateScopedStepDown stepDown(rCtx->dsp);
  rCtx->dsp->curr->glAlphaFragmentOp3ATI(op, dst, dstMod, arg1, arg1Rep, arg1Mod, arg2, arg2Rep, arg2Mod, arg3, arg3Rep, arg3Mod);
}

static void REGAL_CALL debug_glSetFragmentShaderConstantATI(GLuint dst, const GLfloat *value)
{
  RegalContext * rCtx = GET_REGAL_CONTEXT();
  DispatchStateScopedStepDown stepDown(rCtx->dsp);
  rCtx->dsp->curr->glSetFragmentShaderConstantATI(dst, value);
}

// GL_ATI_pn_triangles

static void REGAL_CALL debug_glPNTrianglesiATI(GLenum pname, GLint param)
{
  RegalContext * rCtx = GET_REGAL_CONTEXT();
  DispatchStateScopedStepDown stepDown(rCtx->dsp);
  rCtx->dsp->curr->glPNTrianglesiATI(pname, param);
}

static void REGAL_CALL debug_glPNTrianglesfATI(GLenum pname, GLfloat param)
{
  RegalContext * rCtx = GET_REGAL_CONTEXT();
  DispatchStateScopedStepDown stepDown(rCtx->dsp);
  rCtx->dsp->curr->glPNTrianglesfATI(pname, param);
}

// GL_ATI_vertex_array_object

static GLuint REGAL_CALL debug_glNewObjectBufferATI(GLsizei size, const GLvoid *pointer, GLenum usage)
{
  RegalContext * rCtx = GET_REGAL_CONTEXT();
  DispatchStateScopedStepDown stepDown(rCtx->dsp);
  GLuint  ret = rCtx->dsp->curr->glNewObjectBufferATI(size, pointer, usage);
  return ret;
}

static GLboolean REGAL_CALL debug_glIsObjectBufferATI(GLuint buffer)
{
  RegalContext * rCtx = GET_REGAL_CONTEXT();
  DispatchStateScopedStepDown stepDown(rCtx->dsp);
  GLboolean  ret = rCtx->dsp->curr->glIsObjectBufferATI(buffer);
  return ret;
}

static void REGAL_CALL debug_glUpdateObjectBufferATI(GLuint buffer, GLuint offset, GLsizei size, const GLvoid *pointer, GLenum preserve)
{
  RegalContext * rCtx = GET_REGAL_CONTEXT();
  DispatchStateScopedStepDown stepDown(rCtx->dsp);
  rCtx->dsp->curr->glUpdateObjectBufferATI(buffer, offset, size, pointer, preserve);
}

static void REGAL_CALL debug_glGetObjectBufferfvATI(GLuint buffer, GLenum pname, GLfloat *params)
{
  RegalContext * rCtx = GET_REGAL_CONTEXT();
  DispatchStateScopedStepDown stepDown(rCtx->dsp);
  rCtx->dsp->curr->glGetObjectBufferfvATI(buffer, pname, params);
}

static void REGAL_CALL debug_glGetObjectBufferivATI(GLuint buffer, GLenum pname, GLint *params)
{
  RegalContext * rCtx = GET_REGAL_CONTEXT();
  DispatchStateScopedStepDown stepDown(rCtx->dsp);
  rCtx->dsp->curr->glGetObjectBufferivATI(buffer, pname, params);
}

static void REGAL_CALL debug_glFreeObjectBufferATI(GLuint buffer)
{
  RegalContext * rCtx = GET_REGAL_CONTEXT();
  DispatchStateScopedStepDown stepDown(rCtx->dsp);
  rCtx->dsp->curr->glFreeObjectBufferATI(buffer);
}

static void REGAL_CALL debug_glArrayObjectATI(GLenum array, GLint size, GLenum type, GLsizei stride, GLuint buffer, GLuint offset)
{
  RegalContext * rCtx = GET_REGAL_CONTEXT();
  DispatchStateScopedStepDown stepDown(rCtx->dsp);
  rCtx->dsp->curr->glArrayObjectATI(array, size, type, stride, buffer, offset);
}

static void REGAL_CALL debug_glGetArrayObjectfvATI(GLenum array, GLenum pname, GLfloat *params)
{
  RegalContext * rCtx = GET_REGAL_CONTEXT();
  DispatchStateScopedStepDown stepDown(rCtx->dsp);
  rCtx->dsp->curr->glGetArrayObjectfvATI(array, pname, params);
}

static void REGAL_CALL debug_glGetArrayObjectivATI(GLenum array, GLenum pname, GLint *params)
{
  RegalContext * rCtx = GET_REGAL_CONTEXT();
  DispatchStateScopedStepDown stepDown(rCtx->dsp);
  rCtx->dsp->curr->glGetArrayObjectivATI(array, pname, params);
}

static void REGAL_CALL debug_glVariantArrayObjectATI(GLuint id, GLenum type, GLsizei stride, GLuint buffer, GLuint offset)
{
  RegalContext * rCtx = GET_REGAL_CONTEXT();
  DispatchStateScopedStepDown stepDown(rCtx->dsp);
  rCtx->dsp->curr->glVariantArrayObjectATI(id, type, stride, buffer, offset);
}

static void REGAL_CALL debug_glGetVariantArrayObjectfvATI(GLuint id, GLenum pname, GLfloat *params)
{
  RegalContext * rCtx = GET_REGAL_CONTEXT();
  DispatchStateScopedStepDown stepDown(rCtx->dsp);
  rCtx->dsp->curr->glGetVariantArrayObjectfvATI(id, pname, params);
}

static void REGAL_CALL debug_glGetVariantArrayObjectivATI(GLuint id, GLenum pname, GLint *params)
{
  RegalContext * rCtx = GET_REGAL_CONTEXT();
  DispatchStateScopedStepDown stepDown(rCtx->dsp);
  rCtx->dsp->curr->glGetVariantArrayObjectivATI(id, pname, params);
}

// GL_EXT_vertex_shader

static void REGAL_CALL debug_glBeginVertexShaderEXT(void)
{
  RegalContext * rCtx = GET_REGAL_CONTEXT();
  DispatchStateScopedStepDown stepDown(rCtx->dsp);
  rCtx->dsp->curr->glBeginVertexShaderEXT();
}

static void REGAL_CALL debug_glEndVertexShaderEXT(void)
{
  RegalContext * rCtx = GET_REGAL_CONTEXT();
  DispatchStateScopedStepDown stepDown(rCtx->dsp);
  rCtx->dsp->curr->glEndVertexShaderEXT();
}

static void REGAL_CALL debug_glBindVertexShaderEXT(GLuint id)
{
  RegalContext * rCtx = GET_REGAL_CONTEXT();
  DispatchStateScopedStepDown stepDown(rCtx->dsp);
  rCtx->dsp->curr->glBindVertexShaderEXT(id);
}

static GLuint REGAL_CALL debug_glGenVertexShadersEXT(GLuint range)
{
  RegalContext * rCtx = GET_REGAL_CONTEXT();
  DispatchStateScopedStepDown stepDown(rCtx->dsp);
  GLuint  ret = rCtx->dsp->curr->glGenVertexShadersEXT(range);
  return ret;
}

static void REGAL_CALL debug_glDeleteVertexShaderEXT(GLuint id)
{
  RegalContext * rCtx = GET_REGAL_CONTEXT();
  DispatchStateScopedStepDown stepDown(rCtx->dsp);
  rCtx->dsp->curr->glDeleteVertexShaderEXT(id);
}

static void REGAL_CALL debug_glShaderOp1EXT(GLenum op, GLuint res, GLuint arg1)
{
  RegalContext * rCtx = GET_REGAL_CONTEXT();
  DispatchStateScopedStepDown stepDown(rCtx->dsp);
  rCtx->dsp->curr->glShaderOp1EXT(op, res, arg1);
}

static void REGAL_CALL debug_glShaderOp2EXT(GLenum op, GLuint res, GLuint arg1, GLuint arg2)
{
  RegalContext * rCtx = GET_REGAL_CONTEXT();
  DispatchStateScopedStepDown stepDown(rCtx->dsp);
  rCtx->dsp->curr->glShaderOp2EXT(op, res, arg1, arg2);
}

static void REGAL_CALL debug_glShaderOp3EXT(GLenum op, GLuint res, GLuint arg1, GLuint arg2, GLuint arg3)
{
  RegalContext * rCtx = GET_REGAL_CONTEXT();
  DispatchStateScopedStepDown stepDown(rCtx->dsp);
  rCtx->dsp->curr->glShaderOp3EXT(op, res, arg1, arg2, arg3);
}

static void REGAL_CALL debug_glSwizzleEXT(GLuint res, GLuint in, GLenum outX, GLenum outY, GLenum outZ, GLenum outW)
{
  RegalContext * rCtx = GET_REGAL_CONTEXT();
  DispatchStateScopedStepDown stepDown(rCtx->dsp);
  rCtx->dsp->curr->glSwizzleEXT(res, in, outX, outY, outZ, outW);
}

static void REGAL_CALL debug_glWriteMaskEXT(GLuint res, GLuint in, GLenum outX, GLenum outY, GLenum outZ, GLenum outW)
{
  RegalContext * rCtx = GET_REGAL_CONTEXT();
  DispatchStateScopedStepDown stepDown(rCtx->dsp);
  rCtx->dsp->curr->glWriteMaskEXT(res, in, outX, outY, outZ, outW);
}

static void REGAL_CALL debug_glInsertComponentEXT(GLuint res, GLuint src, GLuint num)
{
  RegalContext * rCtx = GET_REGAL_CONTEXT();
  DispatchStateScopedStepDown stepDown(rCtx->dsp);
  rCtx->dsp->curr->glInsertComponentEXT(res, src, num);
}

static void REGAL_CALL debug_glExtractComponentEXT(GLuint res, GLuint src, GLuint num)
{
  RegalContext * rCtx = GET_REGAL_CONTEXT();
  DispatchStateScopedStepDown stepDown(rCtx->dsp);
  rCtx->dsp->curr->glExtractComponentEXT(res, src, num);
}

static GLuint REGAL_CALL debug_glGenSymbolsEXT(GLenum datatype, GLenum storagetype, GLenum range, GLuint components)
{
  RegalContext * rCtx = GET_REGAL_CONTEXT();
  DispatchStateScopedStepDown stepDown(rCtx->dsp);
  GLuint  ret = rCtx->dsp->curr->glGenSymbolsEXT(datatype, storagetype, range, components);
  return ret;
}

static void REGAL_CALL debug_glSetInvariantEXT(GLuint id, GLenum type, const GLvoid *addr)
{
  RegalContext * rCtx = GET_REGAL_CONTEXT();
  DispatchStateScopedStepDown stepDown(rCtx->dsp);
  rCtx->dsp->curr->glSetInvariantEXT(id, type, addr);
}

static void REGAL_CALL debug_glSetLocalConstantEXT(GLuint id, GLenum type, const GLvoid *addr)
{
  RegalContext * rCtx = GET_REGAL_CONTEXT();
  DispatchStateScopedStepDown stepDown(rCtx->dsp);
  rCtx->dsp->curr->glSetLocalConstantEXT(id, type, addr);
}

static void REGAL_CALL debug_glVariantbvEXT(GLuint id, const GLbyte *addr)
{
  RegalContext * rCtx = GET_REGAL_CONTEXT();
  DispatchStateScopedStepDown stepDown(rCtx->dsp);
  rCtx->dsp->curr->glVariantbvEXT(id, addr);
}

static void REGAL_CALL debug_glVariantsvEXT(GLuint id, const GLshort *addr)
{
  RegalContext * rCtx = GET_REGAL_CONTEXT();
  DispatchStateScopedStepDown stepDown(rCtx->dsp);
  rCtx->dsp->curr->glVariantsvEXT(id, addr);
}

static void REGAL_CALL debug_glVariantivEXT(GLuint id, const GLint *addr)
{
  RegalContext * rCtx = GET_REGAL_CONTEXT();
  DispatchStateScopedStepDown stepDown(rCtx->dsp);
  rCtx->dsp->curr->glVariantivEXT(id, addr);
}

static void REGAL_CALL debug_glVariantfvEXT(GLuint id, const GLfloat *addr)
{
  RegalContext * rCtx = GET_REGAL_CONTEXT();
  DispatchStateScopedStepDown stepDown(rCtx->dsp);
  rCtx->dsp->curr->glVariantfvEXT(id, addr);
}

static void REGAL_CALL debug_glVariantdvEXT(GLuint id, const GLdouble *addr)
{
  RegalContext * rCtx = GET_REGAL_CONTEXT();
  DispatchStateScopedStepDown stepDown(rCtx->dsp);
  rCtx->dsp->curr->glVariantdvEXT(id, addr);
}

static void REGAL_CALL debug_glVariantubvEXT(GLuint id, const GLubyte *addr)
{
  RegalContext * rCtx = GET_REGAL_CONTEXT();
  DispatchStateScopedStepDown stepDown(rCtx->dsp);
  rCtx->dsp->curr->glVariantubvEXT(id, addr);
}

static void REGAL_CALL debug_glVariantusvEXT(GLuint id, const GLushort *addr)
{
  RegalContext * rCtx = GET_REGAL_CONTEXT();
  DispatchStateScopedStepDown stepDown(rCtx->dsp);
  rCtx->dsp->curr->glVariantusvEXT(id, addr);
}

static void REGAL_CALL debug_glVariantuivEXT(GLuint id, const GLuint *addr)
{
  RegalContext * rCtx = GET_REGAL_CONTEXT();
  DispatchStateScopedStepDown stepDown(rCtx->dsp);
  rCtx->dsp->curr->glVariantuivEXT(id, addr);
}

static void REGAL_CALL debug_glVariantPointerEXT(GLuint id, GLenum type, GLuint stride, const GLvoid *addr)
{
  RegalContext * rCtx = GET_REGAL_CONTEXT();
  DispatchStateScopedStepDown stepDown(rCtx->dsp);
  rCtx->dsp->curr->glVariantPointerEXT(id, type, stride, addr);
}

static void REGAL_CALL debug_glEnableVariantClientStateEXT(GLuint id)
{
  RegalContext * rCtx = GET_REGAL_CONTEXT();
  DispatchStateScopedStepDown stepDown(rCtx->dsp);
  rCtx->dsp->curr->glEnableVariantClientStateEXT(id);
}

static void REGAL_CALL debug_glDisableVariantClientStateEXT(GLuint id)
{
  RegalContext * rCtx = GET_REGAL_CONTEXT();
  DispatchStateScopedStepDown stepDown(rCtx->dsp);
  rCtx->dsp->curr->glDisableVariantClientStateEXT(id);
}

static GLuint REGAL_CALL debug_glBindLightParameterEXT(GLenum light, GLenum value)
{
  RegalContext * rCtx = GET_REGAL_CONTEXT();
  DispatchStateScopedStepDown stepDown(rCtx->dsp);
  GLuint  ret = rCtx->dsp->curr->glBindLightParameterEXT(light, value);
  return ret;
}

static GLuint REGAL_CALL debug_glBindMaterialParameterEXT(GLenum face, GLenum value)
{
  RegalContext * rCtx = GET_REGAL_CONTEXT();
  DispatchStateScopedStepDown stepDown(rCtx->dsp);
  GLuint  ret = rCtx->dsp->curr->glBindMaterialParameterEXT(face, value);
  return ret;
}

static GLuint REGAL_CALL debug_glBindTexGenParameterEXT(GLenum unit, GLenum coord, GLenum value)
{
  RegalContext * rCtx = GET_REGAL_CONTEXT();
  DispatchStateScopedStepDown stepDown(rCtx->dsp);
  GLuint  ret = rCtx->dsp->curr->glBindTexGenParameterEXT(unit, coord, value);
  return ret;
}

static GLuint REGAL_CALL debug_glBindTextureUnitParameterEXT(GLenum unit, GLenum value)
{
  RegalContext * rCtx = GET_REGAL_CONTEXT();
  DispatchStateScopedStepDown stepDown(rCtx->dsp);
  GLuint  ret = rCtx->dsp->curr->glBindTextureUnitParameterEXT(unit, value);
  return ret;
}

static GLuint REGAL_CALL debug_glBindParameterEXT(GLenum value)
{
  RegalContext * rCtx = GET_REGAL_CONTEXT();
  DispatchStateScopedStepDown stepDown(rCtx->dsp);
  GLuint  ret = rCtx->dsp->curr->glBindParameterEXT(value);
  return ret;
}

static GLboolean REGAL_CALL debug_glIsVariantEnabledEXT(GLuint id, GLenum cap)
{
  RegalContext * rCtx = GET_REGAL_CONTEXT();
  DispatchStateScopedStepDown stepDown(rCtx->dsp);
  GLboolean  ret = rCtx->dsp->curr->glIsVariantEnabledEXT(id, cap);
  return ret;
}

static void REGAL_CALL debug_glGetVariantBooleanvEXT(GLuint id, GLenum value, GLboolean *data)
{
  RegalContext * rCtx = GET_REGAL_CONTEXT();
  DispatchStateScopedStepDown stepDown(rCtx->dsp);
  rCtx->dsp->curr->glGetVariantBooleanvEXT(id, value, data);
}

static void REGAL_CALL debug_glGetVariantIntegervEXT(GLuint id, GLenum value, GLint *data)
{
  RegalContext * rCtx = GET_REGAL_CONTEXT();
  DispatchStateScopedStepDown stepDown(rCtx->dsp);
  rCtx->dsp->curr->glGetVariantIntegervEXT(id, value, data);
}

static void REGAL_CALL debug_glGetVariantFloatvEXT(GLuint id, GLenum value, GLfloat *data)
{
  RegalContext * rCtx = GET_REGAL_CONTEXT();
  DispatchStateScopedStepDown stepDown(rCtx->dsp);
  rCtx->dsp->curr->glGetVariantFloatvEXT(id, value, data);
}

static void REGAL_CALL debug_glGetVariantPointervEXT(GLuint id, GLenum value, GLvoid **data)
{
  RegalContext * rCtx = GET_REGAL_CONTEXT();
  DispatchStateScopedStepDown stepDown(rCtx->dsp);
  rCtx->dsp->curr->glGetVariantPointervEXT(id, value, data);
}

static void REGAL_CALL debug_glGetInvariantBooleanvEXT(GLuint id, GLenum value, GLboolean *data)
{
  RegalContext * rCtx = GET_REGAL_CONTEXT();
  DispatchStateScopedStepDown stepDown(rCtx->dsp);
  rCtx->dsp->curr->glGetInvariantBooleanvEXT(id, value, data);
}

static void REGAL_CALL debug_glGetInvariantIntegervEXT(GLuint id, GLenum value, GLint *data)
{
  RegalContext * rCtx = GET_REGAL_CONTEXT();
  DispatchStateScopedStepDown stepDown(rCtx->dsp);
  rCtx->dsp->curr->glGetInvariantIntegervEXT(id, value, data);
}

static void REGAL_CALL debug_glGetInvariantFloatvEXT(GLuint id, GLenum value, GLfloat *data)
{
  RegalContext * rCtx = GET_REGAL_CONTEXT();
  DispatchStateScopedStepDown stepDown(rCtx->dsp);
  rCtx->dsp->curr->glGetInvariantFloatvEXT(id, value, data);
}

static void REGAL_CALL debug_glGetLocalConstantBooleanvEXT(GLuint id, GLenum value, GLboolean *data)
{
  RegalContext * rCtx = GET_REGAL_CONTEXT();
  DispatchStateScopedStepDown stepDown(rCtx->dsp);
  rCtx->dsp->curr->glGetLocalConstantBooleanvEXT(id, value, data);
}

static void REGAL_CALL debug_glGetLocalConstantIntegervEXT(GLuint id, GLenum value, GLint *data)
{
  RegalContext * rCtx = GET_REGAL_CONTEXT();
  DispatchStateScopedStepDown stepDown(rCtx->dsp);
  rCtx->dsp->curr->glGetLocalConstantIntegervEXT(id, value, data);
}

static void REGAL_CALL debug_glGetLocalConstantFloatvEXT(GLuint id, GLenum value, GLfloat *data)
{
  RegalContext * rCtx = GET_REGAL_CONTEXT();
  DispatchStateScopedStepDown stepDown(rCtx->dsp);
  rCtx->dsp->curr->glGetLocalConstantFloatvEXT(id, value, data);
}

// GL_ATI_vertex_streams

static void REGAL_CALL debug_glVertexStream1sATI(GLenum stream, GLshort x)
{
  RegalContext * rCtx = GET_REGAL_CONTEXT();
  DispatchStateScopedStepDown stepDown(rCtx->dsp);
  rCtx->dsp->curr->glVertexStream1sATI(stream, x);
}

static void REGAL_CALL debug_glVertexStream1svATI(GLenum stream, const GLshort *coords)
{
  RegalContext * rCtx = GET_REGAL_CONTEXT();
  DispatchStateScopedStepDown stepDown(rCtx->dsp);
  rCtx->dsp->curr->glVertexStream1svATI(stream, coords);
}

static void REGAL_CALL debug_glVertexStream1iATI(GLenum stream, GLint x)
{
  RegalContext * rCtx = GET_REGAL_CONTEXT();
  DispatchStateScopedStepDown stepDown(rCtx->dsp);
  rCtx->dsp->curr->glVertexStream1iATI(stream, x);
}

static void REGAL_CALL debug_glVertexStream1ivATI(GLenum stream, const GLint *coords)
{
  RegalContext * rCtx = GET_REGAL_CONTEXT();
  DispatchStateScopedStepDown stepDown(rCtx->dsp);
  rCtx->dsp->curr->glVertexStream1ivATI(stream, coords);
}

static void REGAL_CALL debug_glVertexStream1fATI(GLenum stream, GLfloat x)
{
  RegalContext * rCtx = GET_REGAL_CONTEXT();
  DispatchStateScopedStepDown stepDown(rCtx->dsp);
  rCtx->dsp->curr->glVertexStream1fATI(stream, x);
}

static void REGAL_CALL debug_glVertexStream1fvATI(GLenum stream, const GLfloat *coords)
{
  RegalContext * rCtx = GET_REGAL_CONTEXT();
  DispatchStateScopedStepDown stepDown(rCtx->dsp);
  rCtx->dsp->curr->glVertexStream1fvATI(stream, coords);
}

static void REGAL_CALL debug_glVertexStream1dATI(GLenum stream, GLdouble x)
{
  RegalContext * rCtx = GET_REGAL_CONTEXT();
  DispatchStateScopedStepDown stepDown(rCtx->dsp);
  rCtx->dsp->curr->glVertexStream1dATI(stream, x);
}

static void REGAL_CALL debug_glVertexStream1dvATI(GLenum stream, const GLdouble *coords)
{
  RegalContext * rCtx = GET_REGAL_CONTEXT();
  DispatchStateScopedStepDown stepDown(rCtx->dsp);
  rCtx->dsp->curr->glVertexStream1dvATI(stream, coords);
}

static void REGAL_CALL debug_glVertexStream2sATI(GLenum stream, GLshort x, GLshort y)
{
  RegalContext * rCtx = GET_REGAL_CONTEXT();
  DispatchStateScopedStepDown stepDown(rCtx->dsp);
  rCtx->dsp->curr->glVertexStream2sATI(stream, x, y);
}

static void REGAL_CALL debug_glVertexStream2svATI(GLenum stream, const GLshort *coords)
{
  RegalContext * rCtx = GET_REGAL_CONTEXT();
  DispatchStateScopedStepDown stepDown(rCtx->dsp);
  rCtx->dsp->curr->glVertexStream2svATI(stream, coords);
}

static void REGAL_CALL debug_glVertexStream2iATI(GLenum stream, GLint x, GLint y)
{
  RegalContext * rCtx = GET_REGAL_CONTEXT();
  DispatchStateScopedStepDown stepDown(rCtx->dsp);
  rCtx->dsp->curr->glVertexStream2iATI(stream, x, y);
}

static void REGAL_CALL debug_glVertexStream2ivATI(GLenum stream, const GLint *coords)
{
  RegalContext * rCtx = GET_REGAL_CONTEXT();
  DispatchStateScopedStepDown stepDown(rCtx->dsp);
  rCtx->dsp->curr->glVertexStream2ivATI(stream, coords);
}

static void REGAL_CALL debug_glVertexStream2fATI(GLenum stream, GLfloat x, GLfloat y)
{
  RegalContext * rCtx = GET_REGAL_CONTEXT();
  DispatchStateScopedStepDown stepDown(rCtx->dsp);
  rCtx->dsp->curr->glVertexStream2fATI(stream, x, y);
}

static void REGAL_CALL debug_glVertexStream2fvATI(GLenum stream, const GLfloat *coords)
{
  RegalContext * rCtx = GET_REGAL_CONTEXT();
  DispatchStateScopedStepDown stepDown(rCtx->dsp);
  rCtx->dsp->curr->glVertexStream2fvATI(stream, coords);
}

static void REGAL_CALL debug_glVertexStream2dATI(GLenum stream, GLdouble x, GLdouble y)
{
  RegalContext * rCtx = GET_REGAL_CONTEXT();
  DispatchStateScopedStepDown stepDown(rCtx->dsp);
  rCtx->dsp->curr->glVertexStream2dATI(stream, x, y);
}

static void REGAL_CALL debug_glVertexStream2dvATI(GLenum stream, const GLdouble *coords)
{
  RegalContext * rCtx = GET_REGAL_CONTEXT();
  DispatchStateScopedStepDown stepDown(rCtx->dsp);
  rCtx->dsp->curr->glVertexStream2dvATI(stream, coords);
}

static void REGAL_CALL debug_glVertexStream3sATI(GLenum stream, GLshort x, GLshort y, GLshort z)
{
  RegalContext * rCtx = GET_REGAL_CONTEXT();
  DispatchStateScopedStepDown stepDown(rCtx->dsp);
  rCtx->dsp->curr->glVertexStream3sATI(stream, x, y, z);
}

static void REGAL_CALL debug_glVertexStream3svATI(GLenum stream, const GLshort *coords)
{
  RegalContext * rCtx = GET_REGAL_CONTEXT();
  DispatchStateScopedStepDown stepDown(rCtx->dsp);
  rCtx->dsp->curr->glVertexStream3svATI(stream, coords);
}

static void REGAL_CALL debug_glVertexStream3iATI(GLenum stream, GLint x, GLint y, GLint z)
{
  RegalContext * rCtx = GET_REGAL_CONTEXT();
  DispatchStateScopedStepDown stepDown(rCtx->dsp);
  rCtx->dsp->curr->glVertexStream3iATI(stream, x, y, z);
}

static void REGAL_CALL debug_glVertexStream3ivATI(GLenum stream, const GLint *coords)
{
  RegalContext * rCtx = GET_REGAL_CONTEXT();
  DispatchStateScopedStepDown stepDown(rCtx->dsp);
  rCtx->dsp->curr->glVertexStream3ivATI(stream, coords);
}

static void REGAL_CALL debug_glVertexStream3fATI(GLenum stream, GLfloat x, GLfloat y, GLfloat z)
{
  RegalContext * rCtx = GET_REGAL_CONTEXT();
  DispatchStateScopedStepDown stepDown(rCtx->dsp);
  rCtx->dsp->curr->glVertexStream3fATI(stream, x, y, z);
}

static void REGAL_CALL debug_glVertexStream3fvATI(GLenum stream, const GLfloat *coords)
{
  RegalContext * rCtx = GET_REGAL_CONTEXT();
  DispatchStateScopedStepDown stepDown(rCtx->dsp);
  rCtx->dsp->curr->glVertexStream3fvATI(stream, coords);
}

static void REGAL_CALL debug_glVertexStream3dATI(GLenum stream, GLdouble x, GLdouble y, GLdouble z)
{
  RegalContext * rCtx = GET_REGAL_CONTEXT();
  DispatchStateScopedStepDown stepDown(rCtx->dsp);
  rCtx->dsp->curr->glVertexStream3dATI(stream, x, y, z);
}

static void REGAL_CALL debug_glVertexStream3dvATI(GLenum stream, const GLdouble *coords)
{
  RegalContext * rCtx = GET_REGAL_CONTEXT();
  DispatchStateScopedStepDown stepDown(rCtx->dsp);
  rCtx->dsp->curr->glVertexStream3dvATI(stream, coords);
}

static void REGAL_CALL debug_glVertexStream4sATI(GLenum stream, GLshort x, GLshort y, GLshort z, GLshort w)
{
  RegalContext * rCtx = GET_REGAL_CONTEXT();
  DispatchStateScopedStepDown stepDown(rCtx->dsp);
  rCtx->dsp->curr->glVertexStream4sATI(stream, x, y, z, w);
}

static void REGAL_CALL debug_glVertexStream4svATI(GLenum stream, const GLshort *coords)
{
  RegalContext * rCtx = GET_REGAL_CONTEXT();
  DispatchStateScopedStepDown stepDown(rCtx->dsp);
  rCtx->dsp->curr->glVertexStream4svATI(stream, coords);
}

static void REGAL_CALL debug_glVertexStream4iATI(GLenum stream, GLint x, GLint y, GLint z, GLint w)
{
  RegalContext * rCtx = GET_REGAL_CONTEXT();
  DispatchStateScopedStepDown stepDown(rCtx->dsp);
  rCtx->dsp->curr->glVertexStream4iATI(stream, x, y, z, w);
}

static void REGAL_CALL debug_glVertexStream4ivATI(GLenum stream, const GLint *coords)
{
  RegalContext * rCtx = GET_REGAL_CONTEXT();
  DispatchStateScopedStepDown stepDown(rCtx->dsp);
  rCtx->dsp->curr->glVertexStream4ivATI(stream, coords);
}

static void REGAL_CALL debug_glVertexStream4fATI(GLenum stream, GLfloat x, GLfloat y, GLfloat z, GLfloat w)
{
  RegalContext * rCtx = GET_REGAL_CONTEXT();
  DispatchStateScopedStepDown stepDown(rCtx->dsp);
  rCtx->dsp->curr->glVertexStream4fATI(stream, x, y, z, w);
}

static void REGAL_CALL debug_glVertexStream4fvATI(GLenum stream, const GLfloat *coords)
{
  RegalContext * rCtx = GET_REGAL_CONTEXT();
  DispatchStateScopedStepDown stepDown(rCtx->dsp);
  rCtx->dsp->curr->glVertexStream4fvATI(stream, coords);
}

static void REGAL_CALL debug_glVertexStream4dATI(GLenum stream, GLdouble x, GLdouble y, GLdouble z, GLdouble w)
{
  RegalContext * rCtx = GET_REGAL_CONTEXT();
  DispatchStateScopedStepDown stepDown(rCtx->dsp);
  rCtx->dsp->curr->glVertexStream4dATI(stream, x, y, z, w);
}

static void REGAL_CALL debug_glVertexStream4dvATI(GLenum stream, const GLdouble *coords)
{
  RegalContext * rCtx = GET_REGAL_CONTEXT();
  DispatchStateScopedStepDown stepDown(rCtx->dsp);
  rCtx->dsp->curr->glVertexStream4dvATI(stream, coords);
}

static void REGAL_CALL debug_glNormalStream3bATI(GLenum stream, GLbyte x, GLbyte y, GLbyte z)
{
  RegalContext * rCtx = GET_REGAL_CONTEXT();
  DispatchStateScopedStepDown stepDown(rCtx->dsp);
  rCtx->dsp->curr->glNormalStream3bATI(stream, x, y, z);
}

static void REGAL_CALL debug_glNormalStream3bvATI(GLenum stream, const GLbyte *coords)
{
  RegalContext * rCtx = GET_REGAL_CONTEXT();
  DispatchStateScopedStepDown stepDown(rCtx->dsp);
  rCtx->dsp->curr->glNormalStream3bvATI(stream, coords);
}

static void REGAL_CALL debug_glNormalStream3sATI(GLenum stream, GLshort x, GLshort y, GLshort z)
{
  RegalContext * rCtx = GET_REGAL_CONTEXT();
  DispatchStateScopedStepDown stepDown(rCtx->dsp);
  rCtx->dsp->curr->glNormalStream3sATI(stream, x, y, z);
}

static void REGAL_CALL debug_glNormalStream3svATI(GLenum stream, const GLshort *coords)
{
  RegalContext * rCtx = GET_REGAL_CONTEXT();
  DispatchStateScopedStepDown stepDown(rCtx->dsp);
  rCtx->dsp->curr->glNormalStream3svATI(stream, coords);
}

static void REGAL_CALL debug_glNormalStream3iATI(GLenum stream, GLint x, GLint y, GLint z)
{
  RegalContext * rCtx = GET_REGAL_CONTEXT();
  DispatchStateScopedStepDown stepDown(rCtx->dsp);
  rCtx->dsp->curr->glNormalStream3iATI(stream, x, y, z);
}

static void REGAL_CALL debug_glNormalStream3ivATI(GLenum stream, const GLint *coords)
{
  RegalContext * rCtx = GET_REGAL_CONTEXT();
  DispatchStateScopedStepDown stepDown(rCtx->dsp);
  rCtx->dsp->curr->glNormalStream3ivATI(stream, coords);
}

static void REGAL_CALL debug_glNormalStream3fATI(GLenum stream, GLfloat x, GLfloat y, GLfloat z)
{
  RegalContext * rCtx = GET_REGAL_CONTEXT();
  DispatchStateScopedStepDown stepDown(rCtx->dsp);
  rCtx->dsp->curr->glNormalStream3fATI(stream, x, y, z);
}

static void REGAL_CALL debug_glNormalStream3fvATI(GLenum stream, const GLfloat *coords)
{
  RegalContext * rCtx = GET_REGAL_CONTEXT();
  DispatchStateScopedStepDown stepDown(rCtx->dsp);
  rCtx->dsp->curr->glNormalStream3fvATI(stream, coords);
}

static void REGAL_CALL debug_glNormalStream3dATI(GLenum stream, GLdouble x, GLdouble y, GLdouble z)
{
  RegalContext * rCtx = GET_REGAL_CONTEXT();
  DispatchStateScopedStepDown stepDown(rCtx->dsp);
  rCtx->dsp->curr->glNormalStream3dATI(stream, x, y, z);
}

static void REGAL_CALL debug_glNormalStream3dvATI(GLenum stream, const GLdouble *coords)
{
  RegalContext * rCtx = GET_REGAL_CONTEXT();
  DispatchStateScopedStepDown stepDown(rCtx->dsp);
  rCtx->dsp->curr->glNormalStream3dvATI(stream, coords);
}

static void REGAL_CALL debug_glClientActiveVertexStreamATI(GLenum stream)
{
  RegalContext * rCtx = GET_REGAL_CONTEXT();
  DispatchStateScopedStepDown stepDown(rCtx->dsp);
  rCtx->dsp->curr->glClientActiveVertexStreamATI(stream);
}

static void REGAL_CALL debug_glVertexBlendEnviATI(GLenum pname, GLint param)
{
  RegalContext * rCtx = GET_REGAL_CONTEXT();
  DispatchStateScopedStepDown stepDown(rCtx->dsp);
  rCtx->dsp->curr->glVertexBlendEnviATI(pname, param);
}

static void REGAL_CALL debug_glVertexBlendEnvfATI(GLenum pname, GLfloat param)
{
  RegalContext * rCtx = GET_REGAL_CONTEXT();
  DispatchStateScopedStepDown stepDown(rCtx->dsp);
  rCtx->dsp->curr->glVertexBlendEnvfATI(pname, param);
}

// GL_ATI_element_array

static void REGAL_CALL debug_glElementPointerATI(GLenum type, const GLvoid *pointer)
{
  RegalContext * rCtx = GET_REGAL_CONTEXT();
  DispatchStateScopedStepDown stepDown(rCtx->dsp);
  rCtx->dsp->curr->glElementPointerATI(type, pointer);
}

static void REGAL_CALL debug_glDrawElementArrayATI(GLenum mode, GLsizei count)
{
  RegalContext * rCtx = GET_REGAL_CONTEXT();
  DispatchStateScopedStepDown stepDown(rCtx->dsp);
  rCtx->dsp->curr->glDrawElementArrayATI(mode, count);
}

static void REGAL_CALL debug_glDrawRangeElementArrayATI(GLenum mode, GLuint start, GLuint end, GLsizei count)
{
  RegalContext * rCtx = GET_REGAL_CONTEXT();
  DispatchStateScopedStepDown stepDown(rCtx->dsp);
  rCtx->dsp->curr->glDrawRangeElementArrayATI(mode, start, end, count);
}

// GL_SUN_mesh_array

static void REGAL_CALL debug_glDrawMeshArraysSUN(GLenum mode, GLint first, GLsizei count, GLsizei width)
{
  RegalContext * rCtx = GET_REGAL_CONTEXT();
  DispatchStateScopedStepDown stepDown(rCtx->dsp);
  rCtx->dsp->curr->glDrawMeshArraysSUN(mode, first, count, width);
}

// GL_NV_occlusion_query

static void REGAL_CALL debug_glGenOcclusionQueriesNV(GLsizei n, GLuint *ids)
{
  RegalContext * rCtx = GET_REGAL_CONTEXT();
  DispatchStateScopedStepDown stepDown(rCtx->dsp);
  rCtx->dsp->curr->glGenOcclusionQueriesNV(n, ids);
}

static void REGAL_CALL debug_glDeleteOcclusionQueriesNV(GLsizei n, const GLuint *ids)
{
  RegalContext * rCtx = GET_REGAL_CONTEXT();
  DispatchStateScopedStepDown stepDown(rCtx->dsp);
  rCtx->dsp->curr->glDeleteOcclusionQueriesNV(n, ids);
}

static GLboolean REGAL_CALL debug_glIsOcclusionQueryNV(GLuint id)
{
  RegalContext * rCtx = GET_REGAL_CONTEXT();
  DispatchStateScopedStepDown stepDown(rCtx->dsp);
  GLboolean  ret = rCtx->dsp->curr->glIsOcclusionQueryNV(id);
  return ret;
}

static void REGAL_CALL debug_glBeginOcclusionQueryNV(GLuint id)
{
  RegalContext * rCtx = GET_REGAL_CONTEXT();
  DispatchStateScopedStepDown stepDown(rCtx->dsp);
  rCtx->dsp->curr->glBeginOcclusionQueryNV(id);
}

static void REGAL_CALL debug_glEndOcclusionQueryNV(void)
{
  RegalContext * rCtx = GET_REGAL_CONTEXT();
  DispatchStateScopedStepDown stepDown(rCtx->dsp);
  rCtx->dsp->curr->glEndOcclusionQueryNV();
}

static void REGAL_CALL debug_glGetOcclusionQueryivNV(GLuint id, GLenum pname, GLint *params)
{
  RegalContext * rCtx = GET_REGAL_CONTEXT();
  DispatchStateScopedStepDown stepDown(rCtx->dsp);
  rCtx->dsp->curr->glGetOcclusionQueryivNV(id, pname, params);
}

static void REGAL_CALL debug_glGetOcclusionQueryuivNV(GLuint id, GLenum pname, GLuint *params)
{
  RegalContext * rCtx = GET_REGAL_CONTEXT();
  DispatchStateScopedStepDown stepDown(rCtx->dsp);
  rCtx->dsp->curr->glGetOcclusionQueryuivNV(id, pname, params);
}

// GL_NV_point_sprite

static void REGAL_CALL debug_glPointParameteriNV(GLenum pname, GLint param)
{
  RegalContext * rCtx = GET_REGAL_CONTEXT();
  DispatchStateScopedStepDown stepDown(rCtx->dsp);
  rCtx->dsp->curr->glPointParameteriNV(pname, param);
}

static void REGAL_CALL debug_glPointParameterivNV(GLenum pname, const GLint *params)
{
  RegalContext * rCtx = GET_REGAL_CONTEXT();
  DispatchStateScopedStepDown stepDown(rCtx->dsp);
  rCtx->dsp->curr->glPointParameterivNV(pname, params);
}

// GL_EXT_stencil_two_side

static void REGAL_CALL debug_glActiveStencilFaceEXT(GLenum face)
{
  RegalContext * rCtx = GET_REGAL_CONTEXT();
  DispatchStateScopedStepDown stepDown(rCtx->dsp);
  rCtx->dsp->curr->glActiveStencilFaceEXT(face);
}

// GL_APPLE_element_array

static void REGAL_CALL debug_glElementPointerAPPLE(GLenum type, const GLvoid *pointer)
{
  RegalContext * rCtx = GET_REGAL_CONTEXT();
  DispatchStateScopedStepDown stepDown(rCtx->dsp);
  rCtx->dsp->curr->glElementPointerAPPLE(type, pointer);
}

static void REGAL_CALL debug_glDrawElementArrayAPPLE(GLenum mode, GLint first, GLsizei count)
{
  RegalContext * rCtx = GET_REGAL_CONTEXT();
  DispatchStateScopedStepDown stepDown(rCtx->dsp);
  rCtx->dsp->curr->glDrawElementArrayAPPLE(mode, first, count);
}

static void REGAL_CALL debug_glDrawRangeElementArrayAPPLE(GLenum mode, GLuint start, GLuint end, GLint first, GLsizei count)
{
  RegalContext * rCtx = GET_REGAL_CONTEXT();
  DispatchStateScopedStepDown stepDown(rCtx->dsp);
  rCtx->dsp->curr->glDrawRangeElementArrayAPPLE(mode, start, end, first, count);
}

static void REGAL_CALL debug_glMultiDrawElementArrayAPPLE(GLenum mode, const GLint *first, const GLsizei *count, GLsizei primcount)
{
  RegalContext * rCtx = GET_REGAL_CONTEXT();
  DispatchStateScopedStepDown stepDown(rCtx->dsp);
  rCtx->dsp->curr->glMultiDrawElementArrayAPPLE(mode, first, count, primcount);
}

static void REGAL_CALL debug_glMultiDrawRangeElementArrayAPPLE(GLenum mode, GLuint start, GLuint end, const GLint *first, const GLsizei *count, GLsizei primcount)
{
  RegalContext * rCtx = GET_REGAL_CONTEXT();
  DispatchStateScopedStepDown stepDown(rCtx->dsp);
  rCtx->dsp->curr->glMultiDrawRangeElementArrayAPPLE(mode, start, end, first, count, primcount);
}

// GL_APPLE_fence

static void REGAL_CALL debug_glGenFencesAPPLE(GLsizei n, GLuint *fences)
{
  RegalContext * rCtx = GET_REGAL_CONTEXT();
  DispatchStateScopedStepDown stepDown(rCtx->dsp);
  rCtx->dsp->curr->glGenFencesAPPLE(n, fences);
}

static void REGAL_CALL debug_glDeleteFencesAPPLE(GLsizei n, const GLuint *fences)
{
  RegalContext * rCtx = GET_REGAL_CONTEXT();
  DispatchStateScopedStepDown stepDown(rCtx->dsp);
  rCtx->dsp->curr->glDeleteFencesAPPLE(n, fences);
}

static void REGAL_CALL debug_glSetFenceAPPLE(GLuint fence)
{
  RegalContext * rCtx = GET_REGAL_CONTEXT();
  DispatchStateScopedStepDown stepDown(rCtx->dsp);
  rCtx->dsp->curr->glSetFenceAPPLE(fence);
}

static GLboolean REGAL_CALL debug_glIsFenceAPPLE(GLuint fence)
{
  RegalContext * rCtx = GET_REGAL_CONTEXT();
  DispatchStateScopedStepDown stepDown(rCtx->dsp);
  GLboolean  ret = rCtx->dsp->curr->glIsFenceAPPLE(fence);
  return ret;
}

static GLboolean REGAL_CALL debug_glTestFenceAPPLE(GLuint fence)
{
  RegalContext * rCtx = GET_REGAL_CONTEXT();
  DispatchStateScopedStepDown stepDown(rCtx->dsp);
  GLboolean  ret = rCtx->dsp->curr->glTestFenceAPPLE(fence);
  return ret;
}

static void REGAL_CALL debug_glFinishFenceAPPLE(GLuint fence)
{
  RegalContext * rCtx = GET_REGAL_CONTEXT();
  DispatchStateScopedStepDown stepDown(rCtx->dsp);
  rCtx->dsp->curr->glFinishFenceAPPLE(fence);
}

static GLboolean REGAL_CALL debug_glTestObjectAPPLE(GLenum object, GLuint name)
{
  RegalContext * rCtx = GET_REGAL_CONTEXT();
  DispatchStateScopedStepDown stepDown(rCtx->dsp);
  GLboolean  ret = rCtx->dsp->curr->glTestObjectAPPLE(object, name);
  return ret;
}

static void REGAL_CALL debug_glFinishObjectAPPLE(GLenum object, GLint name)
{
  RegalContext * rCtx = GET_REGAL_CONTEXT();
  DispatchStateScopedStepDown stepDown(rCtx->dsp);
  rCtx->dsp->curr->glFinishObjectAPPLE(object, name);
}

// GL_APPLE_vertex_array_object

static void REGAL_CALL debug_glBindVertexArrayAPPLE(GLuint array)
{
  RegalContext * rCtx = GET_REGAL_CONTEXT();
  DispatchStateScopedStepDown stepDown(rCtx->dsp);
  rCtx->dsp->curr->glBindVertexArrayAPPLE(array);
}

static void REGAL_CALL debug_glDeleteVertexArraysAPPLE(GLsizei n, const GLuint *arrays)
{
  RegalContext * rCtx = GET_REGAL_CONTEXT();
  DispatchStateScopedStepDown stepDown(rCtx->dsp);
  rCtx->dsp->curr->glDeleteVertexArraysAPPLE(n, arrays);
}

static void REGAL_CALL debug_glGenVertexArraysAPPLE(GLsizei n, const GLuint *arrays)
{
  RegalContext * rCtx = GET_REGAL_CONTEXT();
  DispatchStateScopedStepDown stepDown(rCtx->dsp);
  rCtx->dsp->curr->glGenVertexArraysAPPLE(n, arrays);
}

static GLboolean REGAL_CALL debug_glIsVertexArrayAPPLE(GLuint array)
{
  RegalContext * rCtx = GET_REGAL_CONTEXT();
  DispatchStateScopedStepDown stepDown(rCtx->dsp);
  GLboolean  ret = rCtx->dsp->curr->glIsVertexArrayAPPLE(array);
  return ret;
}

// GL_APPLE_vertex_array_range

static void REGAL_CALL debug_glVertexArrayRangeAPPLE(GLsizei length, GLvoid *pointer)
{
  RegalContext * rCtx = GET_REGAL_CONTEXT();
  DispatchStateScopedStepDown stepDown(rCtx->dsp);
  rCtx->dsp->curr->glVertexArrayRangeAPPLE(length, pointer);
}

static void REGAL_CALL debug_glFlushVertexArrayRangeAPPLE(GLsizei length, GLvoid *pointer)
{
  RegalContext * rCtx = GET_REGAL_CONTEXT();
  DispatchStateScopedStepDown stepDown(rCtx->dsp);
  rCtx->dsp->curr->glFlushVertexArrayRangeAPPLE(length, pointer);
}

static void REGAL_CALL debug_glVertexArrayParameteriAPPLE(GLenum pname, GLint param)
{
  RegalContext * rCtx = GET_REGAL_CONTEXT();
  DispatchStateScopedStepDown stepDown(rCtx->dsp);
  rCtx->dsp->curr->glVertexArrayParameteriAPPLE(pname, param);
}

// GL_ATI_draw_buffers

static void REGAL_CALL debug_glDrawBuffersATI(GLsizei n, const GLenum *bufs)
{
  RegalContext * rCtx = GET_REGAL_CONTEXT();
  DispatchStateScopedStepDown stepDown(rCtx->dsp);
  rCtx->dsp->curr->glDrawBuffersATI(n, bufs);
}

// GL_NV_fragment_program

static void REGAL_CALL debug_glProgramNamedParameter4fNV(GLuint id, GLsizei len, const GLubyte *name, GLfloat x, GLfloat y, GLfloat z, GLfloat w)
{
  RegalContext * rCtx = GET_REGAL_CONTEXT();
  DispatchStateScopedStepDown stepDown(rCtx->dsp);
  rCtx->dsp->curr->glProgramNamedParameter4fNV(id, len, name, x, y, z, w);
}

static void REGAL_CALL debug_glProgramNamedParameter4dNV(GLuint id, GLsizei len, const GLubyte *name, GLdouble x, GLdouble y, GLdouble z, GLdouble w)
{
  RegalContext * rCtx = GET_REGAL_CONTEXT();
  DispatchStateScopedStepDown stepDown(rCtx->dsp);
  rCtx->dsp->curr->glProgramNamedParameter4dNV(id, len, name, x, y, z, w);
}

static void REGAL_CALL debug_glProgramNamedParameter4fvNV(GLuint id, GLsizei len, const GLubyte *name, const GLfloat *v)
{
  RegalContext * rCtx = GET_REGAL_CONTEXT();
  DispatchStateScopedStepDown stepDown(rCtx->dsp);
  rCtx->dsp->curr->glProgramNamedParameter4fvNV(id, len, name, v);
}

static void REGAL_CALL debug_glProgramNamedParameter4dvNV(GLuint id, GLsizei len, const GLubyte *name, const GLdouble *v)
{
  RegalContext * rCtx = GET_REGAL_CONTEXT();
  DispatchStateScopedStepDown stepDown(rCtx->dsp);
  rCtx->dsp->curr->glProgramNamedParameter4dvNV(id, len, name, v);
}

static void REGAL_CALL debug_glGetProgramNamedParameterfvNV(GLuint id, GLsizei len, const GLubyte *name, GLfloat *params)
{
  RegalContext * rCtx = GET_REGAL_CONTEXT();
  DispatchStateScopedStepDown stepDown(rCtx->dsp);
  rCtx->dsp->curr->glGetProgramNamedParameterfvNV(id, len, name, params);
}

static void REGAL_CALL debug_glGetProgramNamedParameterdvNV(GLuint id, GLsizei len, const GLubyte *name, GLdouble *params)
{
  RegalContext * rCtx = GET_REGAL_CONTEXT();
  DispatchStateScopedStepDown stepDown(rCtx->dsp);
  rCtx->dsp->curr->glGetProgramNamedParameterdvNV(id, len, name, params);
}

// GL_NV_half_float

static void REGAL_CALL debug_glVertex2hNV(GLhalfNV x, GLhalfNV y)
{
  RegalContext * rCtx = GET_REGAL_CONTEXT();
  DispatchStateScopedStepDown stepDown(rCtx->dsp);
  rCtx->dsp->curr->glVertex2hNV(x, y);
}

static void REGAL_CALL debug_glVertex2hvNV(const GLhalfNV *v)
{
  RegalContext * rCtx = GET_REGAL_CONTEXT();
  DispatchStateScopedStepDown stepDown(rCtx->dsp);
  rCtx->dsp->curr->glVertex2hvNV(v);
}

static void REGAL_CALL debug_glVertex3hNV(GLhalfNV x, GLhalfNV y, GLhalfNV z)
{
  RegalContext * rCtx = GET_REGAL_CONTEXT();
  DispatchStateScopedStepDown stepDown(rCtx->dsp);
  rCtx->dsp->curr->glVertex3hNV(x, y, z);
}

static void REGAL_CALL debug_glVertex3hvNV(const GLhalfNV *v)
{
  RegalContext * rCtx = GET_REGAL_CONTEXT();
  DispatchStateScopedStepDown stepDown(rCtx->dsp);
  rCtx->dsp->curr->glVertex3hvNV(v);
}

static void REGAL_CALL debug_glVertex4hNV(GLhalfNV x, GLhalfNV y, GLhalfNV z, GLhalfNV w)
{
  RegalContext * rCtx = GET_REGAL_CONTEXT();
  DispatchStateScopedStepDown stepDown(rCtx->dsp);
  rCtx->dsp->curr->glVertex4hNV(x, y, z, w);
}

static void REGAL_CALL debug_glVertex4hvNV(const GLhalfNV *v)
{
  RegalContext * rCtx = GET_REGAL_CONTEXT();
  DispatchStateScopedStepDown stepDown(rCtx->dsp);
  rCtx->dsp->curr->glVertex4hvNV(v);
}

static void REGAL_CALL debug_glNormal3hNV(GLhalfNV nx, GLhalfNV ny, GLhalfNV nz)
{
  RegalContext * rCtx = GET_REGAL_CONTEXT();
  DispatchStateScopedStepDown stepDown(rCtx->dsp);
  rCtx->dsp->curr->glNormal3hNV(nx, ny, nz);
}

static void REGAL_CALL debug_glNormal3hvNV(const GLhalfNV *v)
{
  RegalContext * rCtx = GET_REGAL_CONTEXT();
  DispatchStateScopedStepDown stepDown(rCtx->dsp);
  rCtx->dsp->curr->glNormal3hvNV(v);
}

static void REGAL_CALL debug_glColor3hNV(GLhalfNV red, GLhalfNV green, GLhalfNV blue)
{
  RegalContext * rCtx = GET_REGAL_CONTEXT();
  DispatchStateScopedStepDown stepDown(rCtx->dsp);
  rCtx->dsp->curr->glColor3hNV(red, green, blue);
}

static void REGAL_CALL debug_glColor3hvNV(const GLhalfNV *v)
{
  RegalContext * rCtx = GET_REGAL_CONTEXT();
  DispatchStateScopedStepDown stepDown(rCtx->dsp);
  rCtx->dsp->curr->glColor3hvNV(v);
}

static void REGAL_CALL debug_glColor4hNV(GLhalfNV red, GLhalfNV green, GLhalfNV blue, GLhalfNV alpha)
{
  RegalContext * rCtx = GET_REGAL_CONTEXT();
  DispatchStateScopedStepDown stepDown(rCtx->dsp);
  rCtx->dsp->curr->glColor4hNV(red, green, blue, alpha);
}

static void REGAL_CALL debug_glColor4hvNV(const GLhalfNV *v)
{
  RegalContext * rCtx = GET_REGAL_CONTEXT();
  DispatchStateScopedStepDown stepDown(rCtx->dsp);
  rCtx->dsp->curr->glColor4hvNV(v);
}

static void REGAL_CALL debug_glTexCoord1hNV(GLhalfNV s)
{
  RegalContext * rCtx = GET_REGAL_CONTEXT();
  DispatchStateScopedStepDown stepDown(rCtx->dsp);
  rCtx->dsp->curr->glTexCoord1hNV(s);
}

static void REGAL_CALL debug_glTexCoord1hvNV(const GLhalfNV *v)
{
  RegalContext * rCtx = GET_REGAL_CONTEXT();
  DispatchStateScopedStepDown stepDown(rCtx->dsp);
  rCtx->dsp->curr->glTexCoord1hvNV(v);
}

static void REGAL_CALL debug_glTexCoord2hNV(GLhalfNV s, GLhalfNV t)
{
  RegalContext * rCtx = GET_REGAL_CONTEXT();
  DispatchStateScopedStepDown stepDown(rCtx->dsp);
  rCtx->dsp->curr->glTexCoord2hNV(s, t);
}

static void REGAL_CALL debug_glTexCoord2hvNV(const GLhalfNV *v)
{
  RegalContext * rCtx = GET_REGAL_CONTEXT();
  DispatchStateScopedStepDown stepDown(rCtx->dsp);
  rCtx->dsp->curr->glTexCoord2hvNV(v);
}

static void REGAL_CALL debug_glTexCoord3hNV(GLhalfNV s, GLhalfNV t, GLhalfNV r)
{
  RegalContext * rCtx = GET_REGAL_CONTEXT();
  DispatchStateScopedStepDown stepDown(rCtx->dsp);
  rCtx->dsp->curr->glTexCoord3hNV(s, t, r);
}

static void REGAL_CALL debug_glTexCoord3hvNV(const GLhalfNV *v)
{
  RegalContext * rCtx = GET_REGAL_CONTEXT();
  DispatchStateScopedStepDown stepDown(rCtx->dsp);
  rCtx->dsp->curr->glTexCoord3hvNV(v);
}

static void REGAL_CALL debug_glTexCoord4hNV(GLhalfNV s, GLhalfNV t, GLhalfNV r, GLhalfNV q)
{
  RegalContext * rCtx = GET_REGAL_CONTEXT();
  DispatchStateScopedStepDown stepDown(rCtx->dsp);
  rCtx->dsp->curr->glTexCoord4hNV(s, t, r, q);
}

static void REGAL_CALL debug_glTexCoord4hvNV(const GLhalfNV *v)
{
  RegalContext * rCtx = GET_REGAL_CONTEXT();
  DispatchStateScopedStepDown stepDown(rCtx->dsp);
  rCtx->dsp->curr->glTexCoord4hvNV(v);
}

static void REGAL_CALL debug_glMultiTexCoord1hNV(GLenum target, GLhalfNV s)
{
  RegalContext * rCtx = GET_REGAL_CONTEXT();
  DispatchStateScopedStepDown stepDown(rCtx->dsp);
  rCtx->dsp->curr->glMultiTexCoord1hNV(target, s);
}

static void REGAL_CALL debug_glMultiTexCoord1hvNV(GLenum target, const GLhalfNV *v)
{
  RegalContext * rCtx = GET_REGAL_CONTEXT();
  DispatchStateScopedStepDown stepDown(rCtx->dsp);
  rCtx->dsp->curr->glMultiTexCoord1hvNV(target, v);
}

static void REGAL_CALL debug_glMultiTexCoord2hNV(GLenum target, GLhalfNV s, GLhalfNV t)
{
  RegalContext * rCtx = GET_REGAL_CONTEXT();
  DispatchStateScopedStepDown stepDown(rCtx->dsp);
  rCtx->dsp->curr->glMultiTexCoord2hNV(target, s, t);
}

static void REGAL_CALL debug_glMultiTexCoord2hvNV(GLenum target, const GLhalfNV *v)
{
  RegalContext * rCtx = GET_REGAL_CONTEXT();
  DispatchStateScopedStepDown stepDown(rCtx->dsp);
  rCtx->dsp->curr->glMultiTexCoord2hvNV(target, v);
}

static void REGAL_CALL debug_glMultiTexCoord3hNV(GLenum target, GLhalfNV s, GLhalfNV t, GLhalfNV r)
{
  RegalContext * rCtx = GET_REGAL_CONTEXT();
  DispatchStateScopedStepDown stepDown(rCtx->dsp);
  rCtx->dsp->curr->glMultiTexCoord3hNV(target, s, t, r);
}

static void REGAL_CALL debug_glMultiTexCoord3hvNV(GLenum target, const GLhalfNV *v)
{
  RegalContext * rCtx = GET_REGAL_CONTEXT();
  DispatchStateScopedStepDown stepDown(rCtx->dsp);
  rCtx->dsp->curr->glMultiTexCoord3hvNV(target, v);
}

static void REGAL_CALL debug_glMultiTexCoord4hNV(GLenum target, GLhalfNV s, GLhalfNV t, GLhalfNV r, GLhalfNV q)
{
  RegalContext * rCtx = GET_REGAL_CONTEXT();
  DispatchStateScopedStepDown stepDown(rCtx->dsp);
  rCtx->dsp->curr->glMultiTexCoord4hNV(target, s, t, r, q);
}

static void REGAL_CALL debug_glMultiTexCoord4hvNV(GLenum target, const GLhalfNV *v)
{
  RegalContext * rCtx = GET_REGAL_CONTEXT();
  DispatchStateScopedStepDown stepDown(rCtx->dsp);
  rCtx->dsp->curr->glMultiTexCoord4hvNV(target, v);
}

static void REGAL_CALL debug_glFogCoordhNV(GLhalfNV coord)
{
  RegalContext * rCtx = GET_REGAL_CONTEXT();
  DispatchStateScopedStepDown stepDown(rCtx->dsp);
  rCtx->dsp->curr->glFogCoordhNV(coord);
}

static void REGAL_CALL debug_glFogCoordhvNV(const GLhalfNV *coord)
{
  RegalContext * rCtx = GET_REGAL_CONTEXT();
  DispatchStateScopedStepDown stepDown(rCtx->dsp);
  rCtx->dsp->curr->glFogCoordhvNV(coord);
}

static void REGAL_CALL debug_glSecondaryColor3hNV(GLhalfNV red, GLhalfNV green, GLhalfNV blue)
{
  RegalContext * rCtx = GET_REGAL_CONTEXT();
  DispatchStateScopedStepDown stepDown(rCtx->dsp);
  rCtx->dsp->curr->glSecondaryColor3hNV(red, green, blue);
}

static void REGAL_CALL debug_glSecondaryColor3hvNV(const GLhalfNV *v)
{
  RegalContext * rCtx = GET_REGAL_CONTEXT();
  DispatchStateScopedStepDown stepDown(rCtx->dsp);
  rCtx->dsp->curr->glSecondaryColor3hvNV(v);
}

static void REGAL_CALL debug_glVertexWeighthNV(GLhalfNV weight)
{
  RegalContext * rCtx = GET_REGAL_CONTEXT();
  DispatchStateScopedStepDown stepDown(rCtx->dsp);
  rCtx->dsp->curr->glVertexWeighthNV(weight);
}

static void REGAL_CALL debug_glVertexWeighthvNV(const GLhalfNV *weight)
{
  RegalContext * rCtx = GET_REGAL_CONTEXT();
  DispatchStateScopedStepDown stepDown(rCtx->dsp);
  rCtx->dsp->curr->glVertexWeighthvNV(weight);
}

static void REGAL_CALL debug_glVertexAttrib1hNV(GLuint index, GLhalfNV x)
{
  RegalContext * rCtx = GET_REGAL_CONTEXT();
  DispatchStateScopedStepDown stepDown(rCtx->dsp);
  rCtx->dsp->curr->glVertexAttrib1hNV(index, x);
}

static void REGAL_CALL debug_glVertexAttrib1hvNV(GLuint index, const GLhalfNV *v)
{
  RegalContext * rCtx = GET_REGAL_CONTEXT();
  DispatchStateScopedStepDown stepDown(rCtx->dsp);
  rCtx->dsp->curr->glVertexAttrib1hvNV(index, v);
}

static void REGAL_CALL debug_glVertexAttrib2hNV(GLuint index, GLhalfNV x, GLhalfNV y)
{
  RegalContext * rCtx = GET_REGAL_CONTEXT();
  DispatchStateScopedStepDown stepDown(rCtx->dsp);
  rCtx->dsp->curr->glVertexAttrib2hNV(index, x, y);
}

static void REGAL_CALL debug_glVertexAttrib2hvNV(GLuint index, const GLhalfNV *v)
{
  RegalContext * rCtx = GET_REGAL_CONTEXT();
  DispatchStateScopedStepDown stepDown(rCtx->dsp);
  rCtx->dsp->curr->glVertexAttrib2hvNV(index, v);
}

static void REGAL_CALL debug_glVertexAttrib3hNV(GLuint index, GLhalfNV x, GLhalfNV y, GLhalfNV z)
{
  RegalContext * rCtx = GET_REGAL_CONTEXT();
  DispatchStateScopedStepDown stepDown(rCtx->dsp);
  rCtx->dsp->curr->glVertexAttrib3hNV(index, x, y, z);
}

static void REGAL_CALL debug_glVertexAttrib3hvNV(GLuint index, const GLhalfNV *v)
{
  RegalContext * rCtx = GET_REGAL_CONTEXT();
  DispatchStateScopedStepDown stepDown(rCtx->dsp);
  rCtx->dsp->curr->glVertexAttrib3hvNV(index, v);
}

static void REGAL_CALL debug_glVertexAttrib4hNV(GLuint index, GLhalfNV x, GLhalfNV y, GLhalfNV z, GLhalfNV w)
{
  RegalContext * rCtx = GET_REGAL_CONTEXT();
  DispatchStateScopedStepDown stepDown(rCtx->dsp);
  rCtx->dsp->curr->glVertexAttrib4hNV(index, x, y, z, w);
}

static void REGAL_CALL debug_glVertexAttrib4hvNV(GLuint index, const GLhalfNV *v)
{
  RegalContext * rCtx = GET_REGAL_CONTEXT();
  DispatchStateScopedStepDown stepDown(rCtx->dsp);
  rCtx->dsp->curr->glVertexAttrib4hvNV(index, v);
}

static void REGAL_CALL debug_glVertexAttribs1hvNV(GLuint index, GLsizei count, const GLhalfNV *v)
{
  RegalContext * rCtx = GET_REGAL_CONTEXT();
  DispatchStateScopedStepDown stepDown(rCtx->dsp);
  rCtx->dsp->curr->glVertexAttribs1hvNV(index, count, v);
}

static void REGAL_CALL debug_glVertexAttribs2hvNV(GLuint index, GLsizei count, const GLhalfNV *v)
{
  RegalContext * rCtx = GET_REGAL_CONTEXT();
  DispatchStateScopedStepDown stepDown(rCtx->dsp);
  rCtx->dsp->curr->glVertexAttribs2hvNV(index, count, v);
}

static void REGAL_CALL debug_glVertexAttribs3hvNV(GLuint index, GLsizei count, const GLhalfNV *v)
{
  RegalContext * rCtx = GET_REGAL_CONTEXT();
  DispatchStateScopedStepDown stepDown(rCtx->dsp);
  rCtx->dsp->curr->glVertexAttribs3hvNV(index, count, v);
}

static void REGAL_CALL debug_glVertexAttribs4hvNV(GLuint index, GLsizei count, const GLhalfNV *v)
{
  RegalContext * rCtx = GET_REGAL_CONTEXT();
  DispatchStateScopedStepDown stepDown(rCtx->dsp);
  rCtx->dsp->curr->glVertexAttribs4hvNV(index, count, v);
}

// GL_NV_pixel_data_range

static void REGAL_CALL debug_glPixelDataRangeNV(GLenum target, GLsizei size, const GLvoid *pointer)
{
  RegalContext * rCtx = GET_REGAL_CONTEXT();
  DispatchStateScopedStepDown stepDown(rCtx->dsp);
  rCtx->dsp->curr->glPixelDataRangeNV(target, size, pointer);
}

static void REGAL_CALL debug_glFlushPixelDataRangeNV(GLenum target)
{
  RegalContext * rCtx = GET_REGAL_CONTEXT();
  DispatchStateScopedStepDown stepDown(rCtx->dsp);
  rCtx->dsp->curr->glFlushPixelDataRangeNV(target);
}

// GL_NV_primitive_restart

static void REGAL_CALL debug_glPrimitiveRestartNV(void)
{
  RegalContext * rCtx = GET_REGAL_CONTEXT();
  DispatchStateScopedStepDown stepDown(rCtx->dsp);
  rCtx->dsp->curr->glPrimitiveRestartNV();
}

static void REGAL_CALL debug_glPrimitiveRestartIndexNV(GLuint index)
{
  RegalContext * rCtx = GET_REGAL_CONTEXT();
  DispatchStateScopedStepDown stepDown(rCtx->dsp);
  rCtx->dsp->curr->glPrimitiveRestartIndexNV(index);
}

// GL_ATI_map_object_buffer

static GLvoid *REGAL_CALL debug_glMapObjectBufferATI(GLuint buffer)
{
  RegalContext * rCtx = GET_REGAL_CONTEXT();
  DispatchStateScopedStepDown stepDown(rCtx->dsp);
  GLvoid * ret = rCtx->dsp->curr->glMapObjectBufferATI(buffer);
  return ret;
}

static void REGAL_CALL debug_glUnmapObjectBufferATI(GLuint buffer)
{
  RegalContext * rCtx = GET_REGAL_CONTEXT();
  DispatchStateScopedStepDown stepDown(rCtx->dsp);
  rCtx->dsp->curr->glUnmapObjectBufferATI(buffer);
}

// GL_ATI_separate_stencil

static void REGAL_CALL debug_glStencilOpSeparateATI(GLenum face, GLenum sfail, GLenum dpfail, GLenum dppass)
{
  RegalContext * rCtx = GET_REGAL_CONTEXT();
  DispatchStateScopedStepDown stepDown(rCtx->dsp);
  rCtx->dsp->curr->glStencilOpSeparateATI(face, sfail, dpfail, dppass);
}

static void REGAL_CALL debug_glStencilFuncSeparateATI(GLenum frontfunc, GLenum backfunc, GLint ref, GLuint mask)
{
  RegalContext * rCtx = GET_REGAL_CONTEXT();
  DispatchStateScopedStepDown stepDown(rCtx->dsp);
  rCtx->dsp->curr->glStencilFuncSeparateATI(frontfunc, backfunc, ref, mask);
}

// GL_ATI_vertex_attrib_array_object

static void REGAL_CALL debug_glVertexAttribArrayObjectATI(GLuint index, GLint size, GLenum type, GLboolean normalized, GLsizei stride, GLuint buffer, GLuint offset)
{
  RegalContext * rCtx = GET_REGAL_CONTEXT();
  DispatchStateScopedStepDown stepDown(rCtx->dsp);
  rCtx->dsp->curr->glVertexAttribArrayObjectATI(index, size, type, normalized, stride, buffer, offset);
}

static void REGAL_CALL debug_glGetVertexAttribArrayObjectfvATI(GLuint index, GLenum pname, GLfloat *params)
{
  RegalContext * rCtx = GET_REGAL_CONTEXT();
  DispatchStateScopedStepDown stepDown(rCtx->dsp);
  rCtx->dsp->curr->glGetVertexAttribArrayObjectfvATI(index, pname, params);
}

static void REGAL_CALL debug_glGetVertexAttribArrayObjectivATI(GLuint index, GLenum pname, GLint *params)
{
  RegalContext * rCtx = GET_REGAL_CONTEXT();
  DispatchStateScopedStepDown stepDown(rCtx->dsp);
  rCtx->dsp->curr->glGetVertexAttribArrayObjectivATI(index, pname, params);
}

// GL_EXT_depth_bounds_test

static void REGAL_CALL debug_glDepthBoundsEXT(GLclampd zmin, GLclampd zmax)
{
  RegalContext * rCtx = GET_REGAL_CONTEXT();
  DispatchStateScopedStepDown stepDown(rCtx->dsp);
  rCtx->dsp->curr->glDepthBoundsEXT(zmin, zmax);
}

// GL_EXT_blend_equation_separate

static void REGAL_CALL debug_glBlendEquationSeparateEXT(GLenum modeRGB, GLenum modeAlpha)
{
  RegalContext * rCtx = GET_REGAL_CONTEXT();
  DispatchStateScopedStepDown stepDown(rCtx->dsp);
  rCtx->dsp->curr->glBlendEquationSeparateEXT(modeRGB, modeAlpha);
}

// GL_EXT_framebuffer_object

static GLboolean REGAL_CALL debug_glIsRenderbufferEXT(GLuint renderbuffer)
{
  RegalContext * rCtx = GET_REGAL_CONTEXT();
  DispatchStateScopedStepDown stepDown(rCtx->dsp);
  GLboolean  ret = rCtx->dsp->curr->glIsRenderbufferEXT(renderbuffer);
  return ret;
}

static void REGAL_CALL debug_glBindRenderbufferEXT(GLenum target, GLuint renderbuffer)
{
  RegalContext * rCtx = GET_REGAL_CONTEXT();
  DispatchStateScopedStepDown stepDown(rCtx->dsp);
  rCtx->dsp->curr->glBindRenderbufferEXT(target, renderbuffer);
}

static void REGAL_CALL debug_glDeleteRenderbuffersEXT(GLsizei n, const GLuint *renderbuffers)
{
  RegalContext * rCtx = GET_REGAL_CONTEXT();
  DispatchStateScopedStepDown stepDown(rCtx->dsp);
  rCtx->dsp->curr->glDeleteRenderbuffersEXT(n, renderbuffers);
}

static void REGAL_CALL debug_glGenRenderbuffersEXT(GLsizei n, GLuint *renderbuffers)
{
  RegalContext * rCtx = GET_REGAL_CONTEXT();
  DispatchStateScopedStepDown stepDown(rCtx->dsp);
  rCtx->dsp->curr->glGenRenderbuffersEXT(n, renderbuffers);
}

static void REGAL_CALL debug_glRenderbufferStorageEXT(GLenum target, GLenum internalformat, GLsizei width, GLsizei height)
{
  RegalContext * rCtx = GET_REGAL_CONTEXT();
  DispatchStateScopedStepDown stepDown(rCtx->dsp);
  rCtx->dsp->curr->glRenderbufferStorageEXT(target, internalformat, width, height);
}

static void REGAL_CALL debug_glGetRenderbufferParameterivEXT(GLenum target, GLenum pname, GLint *params)
{
  RegalContext * rCtx = GET_REGAL_CONTEXT();
  DispatchStateScopedStepDown stepDown(rCtx->dsp);
  rCtx->dsp->curr->glGetRenderbufferParameterivEXT(target, pname, params);
}

static GLboolean REGAL_CALL debug_glIsFramebufferEXT(GLuint framebuffer)
{
  RegalContext * rCtx = GET_REGAL_CONTEXT();
  DispatchStateScopedStepDown stepDown(rCtx->dsp);
  GLboolean  ret = rCtx->dsp->curr->glIsFramebufferEXT(framebuffer);
  return ret;
}

static void REGAL_CALL debug_glBindFramebufferEXT(GLenum target, GLuint framebuffer)
{
  RegalContext * rCtx = GET_REGAL_CONTEXT();
  DispatchStateScopedStepDown stepDown(rCtx->dsp);
  rCtx->dsp->curr->glBindFramebufferEXT(target, framebuffer);
}

static void REGAL_CALL debug_glDeleteFramebuffersEXT(GLsizei n, const GLuint *framebuffers)
{
  RegalContext * rCtx = GET_REGAL_CONTEXT();
  DispatchStateScopedStepDown stepDown(rCtx->dsp);
  rCtx->dsp->curr->glDeleteFramebuffersEXT(n, framebuffers);
}

static void REGAL_CALL debug_glGenFramebuffersEXT(GLsizei n, GLuint *framebuffers)
{
  RegalContext * rCtx = GET_REGAL_CONTEXT();
  DispatchStateScopedStepDown stepDown(rCtx->dsp);
  rCtx->dsp->curr->glGenFramebuffersEXT(n, framebuffers);
}

static GLenum REGAL_CALL debug_glCheckFramebufferStatusEXT(GLenum target)
{
  RegalContext * rCtx = GET_REGAL_CONTEXT();
  DispatchStateScopedStepDown stepDown(rCtx->dsp);
  GLenum  ret = rCtx->dsp->curr->glCheckFramebufferStatusEXT(target);
  return ret;
}

static void REGAL_CALL debug_glFramebufferTexture1DEXT(GLenum target, GLenum attachment, GLenum textarget, GLuint texture, GLint level)
{
  RegalContext * rCtx = GET_REGAL_CONTEXT();
  DispatchStateScopedStepDown stepDown(rCtx->dsp);
  rCtx->dsp->curr->glFramebufferTexture1DEXT(target, attachment, textarget, texture, level);
}

static void REGAL_CALL debug_glFramebufferTexture2DEXT(GLenum target, GLenum attachment, GLenum textarget, GLuint texture, GLint level)
{
  RegalContext * rCtx = GET_REGAL_CONTEXT();
  DispatchStateScopedStepDown stepDown(rCtx->dsp);
  rCtx->dsp->curr->glFramebufferTexture2DEXT(target, attachment, textarget, texture, level);
}

static void REGAL_CALL debug_glFramebufferTexture3DEXT(GLenum target, GLenum attachment, GLenum textarget, GLuint texture, GLint level, GLint zoffset)
{
  RegalContext * rCtx = GET_REGAL_CONTEXT();
  DispatchStateScopedStepDown stepDown(rCtx->dsp);
  rCtx->dsp->curr->glFramebufferTexture3DEXT(target, attachment, textarget, texture, level, zoffset);
}

static void REGAL_CALL debug_glFramebufferRenderbufferEXT(GLenum target, GLenum attachment, GLenum renderbuffertarget, GLuint renderbuffer)
{
  RegalContext * rCtx = GET_REGAL_CONTEXT();
  DispatchStateScopedStepDown stepDown(rCtx->dsp);
  rCtx->dsp->curr->glFramebufferRenderbufferEXT(target, attachment, renderbuffertarget, renderbuffer);
}

static void REGAL_CALL debug_glGetFramebufferAttachmentParameterivEXT(GLenum target, GLenum attachment, GLenum pname, GLint *params)
{
  RegalContext * rCtx = GET_REGAL_CONTEXT();
  DispatchStateScopedStepDown stepDown(rCtx->dsp);
  rCtx->dsp->curr->glGetFramebufferAttachmentParameterivEXT(target, attachment, pname, params);
}

static void REGAL_CALL debug_glGenerateMipmapEXT(GLenum target)
{
  RegalContext * rCtx = GET_REGAL_CONTEXT();
  DispatchStateScopedStepDown stepDown(rCtx->dsp);
  rCtx->dsp->curr->glGenerateMipmapEXT(target);
}

// GL_GREMEDY_string_marker

static void REGAL_CALL debug_glStringMarkerGREMEDY(GLsizei len, const GLvoid *string)
{
  RegalContext * rCtx = GET_REGAL_CONTEXT();
  DispatchStateScopedStepDown stepDown(rCtx->dsp);
  rCtx->dsp->curr->glStringMarkerGREMEDY(len, string);
}

// GL_EXT_stencil_clear_tag

static void REGAL_CALL debug_glStencilClearTagEXT(GLsizei stencilTagBits, GLuint stencilClearTag)
{
  RegalContext * rCtx = GET_REGAL_CONTEXT();
  DispatchStateScopedStepDown stepDown(rCtx->dsp);
  rCtx->dsp->curr->glStencilClearTagEXT(stencilTagBits, stencilClearTag);
}

// GL_EXT_framebuffer_blit

static void REGAL_CALL debug_glBlitFramebufferEXT(GLint srcX0, GLint srcY0, GLint srcX1, GLint srcY1, GLint dstX0, GLint dstY0, GLint dstX1, GLint dstY1, GLbitfield mask, GLenum filter)
{
  RegalContext * rCtx = GET_REGAL_CONTEXT();
  DispatchStateScopedStepDown stepDown(rCtx->dsp);
  rCtx->dsp->curr->glBlitFramebufferEXT(srcX0, srcY0, srcX1, srcY1, dstX0, dstY0, dstX1, dstY1, mask, filter);
}

// GL_EXT_framebuffer_multisample

static void REGAL_CALL debug_glRenderbufferStorageMultisampleEXT(GLenum target, GLsizei samples, GLenum internalformat, GLsizei width, GLsizei height)
{
  RegalContext * rCtx = GET_REGAL_CONTEXT();
  DispatchStateScopedStepDown stepDown(rCtx->dsp);
  rCtx->dsp->curr->glRenderbufferStorageMultisampleEXT(target, samples, internalformat, width, height);
}

// GL_EXT_timer_query

static void REGAL_CALL debug_glGetQueryObjecti64vEXT(GLuint id, GLenum pname, GLint64EXT *params)
{
  RegalContext * rCtx = GET_REGAL_CONTEXT();
  DispatchStateScopedStepDown stepDown(rCtx->dsp);
  rCtx->dsp->curr->glGetQueryObjecti64vEXT(id, pname, params);
}

static void REGAL_CALL debug_glGetQueryObjectui64vEXT(GLuint id, GLenum pname, GLuint64EXT *params)
{
  RegalContext * rCtx = GET_REGAL_CONTEXT();
  DispatchStateScopedStepDown stepDown(rCtx->dsp);
  rCtx->dsp->curr->glGetQueryObjectui64vEXT(id, pname, params);
}

// GL_EXT_gpu_program_parameters

static void REGAL_CALL debug_glProgramEnvParameters4fvEXT(GLenum target, GLuint index, GLsizei count, const GLfloat *params)
{
  RegalContext * rCtx = GET_REGAL_CONTEXT();
  DispatchStateScopedStepDown stepDown(rCtx->dsp);
  rCtx->dsp->curr->glProgramEnvParameters4fvEXT(target, index, count, params);
}

static void REGAL_CALL debug_glProgramLocalParameters4fvEXT(GLenum target, GLuint index, GLsizei count, const GLfloat *params)
{
  RegalContext * rCtx = GET_REGAL_CONTEXT();
  DispatchStateScopedStepDown stepDown(rCtx->dsp);
  rCtx->dsp->curr->glProgramLocalParameters4fvEXT(target, index, count, params);
}

// GL_APPLE_flush_buffer_range

static void REGAL_CALL debug_glBufferParameteriAPPLE(GLenum target, GLenum pname, GLint param)
{
  RegalContext * rCtx = GET_REGAL_CONTEXT();
  DispatchStateScopedStepDown stepDown(rCtx->dsp);
  rCtx->dsp->curr->glBufferParameteriAPPLE(target, pname, param);
}

static void REGAL_CALL debug_glFlushMappedBufferRangeAPPLE(GLenum target, GLintptr offset, GLsizeiptr size)
{
  RegalContext * rCtx = GET_REGAL_CONTEXT();
  DispatchStateScopedStepDown stepDown(rCtx->dsp);
  rCtx->dsp->curr->glFlushMappedBufferRangeAPPLE(target, offset, size);
}

// GL_NV_gpu_program4

static void REGAL_CALL debug_glProgramLocalParameterI4iNV(GLenum target, GLuint index, GLint x, GLint y, GLint z, GLint w)
{
  RegalContext * rCtx = GET_REGAL_CONTEXT();
  DispatchStateScopedStepDown stepDown(rCtx->dsp);
  rCtx->dsp->curr->glProgramLocalParameterI4iNV(target, index, x, y, z, w);
}

static void REGAL_CALL debug_glProgramLocalParameterI4ivNV(GLenum target, GLuint index, const GLint *params)
{
  RegalContext * rCtx = GET_REGAL_CONTEXT();
  DispatchStateScopedStepDown stepDown(rCtx->dsp);
  rCtx->dsp->curr->glProgramLocalParameterI4ivNV(target, index, params);
}

static void REGAL_CALL debug_glProgramLocalParametersI4ivNV(GLenum target, GLuint index, GLsizei count, const GLint *params)
{
  RegalContext * rCtx = GET_REGAL_CONTEXT();
  DispatchStateScopedStepDown stepDown(rCtx->dsp);
  rCtx->dsp->curr->glProgramLocalParametersI4ivNV(target, index, count, params);
}

static void REGAL_CALL debug_glProgramLocalParameterI4uiNV(GLenum target, GLuint index, GLuint x, GLuint y, GLuint z, GLuint w)
{
  RegalContext * rCtx = GET_REGAL_CONTEXT();
  DispatchStateScopedStepDown stepDown(rCtx->dsp);
  rCtx->dsp->curr->glProgramLocalParameterI4uiNV(target, index, x, y, z, w);
}

static void REGAL_CALL debug_glProgramLocalParameterI4uivNV(GLenum target, GLuint index, const GLuint *params)
{
  RegalContext * rCtx = GET_REGAL_CONTEXT();
  DispatchStateScopedStepDown stepDown(rCtx->dsp);
  rCtx->dsp->curr->glProgramLocalParameterI4uivNV(target, index, params);
}

static void REGAL_CALL debug_glProgramLocalParametersI4uivNV(GLenum target, GLuint index, GLsizei count, const GLuint *params)
{
  RegalContext * rCtx = GET_REGAL_CONTEXT();
  DispatchStateScopedStepDown stepDown(rCtx->dsp);
  rCtx->dsp->curr->glProgramLocalParametersI4uivNV(target, index, count, params);
}

static void REGAL_CALL debug_glProgramEnvParameterI4iNV(GLenum target, GLuint index, GLint x, GLint y, GLint z, GLint w)
{
  RegalContext * rCtx = GET_REGAL_CONTEXT();
  DispatchStateScopedStepDown stepDown(rCtx->dsp);
  rCtx->dsp->curr->glProgramEnvParameterI4iNV(target, index, x, y, z, w);
}

static void REGAL_CALL debug_glProgramEnvParameterI4ivNV(GLenum target, GLuint index, const GLint *params)
{
  RegalContext * rCtx = GET_REGAL_CONTEXT();
  DispatchStateScopedStepDown stepDown(rCtx->dsp);
  rCtx->dsp->curr->glProgramEnvParameterI4ivNV(target, index, params);
}

static void REGAL_CALL debug_glProgramEnvParametersI4ivNV(GLenum target, GLuint index, GLsizei count, const GLint *params)
{
  RegalContext * rCtx = GET_REGAL_CONTEXT();
  DispatchStateScopedStepDown stepDown(rCtx->dsp);
  rCtx->dsp->curr->glProgramEnvParametersI4ivNV(target, index, count, params);
}

static void REGAL_CALL debug_glProgramEnvParameterI4uiNV(GLenum target, GLuint index, GLuint x, GLuint y, GLuint z, GLuint w)
{
  RegalContext * rCtx = GET_REGAL_CONTEXT();
  DispatchStateScopedStepDown stepDown(rCtx->dsp);
  rCtx->dsp->curr->glProgramEnvParameterI4uiNV(target, index, x, y, z, w);
}

static void REGAL_CALL debug_glProgramEnvParameterI4uivNV(GLenum target, GLuint index, const GLuint *params)
{
  RegalContext * rCtx = GET_REGAL_CONTEXT();
  DispatchStateScopedStepDown stepDown(rCtx->dsp);
  rCtx->dsp->curr->glProgramEnvParameterI4uivNV(target, index, params);
}

static void REGAL_CALL debug_glProgramEnvParametersI4uivNV(GLenum target, GLuint index, GLsizei count, const GLuint *params)
{
  RegalContext * rCtx = GET_REGAL_CONTEXT();
  DispatchStateScopedStepDown stepDown(rCtx->dsp);
  rCtx->dsp->curr->glProgramEnvParametersI4uivNV(target, index, count, params);
}

static void REGAL_CALL debug_glGetProgramLocalParameterIivNV(GLenum target, GLuint index, GLint *params)
{
  RegalContext * rCtx = GET_REGAL_CONTEXT();
  DispatchStateScopedStepDown stepDown(rCtx->dsp);
  rCtx->dsp->curr->glGetProgramLocalParameterIivNV(target, index, params);
}

static void REGAL_CALL debug_glGetProgramLocalParameterIuivNV(GLenum target, GLuint index, GLuint *params)
{
  RegalContext * rCtx = GET_REGAL_CONTEXT();
  DispatchStateScopedStepDown stepDown(rCtx->dsp);
  rCtx->dsp->curr->glGetProgramLocalParameterIuivNV(target, index, params);
}

static void REGAL_CALL debug_glGetProgramEnvParameterIivNV(GLenum target, GLuint index, GLint *params)
{
  RegalContext * rCtx = GET_REGAL_CONTEXT();
  DispatchStateScopedStepDown stepDown(rCtx->dsp);
  rCtx->dsp->curr->glGetProgramEnvParameterIivNV(target, index, params);
}

static void REGAL_CALL debug_glGetProgramEnvParameterIuivNV(GLenum target, GLuint index, GLuint *params)
{
  RegalContext * rCtx = GET_REGAL_CONTEXT();
  DispatchStateScopedStepDown stepDown(rCtx->dsp);
  rCtx->dsp->curr->glGetProgramEnvParameterIuivNV(target, index, params);
}

// GL_NV_geometry_program4

static void REGAL_CALL debug_glProgramVertexLimitNV(GLenum target, GLint limit)
{
  RegalContext * rCtx = GET_REGAL_CONTEXT();
  DispatchStateScopedStepDown stepDown(rCtx->dsp);
  rCtx->dsp->curr->glProgramVertexLimitNV(target, limit);
}

static void REGAL_CALL debug_glFramebufferTextureEXT(GLenum target, GLenum attachment, GLuint texture, GLint level)
{
  RegalContext * rCtx = GET_REGAL_CONTEXT();
  DispatchStateScopedStepDown stepDown(rCtx->dsp);
  rCtx->dsp->curr->glFramebufferTextureEXT(target, attachment, texture, level);
}

static void REGAL_CALL debug_glFramebufferTextureFaceEXT(GLenum target, GLenum attachment, GLuint texture, GLint level, GLenum face)
{
  RegalContext * rCtx = GET_REGAL_CONTEXT();
  DispatchStateScopedStepDown stepDown(rCtx->dsp);
  rCtx->dsp->curr->glFramebufferTextureFaceEXT(target, attachment, texture, level, face);
}

// GL_EXT_geometry_shader4

static void REGAL_CALL debug_glProgramParameteriEXT(GLuint program, GLenum pname, GLint value)
{
  RegalContext * rCtx = GET_REGAL_CONTEXT();
  DispatchStateScopedStepDown stepDown(rCtx->dsp);
  rCtx->dsp->curr->glProgramParameteriEXT(program, pname, value);
}

// GL_NV_vertex_program4

static void REGAL_CALL debug_glVertexAttribI1iEXT(GLuint index, GLint x)
{
  RegalContext * rCtx = GET_REGAL_CONTEXT();
  DispatchStateScopedStepDown stepDown(rCtx->dsp);
  rCtx->dsp->curr->glVertexAttribI1iEXT(index, x);
}

static void REGAL_CALL debug_glVertexAttribI2iEXT(GLuint index, GLint x, GLint y)
{
  RegalContext * rCtx = GET_REGAL_CONTEXT();
  DispatchStateScopedStepDown stepDown(rCtx->dsp);
  rCtx->dsp->curr->glVertexAttribI2iEXT(index, x, y);
}

static void REGAL_CALL debug_glVertexAttribI3iEXT(GLuint index, GLint x, GLint y, GLint z)
{
  RegalContext * rCtx = GET_REGAL_CONTEXT();
  DispatchStateScopedStepDown stepDown(rCtx->dsp);
  rCtx->dsp->curr->glVertexAttribI3iEXT(index, x, y, z);
}

static void REGAL_CALL debug_glVertexAttribI4iEXT(GLuint index, GLint x, GLint y, GLint z, GLint w)
{
  RegalContext * rCtx = GET_REGAL_CONTEXT();
  DispatchStateScopedStepDown stepDown(rCtx->dsp);
  rCtx->dsp->curr->glVertexAttribI4iEXT(index, x, y, z, w);
}

static void REGAL_CALL debug_glVertexAttribI1uiEXT(GLuint index, GLuint x)
{
  RegalContext * rCtx = GET_REGAL_CONTEXT();
  DispatchStateScopedStepDown stepDown(rCtx->dsp);
  rCtx->dsp->curr->glVertexAttribI1uiEXT(index, x);
}

static void REGAL_CALL debug_glVertexAttribI2uiEXT(GLuint index, GLuint x, GLuint y)
{
  RegalContext * rCtx = GET_REGAL_CONTEXT();
  DispatchStateScopedStepDown stepDown(rCtx->dsp);
  rCtx->dsp->curr->glVertexAttribI2uiEXT(index, x, y);
}

static void REGAL_CALL debug_glVertexAttribI3uiEXT(GLuint index, GLuint x, GLuint y, GLuint z)
{
  RegalContext * rCtx = GET_REGAL_CONTEXT();
  DispatchStateScopedStepDown stepDown(rCtx->dsp);
  rCtx->dsp->curr->glVertexAttribI3uiEXT(index, x, y, z);
}

static void REGAL_CALL debug_glVertexAttribI4uiEXT(GLuint index, GLuint x, GLuint y, GLuint z, GLuint w)
{
  RegalContext * rCtx = GET_REGAL_CONTEXT();
  DispatchStateScopedStepDown stepDown(rCtx->dsp);
  rCtx->dsp->curr->glVertexAttribI4uiEXT(index, x, y, z, w);
}

static void REGAL_CALL debug_glVertexAttribI1ivEXT(GLuint index, const GLint *v)
{
  RegalContext * rCtx = GET_REGAL_CONTEXT();
  DispatchStateScopedStepDown stepDown(rCtx->dsp);
  rCtx->dsp->curr->glVertexAttribI1ivEXT(index, v);
}

static void REGAL_CALL debug_glVertexAttribI2ivEXT(GLuint index, const GLint *v)
{
  RegalContext * rCtx = GET_REGAL_CONTEXT();
  DispatchStateScopedStepDown stepDown(rCtx->dsp);
  rCtx->dsp->curr->glVertexAttribI2ivEXT(index, v);
}

static void REGAL_CALL debug_glVertexAttribI3ivEXT(GLuint index, const GLint *v)
{
  RegalContext * rCtx = GET_REGAL_CONTEXT();
  DispatchStateScopedStepDown stepDown(rCtx->dsp);
  rCtx->dsp->curr->glVertexAttribI3ivEXT(index, v);
}

static void REGAL_CALL debug_glVertexAttribI4ivEXT(GLuint index, const GLint *v)
{
  RegalContext * rCtx = GET_REGAL_CONTEXT();
  DispatchStateScopedStepDown stepDown(rCtx->dsp);
  rCtx->dsp->curr->glVertexAttribI4ivEXT(index, v);
}

static void REGAL_CALL debug_glVertexAttribI1uivEXT(GLuint index, const GLuint *v)
{
  RegalContext * rCtx = GET_REGAL_CONTEXT();
  DispatchStateScopedStepDown stepDown(rCtx->dsp);
  rCtx->dsp->curr->glVertexAttribI1uivEXT(index, v);
}

static void REGAL_CALL debug_glVertexAttribI2uivEXT(GLuint index, const GLuint *v)
{
  RegalContext * rCtx = GET_REGAL_CONTEXT();
  DispatchStateScopedStepDown stepDown(rCtx->dsp);
  rCtx->dsp->curr->glVertexAttribI2uivEXT(index, v);
}

static void REGAL_CALL debug_glVertexAttribI3uivEXT(GLuint index, const GLuint *v)
{
  RegalContext * rCtx = GET_REGAL_CONTEXT();
  DispatchStateScopedStepDown stepDown(rCtx->dsp);
  rCtx->dsp->curr->glVertexAttribI3uivEXT(index, v);
}

static void REGAL_CALL debug_glVertexAttribI4uivEXT(GLuint index, const GLuint *v)
{
  RegalContext * rCtx = GET_REGAL_CONTEXT();
  DispatchStateScopedStepDown stepDown(rCtx->dsp);
  rCtx->dsp->curr->glVertexAttribI4uivEXT(index, v);
}

static void REGAL_CALL debug_glVertexAttribI4bvEXT(GLuint index, const GLbyte *v)
{
  RegalContext * rCtx = GET_REGAL_CONTEXT();
  DispatchStateScopedStepDown stepDown(rCtx->dsp);
  rCtx->dsp->curr->glVertexAttribI4bvEXT(index, v);
}

static void REGAL_CALL debug_glVertexAttribI4svEXT(GLuint index, const GLshort *v)
{
  RegalContext * rCtx = GET_REGAL_CONTEXT();
  DispatchStateScopedStepDown stepDown(rCtx->dsp);
  rCtx->dsp->curr->glVertexAttribI4svEXT(index, v);
}

static void REGAL_CALL debug_glVertexAttribI4ubvEXT(GLuint index, const GLubyte *v)
{
  RegalContext * rCtx = GET_REGAL_CONTEXT();
  DispatchStateScopedStepDown stepDown(rCtx->dsp);
  rCtx->dsp->curr->glVertexAttribI4ubvEXT(index, v);
}

static void REGAL_CALL debug_glVertexAttribI4usvEXT(GLuint index, const GLushort *v)
{
  RegalContext * rCtx = GET_REGAL_CONTEXT();
  DispatchStateScopedStepDown stepDown(rCtx->dsp);
  rCtx->dsp->curr->glVertexAttribI4usvEXT(index, v);
}

static void REGAL_CALL debug_glVertexAttribIPointerEXT(GLuint index, GLint size, GLenum type, GLsizei stride, const GLvoid *pointer)
{
  RegalContext * rCtx = GET_REGAL_CONTEXT();
  DispatchStateScopedStepDown stepDown(rCtx->dsp);
  rCtx->dsp->curr->glVertexAttribIPointerEXT(index, size, type, stride, pointer);
}

static void REGAL_CALL debug_glGetVertexAttribIivEXT(GLuint index, GLenum pname, GLint *params)
{
  RegalContext * rCtx = GET_REGAL_CONTEXT();
  DispatchStateScopedStepDown stepDown(rCtx->dsp);
  rCtx->dsp->curr->glGetVertexAttribIivEXT(index, pname, params);
}

static void REGAL_CALL debug_glGetVertexAttribIuivEXT(GLuint index, GLenum pname, GLuint *params)
{
  RegalContext * rCtx = GET_REGAL_CONTEXT();
  DispatchStateScopedStepDown stepDown(rCtx->dsp);
  rCtx->dsp->curr->glGetVertexAttribIuivEXT(index, pname, params);
}

// GL_EXT_gpu_shader4

static void REGAL_CALL debug_glGetUniformuivEXT(GLuint program, GLint location, GLuint *params)
{
  RegalContext * rCtx = GET_REGAL_CONTEXT();
  DispatchStateScopedStepDown stepDown(rCtx->dsp);
  rCtx->dsp->curr->glGetUniformuivEXT(program, location, params);
}

static void REGAL_CALL debug_glBindFragDataLocationEXT(GLuint program, GLuint color, const GLchar *name)
{
  RegalContext * rCtx = GET_REGAL_CONTEXT();
  DispatchStateScopedStepDown stepDown(rCtx->dsp);
  rCtx->dsp->curr->glBindFragDataLocationEXT(program, color, name);
}

static GLint REGAL_CALL debug_glGetFragDataLocationEXT(GLuint program, const GLchar *name)
{
  RegalContext * rCtx = GET_REGAL_CONTEXT();
  DispatchStateScopedStepDown stepDown(rCtx->dsp);
  GLint  ret = rCtx->dsp->curr->glGetFragDataLocationEXT(program, name);
  return ret;
}

static void REGAL_CALL debug_glUniform1uiEXT(GLint location, GLuint v0)
{
  RegalContext * rCtx = GET_REGAL_CONTEXT();
  DispatchStateScopedStepDown stepDown(rCtx->dsp);
  rCtx->dsp->curr->glUniform1uiEXT(location, v0);
}

static void REGAL_CALL debug_glUniform2uiEXT(GLint location, GLuint v0, GLuint v1)
{
  RegalContext * rCtx = GET_REGAL_CONTEXT();
  DispatchStateScopedStepDown stepDown(rCtx->dsp);
  rCtx->dsp->curr->glUniform2uiEXT(location, v0, v1);
}

static void REGAL_CALL debug_glUniform3uiEXT(GLint location, GLuint v0, GLuint v1, GLuint v2)
{
  RegalContext * rCtx = GET_REGAL_CONTEXT();
  DispatchStateScopedStepDown stepDown(rCtx->dsp);
  rCtx->dsp->curr->glUniform3uiEXT(location, v0, v1, v2);
}

static void REGAL_CALL debug_glUniform4uiEXT(GLint location, GLuint v0, GLuint v1, GLuint v2, GLuint v3)
{
  RegalContext * rCtx = GET_REGAL_CONTEXT();
  DispatchStateScopedStepDown stepDown(rCtx->dsp);
  rCtx->dsp->curr->glUniform4uiEXT(location, v0, v1, v2, v3);
}

static void REGAL_CALL debug_glUniform1uivEXT(GLint location, GLsizei count, const GLuint *value)
{
  RegalContext * rCtx = GET_REGAL_CONTEXT();
  DispatchStateScopedStepDown stepDown(rCtx->dsp);
  rCtx->dsp->curr->glUniform1uivEXT(location, count, value);
}

static void REGAL_CALL debug_glUniform2uivEXT(GLint location, GLsizei count, const GLuint *value)
{
  RegalContext * rCtx = GET_REGAL_CONTEXT();
  DispatchStateScopedStepDown stepDown(rCtx->dsp);
  rCtx->dsp->curr->glUniform2uivEXT(location, count, value);
}

static void REGAL_CALL debug_glUniform3uivEXT(GLint location, GLsizei count, const GLuint *value)
{
  RegalContext * rCtx = GET_REGAL_CONTEXT();
  DispatchStateScopedStepDown stepDown(rCtx->dsp);
  rCtx->dsp->curr->glUniform3uivEXT(location, count, value);
}

static void REGAL_CALL debug_glUniform4uivEXT(GLint location, GLsizei count, const GLuint *value)
{
  RegalContext * rCtx = GET_REGAL_CONTEXT();
  DispatchStateScopedStepDown stepDown(rCtx->dsp);
  rCtx->dsp->curr->glUniform4uivEXT(location, count, value);
}

// GL_EXT_draw_instanced

static void REGAL_CALL debug_glDrawArraysInstancedEXT(GLenum mode, GLint start, GLsizei count, GLsizei primcount)
{
  RegalContext * rCtx = GET_REGAL_CONTEXT();
  DispatchStateScopedStepDown stepDown(rCtx->dsp);
  rCtx->dsp->curr->glDrawArraysInstancedEXT(mode, start, count, primcount);
}

static void REGAL_CALL debug_glDrawElementsInstancedEXT(GLenum mode, GLsizei count, GLenum type, const GLvoid *indices, GLsizei primcount)
{
  RegalContext * rCtx = GET_REGAL_CONTEXT();
  DispatchStateScopedStepDown stepDown(rCtx->dsp);
  rCtx->dsp->curr->glDrawElementsInstancedEXT(mode, count, type, indices, primcount);
}

// GL_EXT_texture_array

static void REGAL_CALL debug_glFramebufferTextureLayerEXT(GLenum target, GLenum attachment, GLuint texture, GLint level, GLint layer)
{
  RegalContext * rCtx = GET_REGAL_CONTEXT();
  DispatchStateScopedStepDown stepDown(rCtx->dsp);
  rCtx->dsp->curr->glFramebufferTextureLayerEXT(target, attachment, texture, level, layer);
}

// GL_EXT_texture_buffer_object

static void REGAL_CALL debug_glTexBufferEXT(GLenum target, GLenum internalformat, GLuint buffer)
{
  RegalContext * rCtx = GET_REGAL_CONTEXT();
  DispatchStateScopedStepDown stepDown(rCtx->dsp);
  rCtx->dsp->curr->glTexBufferEXT(target, internalformat, buffer);
}

// GL_NV_depth_buffer_float

static void REGAL_CALL debug_glDepthRangedNV(GLdouble zNear, GLdouble zFar)
{
  RegalContext * rCtx = GET_REGAL_CONTEXT();
  DispatchStateScopedStepDown stepDown(rCtx->dsp);
  rCtx->dsp->curr->glDepthRangedNV(zNear, zFar);
}

static void REGAL_CALL debug_glClearDepthdNV(GLdouble depth)
{
  RegalContext * rCtx = GET_REGAL_CONTEXT();
  DispatchStateScopedStepDown stepDown(rCtx->dsp);
  rCtx->dsp->curr->glClearDepthdNV(depth);
}

static void REGAL_CALL debug_glDepthBoundsdNV(GLdouble zmin, GLdouble zmax)
{
  RegalContext * rCtx = GET_REGAL_CONTEXT();
  DispatchStateScopedStepDown stepDown(rCtx->dsp);
  rCtx->dsp->curr->glDepthBoundsdNV(zmin, zmax);
}

// GL_NV_framebuffer_multisample_coverage

static void REGAL_CALL debug_glRenderbufferStorageMultisampleCoverageNV(GLenum target, GLsizei coverageSamples, GLsizei colorSamples, GLenum internalformat, GLsizei width, GLsizei height)
{
  RegalContext * rCtx = GET_REGAL_CONTEXT();
  DispatchStateScopedStepDown stepDown(rCtx->dsp);
  rCtx->dsp->curr->glRenderbufferStorageMultisampleCoverageNV(target, coverageSamples, colorSamples, internalformat, width, height);
}

// GL_NV_parameter_buffer_object

static void REGAL_CALL debug_glProgramBufferParametersfvNV(GLenum target, GLuint buffer, GLuint index, GLsizei count, const GLfloat *params)
{
  RegalContext * rCtx = GET_REGAL_CONTEXT();
  DispatchStateScopedStepDown stepDown(rCtx->dsp);
  rCtx->dsp->curr->glProgramBufferParametersfvNV(target, buffer, index, count, params);
}

static void REGAL_CALL debug_glProgramBufferParametersIivNV(GLenum target, GLuint buffer, GLuint index, GLsizei count, const GLint *params)
{
  RegalContext * rCtx = GET_REGAL_CONTEXT();
  DispatchStateScopedStepDown stepDown(rCtx->dsp);
  rCtx->dsp->curr->glProgramBufferParametersIivNV(target, buffer, index, count, params);
}

static void REGAL_CALL debug_glProgramBufferParametersIuivNV(GLenum target, GLuint buffer, GLuint index, GLsizei count, const GLuint *params)
{
  RegalContext * rCtx = GET_REGAL_CONTEXT();
  DispatchStateScopedStepDown stepDown(rCtx->dsp);
  rCtx->dsp->curr->glProgramBufferParametersIuivNV(target, buffer, index, count, params);
}

// GL_EXT_draw_buffers2

static void REGAL_CALL debug_glColorMaskIndexedEXT(GLuint buf, GLboolean r, GLboolean g, GLboolean b, GLboolean a)
{
  RegalContext * rCtx = GET_REGAL_CONTEXT();
  DispatchStateScopedStepDown stepDown(rCtx->dsp);
  rCtx->dsp->curr->glColorMaskIndexedEXT(buf, r, g, b, a);
}

static void REGAL_CALL debug_glGetBooleanIndexedvEXT(GLenum value, GLuint index, GLboolean *data)
{
  RegalContext * rCtx = GET_REGAL_CONTEXT();
  DispatchStateScopedStepDown stepDown(rCtx->dsp);
  rCtx->dsp->curr->glGetBooleanIndexedvEXT(value, index, data);
}

static void REGAL_CALL debug_glGetIntegerIndexedvEXT(GLenum value, GLuint index, GLint *data)
{
  RegalContext * rCtx = GET_REGAL_CONTEXT();
  DispatchStateScopedStepDown stepDown(rCtx->dsp);
  rCtx->dsp->curr->glGetIntegerIndexedvEXT(value, index, data);
}

static void REGAL_CALL debug_glEnableIndexedEXT(GLenum target, GLuint index)
{
  RegalContext * rCtx = GET_REGAL_CONTEXT();
  DispatchStateScopedStepDown stepDown(rCtx->dsp);
  rCtx->dsp->curr->glEnableIndexedEXT(target, index);
}

static void REGAL_CALL debug_glDisableIndexedEXT(GLenum target, GLuint index)
{
  RegalContext * rCtx = GET_REGAL_CONTEXT();
  DispatchStateScopedStepDown stepDown(rCtx->dsp);
  rCtx->dsp->curr->glDisableIndexedEXT(target, index);
}

static GLboolean REGAL_CALL debug_glIsEnabledIndexedEXT(GLenum target, GLuint index)
{
  RegalContext * rCtx = GET_REGAL_CONTEXT();
  DispatchStateScopedStepDown stepDown(rCtx->dsp);
  GLboolean  ret = rCtx->dsp->curr->glIsEnabledIndexedEXT(target, index);
  return ret;
}

// GL_NV_transform_feedback

static void REGAL_CALL debug_glBeginTransformFeedbackNV(GLenum primitiveMode)
{
  RegalContext * rCtx = GET_REGAL_CONTEXT();
  DispatchStateScopedStepDown stepDown(rCtx->dsp);
  rCtx->dsp->curr->glBeginTransformFeedbackNV(primitiveMode);
}

static void REGAL_CALL debug_glEndTransformFeedbackNV(void)
{
  RegalContext * rCtx = GET_REGAL_CONTEXT();
  DispatchStateScopedStepDown stepDown(rCtx->dsp);
  rCtx->dsp->curr->glEndTransformFeedbackNV();
}

static void REGAL_CALL debug_glTransformFeedbackAttribsNV(GLuint count, const GLint *attribs, GLenum bufferMode)
{
  RegalContext * rCtx = GET_REGAL_CONTEXT();
  DispatchStateScopedStepDown stepDown(rCtx->dsp);
  rCtx->dsp->curr->glTransformFeedbackAttribsNV(count, attribs, bufferMode);
}

static void REGAL_CALL debug_glBindBufferRangeNV(GLenum target, GLuint index, GLuint buffer, GLintptr offset, GLsizeiptr size)
{
  RegalContext * rCtx = GET_REGAL_CONTEXT();
  DispatchStateScopedStepDown stepDown(rCtx->dsp);
  rCtx->dsp->curr->glBindBufferRangeNV(target, index, buffer, offset, size);
}

static void REGAL_CALL debug_glBindBufferOffsetNV(GLenum target, GLuint index, GLuint buffer, GLintptr offset)
{
  RegalContext * rCtx = GET_REGAL_CONTEXT();
  DispatchStateScopedStepDown stepDown(rCtx->dsp);
  rCtx->dsp->curr->glBindBufferOffsetNV(target, index, buffer, offset);
}

static void REGAL_CALL debug_glBindBufferBaseNV(GLenum target, GLuint index, GLuint buffer)
{
  RegalContext * rCtx = GET_REGAL_CONTEXT();
  DispatchStateScopedStepDown stepDown(rCtx->dsp);
  rCtx->dsp->curr->glBindBufferBaseNV(target, index, buffer);
}

static void REGAL_CALL debug_glTransformFeedbackVaryingsNV(GLuint program, GLsizei count, const GLint *locations, GLenum bufferMode)
{
  RegalContext * rCtx = GET_REGAL_CONTEXT();
  DispatchStateScopedStepDown stepDown(rCtx->dsp);
  rCtx->dsp->curr->glTransformFeedbackVaryingsNV(program, count, locations, bufferMode);
}

static void REGAL_CALL debug_glActiveVaryingNV(GLuint program, const GLchar *name)
{
  RegalContext * rCtx = GET_REGAL_CONTEXT();
  DispatchStateScopedStepDown stepDown(rCtx->dsp);
  rCtx->dsp->curr->glActiveVaryingNV(program, name);
}

static GLint REGAL_CALL debug_glGetVaryingLocationNV(GLuint program, const GLchar *name)
{
  RegalContext * rCtx = GET_REGAL_CONTEXT();
  DispatchStateScopedStepDown stepDown(rCtx->dsp);
  GLint  ret = rCtx->dsp->curr->glGetVaryingLocationNV(program, name);
  return ret;
}

static void REGAL_CALL debug_glGetActiveVaryingNV(GLuint program, GLuint index, GLsizei bufSize, GLsizei *length, GLsizei *size, GLenum *type, GLchar *name)
{
  RegalContext * rCtx = GET_REGAL_CONTEXT();
  DispatchStateScopedStepDown stepDown(rCtx->dsp);
  rCtx->dsp->curr->glGetActiveVaryingNV(program, index, bufSize, length, size, type, name);
}

static void REGAL_CALL debug_glGetTransformFeedbackVaryingNV(GLuint program, GLuint index, GLint *location)
{
  RegalContext * rCtx = GET_REGAL_CONTEXT();
  DispatchStateScopedStepDown stepDown(rCtx->dsp);
  rCtx->dsp->curr->glGetTransformFeedbackVaryingNV(program, index, location);
}

// GL_EXT_bindable_uniform

static void REGAL_CALL debug_glUniformBufferEXT(GLuint program, GLint location, GLuint buffer)
{
  RegalContext * rCtx = GET_REGAL_CONTEXT();
  DispatchStateScopedStepDown stepDown(rCtx->dsp);
  rCtx->dsp->curr->glUniformBufferEXT(program, location, buffer);
}

static GLint REGAL_CALL debug_glGetUniformBufferSizeEXT(GLuint program, GLint location)
{
  RegalContext * rCtx = GET_REGAL_CONTEXT();
  DispatchStateScopedStepDown stepDown(rCtx->dsp);
  GLint  ret = rCtx->dsp->curr->glGetUniformBufferSizeEXT(program, location);
  return ret;
}

static GLintptr REGAL_CALL debug_glGetUniformOffsetEXT(GLuint program, GLint location)
{
  RegalContext * rCtx = GET_REGAL_CONTEXT();
  DispatchStateScopedStepDown stepDown(rCtx->dsp);
  GLintptr  ret = rCtx->dsp->curr->glGetUniformOffsetEXT(program, location);
  return ret;
}

// GL_EXT_texture_integer

static void REGAL_CALL debug_glTexParameterIivEXT(GLenum target, GLenum pname, const GLint *params)
{
  RegalContext * rCtx = GET_REGAL_CONTEXT();
  DispatchStateScopedStepDown stepDown(rCtx->dsp);
  rCtx->dsp->curr->glTexParameterIivEXT(target, pname, params);
}

static void REGAL_CALL debug_glTexParameterIuivEXT(GLenum target, GLenum pname, const GLuint *params)
{
  RegalContext * rCtx = GET_REGAL_CONTEXT();
  DispatchStateScopedStepDown stepDown(rCtx->dsp);
  rCtx->dsp->curr->glTexParameterIuivEXT(target, pname, params);
}

static void REGAL_CALL debug_glGetTexParameterIivEXT(GLenum target, GLenum pname, GLint *params)
{
  RegalContext * rCtx = GET_REGAL_CONTEXT();
  DispatchStateScopedStepDown stepDown(rCtx->dsp);
  rCtx->dsp->curr->glGetTexParameterIivEXT(target, pname, params);
}

static void REGAL_CALL debug_glGetTexParameterIuivEXT(GLenum target, GLenum pname, GLuint *params)
{
  RegalContext * rCtx = GET_REGAL_CONTEXT();
  DispatchStateScopedStepDown stepDown(rCtx->dsp);
  rCtx->dsp->curr->glGetTexParameterIuivEXT(target, pname, params);
}

static void REGAL_CALL debug_glClearColorIiEXT(GLint red, GLint green, GLint blue, GLint alpha)
{
  RegalContext * rCtx = GET_REGAL_CONTEXT();
  DispatchStateScopedStepDown stepDown(rCtx->dsp);
  rCtx->dsp->curr->glClearColorIiEXT(red, green, blue, alpha);
}

static void REGAL_CALL debug_glClearColorIuiEXT(GLuint red, GLuint green, GLuint blue, GLuint alpha)
{
  RegalContext * rCtx = GET_REGAL_CONTEXT();
  DispatchStateScopedStepDown stepDown(rCtx->dsp);
  rCtx->dsp->curr->glClearColorIuiEXT(red, green, blue, alpha);
}

// GL_GREMEDY_frame_terminator

static void REGAL_CALL debug_glFrameTerminatorGREMEDY(void)
{
  RegalContext * rCtx = GET_REGAL_CONTEXT();
  DispatchStateScopedStepDown stepDown(rCtx->dsp);
  rCtx->dsp->curr->glFrameTerminatorGREMEDY();
}

// GL_NV_conditional_render

static void REGAL_CALL debug_glBeginConditionalRenderNV(GLuint id, GLenum mode)
{
  RegalContext * rCtx = GET_REGAL_CONTEXT();
  DispatchStateScopedStepDown stepDown(rCtx->dsp);
  rCtx->dsp->curr->glBeginConditionalRenderNV(id, mode);
}

static void REGAL_CALL debug_glEndConditionalRenderNV(void)
{
  RegalContext * rCtx = GET_REGAL_CONTEXT();
  DispatchStateScopedStepDown stepDown(rCtx->dsp);
  rCtx->dsp->curr->glEndConditionalRenderNV();
}

// GL_NV_present_video

static void REGAL_CALL debug_glPresentFrameKeyedNV(GLuint video_slot, GLuint64EXT minPresentTime, GLuint beginPresentTimeId, GLuint presentDurationId, GLenum type, GLenum target0, GLuint fill0, GLuint key0, GLenum target1, GLuint fill1, GLuint key1)
{
  RegalContext * rCtx = GET_REGAL_CONTEXT();
  DispatchStateScopedStepDown stepDown(rCtx->dsp);
  rCtx->dsp->curr->glPresentFrameKeyedNV(video_slot, minPresentTime, beginPresentTimeId, presentDurationId, type, target0, fill0, key0, target1, fill1, key1);
}

static void REGAL_CALL debug_glPresentFrameDualFillNV(GLuint video_slot, GLuint64EXT minPresentTime, GLuint beginPresentTimeId, GLuint presentDurationId, GLenum type, GLenum target0, GLuint fill0, GLenum target1, GLuint fill1, GLenum target2, GLuint fill2, GLenum target3, GLuint fill3)
{
  RegalContext * rCtx = GET_REGAL_CONTEXT();
  DispatchStateScopedStepDown stepDown(rCtx->dsp);
  rCtx->dsp->curr->glPresentFrameDualFillNV(video_slot, minPresentTime, beginPresentTimeId, presentDurationId, type, target0, fill0, target1, fill1, target2, fill2, target3, fill3);
}

static void REGAL_CALL debug_glGetVideoivNV(GLuint video_slot, GLenum pname, GLint *params)
{
  RegalContext * rCtx = GET_REGAL_CONTEXT();
  DispatchStateScopedStepDown stepDown(rCtx->dsp);
  rCtx->dsp->curr->glGetVideoivNV(video_slot, pname, params);
}

static void REGAL_CALL debug_glGetVideouivNV(GLuint video_slot, GLenum pname, GLuint *params)
{
  RegalContext * rCtx = GET_REGAL_CONTEXT();
  DispatchStateScopedStepDown stepDown(rCtx->dsp);
  rCtx->dsp->curr->glGetVideouivNV(video_slot, pname, params);
}

static void REGAL_CALL debug_glGetVideoi64vNV(GLuint video_slot, GLenum pname, GLint64EXT *params)
{
  RegalContext * rCtx = GET_REGAL_CONTEXT();
  DispatchStateScopedStepDown stepDown(rCtx->dsp);
  rCtx->dsp->curr->glGetVideoi64vNV(video_slot, pname, params);
}

static void REGAL_CALL debug_glGetVideoui64vNV(GLuint video_slot, GLenum pname, GLuint64EXT *params)
{
  RegalContext * rCtx = GET_REGAL_CONTEXT();
  DispatchStateScopedStepDown stepDown(rCtx->dsp);
  rCtx->dsp->curr->glGetVideoui64vNV(video_slot, pname, params);
}

// GL_EXT_transform_feedback

static void REGAL_CALL debug_glBeginTransformFeedbackEXT(GLenum primitiveMode)
{
  RegalContext * rCtx = GET_REGAL_CONTEXT();
  DispatchStateScopedStepDown stepDown(rCtx->dsp);
  rCtx->dsp->curr->glBeginTransformFeedbackEXT(primitiveMode);
}

static void REGAL_CALL debug_glEndTransformFeedbackEXT(void)
{
  RegalContext * rCtx = GET_REGAL_CONTEXT();
  DispatchStateScopedStepDown stepDown(rCtx->dsp);
  rCtx->dsp->curr->glEndTransformFeedbackEXT();
}

static void REGAL_CALL debug_glBindBufferRangeEXT(GLenum target, GLuint index, GLuint buffer, GLintptr offset, GLsizeiptr size)
{
  RegalContext * rCtx = GET_REGAL_CONTEXT();
  DispatchStateScopedStepDown stepDown(rCtx->dsp);
  rCtx->dsp->curr->glBindBufferRangeEXT(target, index, buffer, offset, size);
}

static void REGAL_CALL debug_glBindBufferOffsetEXT(GLenum target, GLuint index, GLuint buffer, GLintptr offset)
{
  RegalContext * rCtx = GET_REGAL_CONTEXT();
  DispatchStateScopedStepDown stepDown(rCtx->dsp);
  rCtx->dsp->curr->glBindBufferOffsetEXT(target, index, buffer, offset);
}

static void REGAL_CALL debug_glBindBufferBaseEXT(GLenum target, GLuint index, GLuint buffer)
{
  RegalContext * rCtx = GET_REGAL_CONTEXT();
  DispatchStateScopedStepDown stepDown(rCtx->dsp);
  rCtx->dsp->curr->glBindBufferBaseEXT(target, index, buffer);
}

static void REGAL_CALL debug_glTransformFeedbackVaryingsEXT(GLuint program, GLsizei count, const GLchar **varyings, GLenum bufferMode)
{
  RegalContext * rCtx = GET_REGAL_CONTEXT();
  DispatchStateScopedStepDown stepDown(rCtx->dsp);
  rCtx->dsp->curr->glTransformFeedbackVaryingsEXT(program, count, varyings, bufferMode);
}

static void REGAL_CALL debug_glGetTransformFeedbackVaryingEXT(GLuint program, GLuint index, GLsizei bufSize, GLsizei *length, GLsizei *size, GLenum *type, GLchar *name)
{
  RegalContext * rCtx = GET_REGAL_CONTEXT();
  DispatchStateScopedStepDown stepDown(rCtx->dsp);
  rCtx->dsp->curr->glGetTransformFeedbackVaryingEXT(program, index, bufSize, length, size, type, name);
}

// GL_EXT_direct_state_access

static void REGAL_CALL debug_glClientAttribDefaultEXT(GLbitfield mask)
{
  RegalContext * rCtx = GET_REGAL_CONTEXT();
  DispatchStateScopedStepDown stepDown(rCtx->dsp);
  rCtx->dsp->curr->glClientAttribDefaultEXT(mask);
}

static void REGAL_CALL debug_glPushClientAttribDefaultEXT(GLbitfield mask)
{
  RegalContext * rCtx = GET_REGAL_CONTEXT();
  DispatchStateScopedStepDown stepDown(rCtx->dsp);
  rCtx->dsp->curr->glPushClientAttribDefaultEXT(mask);
}

static void REGAL_CALL debug_glMatrixLoadfEXT(GLenum mode, const GLfloat *m)
{
  RegalContext * rCtx = GET_REGAL_CONTEXT();
  DispatchStateScopedStepDown stepDown(rCtx->dsp);
  rCtx->dsp->curr->glMatrixLoadfEXT(mode, m);
}

static void REGAL_CALL debug_glMatrixLoaddEXT(GLenum mode, const GLdouble *m)
{
  RegalContext * rCtx = GET_REGAL_CONTEXT();
  DispatchStateScopedStepDown stepDown(rCtx->dsp);
  rCtx->dsp->curr->glMatrixLoaddEXT(mode, m);
}

static void REGAL_CALL debug_glMatrixMultfEXT(GLenum mode, const GLfloat *m)
{
  RegalContext * rCtx = GET_REGAL_CONTEXT();
  DispatchStateScopedStepDown stepDown(rCtx->dsp);
  rCtx->dsp->curr->glMatrixMultfEXT(mode, m);
}

static void REGAL_CALL debug_glMatrixMultdEXT(GLenum mode, const GLdouble *m)
{
  RegalContext * rCtx = GET_REGAL_CONTEXT();
  DispatchStateScopedStepDown stepDown(rCtx->dsp);
  rCtx->dsp->curr->glMatrixMultdEXT(mode, m);
}

static void REGAL_CALL debug_glMatrixLoadIdentityEXT(GLenum mode)
{
  RegalContext * rCtx = GET_REGAL_CONTEXT();
  DispatchStateScopedStepDown stepDown(rCtx->dsp);
  rCtx->dsp->curr->glMatrixLoadIdentityEXT(mode);
}

static void REGAL_CALL debug_glMatrixRotatefEXT(GLenum mode, GLfloat angle, GLfloat x, GLfloat y, GLfloat z)
{
  RegalContext * rCtx = GET_REGAL_CONTEXT();
  DispatchStateScopedStepDown stepDown(rCtx->dsp);
  rCtx->dsp->curr->glMatrixRotatefEXT(mode, angle, x, y, z);
}

static void REGAL_CALL debug_glMatrixRotatedEXT(GLenum mode, GLdouble angle, GLdouble x, GLdouble y, GLdouble z)
{
  RegalContext * rCtx = GET_REGAL_CONTEXT();
  DispatchStateScopedStepDown stepDown(rCtx->dsp);
  rCtx->dsp->curr->glMatrixRotatedEXT(mode, angle, x, y, z);
}

static void REGAL_CALL debug_glMatrixScalefEXT(GLenum mode, GLfloat x, GLfloat y, GLfloat z)
{
  RegalContext * rCtx = GET_REGAL_CONTEXT();
  DispatchStateScopedStepDown stepDown(rCtx->dsp);
  rCtx->dsp->curr->glMatrixScalefEXT(mode, x, y, z);
}

static void REGAL_CALL debug_glMatrixScaledEXT(GLenum mode, GLdouble x, GLdouble y, GLdouble z)
{
  RegalContext * rCtx = GET_REGAL_CONTEXT();
  DispatchStateScopedStepDown stepDown(rCtx->dsp);
  rCtx->dsp->curr->glMatrixScaledEXT(mode, x, y, z);
}

static void REGAL_CALL debug_glMatrixTranslatefEXT(GLenum mode, GLfloat x, GLfloat y, GLfloat z)
{
  RegalContext * rCtx = GET_REGAL_CONTEXT();
  DispatchStateScopedStepDown stepDown(rCtx->dsp);
  rCtx->dsp->curr->glMatrixTranslatefEXT(mode, x, y, z);
}

static void REGAL_CALL debug_glMatrixTranslatedEXT(GLenum mode, GLdouble x, GLdouble y, GLdouble z)
{
  RegalContext * rCtx = GET_REGAL_CONTEXT();
  DispatchStateScopedStepDown stepDown(rCtx->dsp);
  rCtx->dsp->curr->glMatrixTranslatedEXT(mode, x, y, z);
}

static void REGAL_CALL debug_glMatrixFrustumEXT(GLenum mode, GLdouble left, GLdouble right, GLdouble bottom, GLdouble top, GLdouble zNear, GLdouble zFar)
{
  RegalContext * rCtx = GET_REGAL_CONTEXT();
  DispatchStateScopedStepDown stepDown(rCtx->dsp);
  rCtx->dsp->curr->glMatrixFrustumEXT(mode, left, right, bottom, top, zNear, zFar);
}

static void REGAL_CALL debug_glMatrixOrthoEXT(GLenum mode, GLdouble left, GLdouble right, GLdouble bottom, GLdouble top, GLdouble zNear, GLdouble zFar)
{
  RegalContext * rCtx = GET_REGAL_CONTEXT();
  DispatchStateScopedStepDown stepDown(rCtx->dsp);
  rCtx->dsp->curr->glMatrixOrthoEXT(mode, left, right, bottom, top, zNear, zFar);
}

static void REGAL_CALL debug_glMatrixPopEXT(GLenum mode)
{
  RegalContext * rCtx = GET_REGAL_CONTEXT();
  DispatchStateScopedStepDown stepDown(rCtx->dsp);
  rCtx->dsp->curr->glMatrixPopEXT(mode);
}

static void REGAL_CALL debug_glMatrixPushEXT(GLenum mode)
{
  RegalContext * rCtx = GET_REGAL_CONTEXT();
  DispatchStateScopedStepDown stepDown(rCtx->dsp);
  rCtx->dsp->curr->glMatrixPushEXT(mode);
}

static void REGAL_CALL debug_glMatrixLoadTransposefEXT(GLenum mode, const GLfloat *m)
{
  RegalContext * rCtx = GET_REGAL_CONTEXT();
  DispatchStateScopedStepDown stepDown(rCtx->dsp);
  rCtx->dsp->curr->glMatrixLoadTransposefEXT(mode, m);
}

static void REGAL_CALL debug_glMatrixLoadTransposedEXT(GLenum mode, const GLdouble *m)
{
  RegalContext * rCtx = GET_REGAL_CONTEXT();
  DispatchStateScopedStepDown stepDown(rCtx->dsp);
  rCtx->dsp->curr->glMatrixLoadTransposedEXT(mode, m);
}

static void REGAL_CALL debug_glMatrixMultTransposefEXT(GLenum mode, const GLfloat *m)
{
  RegalContext * rCtx = GET_REGAL_CONTEXT();
  DispatchStateScopedStepDown stepDown(rCtx->dsp);
  rCtx->dsp->curr->glMatrixMultTransposefEXT(mode, m);
}

static void REGAL_CALL debug_glMatrixMultTransposedEXT(GLenum mode, const GLdouble *m)
{
  RegalContext * rCtx = GET_REGAL_CONTEXT();
  DispatchStateScopedStepDown stepDown(rCtx->dsp);
  rCtx->dsp->curr->glMatrixMultTransposedEXT(mode, m);
}

static void REGAL_CALL debug_glTextureParameterfEXT(GLuint texture, GLenum target, GLenum pname, GLfloat param)
{
  RegalContext * rCtx = GET_REGAL_CONTEXT();
  DispatchStateScopedStepDown stepDown(rCtx->dsp);
  rCtx->dsp->curr->glTextureParameterfEXT(texture, target, pname, param);
}

static void REGAL_CALL debug_glTextureParameterfvEXT(GLuint texture, GLenum target, GLenum pname, const GLfloat *param)
{
  RegalContext * rCtx = GET_REGAL_CONTEXT();
  DispatchStateScopedStepDown stepDown(rCtx->dsp);
  rCtx->dsp->curr->glTextureParameterfvEXT(texture, target, pname, param);
}

static void REGAL_CALL debug_glTextureParameteriEXT(GLuint texture, GLenum target, GLenum pname, GLint param)
{
  RegalContext * rCtx = GET_REGAL_CONTEXT();
  DispatchStateScopedStepDown stepDown(rCtx->dsp);
  rCtx->dsp->curr->glTextureParameteriEXT(texture, target, pname, param);
}

static void REGAL_CALL debug_glTextureParameterivEXT(GLuint texture, GLenum target, GLenum pname, const GLint *param)
{
  RegalContext * rCtx = GET_REGAL_CONTEXT();
  DispatchStateScopedStepDown stepDown(rCtx->dsp);
  rCtx->dsp->curr->glTextureParameterivEXT(texture, target, pname, param);
}

static void REGAL_CALL debug_glTextureImage1DEXT(GLuint texture, GLenum target, GLint level, GLint internalformat, GLsizei width, GLint border, GLenum format, GLenum type, const GLvoid *pixels)
{
  RegalContext * rCtx = GET_REGAL_CONTEXT();
  DispatchStateScopedStepDown stepDown(rCtx->dsp);
  rCtx->dsp->curr->glTextureImage1DEXT(texture, target, level, internalformat, width, border, format, type, pixels);
}

static void REGAL_CALL debug_glTextureImage2DEXT(GLuint texture, GLenum target, GLint level, GLint internalformat, GLsizei width, GLsizei height, GLint border, GLenum format, GLenum type, const GLvoid *pixels)
{
  RegalContext * rCtx = GET_REGAL_CONTEXT();
  DispatchStateScopedStepDown stepDown(rCtx->dsp);
  rCtx->dsp->curr->glTextureImage2DEXT(texture, target, level, internalformat, width, height, border, format, type, pixels);
}

static void REGAL_CALL debug_glTextureSubImage1DEXT(GLuint texture, GLenum target, GLint level, GLint xoffset, GLsizei width, GLenum format, GLenum type, const GLvoid *pixels)
{
  RegalContext * rCtx = GET_REGAL_CONTEXT();
  DispatchStateScopedStepDown stepDown(rCtx->dsp);
  rCtx->dsp->curr->glTextureSubImage1DEXT(texture, target, level, xoffset, width, format, type, pixels);
}

static void REGAL_CALL debug_glTextureSubImage2DEXT(GLuint texture, GLenum target, GLint level, GLint xoffset, GLint yoffset, GLsizei width, GLsizei height, GLenum format, GLenum type, const GLvoid *pixels)
{
  RegalContext * rCtx = GET_REGAL_CONTEXT();
  DispatchStateScopedStepDown stepDown(rCtx->dsp);
  rCtx->dsp->curr->glTextureSubImage2DEXT(texture, target, level, xoffset, yoffset, width, height, format, type, pixels);
}

static void REGAL_CALL debug_glCopyTextureImage1DEXT(GLuint texture, GLenum target, GLint level, GLenum internalformat, GLint x, GLint y, GLsizei width, GLint border)
{
  RegalContext * rCtx = GET_REGAL_CONTEXT();
  DispatchStateScopedStepDown stepDown(rCtx->dsp);
  rCtx->dsp->curr->glCopyTextureImage1DEXT(texture, target, level, internalformat, x, y, width, border);
}

static void REGAL_CALL debug_glCopyTextureImage2DEXT(GLuint texture, GLenum target, GLint level, GLenum internalformat, GLint x, GLint y, GLsizei width, GLsizei height, GLint border)
{
  RegalContext * rCtx = GET_REGAL_CONTEXT();
  DispatchStateScopedStepDown stepDown(rCtx->dsp);
  rCtx->dsp->curr->glCopyTextureImage2DEXT(texture, target, level, internalformat, x, y, width, height, border);
}

static void REGAL_CALL debug_glCopyTextureSubImage1DEXT(GLuint texture, GLenum target, GLint level, GLint xoffset, GLint x, GLint y, GLsizei width)
{
  RegalContext * rCtx = GET_REGAL_CONTEXT();
  DispatchStateScopedStepDown stepDown(rCtx->dsp);
  rCtx->dsp->curr->glCopyTextureSubImage1DEXT(texture, target, level, xoffset, x, y, width);
}

static void REGAL_CALL debug_glCopyTextureSubImage2DEXT(GLuint texture, GLenum target, GLint level, GLint xoffset, GLint yoffset, GLint x, GLint y, GLsizei width, GLsizei height)
{
  RegalContext * rCtx = GET_REGAL_CONTEXT();
  DispatchStateScopedStepDown stepDown(rCtx->dsp);
  rCtx->dsp->curr->glCopyTextureSubImage2DEXT(texture, target, level, xoffset, yoffset, x, y, width, height);
}

static void REGAL_CALL debug_glGetTextureImageEXT(GLuint texture, GLenum target, GLint level, GLenum format, GLenum type, GLvoid *pixels)
{
  RegalContext * rCtx = GET_REGAL_CONTEXT();
  DispatchStateScopedStepDown stepDown(rCtx->dsp);
  rCtx->dsp->curr->glGetTextureImageEXT(texture, target, level, format, type, pixels);
}

static void REGAL_CALL debug_glGetTextureParameterfvEXT(GLuint texture, GLenum target, GLenum pname, GLfloat *params)
{
  RegalContext * rCtx = GET_REGAL_CONTEXT();
  DispatchStateScopedStepDown stepDown(rCtx->dsp);
  rCtx->dsp->curr->glGetTextureParameterfvEXT(texture, target, pname, params);
}

static void REGAL_CALL debug_glGetTextureParameterivEXT(GLuint texture, GLenum target, GLenum pname, GLint *params)
{
  RegalContext * rCtx = GET_REGAL_CONTEXT();
  DispatchStateScopedStepDown stepDown(rCtx->dsp);
  rCtx->dsp->curr->glGetTextureParameterivEXT(texture, target, pname, params);
}

static void REGAL_CALL debug_glGetTextureLevelParameterfvEXT(GLuint texture, GLenum target, GLint level, GLenum pname, GLfloat *params)
{
  RegalContext * rCtx = GET_REGAL_CONTEXT();
  DispatchStateScopedStepDown stepDown(rCtx->dsp);
  rCtx->dsp->curr->glGetTextureLevelParameterfvEXT(texture, target, level, pname, params);
}

static void REGAL_CALL debug_glGetTextureLevelParameterivEXT(GLuint texture, GLenum target, GLint level, GLenum pname, GLint *params)
{
  RegalContext * rCtx = GET_REGAL_CONTEXT();
  DispatchStateScopedStepDown stepDown(rCtx->dsp);
  rCtx->dsp->curr->glGetTextureLevelParameterivEXT(texture, target, level, pname, params);
}

static void REGAL_CALL debug_glTextureImage3DEXT(GLuint texture, GLenum target, GLint level, GLint internalformat, GLsizei width, GLsizei height, GLsizei depth, GLint border, GLenum format, GLenum type, const GLvoid *pixels)
{
  RegalContext * rCtx = GET_REGAL_CONTEXT();
  DispatchStateScopedStepDown stepDown(rCtx->dsp);
  rCtx->dsp->curr->glTextureImage3DEXT(texture, target, level, internalformat, width, height, depth, border, format, type, pixels);
}

static void REGAL_CALL debug_glTextureSubImage3DEXT(GLuint texture, GLenum target, GLint level, GLint xoffset, GLint yoffset, GLint zoffset, GLsizei width, GLsizei height, GLsizei depth, GLenum format, GLenum type, const GLvoid *pixels)
{
  RegalContext * rCtx = GET_REGAL_CONTEXT();
  DispatchStateScopedStepDown stepDown(rCtx->dsp);
  rCtx->dsp->curr->glTextureSubImage3DEXT(texture, target, level, xoffset, yoffset, zoffset, width, height, depth, format, type, pixels);
}

static void REGAL_CALL debug_glCopyTextureSubImage3DEXT(GLuint texture, GLenum target, GLint level, GLint xoffset, GLint yoffset, GLint zoffset, GLint x, GLint y, GLsizei width, GLsizei height)
{
  RegalContext * rCtx = GET_REGAL_CONTEXT();
  DispatchStateScopedStepDown stepDown(rCtx->dsp);
  rCtx->dsp->curr->glCopyTextureSubImage3DEXT(texture, target, level, xoffset, yoffset, zoffset, x, y, width, height);
}

static void REGAL_CALL debug_glMultiTexParameterfEXT(GLenum texunit, GLenum target, GLenum pname, GLfloat param)
{
  RegalContext * rCtx = GET_REGAL_CONTEXT();
  DispatchStateScopedStepDown stepDown(rCtx->dsp);
  rCtx->dsp->curr->glMultiTexParameterfEXT(texunit, target, pname, param);
}

static void REGAL_CALL debug_glMultiTexParameterfvEXT(GLenum texunit, GLenum target, GLenum pname, const GLfloat *param)
{
  RegalContext * rCtx = GET_REGAL_CONTEXT();
  DispatchStateScopedStepDown stepDown(rCtx->dsp);
  rCtx->dsp->curr->glMultiTexParameterfvEXT(texunit, target, pname, param);
}

static void REGAL_CALL debug_glMultiTexParameteriEXT(GLenum texunit, GLenum target, GLenum pname, GLint param)
{
  RegalContext * rCtx = GET_REGAL_CONTEXT();
  DispatchStateScopedStepDown stepDown(rCtx->dsp);
  rCtx->dsp->curr->glMultiTexParameteriEXT(texunit, target, pname, param);
}

static void REGAL_CALL debug_glMultiTexParameterivEXT(GLenum texunit, GLenum target, GLenum pname, const GLint *param)
{
  RegalContext * rCtx = GET_REGAL_CONTEXT();
  DispatchStateScopedStepDown stepDown(rCtx->dsp);
  rCtx->dsp->curr->glMultiTexParameterivEXT(texunit, target, pname, param);
}

static void REGAL_CALL debug_glMultiTexImage1DEXT(GLenum texunit, GLenum target, GLint level, GLint internalformat, GLsizei width, GLint border, GLenum format, GLenum type, const GLvoid *pixels)
{
  RegalContext * rCtx = GET_REGAL_CONTEXT();
  DispatchStateScopedStepDown stepDown(rCtx->dsp);
  rCtx->dsp->curr->glMultiTexImage1DEXT(texunit, target, level, internalformat, width, border, format, type, pixels);
}

static void REGAL_CALL debug_glMultiTexImage2DEXT(GLenum texunit, GLenum target, GLint level, GLint internalformat, GLsizei width, GLsizei height, GLint border, GLenum format, GLenum type, const GLvoid *pixels)
{
  RegalContext * rCtx = GET_REGAL_CONTEXT();
  DispatchStateScopedStepDown stepDown(rCtx->dsp);
  rCtx->dsp->curr->glMultiTexImage2DEXT(texunit, target, level, internalformat, width, height, border, format, type, pixels);
}

static void REGAL_CALL debug_glMultiTexSubImage1DEXT(GLenum texunit, GLenum target, GLint level, GLint xoffset, GLsizei width, GLenum format, GLenum type, const GLvoid *pixels)
{
  RegalContext * rCtx = GET_REGAL_CONTEXT();
  DispatchStateScopedStepDown stepDown(rCtx->dsp);
  rCtx->dsp->curr->glMultiTexSubImage1DEXT(texunit, target, level, xoffset, width, format, type, pixels);
}

static void REGAL_CALL debug_glMultiTexSubImage2DEXT(GLenum texunit, GLenum target, GLint level, GLint xoffset, GLint yoffset, GLsizei width, GLsizei height, GLenum format, GLenum type, const GLvoid *pixels)
{
  RegalContext * rCtx = GET_REGAL_CONTEXT();
  DispatchStateScopedStepDown stepDown(rCtx->dsp);
  rCtx->dsp->curr->glMultiTexSubImage2DEXT(texunit, target, level, xoffset, yoffset, width, height, format, type, pixels);
}

static void REGAL_CALL debug_glCopyMultiTexImage1DEXT(GLenum texunit, GLenum target, GLint level, GLenum internalformat, GLint x, GLint y, GLsizei width, GLint border)
{
  RegalContext * rCtx = GET_REGAL_CONTEXT();
  DispatchStateScopedStepDown stepDown(rCtx->dsp);
  rCtx->dsp->curr->glCopyMultiTexImage1DEXT(texunit, target, level, internalformat, x, y, width, border);
}

static void REGAL_CALL debug_glCopyMultiTexImage2DEXT(GLenum texunit, GLenum target, GLint level, GLenum internalformat, GLint x, GLint y, GLsizei width, GLsizei height, GLint border)
{
  RegalContext * rCtx = GET_REGAL_CONTEXT();
  DispatchStateScopedStepDown stepDown(rCtx->dsp);
  rCtx->dsp->curr->glCopyMultiTexImage2DEXT(texunit, target, level, internalformat, x, y, width, height, border);
}

static void REGAL_CALL debug_glCopyMultiTexSubImage1DEXT(GLenum texunit, GLenum target, GLint level, GLint xoffset, GLint x, GLint y, GLsizei width)
{
  RegalContext * rCtx = GET_REGAL_CONTEXT();
  DispatchStateScopedStepDown stepDown(rCtx->dsp);
  rCtx->dsp->curr->glCopyMultiTexSubImage1DEXT(texunit, target, level, xoffset, x, y, width);
}

static void REGAL_CALL debug_glCopyMultiTexSubImage2DEXT(GLenum texunit, GLenum target, GLint level, GLint xoffset, GLint yoffset, GLint x, GLint y, GLsizei width, GLsizei height)
{
  RegalContext * rCtx = GET_REGAL_CONTEXT();
  DispatchStateScopedStepDown stepDown(rCtx->dsp);
  rCtx->dsp->curr->glCopyMultiTexSubImage2DEXT(texunit, target, level, xoffset, yoffset, x, y, width, height);
}

static void REGAL_CALL debug_glGetMultiTexImageEXT(GLenum texunit, GLenum target, GLint level, GLenum format, GLenum type, GLvoid *pixels)
{
  RegalContext * rCtx = GET_REGAL_CONTEXT();
  DispatchStateScopedStepDown stepDown(rCtx->dsp);
  rCtx->dsp->curr->glGetMultiTexImageEXT(texunit, target, level, format, type, pixels);
}

static void REGAL_CALL debug_glGetMultiTexParameterfvEXT(GLenum texunit, GLenum target, GLenum pname, GLfloat *params)
{
  RegalContext * rCtx = GET_REGAL_CONTEXT();
  DispatchStateScopedStepDown stepDown(rCtx->dsp);
  rCtx->dsp->curr->glGetMultiTexParameterfvEXT(texunit, target, pname, params);
}

static void REGAL_CALL debug_glGetMultiTexParameterivEXT(GLenum texunit, GLenum target, GLenum pname, GLint *params)
{
  RegalContext * rCtx = GET_REGAL_CONTEXT();
  DispatchStateScopedStepDown stepDown(rCtx->dsp);
  rCtx->dsp->curr->glGetMultiTexParameterivEXT(texunit, target, pname, params);
}

static void REGAL_CALL debug_glGetMultiTexLevelParameterfvEXT(GLenum texunit, GLenum target, GLint level, GLenum pname, GLfloat *params)
{
  RegalContext * rCtx = GET_REGAL_CONTEXT();
  DispatchStateScopedStepDown stepDown(rCtx->dsp);
  rCtx->dsp->curr->glGetMultiTexLevelParameterfvEXT(texunit, target, level, pname, params);
}

static void REGAL_CALL debug_glGetMultiTexLevelParameterivEXT(GLenum texunit, GLenum target, GLint level, GLenum pname, GLint *params)
{
  RegalContext * rCtx = GET_REGAL_CONTEXT();
  DispatchStateScopedStepDown stepDown(rCtx->dsp);
  rCtx->dsp->curr->glGetMultiTexLevelParameterivEXT(texunit, target, level, pname, params);
}

static void REGAL_CALL debug_glMultiTexImage3DEXT(GLenum texunit, GLenum target, GLint level, GLint internalformat, GLsizei width, GLsizei height, GLsizei depth, GLint border, GLenum format, GLenum type, const GLvoid *pixels)
{
  RegalContext * rCtx = GET_REGAL_CONTEXT();
  DispatchStateScopedStepDown stepDown(rCtx->dsp);
  rCtx->dsp->curr->glMultiTexImage3DEXT(texunit, target, level, internalformat, width, height, depth, border, format, type, pixels);
}

static void REGAL_CALL debug_glMultiTexSubImage3DEXT(GLenum texunit, GLenum target, GLint level, GLint xoffset, GLint yoffset, GLint zoffset, GLsizei width, GLsizei height, GLsizei depth, GLenum format, GLenum type, const GLvoid *pixels)
{
  RegalContext * rCtx = GET_REGAL_CONTEXT();
  DispatchStateScopedStepDown stepDown(rCtx->dsp);
  rCtx->dsp->curr->glMultiTexSubImage3DEXT(texunit, target, level, xoffset, yoffset, zoffset, width, height, depth, format, type, pixels);
}

static void REGAL_CALL debug_glCopyMultiTexSubImage3DEXT(GLenum texunit, GLenum target, GLint level, GLint xoffset, GLint yoffset, GLint zoffset, GLint x, GLint y, GLsizei width, GLsizei height)
{
  RegalContext * rCtx = GET_REGAL_CONTEXT();
  DispatchStateScopedStepDown stepDown(rCtx->dsp);
  rCtx->dsp->curr->glCopyMultiTexSubImage3DEXT(texunit, target, level, xoffset, yoffset, zoffset, x, y, width, height);
}

static void REGAL_CALL debug_glBindMultiTextureEXT(GLenum texunit, GLenum target, GLuint texture)
{
  RegalContext * rCtx = GET_REGAL_CONTEXT();
  DispatchStateScopedStepDown stepDown(rCtx->dsp);
  rCtx->dsp->curr->glBindMultiTextureEXT(texunit, target, texture);
}

static void REGAL_CALL debug_glEnableClientStateIndexedEXT(GLenum array, GLuint index)
{
  RegalContext * rCtx = GET_REGAL_CONTEXT();
  DispatchStateScopedStepDown stepDown(rCtx->dsp);
  rCtx->dsp->curr->glEnableClientStateIndexedEXT(array, index);
}

static void REGAL_CALL debug_glDisableClientStateIndexedEXT(GLenum array, GLuint index)
{
  RegalContext * rCtx = GET_REGAL_CONTEXT();
  DispatchStateScopedStepDown stepDown(rCtx->dsp);
  rCtx->dsp->curr->glDisableClientStateIndexedEXT(array, index);
}

static void REGAL_CALL debug_glMultiTexCoordPointerEXT(GLenum texunit, GLint size, GLenum type, GLsizei stride, const GLvoid *pointer)
{
  RegalContext * rCtx = GET_REGAL_CONTEXT();
  DispatchStateScopedStepDown stepDown(rCtx->dsp);
  rCtx->dsp->curr->glMultiTexCoordPointerEXT(texunit, size, type, stride, pointer);
}

static void REGAL_CALL debug_glMultiTexEnvfEXT(GLenum texunit, GLenum target, GLenum pname, GLfloat param)
{
  RegalContext * rCtx = GET_REGAL_CONTEXT();
  DispatchStateScopedStepDown stepDown(rCtx->dsp);
  rCtx->dsp->curr->glMultiTexEnvfEXT(texunit, target, pname, param);
}

static void REGAL_CALL debug_glMultiTexEnvfvEXT(GLenum texunit, GLenum target, GLenum pname, const GLfloat *params)
{
  RegalContext * rCtx = GET_REGAL_CONTEXT();
  DispatchStateScopedStepDown stepDown(rCtx->dsp);
  rCtx->dsp->curr->glMultiTexEnvfvEXT(texunit, target, pname, params);
}

static void REGAL_CALL debug_glMultiTexEnviEXT(GLenum texunit, GLenum target, GLenum pname, GLint param)
{
  RegalContext * rCtx = GET_REGAL_CONTEXT();
  DispatchStateScopedStepDown stepDown(rCtx->dsp);
  rCtx->dsp->curr->glMultiTexEnviEXT(texunit, target, pname, param);
}

static void REGAL_CALL debug_glMultiTexEnvivEXT(GLenum texunit, GLenum target, GLenum pname, const GLint *params)
{
  RegalContext * rCtx = GET_REGAL_CONTEXT();
  DispatchStateScopedStepDown stepDown(rCtx->dsp);
  rCtx->dsp->curr->glMultiTexEnvivEXT(texunit, target, pname, params);
}

static void REGAL_CALL debug_glMultiTexGendEXT(GLenum texunit, GLenum coord, GLenum pname, GLdouble param)
{
  RegalContext * rCtx = GET_REGAL_CONTEXT();
  DispatchStateScopedStepDown stepDown(rCtx->dsp);
  rCtx->dsp->curr->glMultiTexGendEXT(texunit, coord, pname, param);
}

static void REGAL_CALL debug_glMultiTexGendvEXT(GLenum texunit, GLenum coord, GLenum pname, const GLdouble *params)
{
  RegalContext * rCtx = GET_REGAL_CONTEXT();
  DispatchStateScopedStepDown stepDown(rCtx->dsp);
  rCtx->dsp->curr->glMultiTexGendvEXT(texunit, coord, pname, params);
}

static void REGAL_CALL debug_glMultiTexGenfEXT(GLenum texunit, GLenum coord, GLenum pname, GLfloat param)
{
  RegalContext * rCtx = GET_REGAL_CONTEXT();
  DispatchStateScopedStepDown stepDown(rCtx->dsp);
  rCtx->dsp->curr->glMultiTexGenfEXT(texunit, coord, pname, param);
}

static void REGAL_CALL debug_glMultiTexGenfvEXT(GLenum texunit, GLenum coord, GLenum pname, const GLfloat *params)
{
  RegalContext * rCtx = GET_REGAL_CONTEXT();
  DispatchStateScopedStepDown stepDown(rCtx->dsp);
  rCtx->dsp->curr->glMultiTexGenfvEXT(texunit, coord, pname, params);
}

static void REGAL_CALL debug_glMultiTexGeniEXT(GLenum texunit, GLenum coord, GLenum pname, GLint param)
{
  RegalContext * rCtx = GET_REGAL_CONTEXT();
  DispatchStateScopedStepDown stepDown(rCtx->dsp);
  rCtx->dsp->curr->glMultiTexGeniEXT(texunit, coord, pname, param);
}

static void REGAL_CALL debug_glMultiTexGenivEXT(GLenum texunit, GLenum coord, GLenum pname, const GLint *params)
{
  RegalContext * rCtx = GET_REGAL_CONTEXT();
  DispatchStateScopedStepDown stepDown(rCtx->dsp);
  rCtx->dsp->curr->glMultiTexGenivEXT(texunit, coord, pname, params);
}

static void REGAL_CALL debug_glGetMultiTexEnvfvEXT(GLenum texunit, GLenum target, GLenum pname, GLfloat *params)
{
  RegalContext * rCtx = GET_REGAL_CONTEXT();
  DispatchStateScopedStepDown stepDown(rCtx->dsp);
  rCtx->dsp->curr->glGetMultiTexEnvfvEXT(texunit, target, pname, params);
}

static void REGAL_CALL debug_glGetMultiTexEnvivEXT(GLenum texunit, GLenum target, GLenum pname, GLint *params)
{
  RegalContext * rCtx = GET_REGAL_CONTEXT();
  DispatchStateScopedStepDown stepDown(rCtx->dsp);
  rCtx->dsp->curr->glGetMultiTexEnvivEXT(texunit, target, pname, params);
}

static void REGAL_CALL debug_glGetMultiTexGendvEXT(GLenum texunit, GLenum coord, GLenum pname, GLdouble *params)
{
  RegalContext * rCtx = GET_REGAL_CONTEXT();
  DispatchStateScopedStepDown stepDown(rCtx->dsp);
  rCtx->dsp->curr->glGetMultiTexGendvEXT(texunit, coord, pname, params);
}

static void REGAL_CALL debug_glGetMultiTexGenfvEXT(GLenum texunit, GLenum coord, GLenum pname, GLfloat *params)
{
  RegalContext * rCtx = GET_REGAL_CONTEXT();
  DispatchStateScopedStepDown stepDown(rCtx->dsp);
  rCtx->dsp->curr->glGetMultiTexGenfvEXT(texunit, coord, pname, params);
}

static void REGAL_CALL debug_glGetMultiTexGenivEXT(GLenum texunit, GLenum coord, GLenum pname, GLint *params)
{
  RegalContext * rCtx = GET_REGAL_CONTEXT();
  DispatchStateScopedStepDown stepDown(rCtx->dsp);
  rCtx->dsp->curr->glGetMultiTexGenivEXT(texunit, coord, pname, params);
}

static void REGAL_CALL debug_glGetFloatIndexedvEXT(GLenum target, GLuint index, GLfloat *data)
{
  RegalContext * rCtx = GET_REGAL_CONTEXT();
  DispatchStateScopedStepDown stepDown(rCtx->dsp);
  rCtx->dsp->curr->glGetFloatIndexedvEXT(target, index, data);
}

static void REGAL_CALL debug_glGetDoubleIndexedvEXT(GLenum target, GLuint index, GLdouble *data)
{
  RegalContext * rCtx = GET_REGAL_CONTEXT();
  DispatchStateScopedStepDown stepDown(rCtx->dsp);
  rCtx->dsp->curr->glGetDoubleIndexedvEXT(target, index, data);
}

static void REGAL_CALL debug_glGetPointerIndexedvEXT(GLenum target, GLuint index, GLvoid **data)
{
  RegalContext * rCtx = GET_REGAL_CONTEXT();
  DispatchStateScopedStepDown stepDown(rCtx->dsp);
  rCtx->dsp->curr->glGetPointerIndexedvEXT(target, index, data);
}

static void REGAL_CALL debug_glCompressedTextureImage3DEXT(GLuint texture, GLenum target, GLint level, GLenum internalformat, GLsizei width, GLsizei height, GLsizei depth, GLint border, GLsizei imageSize, const GLvoid *bits)
{
  RegalContext * rCtx = GET_REGAL_CONTEXT();
  DispatchStateScopedStepDown stepDown(rCtx->dsp);
  rCtx->dsp->curr->glCompressedTextureImage3DEXT(texture, target, level, internalformat, width, height, depth, border, imageSize, bits);
}

static void REGAL_CALL debug_glCompressedTextureImage2DEXT(GLuint texture, GLenum target, GLint level, GLenum internalformat, GLsizei width, GLsizei height, GLint border, GLsizei imageSize, const GLvoid *bits)
{
  RegalContext * rCtx = GET_REGAL_CONTEXT();
  DispatchStateScopedStepDown stepDown(rCtx->dsp);
  rCtx->dsp->curr->glCompressedTextureImage2DEXT(texture, target, level, internalformat, width, height, border, imageSize, bits);
}

static void REGAL_CALL debug_glCompressedTextureImage1DEXT(GLuint texture, GLenum target, GLint level, GLenum internalformat, GLsizei width, GLint border, GLsizei imageSize, const GLvoid *bits)
{
  RegalContext * rCtx = GET_REGAL_CONTEXT();
  DispatchStateScopedStepDown stepDown(rCtx->dsp);
  rCtx->dsp->curr->glCompressedTextureImage1DEXT(texture, target, level, internalformat, width, border, imageSize, bits);
}

static void REGAL_CALL debug_glCompressedTextureSubImage3DEXT(GLuint texture, GLenum target, GLint level, GLint xoffset, GLint yoffset, GLint zoffset, GLsizei width, GLsizei height, GLsizei depth, GLenum format, GLsizei imageSize, const GLvoid *bits)
{
  RegalContext * rCtx = GET_REGAL_CONTEXT();
  DispatchStateScopedStepDown stepDown(rCtx->dsp);
  rCtx->dsp->curr->glCompressedTextureSubImage3DEXT(texture, target, level, xoffset, yoffset, zoffset, width, height, depth, format, imageSize, bits);
}

static void REGAL_CALL debug_glCompressedTextureSubImage2DEXT(GLuint texture, GLenum target, GLint level, GLint xoffset, GLint yoffset, GLsizei width, GLsizei height, GLenum format, GLsizei imageSize, const GLvoid *bits)
{
  RegalContext * rCtx = GET_REGAL_CONTEXT();
  DispatchStateScopedStepDown stepDown(rCtx->dsp);
  rCtx->dsp->curr->glCompressedTextureSubImage2DEXT(texture, target, level, xoffset, yoffset, width, height, format, imageSize, bits);
}

static void REGAL_CALL debug_glCompressedTextureSubImage1DEXT(GLuint texture, GLenum target, GLint level, GLint xoffset, GLsizei width, GLenum format, GLsizei imageSize, const GLvoid *bits)
{
  RegalContext * rCtx = GET_REGAL_CONTEXT();
  DispatchStateScopedStepDown stepDown(rCtx->dsp);
  rCtx->dsp->curr->glCompressedTextureSubImage1DEXT(texture, target, level, xoffset, width, format, imageSize, bits);
}

static void REGAL_CALL debug_glGetCompressedTextureImageEXT(GLuint texture, GLenum target, GLint lod, GLvoid *img)
{
  RegalContext * rCtx = GET_REGAL_CONTEXT();
  DispatchStateScopedStepDown stepDown(rCtx->dsp);
  rCtx->dsp->curr->glGetCompressedTextureImageEXT(texture, target, lod, img);
}

static void REGAL_CALL debug_glCompressedMultiTexImage3DEXT(GLenum texunit, GLenum target, GLint level, GLenum internalformat, GLsizei width, GLsizei height, GLsizei depth, GLint border, GLsizei imageSize, const GLvoid *bits)
{
  RegalContext * rCtx = GET_REGAL_CONTEXT();
  DispatchStateScopedStepDown stepDown(rCtx->dsp);
  rCtx->dsp->curr->glCompressedMultiTexImage3DEXT(texunit, target, level, internalformat, width, height, depth, border, imageSize, bits);
}

static void REGAL_CALL debug_glCompressedMultiTexImage2DEXT(GLenum texunit, GLenum target, GLint level, GLenum internalformat, GLsizei width, GLsizei height, GLint border, GLsizei imageSize, const GLvoid *bits)
{
  RegalContext * rCtx = GET_REGAL_CONTEXT();
  DispatchStateScopedStepDown stepDown(rCtx->dsp);
  rCtx->dsp->curr->glCompressedMultiTexImage2DEXT(texunit, target, level, internalformat, width, height, border, imageSize, bits);
}

static void REGAL_CALL debug_glCompressedMultiTexImage1DEXT(GLenum texunit, GLenum target, GLint level, GLenum internalformat, GLsizei width, GLint border, GLsizei imageSize, const GLvoid *data)
{
  RegalContext * rCtx = GET_REGAL_CONTEXT();
  DispatchStateScopedStepDown stepDown(rCtx->dsp);
  rCtx->dsp->curr->glCompressedMultiTexImage1DEXT(texunit, target, level, internalformat, width, border, imageSize, data);
}

static void REGAL_CALL debug_glCompressedMultiTexSubImage3DEXT(GLenum texunit, GLenum target, GLint level, GLint xoffset, GLint yoffset, GLint zoffset, GLsizei width, GLsizei height, GLsizei depth, GLenum format, GLsizei imageSize, const GLvoid *data)
{
  RegalContext * rCtx = GET_REGAL_CONTEXT();
  DispatchStateScopedStepDown stepDown(rCtx->dsp);
  rCtx->dsp->curr->glCompressedMultiTexSubImage3DEXT(texunit, target, level, xoffset, yoffset, zoffset, width, height, depth, format, imageSize, data);
}

static void REGAL_CALL debug_glCompressedMultiTexSubImage2DEXT(GLenum texunit, GLenum target, GLint level, GLint xoffset, GLint yoffset, GLsizei width, GLsizei height, GLenum format, GLsizei imageSize, const GLvoid *data)
{
  RegalContext * rCtx = GET_REGAL_CONTEXT();
  DispatchStateScopedStepDown stepDown(rCtx->dsp);
  rCtx->dsp->curr->glCompressedMultiTexSubImage2DEXT(texunit, target, level, xoffset, yoffset, width, height, format, imageSize, data);
}

static void REGAL_CALL debug_glCompressedMultiTexSubImage1DEXT(GLenum texunit, GLenum target, GLint level, GLint xoffset, GLsizei width, GLenum format, GLsizei imageSize, const GLvoid *data)
{
  RegalContext * rCtx = GET_REGAL_CONTEXT();
  DispatchStateScopedStepDown stepDown(rCtx->dsp);
  rCtx->dsp->curr->glCompressedMultiTexSubImage1DEXT(texunit, target, level, xoffset, width, format, imageSize, data);
}

static void REGAL_CALL debug_glGetCompressedMultiTexImageEXT(GLenum texunit, GLenum target, GLint lod, GLvoid *img)
{
  RegalContext * rCtx = GET_REGAL_CONTEXT();
  DispatchStateScopedStepDown stepDown(rCtx->dsp);
  rCtx->dsp->curr->glGetCompressedMultiTexImageEXT(texunit, target, lod, img);
}

static void REGAL_CALL debug_glNamedProgramStringEXT(GLuint program, GLenum target, GLenum format, GLsizei len, const GLvoid *string)
{
  RegalContext * rCtx = GET_REGAL_CONTEXT();
  DispatchStateScopedStepDown stepDown(rCtx->dsp);
  rCtx->dsp->curr->glNamedProgramStringEXT(program, target, format, len, string);
}

static void REGAL_CALL debug_glNamedProgramLocalParameter4dEXT(GLuint program, GLenum target, GLuint index, GLdouble x, GLdouble y, GLdouble z, GLdouble w)
{
  RegalContext * rCtx = GET_REGAL_CONTEXT();
  DispatchStateScopedStepDown stepDown(rCtx->dsp);
  rCtx->dsp->curr->glNamedProgramLocalParameter4dEXT(program, target, index, x, y, z, w);
}

static void REGAL_CALL debug_glNamedProgramLocalParameter4dvEXT(GLuint program, GLenum target, GLuint index, const GLdouble *params)
{
  RegalContext * rCtx = GET_REGAL_CONTEXT();
  DispatchStateScopedStepDown stepDown(rCtx->dsp);
  rCtx->dsp->curr->glNamedProgramLocalParameter4dvEXT(program, target, index, params);
}

static void REGAL_CALL debug_glNamedProgramLocalParameter4fEXT(GLuint program, GLenum target, GLuint index, GLfloat x, GLfloat y, GLfloat z, GLfloat w)
{
  RegalContext * rCtx = GET_REGAL_CONTEXT();
  DispatchStateScopedStepDown stepDown(rCtx->dsp);
  rCtx->dsp->curr->glNamedProgramLocalParameter4fEXT(program, target, index, x, y, z, w);
}

static void REGAL_CALL debug_glNamedProgramLocalParameter4fvEXT(GLuint program, GLenum target, GLuint index, const GLfloat *params)
{
  RegalContext * rCtx = GET_REGAL_CONTEXT();
  DispatchStateScopedStepDown stepDown(rCtx->dsp);
  rCtx->dsp->curr->glNamedProgramLocalParameter4fvEXT(program, target, index, params);
}

static void REGAL_CALL debug_glGetNamedProgramLocalParameterdvEXT(GLuint program, GLenum target, GLuint index, GLdouble *params)
{
  RegalContext * rCtx = GET_REGAL_CONTEXT();
  DispatchStateScopedStepDown stepDown(rCtx->dsp);
  rCtx->dsp->curr->glGetNamedProgramLocalParameterdvEXT(program, target, index, params);
}

static void REGAL_CALL debug_glGetNamedProgramLocalParameterfvEXT(GLuint program, GLenum target, GLuint index, GLfloat *params)
{
  RegalContext * rCtx = GET_REGAL_CONTEXT();
  DispatchStateScopedStepDown stepDown(rCtx->dsp);
  rCtx->dsp->curr->glGetNamedProgramLocalParameterfvEXT(program, target, index, params);
}

static void REGAL_CALL debug_glGetNamedProgramivEXT(GLuint program, GLenum target, GLenum pname, GLint *params)
{
  RegalContext * rCtx = GET_REGAL_CONTEXT();
  DispatchStateScopedStepDown stepDown(rCtx->dsp);
  rCtx->dsp->curr->glGetNamedProgramivEXT(program, target, pname, params);
}

static void REGAL_CALL debug_glGetNamedProgramStringEXT(GLuint program, GLenum target, GLenum pname, GLvoid *string)
{
  RegalContext * rCtx = GET_REGAL_CONTEXT();
  DispatchStateScopedStepDown stepDown(rCtx->dsp);
  rCtx->dsp->curr->glGetNamedProgramStringEXT(program, target, pname, string);
}

static void REGAL_CALL debug_glNamedProgramLocalParameters4fvEXT(GLuint program, GLenum target, GLuint index, GLsizei count, const GLfloat *params)
{
  RegalContext * rCtx = GET_REGAL_CONTEXT();
  DispatchStateScopedStepDown stepDown(rCtx->dsp);
  rCtx->dsp->curr->glNamedProgramLocalParameters4fvEXT(program, target, index, count, params);
}

static void REGAL_CALL debug_glNamedProgramLocalParameterI4iEXT(GLuint program, GLenum target, GLuint index, GLint x, GLint y, GLint z, GLint w)
{
  RegalContext * rCtx = GET_REGAL_CONTEXT();
  DispatchStateScopedStepDown stepDown(rCtx->dsp);
  rCtx->dsp->curr->glNamedProgramLocalParameterI4iEXT(program, target, index, x, y, z, w);
}

static void REGAL_CALL debug_glNamedProgramLocalParameterI4ivEXT(GLuint program, GLenum target, GLuint index, const GLint *params)
{
  RegalContext * rCtx = GET_REGAL_CONTEXT();
  DispatchStateScopedStepDown stepDown(rCtx->dsp);
  rCtx->dsp->curr->glNamedProgramLocalParameterI4ivEXT(program, target, index, params);
}

static void REGAL_CALL debug_glNamedProgramLocalParametersI4ivEXT(GLuint program, GLenum target, GLuint index, GLsizei count, const GLint *params)
{
  RegalContext * rCtx = GET_REGAL_CONTEXT();
  DispatchStateScopedStepDown stepDown(rCtx->dsp);
  rCtx->dsp->curr->glNamedProgramLocalParametersI4ivEXT(program, target, index, count, params);
}

static void REGAL_CALL debug_glNamedProgramLocalParameterI4uiEXT(GLuint program, GLenum target, GLuint index, GLuint x, GLuint y, GLuint z, GLuint w)
{
  RegalContext * rCtx = GET_REGAL_CONTEXT();
  DispatchStateScopedStepDown stepDown(rCtx->dsp);
  rCtx->dsp->curr->glNamedProgramLocalParameterI4uiEXT(program, target, index, x, y, z, w);
}

static void REGAL_CALL debug_glNamedProgramLocalParameterI4uivEXT(GLuint program, GLenum target, GLuint index, const GLuint *params)
{
  RegalContext * rCtx = GET_REGAL_CONTEXT();
  DispatchStateScopedStepDown stepDown(rCtx->dsp);
  rCtx->dsp->curr->glNamedProgramLocalParameterI4uivEXT(program, target, index, params);
}

static void REGAL_CALL debug_glNamedProgramLocalParametersI4uivEXT(GLuint program, GLenum target, GLuint index, GLsizei count, const GLuint *params)
{
  RegalContext * rCtx = GET_REGAL_CONTEXT();
  DispatchStateScopedStepDown stepDown(rCtx->dsp);
  rCtx->dsp->curr->glNamedProgramLocalParametersI4uivEXT(program, target, index, count, params);
}

static void REGAL_CALL debug_glGetNamedProgramLocalParameterIivEXT(GLuint program, GLenum target, GLuint index, GLint *params)
{
  RegalContext * rCtx = GET_REGAL_CONTEXT();
  DispatchStateScopedStepDown stepDown(rCtx->dsp);
  rCtx->dsp->curr->glGetNamedProgramLocalParameterIivEXT(program, target, index, params);
}

static void REGAL_CALL debug_glGetNamedProgramLocalParameterIuivEXT(GLuint program, GLenum target, GLuint index, GLuint *params)
{
  RegalContext * rCtx = GET_REGAL_CONTEXT();
  DispatchStateScopedStepDown stepDown(rCtx->dsp);
  rCtx->dsp->curr->glGetNamedProgramLocalParameterIuivEXT(program, target, index, params);
}

static void REGAL_CALL debug_glTextureParameterIivEXT(GLuint texture, GLenum target, GLenum pname, const GLint *params)
{
  RegalContext * rCtx = GET_REGAL_CONTEXT();
  DispatchStateScopedStepDown stepDown(rCtx->dsp);
  rCtx->dsp->curr->glTextureParameterIivEXT(texture, target, pname, params);
}

static void REGAL_CALL debug_glTextureParameterIuivEXT(GLuint texture, GLenum target, GLenum pname, const GLuint *params)
{
  RegalContext * rCtx = GET_REGAL_CONTEXT();
  DispatchStateScopedStepDown stepDown(rCtx->dsp);
  rCtx->dsp->curr->glTextureParameterIuivEXT(texture, target, pname, params);
}

static void REGAL_CALL debug_glGetTextureParameterIivEXT(GLuint texture, GLenum target, GLenum pname, GLint *params)
{
  RegalContext * rCtx = GET_REGAL_CONTEXT();
  DispatchStateScopedStepDown stepDown(rCtx->dsp);
  rCtx->dsp->curr->glGetTextureParameterIivEXT(texture, target, pname, params);
}

static void REGAL_CALL debug_glGetTextureParameterIuivEXT(GLuint texture, GLenum target, GLenum pname, GLuint *params)
{
  RegalContext * rCtx = GET_REGAL_CONTEXT();
  DispatchStateScopedStepDown stepDown(rCtx->dsp);
  rCtx->dsp->curr->glGetTextureParameterIuivEXT(texture, target, pname, params);
}

static void REGAL_CALL debug_glMultiTexParameterIivEXT(GLenum texunit, GLenum target, GLenum pname, const GLint *params)
{
  RegalContext * rCtx = GET_REGAL_CONTEXT();
  DispatchStateScopedStepDown stepDown(rCtx->dsp);
  rCtx->dsp->curr->glMultiTexParameterIivEXT(texunit, target, pname, params);
}

static void REGAL_CALL debug_glMultiTexParameterIuivEXT(GLenum texunit, GLenum target, GLenum pname, const GLuint *params)
{
  RegalContext * rCtx = GET_REGAL_CONTEXT();
  DispatchStateScopedStepDown stepDown(rCtx->dsp);
  rCtx->dsp->curr->glMultiTexParameterIuivEXT(texunit, target, pname, params);
}

static void REGAL_CALL debug_glGetMultiTexParameterIivEXT(GLenum texunit, GLenum target, GLenum pname, GLint *params)
{
  RegalContext * rCtx = GET_REGAL_CONTEXT();
  DispatchStateScopedStepDown stepDown(rCtx->dsp);
  rCtx->dsp->curr->glGetMultiTexParameterIivEXT(texunit, target, pname, params);
}

static void REGAL_CALL debug_glGetMultiTexParameterIuivEXT(GLenum texunit, GLenum target, GLenum pname, GLuint *params)
{
  RegalContext * rCtx = GET_REGAL_CONTEXT();
  DispatchStateScopedStepDown stepDown(rCtx->dsp);
  rCtx->dsp->curr->glGetMultiTexParameterIuivEXT(texunit, target, pname, params);
}

static void REGAL_CALL debug_glProgramUniform1fEXT(GLuint program, GLint location, GLfloat v0)
{
  RegalContext * rCtx = GET_REGAL_CONTEXT();
  DispatchStateScopedStepDown stepDown(rCtx->dsp);
  rCtx->dsp->curr->glProgramUniform1fEXT(program, location, v0);
}

static void REGAL_CALL debug_glProgramUniform2fEXT(GLuint program, GLint location, GLfloat v0, GLfloat v1)
{
  RegalContext * rCtx = GET_REGAL_CONTEXT();
  DispatchStateScopedStepDown stepDown(rCtx->dsp);
  rCtx->dsp->curr->glProgramUniform2fEXT(program, location, v0, v1);
}

static void REGAL_CALL debug_glProgramUniform3fEXT(GLuint program, GLint location, GLfloat v0, GLfloat v1, GLfloat v2)
{
  RegalContext * rCtx = GET_REGAL_CONTEXT();
  DispatchStateScopedStepDown stepDown(rCtx->dsp);
  rCtx->dsp->curr->glProgramUniform3fEXT(program, location, v0, v1, v2);
}

static void REGAL_CALL debug_glProgramUniform4fEXT(GLuint program, GLint location, GLfloat v0, GLfloat v1, GLfloat v2, GLfloat v3)
{
  RegalContext * rCtx = GET_REGAL_CONTEXT();
  DispatchStateScopedStepDown stepDown(rCtx->dsp);
  rCtx->dsp->curr->glProgramUniform4fEXT(program, location, v0, v1, v2, v3);
}

static void REGAL_CALL debug_glProgramUniform1iEXT(GLuint program, GLint location, GLint v0)
{
  RegalContext * rCtx = GET_REGAL_CONTEXT();
  DispatchStateScopedStepDown stepDown(rCtx->dsp);
  rCtx->dsp->curr->glProgramUniform1iEXT(program, location, v0);
}

static void REGAL_CALL debug_glProgramUniform2iEXT(GLuint program, GLint location, GLint v0, GLint v1)
{
  RegalContext * rCtx = GET_REGAL_CONTEXT();
  DispatchStateScopedStepDown stepDown(rCtx->dsp);
  rCtx->dsp->curr->glProgramUniform2iEXT(program, location, v0, v1);
}

static void REGAL_CALL debug_glProgramUniform3iEXT(GLuint program, GLint location, GLint v0, GLint v1, GLint v2)
{
  RegalContext * rCtx = GET_REGAL_CONTEXT();
  DispatchStateScopedStepDown stepDown(rCtx->dsp);
  rCtx->dsp->curr->glProgramUniform3iEXT(program, location, v0, v1, v2);
}

static void REGAL_CALL debug_glProgramUniform4iEXT(GLuint program, GLint location, GLint v0, GLint v1, GLint v2, GLint v3)
{
  RegalContext * rCtx = GET_REGAL_CONTEXT();
  DispatchStateScopedStepDown stepDown(rCtx->dsp);
  rCtx->dsp->curr->glProgramUniform4iEXT(program, location, v0, v1, v2, v3);
}

static void REGAL_CALL debug_glProgramUniform1fvEXT(GLuint program, GLint location, GLsizei count, const GLfloat *value)
{
  RegalContext * rCtx = GET_REGAL_CONTEXT();
  DispatchStateScopedStepDown stepDown(rCtx->dsp);
  rCtx->dsp->curr->glProgramUniform1fvEXT(program, location, count, value);
}

static void REGAL_CALL debug_glProgramUniform2fvEXT(GLuint program, GLint location, GLsizei count, const GLfloat *value)
{
  RegalContext * rCtx = GET_REGAL_CONTEXT();
  DispatchStateScopedStepDown stepDown(rCtx->dsp);
  rCtx->dsp->curr->glProgramUniform2fvEXT(program, location, count, value);
}

static void REGAL_CALL debug_glProgramUniform3fvEXT(GLuint program, GLint location, GLsizei count, const GLfloat *value)
{
  RegalContext * rCtx = GET_REGAL_CONTEXT();
  DispatchStateScopedStepDown stepDown(rCtx->dsp);
  rCtx->dsp->curr->glProgramUniform3fvEXT(program, location, count, value);
}

static void REGAL_CALL debug_glProgramUniform4fvEXT(GLuint program, GLint location, GLsizei count, const GLfloat *value)
{
  RegalContext * rCtx = GET_REGAL_CONTEXT();
  DispatchStateScopedStepDown stepDown(rCtx->dsp);
  rCtx->dsp->curr->glProgramUniform4fvEXT(program, location, count, value);
}

static void REGAL_CALL debug_glProgramUniform1ivEXT(GLuint program, GLint location, GLsizei count, const GLint *value)
{
  RegalContext * rCtx = GET_REGAL_CONTEXT();
  DispatchStateScopedStepDown stepDown(rCtx->dsp);
  rCtx->dsp->curr->glProgramUniform1ivEXT(program, location, count, value);
}

static void REGAL_CALL debug_glProgramUniform2ivEXT(GLuint program, GLint location, GLsizei count, const GLint *value)
{
  RegalContext * rCtx = GET_REGAL_CONTEXT();
  DispatchStateScopedStepDown stepDown(rCtx->dsp);
  rCtx->dsp->curr->glProgramUniform2ivEXT(program, location, count, value);
}

static void REGAL_CALL debug_glProgramUniform3ivEXT(GLuint program, GLint location, GLsizei count, const GLint *value)
{
  RegalContext * rCtx = GET_REGAL_CONTEXT();
  DispatchStateScopedStepDown stepDown(rCtx->dsp);
  rCtx->dsp->curr->glProgramUniform3ivEXT(program, location, count, value);
}

static void REGAL_CALL debug_glProgramUniform4ivEXT(GLuint program, GLint location, GLsizei count, const GLint *value)
{
  RegalContext * rCtx = GET_REGAL_CONTEXT();
  DispatchStateScopedStepDown stepDown(rCtx->dsp);
  rCtx->dsp->curr->glProgramUniform4ivEXT(program, location, count, value);
}

static void REGAL_CALL debug_glProgramUniformMatrix2fvEXT(GLuint program, GLint location, GLsizei count, GLboolean transpose, const GLfloat *value)
{
  RegalContext * rCtx = GET_REGAL_CONTEXT();
  DispatchStateScopedStepDown stepDown(rCtx->dsp);
  rCtx->dsp->curr->glProgramUniformMatrix2fvEXT(program, location, count, transpose, value);
}

static void REGAL_CALL debug_glProgramUniformMatrix3fvEXT(GLuint program, GLint location, GLsizei count, GLboolean transpose, const GLfloat *value)
{
  RegalContext * rCtx = GET_REGAL_CONTEXT();
  DispatchStateScopedStepDown stepDown(rCtx->dsp);
  rCtx->dsp->curr->glProgramUniformMatrix3fvEXT(program, location, count, transpose, value);
}

static void REGAL_CALL debug_glProgramUniformMatrix4fvEXT(GLuint program, GLint location, GLsizei count, GLboolean transpose, const GLfloat *value)
{
  RegalContext * rCtx = GET_REGAL_CONTEXT();
  DispatchStateScopedStepDown stepDown(rCtx->dsp);
  rCtx->dsp->curr->glProgramUniformMatrix4fvEXT(program, location, count, transpose, value);
}

static void REGAL_CALL debug_glProgramUniformMatrix2x3fvEXT(GLuint program, GLint location, GLsizei count, GLboolean transpose, const GLfloat *value)
{
  RegalContext * rCtx = GET_REGAL_CONTEXT();
  DispatchStateScopedStepDown stepDown(rCtx->dsp);
  rCtx->dsp->curr->glProgramUniformMatrix2x3fvEXT(program, location, count, transpose, value);
}

static void REGAL_CALL debug_glProgramUniformMatrix3x2fvEXT(GLuint program, GLint location, GLsizei count, GLboolean transpose, const GLfloat *value)
{
  RegalContext * rCtx = GET_REGAL_CONTEXT();
  DispatchStateScopedStepDown stepDown(rCtx->dsp);
  rCtx->dsp->curr->glProgramUniformMatrix3x2fvEXT(program, location, count, transpose, value);
}

static void REGAL_CALL debug_glProgramUniformMatrix2x4fvEXT(GLuint program, GLint location, GLsizei count, GLboolean transpose, const GLfloat *value)
{
  RegalContext * rCtx = GET_REGAL_CONTEXT();
  DispatchStateScopedStepDown stepDown(rCtx->dsp);
  rCtx->dsp->curr->glProgramUniformMatrix2x4fvEXT(program, location, count, transpose, value);
}

static void REGAL_CALL debug_glProgramUniformMatrix4x2fvEXT(GLuint program, GLint location, GLsizei count, GLboolean transpose, const GLfloat *value)
{
  RegalContext * rCtx = GET_REGAL_CONTEXT();
  DispatchStateScopedStepDown stepDown(rCtx->dsp);
  rCtx->dsp->curr->glProgramUniformMatrix4x2fvEXT(program, location, count, transpose, value);
}

static void REGAL_CALL debug_glProgramUniformMatrix3x4fvEXT(GLuint program, GLint location, GLsizei count, GLboolean transpose, const GLfloat *value)
{
  RegalContext * rCtx = GET_REGAL_CONTEXT();
  DispatchStateScopedStepDown stepDown(rCtx->dsp);
  rCtx->dsp->curr->glProgramUniformMatrix3x4fvEXT(program, location, count, transpose, value);
}

static void REGAL_CALL debug_glProgramUniformMatrix4x3fvEXT(GLuint program, GLint location, GLsizei count, GLboolean transpose, const GLfloat *value)
{
  RegalContext * rCtx = GET_REGAL_CONTEXT();
  DispatchStateScopedStepDown stepDown(rCtx->dsp);
  rCtx->dsp->curr->glProgramUniformMatrix4x3fvEXT(program, location, count, transpose, value);
}

static void REGAL_CALL debug_glProgramUniform1uiEXT(GLuint program, GLint location, GLuint v0)
{
  RegalContext * rCtx = GET_REGAL_CONTEXT();
  DispatchStateScopedStepDown stepDown(rCtx->dsp);
  rCtx->dsp->curr->glProgramUniform1uiEXT(program, location, v0);
}

static void REGAL_CALL debug_glProgramUniform2uiEXT(GLuint program, GLint location, GLuint v0, GLuint v1)
{
  RegalContext * rCtx = GET_REGAL_CONTEXT();
  DispatchStateScopedStepDown stepDown(rCtx->dsp);
  rCtx->dsp->curr->glProgramUniform2uiEXT(program, location, v0, v1);
}

static void REGAL_CALL debug_glProgramUniform3uiEXT(GLuint program, GLint location, GLuint v0, GLuint v1, GLuint v2)
{
  RegalContext * rCtx = GET_REGAL_CONTEXT();
  DispatchStateScopedStepDown stepDown(rCtx->dsp);
  rCtx->dsp->curr->glProgramUniform3uiEXT(program, location, v0, v1, v2);
}

static void REGAL_CALL debug_glProgramUniform4uiEXT(GLuint program, GLint location, GLuint v0, GLuint v1, GLuint v2, GLuint v3)
{
  RegalContext * rCtx = GET_REGAL_CONTEXT();
  DispatchStateScopedStepDown stepDown(rCtx->dsp);
  rCtx->dsp->curr->glProgramUniform4uiEXT(program, location, v0, v1, v2, v3);
}

static void REGAL_CALL debug_glProgramUniform1uivEXT(GLuint program, GLint location, GLsizei count, const GLuint *value)
{
  RegalContext * rCtx = GET_REGAL_CONTEXT();
  DispatchStateScopedStepDown stepDown(rCtx->dsp);
  rCtx->dsp->curr->glProgramUniform1uivEXT(program, location, count, value);
}

static void REGAL_CALL debug_glProgramUniform2uivEXT(GLuint program, GLint location, GLsizei count, const GLuint *value)
{
  RegalContext * rCtx = GET_REGAL_CONTEXT();
  DispatchStateScopedStepDown stepDown(rCtx->dsp);
  rCtx->dsp->curr->glProgramUniform2uivEXT(program, location, count, value);
}

static void REGAL_CALL debug_glProgramUniform3uivEXT(GLuint program, GLint location, GLsizei count, const GLuint *value)
{
  RegalContext * rCtx = GET_REGAL_CONTEXT();
  DispatchStateScopedStepDown stepDown(rCtx->dsp);
  rCtx->dsp->curr->glProgramUniform3uivEXT(program, location, count, value);
}

static void REGAL_CALL debug_glProgramUniform4uivEXT(GLuint program, GLint location, GLsizei count, const GLuint *value)
{
  RegalContext * rCtx = GET_REGAL_CONTEXT();
  DispatchStateScopedStepDown stepDown(rCtx->dsp);
  rCtx->dsp->curr->glProgramUniform4uivEXT(program, location, count, value);
}

static void REGAL_CALL debug_glNamedBufferDataEXT(GLuint buffer, GLsizeiptr size, const GLvoid *data, GLenum usage)
{
  RegalContext * rCtx = GET_REGAL_CONTEXT();
  DispatchStateScopedStepDown stepDown(rCtx->dsp);
  rCtx->dsp->curr->glNamedBufferDataEXT(buffer, size, data, usage);
}

static void REGAL_CALL debug_glNamedBufferSubDataEXT(GLuint buffer, GLintptr offset, GLsizeiptr size, const GLvoid *data)
{
  RegalContext * rCtx = GET_REGAL_CONTEXT();
  DispatchStateScopedStepDown stepDown(rCtx->dsp);
  rCtx->dsp->curr->glNamedBufferSubDataEXT(buffer, offset, size, data);
}

static GLvoid *REGAL_CALL debug_glMapNamedBufferEXT(GLuint buffer, GLenum access)
{
  RegalContext * rCtx = GET_REGAL_CONTEXT();
  DispatchStateScopedStepDown stepDown(rCtx->dsp);
  GLvoid * ret = rCtx->dsp->curr->glMapNamedBufferEXT(buffer, access);
  return ret;
}

static GLboolean REGAL_CALL debug_glUnmapNamedBufferEXT(GLuint buffer)
{
  RegalContext * rCtx = GET_REGAL_CONTEXT();
  DispatchStateScopedStepDown stepDown(rCtx->dsp);
  GLboolean  ret = rCtx->dsp->curr->glUnmapNamedBufferEXT(buffer);
  return ret;
}

static void REGAL_CALL debug_glGetNamedBufferParameterivEXT(GLuint buffer, GLenum pname, GLint *params)
{
  RegalContext * rCtx = GET_REGAL_CONTEXT();
  DispatchStateScopedStepDown stepDown(rCtx->dsp);
  rCtx->dsp->curr->glGetNamedBufferParameterivEXT(buffer, pname, params);
}

static void REGAL_CALL debug_glGetNamedBufferPointervEXT(GLuint buffer, GLenum pname, GLvoid **params)
{
  RegalContext * rCtx = GET_REGAL_CONTEXT();
  DispatchStateScopedStepDown stepDown(rCtx->dsp);
  rCtx->dsp->curr->glGetNamedBufferPointervEXT(buffer, pname, params);
}

static void REGAL_CALL debug_glGetNamedBufferSubDataEXT(GLuint buffer, GLintptr offset, GLsizeiptr size, GLvoid *data)
{
  RegalContext * rCtx = GET_REGAL_CONTEXT();
  DispatchStateScopedStepDown stepDown(rCtx->dsp);
  rCtx->dsp->curr->glGetNamedBufferSubDataEXT(buffer, offset, size, data);
}

static void REGAL_CALL debug_glTextureBufferEXT(GLuint texture, GLenum target, GLenum internalformat, GLuint buffer)
{
  RegalContext * rCtx = GET_REGAL_CONTEXT();
  DispatchStateScopedStepDown stepDown(rCtx->dsp);
  rCtx->dsp->curr->glTextureBufferEXT(texture, target, internalformat, buffer);
}

static void REGAL_CALL debug_glMultiTexBufferEXT(GLenum texunit, GLenum target, GLenum internalformat, GLuint buffer)
{
  RegalContext * rCtx = GET_REGAL_CONTEXT();
  DispatchStateScopedStepDown stepDown(rCtx->dsp);
  rCtx->dsp->curr->glMultiTexBufferEXT(texunit, target, internalformat, buffer);
}

static void REGAL_CALL debug_glNamedRenderbufferStorageEXT(GLuint renderbuffer, GLenum internalformat, GLsizei width, GLsizei height)
{
  RegalContext * rCtx = GET_REGAL_CONTEXT();
  DispatchStateScopedStepDown stepDown(rCtx->dsp);
  rCtx->dsp->curr->glNamedRenderbufferStorageEXT(renderbuffer, internalformat, width, height);
}

static void REGAL_CALL debug_glGetNamedRenderbufferParameterivEXT(GLuint renderbuffer, GLenum pname, GLint *params)
{
  RegalContext * rCtx = GET_REGAL_CONTEXT();
  DispatchStateScopedStepDown stepDown(rCtx->dsp);
  rCtx->dsp->curr->glGetNamedRenderbufferParameterivEXT(renderbuffer, pname, params);
}

static GLenum REGAL_CALL debug_glCheckNamedFramebufferStatusEXT(GLuint framebuffer, GLenum target)
{
  RegalContext * rCtx = GET_REGAL_CONTEXT();
  DispatchStateScopedStepDown stepDown(rCtx->dsp);
  GLenum  ret = rCtx->dsp->curr->glCheckNamedFramebufferStatusEXT(framebuffer, target);
  return ret;
}

static void REGAL_CALL debug_glNamedFramebufferTexture1DEXT(GLuint framebuffer, GLenum attachment, GLenum textarget, GLuint texture, GLint level)
{
  RegalContext * rCtx = GET_REGAL_CONTEXT();
  DispatchStateScopedStepDown stepDown(rCtx->dsp);
  rCtx->dsp->curr->glNamedFramebufferTexture1DEXT(framebuffer, attachment, textarget, texture, level);
}

static void REGAL_CALL debug_glNamedFramebufferTexture2DEXT(GLuint framebuffer, GLenum attachment, GLenum textarget, GLuint texture, GLint level)
{
  RegalContext * rCtx = GET_REGAL_CONTEXT();
  DispatchStateScopedStepDown stepDown(rCtx->dsp);
  rCtx->dsp->curr->glNamedFramebufferTexture2DEXT(framebuffer, attachment, textarget, texture, level);
}

static void REGAL_CALL debug_glNamedFramebufferTexture3DEXT(GLuint framebuffer, GLenum attachment, GLenum textarget, GLuint texture, GLint level, GLint zoffset)
{
  RegalContext * rCtx = GET_REGAL_CONTEXT();
  DispatchStateScopedStepDown stepDown(rCtx->dsp);
  rCtx->dsp->curr->glNamedFramebufferTexture3DEXT(framebuffer, attachment, textarget, texture, level, zoffset);
}

static void REGAL_CALL debug_glNamedFramebufferRenderbufferEXT(GLuint framebuffer, GLenum attachment, GLenum renderbuffertarget, GLuint renderbuffer)
{
  RegalContext * rCtx = GET_REGAL_CONTEXT();
  DispatchStateScopedStepDown stepDown(rCtx->dsp);
  rCtx->dsp->curr->glNamedFramebufferRenderbufferEXT(framebuffer, attachment, renderbuffertarget, renderbuffer);
}

static void REGAL_CALL debug_glGetNamedFramebufferAttachmentParameterivEXT(GLuint framebuffer, GLenum attachment, GLenum pname, GLint *params)
{
  RegalContext * rCtx = GET_REGAL_CONTEXT();
  DispatchStateScopedStepDown stepDown(rCtx->dsp);
  rCtx->dsp->curr->glGetNamedFramebufferAttachmentParameterivEXT(framebuffer, attachment, pname, params);
}

static void REGAL_CALL debug_glGenerateTextureMipmapEXT(GLuint texture, GLenum target)
{
  RegalContext * rCtx = GET_REGAL_CONTEXT();
  DispatchStateScopedStepDown stepDown(rCtx->dsp);
  rCtx->dsp->curr->glGenerateTextureMipmapEXT(texture, target);
}

static void REGAL_CALL debug_glGenerateMultiTexMipmapEXT(GLenum texunit, GLenum target)
{
  RegalContext * rCtx = GET_REGAL_CONTEXT();
  DispatchStateScopedStepDown stepDown(rCtx->dsp);
  rCtx->dsp->curr->glGenerateMultiTexMipmapEXT(texunit, target);
}

static void REGAL_CALL debug_glFramebufferDrawBufferEXT(GLuint framebuffer, GLenum mode)
{
  RegalContext * rCtx = GET_REGAL_CONTEXT();
  DispatchStateScopedStepDown stepDown(rCtx->dsp);
  rCtx->dsp->curr->glFramebufferDrawBufferEXT(framebuffer, mode);
}

static void REGAL_CALL debug_glFramebufferDrawBuffersEXT(GLuint framebuffer, GLsizei n, const GLenum *bufs)
{
  RegalContext * rCtx = GET_REGAL_CONTEXT();
  DispatchStateScopedStepDown stepDown(rCtx->dsp);
  rCtx->dsp->curr->glFramebufferDrawBuffersEXT(framebuffer, n, bufs);
}

static void REGAL_CALL debug_glFramebufferReadBufferEXT(GLuint framebuffer, GLenum mode)
{
  RegalContext * rCtx = GET_REGAL_CONTEXT();
  DispatchStateScopedStepDown stepDown(rCtx->dsp);
  rCtx->dsp->curr->glFramebufferReadBufferEXT(framebuffer, mode);
}

static void REGAL_CALL debug_glGetFramebufferParameterivEXT(GLuint framebuffer, GLenum pname, GLint *params)
{
  RegalContext * rCtx = GET_REGAL_CONTEXT();
  DispatchStateScopedStepDown stepDown(rCtx->dsp);
  rCtx->dsp->curr->glGetFramebufferParameterivEXT(framebuffer, pname, params);
}

static void REGAL_CALL debug_glNamedRenderbufferStorageMultisampleEXT(GLuint renderbuffer, GLsizei samples, GLenum internalformat, GLsizei width, GLsizei height)
{
  RegalContext * rCtx = GET_REGAL_CONTEXT();
  DispatchStateScopedStepDown stepDown(rCtx->dsp);
  rCtx->dsp->curr->glNamedRenderbufferStorageMultisampleEXT(renderbuffer, samples, internalformat, width, height);
}

static void REGAL_CALL debug_glNamedRenderbufferStorageMultisampleCoverageEXT(GLuint renderbuffer, GLsizei coverageSamples, GLsizei colorSamples, GLenum internalformat, GLsizei width, GLsizei height)
{
  RegalContext * rCtx = GET_REGAL_CONTEXT();
  DispatchStateScopedStepDown stepDown(rCtx->dsp);
  rCtx->dsp->curr->glNamedRenderbufferStorageMultisampleCoverageEXT(renderbuffer, coverageSamples, colorSamples, internalformat, width, height);
}

static void REGAL_CALL debug_glNamedFramebufferTextureEXT(GLuint framebuffer, GLenum attachment, GLuint texture, GLint level)
{
  RegalContext * rCtx = GET_REGAL_CONTEXT();
  DispatchStateScopedStepDown stepDown(rCtx->dsp);
  rCtx->dsp->curr->glNamedFramebufferTextureEXT(framebuffer, attachment, texture, level);
}

static void REGAL_CALL debug_glNamedFramebufferTextureLayerEXT(GLuint framebuffer, GLenum attachment, GLuint texture, GLint level, GLint layer)
{
  RegalContext * rCtx = GET_REGAL_CONTEXT();
  DispatchStateScopedStepDown stepDown(rCtx->dsp);
  rCtx->dsp->curr->glNamedFramebufferTextureLayerEXT(framebuffer, attachment, texture, level, layer);
}

static void REGAL_CALL debug_glNamedFramebufferTextureFaceEXT(GLuint framebuffer, GLenum attachment, GLuint texture, GLint level, GLenum face)
{
  RegalContext * rCtx = GET_REGAL_CONTEXT();
  DispatchStateScopedStepDown stepDown(rCtx->dsp);
  rCtx->dsp->curr->glNamedFramebufferTextureFaceEXT(framebuffer, attachment, texture, level, face);
}

static void REGAL_CALL debug_glTextureRenderbufferEXT(GLuint texture, GLenum target, GLuint renderbuffer)
{
  RegalContext * rCtx = GET_REGAL_CONTEXT();
  DispatchStateScopedStepDown stepDown(rCtx->dsp);
  rCtx->dsp->curr->glTextureRenderbufferEXT(texture, target, renderbuffer);
}

static void REGAL_CALL debug_glMultiTexRenderbufferEXT(GLenum texunit, GLenum target, GLuint renderbuffer)
{
  RegalContext * rCtx = GET_REGAL_CONTEXT();
  DispatchStateScopedStepDown stepDown(rCtx->dsp);
  rCtx->dsp->curr->glMultiTexRenderbufferEXT(texunit, target, renderbuffer);
}

static GLvoid *REGAL_CALL debug_glMapNamedBufferRangeEXT(GLuint buffer, GLintptr offset, GLsizeiptr length, GLbitfield access)
{
  RegalContext * rCtx = GET_REGAL_CONTEXT();
  DispatchStateScopedStepDown stepDown(rCtx->dsp);
  GLvoid * ret = rCtx->dsp->curr->glMapNamedBufferRangeEXT(buffer, offset, length, access);
  return ret;
}

static void REGAL_CALL debug_glFlushMappedNamedBufferRangeEXT(GLuint buffer, GLintptr offset, GLsizeiptr length)
{
  RegalContext * rCtx = GET_REGAL_CONTEXT();
  DispatchStateScopedStepDown stepDown(rCtx->dsp);
  rCtx->dsp->curr->glFlushMappedNamedBufferRangeEXT(buffer, offset, length);
}

static void REGAL_CALL debug_glNamedCopyBufferSubDataEXT(GLuint readBuffer, GLuint writeBuffer, GLintptr readOffset, GLintptr writeOffset, GLsizeiptr size)
{
  RegalContext * rCtx = GET_REGAL_CONTEXT();
  DispatchStateScopedStepDown stepDown(rCtx->dsp);
  rCtx->dsp->curr->glNamedCopyBufferSubDataEXT(readBuffer, writeBuffer, readOffset, writeOffset, size);
}

static void REGAL_CALL debug_glProgramUniform1dEXT(GLuint program, GLint location, GLdouble x)
{
  RegalContext * rCtx = GET_REGAL_CONTEXT();
  DispatchStateScopedStepDown stepDown(rCtx->dsp);
  rCtx->dsp->curr->glProgramUniform1dEXT(program, location, x);
}

static void REGAL_CALL debug_glProgramUniform2dEXT(GLuint program, GLint location, GLdouble x, GLdouble y)
{
  RegalContext * rCtx = GET_REGAL_CONTEXT();
  DispatchStateScopedStepDown stepDown(rCtx->dsp);
  rCtx->dsp->curr->glProgramUniform2dEXT(program, location, x, y);
}

static void REGAL_CALL debug_glProgramUniform3dEXT(GLuint program, GLint location, GLdouble x, GLdouble y, GLdouble z)
{
  RegalContext * rCtx = GET_REGAL_CONTEXT();
  DispatchStateScopedStepDown stepDown(rCtx->dsp);
  rCtx->dsp->curr->glProgramUniform3dEXT(program, location, x, y, z);
}

static void REGAL_CALL debug_glProgramUniform4dEXT(GLuint program, GLint location, GLdouble x, GLdouble y, GLdouble z, GLdouble w)
{
  RegalContext * rCtx = GET_REGAL_CONTEXT();
  DispatchStateScopedStepDown stepDown(rCtx->dsp);
  rCtx->dsp->curr->glProgramUniform4dEXT(program, location, x, y, z, w);
}

static void REGAL_CALL debug_glProgramUniform1dvEXT(GLuint program, GLint location, GLsizei count, const GLdouble *value)
{
  RegalContext * rCtx = GET_REGAL_CONTEXT();
  DispatchStateScopedStepDown stepDown(rCtx->dsp);
  rCtx->dsp->curr->glProgramUniform1dvEXT(program, location, count, value);
}

static void REGAL_CALL debug_glProgramUniform2dvEXT(GLuint program, GLint location, GLsizei count, const GLdouble *value)
{
  RegalContext * rCtx = GET_REGAL_CONTEXT();
  DispatchStateScopedStepDown stepDown(rCtx->dsp);
  rCtx->dsp->curr->glProgramUniform2dvEXT(program, location, count, value);
}

static void REGAL_CALL debug_glProgramUniform3dvEXT(GLuint program, GLint location, GLsizei count, const GLdouble *value)
{
  RegalContext * rCtx = GET_REGAL_CONTEXT();
  DispatchStateScopedStepDown stepDown(rCtx->dsp);
  rCtx->dsp->curr->glProgramUniform3dvEXT(program, location, count, value);
}

static void REGAL_CALL debug_glProgramUniform4dvEXT(GLuint program, GLint location, GLsizei count, const GLdouble *value)
{
  RegalContext * rCtx = GET_REGAL_CONTEXT();
  DispatchStateScopedStepDown stepDown(rCtx->dsp);
  rCtx->dsp->curr->glProgramUniform4dvEXT(program, location, count, value);
}

static void REGAL_CALL debug_glProgramUniformMatrix2dvEXT(GLuint program, GLint location, GLsizei count, GLboolean transpose, const GLdouble *value)
{
  RegalContext * rCtx = GET_REGAL_CONTEXT();
  DispatchStateScopedStepDown stepDown(rCtx->dsp);
  rCtx->dsp->curr->glProgramUniformMatrix2dvEXT(program, location, count, transpose, value);
}

static void REGAL_CALL debug_glProgramUniformMatrix3dvEXT(GLuint program, GLint location, GLsizei count, GLboolean transpose, const GLdouble *value)
{
  RegalContext * rCtx = GET_REGAL_CONTEXT();
  DispatchStateScopedStepDown stepDown(rCtx->dsp);
  rCtx->dsp->curr->glProgramUniformMatrix3dvEXT(program, location, count, transpose, value);
}

static void REGAL_CALL debug_glProgramUniformMatrix4dvEXT(GLuint program, GLint location, GLsizei count, GLboolean transpose, const GLdouble *value)
{
  RegalContext * rCtx = GET_REGAL_CONTEXT();
  DispatchStateScopedStepDown stepDown(rCtx->dsp);
  rCtx->dsp->curr->glProgramUniformMatrix4dvEXT(program, location, count, transpose, value);
}

static void REGAL_CALL debug_glProgramUniformMatrix2x3dvEXT(GLuint program, GLint location, GLsizei count, GLboolean transpose, const GLdouble *value)
{
  RegalContext * rCtx = GET_REGAL_CONTEXT();
  DispatchStateScopedStepDown stepDown(rCtx->dsp);
  rCtx->dsp->curr->glProgramUniformMatrix2x3dvEXT(program, location, count, transpose, value);
}

static void REGAL_CALL debug_glProgramUniformMatrix2x4dvEXT(GLuint program, GLint location, GLsizei count, GLboolean transpose, const GLdouble *value)
{
  RegalContext * rCtx = GET_REGAL_CONTEXT();
  DispatchStateScopedStepDown stepDown(rCtx->dsp);
  rCtx->dsp->curr->glProgramUniformMatrix2x4dvEXT(program, location, count, transpose, value);
}

static void REGAL_CALL debug_glProgramUniformMatrix3x2dvEXT(GLuint program, GLint location, GLsizei count, GLboolean transpose, const GLdouble *value)
{
  RegalContext * rCtx = GET_REGAL_CONTEXT();
  DispatchStateScopedStepDown stepDown(rCtx->dsp);
  rCtx->dsp->curr->glProgramUniformMatrix3x2dvEXT(program, location, count, transpose, value);
}

static void REGAL_CALL debug_glProgramUniformMatrix3x4dvEXT(GLuint program, GLint location, GLsizei count, GLboolean transpose, const GLdouble *value)
{
  RegalContext * rCtx = GET_REGAL_CONTEXT();
  DispatchStateScopedStepDown stepDown(rCtx->dsp);
  rCtx->dsp->curr->glProgramUniformMatrix3x4dvEXT(program, location, count, transpose, value);
}

static void REGAL_CALL debug_glProgramUniformMatrix4x2dvEXT(GLuint program, GLint location, GLsizei count, GLboolean transpose, const GLdouble *value)
{
  RegalContext * rCtx = GET_REGAL_CONTEXT();
  DispatchStateScopedStepDown stepDown(rCtx->dsp);
  rCtx->dsp->curr->glProgramUniformMatrix4x2dvEXT(program, location, count, transpose, value);
}

static void REGAL_CALL debug_glProgramUniformMatrix4x3dvEXT(GLuint program, GLint location, GLsizei count, GLboolean transpose, const GLdouble *value)
{
  RegalContext * rCtx = GET_REGAL_CONTEXT();
  DispatchStateScopedStepDown stepDown(rCtx->dsp);
  rCtx->dsp->curr->glProgramUniformMatrix4x3dvEXT(program, location, count, transpose, value);
}

// GL_NV_explicit_multisample

static void REGAL_CALL debug_glGetMultisamplefvNV(GLenum pname, GLuint index, GLfloat *val)
{
  RegalContext * rCtx = GET_REGAL_CONTEXT();
  DispatchStateScopedStepDown stepDown(rCtx->dsp);
  rCtx->dsp->curr->glGetMultisamplefvNV(pname, index, val);
}

static void REGAL_CALL debug_glSampleMaskIndexedNV(GLuint index, GLbitfield mask)
{
  RegalContext * rCtx = GET_REGAL_CONTEXT();
  DispatchStateScopedStepDown stepDown(rCtx->dsp);
  rCtx->dsp->curr->glSampleMaskIndexedNV(index, mask);
}

static void REGAL_CALL debug_glTexRenderbufferNV(GLenum target, GLuint renderbuffer)
{
  RegalContext * rCtx = GET_REGAL_CONTEXT();
  DispatchStateScopedStepDown stepDown(rCtx->dsp);
  rCtx->dsp->curr->glTexRenderbufferNV(target, renderbuffer);
}

// GL_NV_transform_feedback2

static void REGAL_CALL debug_glBindTransformFeedbackNV(GLenum target, GLuint id)
{
  RegalContext * rCtx = GET_REGAL_CONTEXT();
  DispatchStateScopedStepDown stepDown(rCtx->dsp);
  rCtx->dsp->curr->glBindTransformFeedbackNV(target, id);
}

static void REGAL_CALL debug_glDeleteTransformFeedbacksNV(GLsizei n, const GLuint *ids)
{
  RegalContext * rCtx = GET_REGAL_CONTEXT();
  DispatchStateScopedStepDown stepDown(rCtx->dsp);
  rCtx->dsp->curr->glDeleteTransformFeedbacksNV(n, ids);
}

static void REGAL_CALL debug_glGenTransformFeedbacksNV(GLsizei n, GLuint *ids)
{
  RegalContext * rCtx = GET_REGAL_CONTEXT();
  DispatchStateScopedStepDown stepDown(rCtx->dsp);
  rCtx->dsp->curr->glGenTransformFeedbacksNV(n, ids);
}

static GLboolean REGAL_CALL debug_glIsTransformFeedbackNV(GLuint id)
{
  RegalContext * rCtx = GET_REGAL_CONTEXT();
  DispatchStateScopedStepDown stepDown(rCtx->dsp);
  GLboolean  ret = rCtx->dsp->curr->glIsTransformFeedbackNV(id);
  return ret;
}

static void REGAL_CALL debug_glPauseTransformFeedbackNV(void)
{
  RegalContext * rCtx = GET_REGAL_CONTEXT();
  DispatchStateScopedStepDown stepDown(rCtx->dsp);
  rCtx->dsp->curr->glPauseTransformFeedbackNV();
}

static void REGAL_CALL debug_glResumeTransformFeedbackNV(void)
{
  RegalContext * rCtx = GET_REGAL_CONTEXT();
  DispatchStateScopedStepDown stepDown(rCtx->dsp);
  rCtx->dsp->curr->glResumeTransformFeedbackNV();
}

static void REGAL_CALL debug_glDrawTransformFeedbackNV(GLenum mode, GLuint name)
{
  RegalContext * rCtx = GET_REGAL_CONTEXT();
  DispatchStateScopedStepDown stepDown(rCtx->dsp);
  rCtx->dsp->curr->glDrawTransformFeedbackNV(mode, name);
}

// GL_AMD_performance_monitor

static void REGAL_CALL debug_glGetPerfMonitorGroupsAMD(GLint *numGroups, GLsizei groupsSize, GLuint *groups)
{
  RegalContext * rCtx = GET_REGAL_CONTEXT();
  DispatchStateScopedStepDown stepDown(rCtx->dsp);
  rCtx->dsp->curr->glGetPerfMonitorGroupsAMD(numGroups, groupsSize, groups);
}

static void REGAL_CALL debug_glGetPerfMonitorCountersAMD(GLuint group, GLint *numCounters, GLint *maxActiveCounters, GLsizei countersSize, GLuint *counters)
{
  RegalContext * rCtx = GET_REGAL_CONTEXT();
  DispatchStateScopedStepDown stepDown(rCtx->dsp);
  rCtx->dsp->curr->glGetPerfMonitorCountersAMD(group, numCounters, maxActiveCounters, countersSize, counters);
}

static void REGAL_CALL debug_glGetPerfMonitorGroupStringAMD(GLuint group, GLsizei bufSize, GLsizei *length, GLchar *groupString)
{
  RegalContext * rCtx = GET_REGAL_CONTEXT();
  DispatchStateScopedStepDown stepDown(rCtx->dsp);
  rCtx->dsp->curr->glGetPerfMonitorGroupStringAMD(group, bufSize, length, groupString);
}

static void REGAL_CALL debug_glGetPerfMonitorCounterStringAMD(GLuint group, GLuint counter, GLsizei bufSize, GLsizei *length, GLchar *counterString)
{
  RegalContext * rCtx = GET_REGAL_CONTEXT();
  DispatchStateScopedStepDown stepDown(rCtx->dsp);
  rCtx->dsp->curr->glGetPerfMonitorCounterStringAMD(group, counter, bufSize, length, counterString);
}

static void REGAL_CALL debug_glGetPerfMonitorCounterInfoAMD(GLuint group, GLuint counter, GLenum pname, GLvoid *data)
{
  RegalContext * rCtx = GET_REGAL_CONTEXT();
  DispatchStateScopedStepDown stepDown(rCtx->dsp);
  rCtx->dsp->curr->glGetPerfMonitorCounterInfoAMD(group, counter, pname, data);
}

static void REGAL_CALL debug_glGenPerfMonitorsAMD(GLsizei n, GLuint *monitors)
{
  RegalContext * rCtx = GET_REGAL_CONTEXT();
  DispatchStateScopedStepDown stepDown(rCtx->dsp);
  rCtx->dsp->curr->glGenPerfMonitorsAMD(n, monitors);
}

static void REGAL_CALL debug_glDeletePerfMonitorsAMD(GLsizei n, GLuint *monitors)
{
  RegalContext * rCtx = GET_REGAL_CONTEXT();
  DispatchStateScopedStepDown stepDown(rCtx->dsp);
  rCtx->dsp->curr->glDeletePerfMonitorsAMD(n, monitors);
}

static void REGAL_CALL debug_glSelectPerfMonitorCountersAMD(GLuint monitor, GLboolean enable, GLuint group, GLint numCounters, GLuint *counterList)
{
  RegalContext * rCtx = GET_REGAL_CONTEXT();
  DispatchStateScopedStepDown stepDown(rCtx->dsp);
  rCtx->dsp->curr->glSelectPerfMonitorCountersAMD(monitor, enable, group, numCounters, counterList);
}

static void REGAL_CALL debug_glBeginPerfMonitorAMD(GLuint monitor)
{
  RegalContext * rCtx = GET_REGAL_CONTEXT();
  DispatchStateScopedStepDown stepDown(rCtx->dsp);
  rCtx->dsp->curr->glBeginPerfMonitorAMD(monitor);
}

static void REGAL_CALL debug_glEndPerfMonitorAMD(GLuint monitor)
{
  RegalContext * rCtx = GET_REGAL_CONTEXT();
  DispatchStateScopedStepDown stepDown(rCtx->dsp);
  rCtx->dsp->curr->glEndPerfMonitorAMD(monitor);
}

static void REGAL_CALL debug_glGetPerfMonitorCounterDataAMD(GLuint monitor, GLenum pname, GLsizei dataSize, GLuint *data, GLint *bytesWritten)
{
  RegalContext * rCtx = GET_REGAL_CONTEXT();
  DispatchStateScopedStepDown stepDown(rCtx->dsp);
  rCtx->dsp->curr->glGetPerfMonitorCounterDataAMD(monitor, pname, dataSize, data, bytesWritten);
}

// GL_AMD_vertex_shader_tessellator

static void REGAL_CALL debug_glTessellationFactorAMD(GLfloat factor)
{
  RegalContext * rCtx = GET_REGAL_CONTEXT();
  DispatchStateScopedStepDown stepDown(rCtx->dsp);
  rCtx->dsp->curr->glTessellationFactorAMD(factor);
}

static void REGAL_CALL debug_glTessellationModeAMD(GLenum mode)
{
  RegalContext * rCtx = GET_REGAL_CONTEXT();
  DispatchStateScopedStepDown stepDown(rCtx->dsp);
  rCtx->dsp->curr->glTessellationModeAMD(mode);
}

// GL_EXT_provoking_vertex

static void REGAL_CALL debug_glProvokingVertexEXT(GLenum mode)
{
  RegalContext * rCtx = GET_REGAL_CONTEXT();
  DispatchStateScopedStepDown stepDown(rCtx->dsp);
  rCtx->dsp->curr->glProvokingVertexEXT(mode);
}

// GL_AMD_draw_buffers_blend

static void REGAL_CALL debug_glBlendFuncIndexedAMD(GLuint buf, GLenum src, GLenum dst)
{
  RegalContext * rCtx = GET_REGAL_CONTEXT();
  DispatchStateScopedStepDown stepDown(rCtx->dsp);
  rCtx->dsp->curr->glBlendFuncIndexedAMD(buf, src, dst);
}

static void REGAL_CALL debug_glBlendFuncSeparateIndexedAMD(GLuint buf, GLenum srcRGB, GLenum dstRGB, GLenum srcAlpha, GLenum dstAlpha)
{
  RegalContext * rCtx = GET_REGAL_CONTEXT();
  DispatchStateScopedStepDown stepDown(rCtx->dsp);
  rCtx->dsp->curr->glBlendFuncSeparateIndexedAMD(buf, srcRGB, dstRGB, srcAlpha, dstAlpha);
}

static void REGAL_CALL debug_glBlendEquationIndexedAMD(GLuint buf, GLenum mode)
{
  RegalContext * rCtx = GET_REGAL_CONTEXT();
  DispatchStateScopedStepDown stepDown(rCtx->dsp);
  rCtx->dsp->curr->glBlendEquationIndexedAMD(buf, mode);
}

static void REGAL_CALL debug_glBlendEquationSeparateIndexedAMD(GLuint buf, GLenum modeRGB, GLenum modeAlpha)
{
  RegalContext * rCtx = GET_REGAL_CONTEXT();
  DispatchStateScopedStepDown stepDown(rCtx->dsp);
  rCtx->dsp->curr->glBlendEquationSeparateIndexedAMD(buf, modeRGB, modeAlpha);
}

// GL_APPLE_texture_range

static void REGAL_CALL debug_glTextureRangeAPPLE(GLenum target, GLsizei length, GLvoid *pointer)
{
  RegalContext * rCtx = GET_REGAL_CONTEXT();
  DispatchStateScopedStepDown stepDown(rCtx->dsp);
  rCtx->dsp->curr->glTextureRangeAPPLE(target, length, pointer);
}

static void REGAL_CALL debug_glGetTexParameterPointervAPPLE(GLenum target, GLenum pname, GLvoid **params)
{
  RegalContext * rCtx = GET_REGAL_CONTEXT();
  DispatchStateScopedStepDown stepDown(rCtx->dsp);
  rCtx->dsp->curr->glGetTexParameterPointervAPPLE(target, pname, params);
}

// GL_APPLE_vertex_program_evaluators

static void REGAL_CALL debug_glEnableVertexAttribAPPLE(GLuint index, GLenum pname)
{
  RegalContext * rCtx = GET_REGAL_CONTEXT();
  DispatchStateScopedStepDown stepDown(rCtx->dsp);
  rCtx->dsp->curr->glEnableVertexAttribAPPLE(index, pname);
}

static void REGAL_CALL debug_glDisableVertexAttribAPPLE(GLuint index, GLenum pname)
{
  RegalContext * rCtx = GET_REGAL_CONTEXT();
  DispatchStateScopedStepDown stepDown(rCtx->dsp);
  rCtx->dsp->curr->glDisableVertexAttribAPPLE(index, pname);
}

static GLboolean REGAL_CALL debug_glIsVertexAttribEnabledAPPLE(GLuint index, GLenum pname)
{
  RegalContext * rCtx = GET_REGAL_CONTEXT();
  DispatchStateScopedStepDown stepDown(rCtx->dsp);
  GLboolean  ret = rCtx->dsp->curr->glIsVertexAttribEnabledAPPLE(index, pname);
  return ret;
}

static void REGAL_CALL debug_glMapVertexAttrib1dAPPLE(GLuint index, GLuint size, GLdouble u1, GLdouble u2, GLint stride, GLint order, const GLdouble *points)
{
  RegalContext * rCtx = GET_REGAL_CONTEXT();
  DispatchStateScopedStepDown stepDown(rCtx->dsp);
  rCtx->dsp->curr->glMapVertexAttrib1dAPPLE(index, size, u1, u2, stride, order, points);
}

static void REGAL_CALL debug_glMapVertexAttrib1fAPPLE(GLuint index, GLuint size, GLfloat u1, GLfloat u2, GLint stride, GLint order, const GLfloat *points)
{
  RegalContext * rCtx = GET_REGAL_CONTEXT();
  DispatchStateScopedStepDown stepDown(rCtx->dsp);
  rCtx->dsp->curr->glMapVertexAttrib1fAPPLE(index, size, u1, u2, stride, order, points);
}

static void REGAL_CALL debug_glMapVertexAttrib2dAPPLE(GLuint index, GLuint size, GLdouble u1, GLdouble u2, GLint ustride, GLint uorder, GLdouble v1, GLdouble v2, GLint vstride, GLint vorder, const GLdouble *points)
{
  RegalContext * rCtx = GET_REGAL_CONTEXT();
  DispatchStateScopedStepDown stepDown(rCtx->dsp);
  rCtx->dsp->curr->glMapVertexAttrib2dAPPLE(index, size, u1, u2, ustride, uorder, v1, v2, vstride, vorder, points);
}

static void REGAL_CALL debug_glMapVertexAttrib2fAPPLE(GLuint index, GLuint size, GLfloat u1, GLfloat u2, GLint ustride, GLint uorder, GLfloat v1, GLfloat v2, GLint vstride, GLint vorder, const GLfloat *points)
{
  RegalContext * rCtx = GET_REGAL_CONTEXT();
  DispatchStateScopedStepDown stepDown(rCtx->dsp);
  rCtx->dsp->curr->glMapVertexAttrib2fAPPLE(index, size, u1, u2, ustride, uorder, v1, v2, vstride, vorder, points);
}

// GL_APPLE_object_purgeable

static GLenum REGAL_CALL debug_glObjectPurgeableAPPLE(GLenum objectType, GLuint name, GLenum option)
{
  RegalContext * rCtx = GET_REGAL_CONTEXT();
  DispatchStateScopedStepDown stepDown(rCtx->dsp);
  GLenum  ret = rCtx->dsp->curr->glObjectPurgeableAPPLE(objectType, name, option);
  return ret;
}

static GLenum REGAL_CALL debug_glObjectUnpurgeableAPPLE(GLenum objectType, GLuint name, GLenum option)
{
  RegalContext * rCtx = GET_REGAL_CONTEXT();
  DispatchStateScopedStepDown stepDown(rCtx->dsp);
  GLenum  ret = rCtx->dsp->curr->glObjectUnpurgeableAPPLE(objectType, name, option);
  return ret;
}

static void REGAL_CALL debug_glGetObjectParameterivAPPLE(GLenum objectType, GLuint name, GLenum pname, GLint *params)
{
  RegalContext * rCtx = GET_REGAL_CONTEXT();
  DispatchStateScopedStepDown stepDown(rCtx->dsp);
  rCtx->dsp->curr->glGetObjectParameterivAPPLE(objectType, name, pname, params);
}

// GL_NV_video_capture

static void REGAL_CALL debug_glBeginVideoCaptureNV(GLuint video_capture_slot)
{
  RegalContext * rCtx = GET_REGAL_CONTEXT();
  DispatchStateScopedStepDown stepDown(rCtx->dsp);
  rCtx->dsp->curr->glBeginVideoCaptureNV(video_capture_slot);
}

static void REGAL_CALL debug_glBindVideoCaptureStreamBufferNV(GLuint video_capture_slot, GLuint stream, GLenum frame_region, GLintptr offset)
{
  RegalContext * rCtx = GET_REGAL_CONTEXT();
  DispatchStateScopedStepDown stepDown(rCtx->dsp);
  rCtx->dsp->curr->glBindVideoCaptureStreamBufferNV(video_capture_slot, stream, frame_region, offset);
}

static void REGAL_CALL debug_glBindVideoCaptureStreamTextureNV(GLuint video_capture_slot, GLuint stream, GLenum frame_region, GLenum target, GLuint texture)
{
  RegalContext * rCtx = GET_REGAL_CONTEXT();
  DispatchStateScopedStepDown stepDown(rCtx->dsp);
  rCtx->dsp->curr->glBindVideoCaptureStreamTextureNV(video_capture_slot, stream, frame_region, target, texture);
}

static void REGAL_CALL debug_glEndVideoCaptureNV(GLuint video_capture_slot)
{
  RegalContext * rCtx = GET_REGAL_CONTEXT();
  DispatchStateScopedStepDown stepDown(rCtx->dsp);
  rCtx->dsp->curr->glEndVideoCaptureNV(video_capture_slot);
}

static void REGAL_CALL debug_glGetVideoCaptureivNV(GLuint video_capture_slot, GLenum pname, GLint *params)
{
  RegalContext * rCtx = GET_REGAL_CONTEXT();
  DispatchStateScopedStepDown stepDown(rCtx->dsp);
  rCtx->dsp->curr->glGetVideoCaptureivNV(video_capture_slot, pname, params);
}

static void REGAL_CALL debug_glGetVideoCaptureStreamivNV(GLuint video_capture_slot, GLuint stream, GLenum pname, GLint *params)
{
  RegalContext * rCtx = GET_REGAL_CONTEXT();
  DispatchStateScopedStepDown stepDown(rCtx->dsp);
  rCtx->dsp->curr->glGetVideoCaptureStreamivNV(video_capture_slot, stream, pname, params);
}

static void REGAL_CALL debug_glGetVideoCaptureStreamfvNV(GLuint video_capture_slot, GLuint stream, GLenum pname, GLfloat *params)
{
  RegalContext * rCtx = GET_REGAL_CONTEXT();
  DispatchStateScopedStepDown stepDown(rCtx->dsp);
  rCtx->dsp->curr->glGetVideoCaptureStreamfvNV(video_capture_slot, stream, pname, params);
}

static void REGAL_CALL debug_glGetVideoCaptureStreamdvNV(GLuint video_capture_slot, GLuint stream, GLenum pname, GLdouble *params)
{
  RegalContext * rCtx = GET_REGAL_CONTEXT();
  DispatchStateScopedStepDown stepDown(rCtx->dsp);
  rCtx->dsp->curr->glGetVideoCaptureStreamdvNV(video_capture_slot, stream, pname, params);
}

static GLenum REGAL_CALL debug_glVideoCaptureNV(GLuint video_capture_slot, GLuint *sequence_num, GLuint64EXT *capture_time)
{
  RegalContext * rCtx = GET_REGAL_CONTEXT();
  DispatchStateScopedStepDown stepDown(rCtx->dsp);
  GLenum  ret = rCtx->dsp->curr->glVideoCaptureNV(video_capture_slot, sequence_num, capture_time);
  return ret;
}

static void REGAL_CALL debug_glVideoCaptureStreamParameterivNV(GLuint video_capture_slot, GLuint stream, GLenum pname, const GLint *params)
{
  RegalContext * rCtx = GET_REGAL_CONTEXT();
  DispatchStateScopedStepDown stepDown(rCtx->dsp);
  rCtx->dsp->curr->glVideoCaptureStreamParameterivNV(video_capture_slot, stream, pname, params);
}

static void REGAL_CALL debug_glVideoCaptureStreamParameterfvNV(GLuint video_capture_slot, GLuint stream, GLenum pname, const GLfloat *params)
{
  RegalContext * rCtx = GET_REGAL_CONTEXT();
  DispatchStateScopedStepDown stepDown(rCtx->dsp);
  rCtx->dsp->curr->glVideoCaptureStreamParameterfvNV(video_capture_slot, stream, pname, params);
}

static void REGAL_CALL debug_glVideoCaptureStreamParameterdvNV(GLuint video_capture_slot, GLuint stream, GLenum pname, const GLdouble *params)
{
  RegalContext * rCtx = GET_REGAL_CONTEXT();
  DispatchStateScopedStepDown stepDown(rCtx->dsp);
  rCtx->dsp->curr->glVideoCaptureStreamParameterdvNV(video_capture_slot, stream, pname, params);
}

// GL_NV_copy_image

static void REGAL_CALL debug_glCopyImageSubDataNV(GLuint srcName, GLenum srcTarget, GLint srcLevel, GLint srcX, GLint srcY, GLint srcZ, GLuint dstName, GLenum dstTarget, GLint dstLevel, GLint dstX, GLint dstY, GLint dstZ, GLsizei width, GLsizei height, GLsizei depth)
{
  RegalContext * rCtx = GET_REGAL_CONTEXT();
  DispatchStateScopedStepDown stepDown(rCtx->dsp);
  rCtx->dsp->curr->glCopyImageSubDataNV(srcName, srcTarget, srcLevel, srcX, srcY, srcZ, dstName, dstTarget, dstLevel, dstX, dstY, dstZ, width, height, depth);
}

// GL_EXT_separate_shader_objects

static void REGAL_CALL debug_glUseShaderProgramEXT(GLenum type, GLuint program)
{
  RegalContext * rCtx = GET_REGAL_CONTEXT();
  DispatchStateScopedStepDown stepDown(rCtx->dsp);
  rCtx->dsp->curr->glUseShaderProgramEXT(type, program);
}

static void REGAL_CALL debug_glActiveProgramEXT(GLuint program)
{
  RegalContext * rCtx = GET_REGAL_CONTEXT();
  DispatchStateScopedStepDown stepDown(rCtx->dsp);
  rCtx->dsp->curr->glActiveProgramEXT(program);
}

static GLuint REGAL_CALL debug_glCreateShaderProgramEXT(GLenum type, const GLchar *string)
{
  RegalContext * rCtx = GET_REGAL_CONTEXT();
  DispatchStateScopedStepDown stepDown(rCtx->dsp);
  GLuint  ret = rCtx->dsp->curr->glCreateShaderProgramEXT(type, string);
  return ret;
}

// GL_NV_shader_buffer_load

static void REGAL_CALL debug_glMakeBufferResidentNV(GLenum target, GLenum access)
{
  RegalContext * rCtx = GET_REGAL_CONTEXT();
  DispatchStateScopedStepDown stepDown(rCtx->dsp);
  rCtx->dsp->curr->glMakeBufferResidentNV(target, access);
}

static void REGAL_CALL debug_glMakeBufferNonResidentNV(GLenum target)
{
  RegalContext * rCtx = GET_REGAL_CONTEXT();
  DispatchStateScopedStepDown stepDown(rCtx->dsp);
  rCtx->dsp->curr->glMakeBufferNonResidentNV(target);
}

static GLboolean REGAL_CALL debug_glIsBufferResidentNV(GLenum target)
{
  RegalContext * rCtx = GET_REGAL_CONTEXT();
  DispatchStateScopedStepDown stepDown(rCtx->dsp);
  GLboolean  ret = rCtx->dsp->curr->glIsBufferResidentNV(target);
  return ret;
}

static void REGAL_CALL debug_glMakeNamedBufferResidentNV(GLuint buffer, GLenum access)
{
  RegalContext * rCtx = GET_REGAL_CONTEXT();
  DispatchStateScopedStepDown stepDown(rCtx->dsp);
  rCtx->dsp->curr->glMakeNamedBufferResidentNV(buffer, access);
}

static void REGAL_CALL debug_glMakeNamedBufferNonResidentNV(GLuint buffer)
{
  RegalContext * rCtx = GET_REGAL_CONTEXT();
  DispatchStateScopedStepDown stepDown(rCtx->dsp);
  rCtx->dsp->curr->glMakeNamedBufferNonResidentNV(buffer);
}

static GLboolean REGAL_CALL debug_glIsNamedBufferResidentNV(GLuint buffer)
{
  RegalContext * rCtx = GET_REGAL_CONTEXT();
  DispatchStateScopedStepDown stepDown(rCtx->dsp);
  GLboolean  ret = rCtx->dsp->curr->glIsNamedBufferResidentNV(buffer);
  return ret;
}

static void REGAL_CALL debug_glGetBufferParameterui64vNV(GLenum target, GLenum pname, GLuint64EXT *params)
{
  RegalContext * rCtx = GET_REGAL_CONTEXT();
  DispatchStateScopedStepDown stepDown(rCtx->dsp);
  rCtx->dsp->curr->glGetBufferParameterui64vNV(target, pname, params);
}

static void REGAL_CALL debug_glGetNamedBufferParameterui64vNV(GLuint buffer, GLenum pname, GLuint64EXT *params)
{
  RegalContext * rCtx = GET_REGAL_CONTEXT();
  DispatchStateScopedStepDown stepDown(rCtx->dsp);
  rCtx->dsp->curr->glGetNamedBufferParameterui64vNV(buffer, pname, params);
}

static void REGAL_CALL debug_glGetIntegerui64vNV(GLenum target, GLuint64EXT *data)
{
  RegalContext * rCtx = GET_REGAL_CONTEXT();
  DispatchStateScopedStepDown stepDown(rCtx->dsp);
  rCtx->dsp->curr->glGetIntegerui64vNV(target, data);
}

static void REGAL_CALL debug_glUniformui64NV(GLint location, GLuint64EXT v0)
{
  RegalContext * rCtx = GET_REGAL_CONTEXT();
  DispatchStateScopedStepDown stepDown(rCtx->dsp);
  rCtx->dsp->curr->glUniformui64NV(location, v0);
}

static void REGAL_CALL debug_glUniformui64vNV(GLint location, GLsizei count, const GLuint64EXT *value)
{
  RegalContext * rCtx = GET_REGAL_CONTEXT();
  DispatchStateScopedStepDown stepDown(rCtx->dsp);
  rCtx->dsp->curr->glUniformui64vNV(location, count, value);
}

static void REGAL_CALL debug_glGetUniformui64vNV(GLuint program, GLint location, GLuint64EXT *params)
{
  RegalContext * rCtx = GET_REGAL_CONTEXT();
  DispatchStateScopedStepDown stepDown(rCtx->dsp);
  rCtx->dsp->curr->glGetUniformui64vNV(program, location, params);
}

static void REGAL_CALL debug_glProgramUniformui64NV(GLuint program, GLint location, GLuint64EXT v0)
{
  RegalContext * rCtx = GET_REGAL_CONTEXT();
  DispatchStateScopedStepDown stepDown(rCtx->dsp);
  rCtx->dsp->curr->glProgramUniformui64NV(program, location, v0);
}

static void REGAL_CALL debug_glProgramUniformui64vNV(GLuint program, GLint location, GLsizei count, const GLuint64EXT *value)
{
  RegalContext * rCtx = GET_REGAL_CONTEXT();
  DispatchStateScopedStepDown stepDown(rCtx->dsp);
  rCtx->dsp->curr->glProgramUniformui64vNV(program, location, count, value);
}

// GL_NV_vertex_buffer_unified_memory

static void REGAL_CALL debug_glBufferAddressRangeNV(GLenum pname, GLuint index, GLuint64EXT address, GLsizeiptr length)
{
  RegalContext * rCtx = GET_REGAL_CONTEXT();
  DispatchStateScopedStepDown stepDown(rCtx->dsp);
  rCtx->dsp->curr->glBufferAddressRangeNV(pname, index, address, length);
}

static void REGAL_CALL debug_glVertexFormatNV(GLint size, GLenum type, GLsizei stride)
{
  RegalContext * rCtx = GET_REGAL_CONTEXT();
  DispatchStateScopedStepDown stepDown(rCtx->dsp);
  rCtx->dsp->curr->glVertexFormatNV(size, type, stride);
}

static void REGAL_CALL debug_glNormalFormatNV(GLenum type, GLsizei stride)
{
  RegalContext * rCtx = GET_REGAL_CONTEXT();
  DispatchStateScopedStepDown stepDown(rCtx->dsp);
  rCtx->dsp->curr->glNormalFormatNV(type, stride);
}

static void REGAL_CALL debug_glColorFormatNV(GLint size, GLenum type, GLsizei stride)
{
  RegalContext * rCtx = GET_REGAL_CONTEXT();
  DispatchStateScopedStepDown stepDown(rCtx->dsp);
  rCtx->dsp->curr->glColorFormatNV(size, type, stride);
}

static void REGAL_CALL debug_glIndexFormatNV(GLenum type, GLsizei stride)
{
  RegalContext * rCtx = GET_REGAL_CONTEXT();
  DispatchStateScopedStepDown stepDown(rCtx->dsp);
  rCtx->dsp->curr->glIndexFormatNV(type, stride);
}

static void REGAL_CALL debug_glTexCoordFormatNV(GLint size, GLenum type, GLsizei stride)
{
  RegalContext * rCtx = GET_REGAL_CONTEXT();
  DispatchStateScopedStepDown stepDown(rCtx->dsp);
  rCtx->dsp->curr->glTexCoordFormatNV(size, type, stride);
}

static void REGAL_CALL debug_glEdgeFlagFormatNV(GLsizei stride)
{
  RegalContext * rCtx = GET_REGAL_CONTEXT();
  DispatchStateScopedStepDown stepDown(rCtx->dsp);
  rCtx->dsp->curr->glEdgeFlagFormatNV(stride);
}

static void REGAL_CALL debug_glSecondaryColorFormatNV(GLint size, GLenum type, GLsizei stride)
{
  RegalContext * rCtx = GET_REGAL_CONTEXT();
  DispatchStateScopedStepDown stepDown(rCtx->dsp);
  rCtx->dsp->curr->glSecondaryColorFormatNV(size, type, stride);
}

static void REGAL_CALL debug_glFogCoordFormatNV(GLenum type, GLsizei stride)
{
  RegalContext * rCtx = GET_REGAL_CONTEXT();
  DispatchStateScopedStepDown stepDown(rCtx->dsp);
  rCtx->dsp->curr->glFogCoordFormatNV(type, stride);
}

static void REGAL_CALL debug_glVertexAttribFormatNV(GLuint index, GLint size, GLenum type, GLboolean normalized, GLsizei stride)
{
  RegalContext * rCtx = GET_REGAL_CONTEXT();
  DispatchStateScopedStepDown stepDown(rCtx->dsp);
  rCtx->dsp->curr->glVertexAttribFormatNV(index, size, type, normalized, stride);
}

static void REGAL_CALL debug_glVertexAttribIFormatNV(GLuint index, GLint size, GLenum type, GLsizei stride)
{
  RegalContext * rCtx = GET_REGAL_CONTEXT();
  DispatchStateScopedStepDown stepDown(rCtx->dsp);
  rCtx->dsp->curr->glVertexAttribIFormatNV(index, size, type, stride);
}

static void REGAL_CALL debug_glGetIntegerui64i_vNV(GLenum target, GLuint index, GLuint64EXT *data)
{
  RegalContext * rCtx = GET_REGAL_CONTEXT();
  DispatchStateScopedStepDown stepDown(rCtx->dsp);
  rCtx->dsp->curr->glGetIntegerui64i_vNV(target, index, data);
}

// GL_NV_texture_barrier

static void REGAL_CALL debug_glTextureBarrierNV(void)
{
  RegalContext * rCtx = GET_REGAL_CONTEXT();
  DispatchStateScopedStepDown stepDown(rCtx->dsp);
  rCtx->dsp->curr->glTextureBarrierNV();
}

// GL_EXT_shader_image_load_store

static void REGAL_CALL debug_glBindImageTextureEXT(GLuint index, GLuint texture, GLint level, GLboolean layered, GLint layer, GLenum access, GLint format)
{
  RegalContext * rCtx = GET_REGAL_CONTEXT();
  DispatchStateScopedStepDown stepDown(rCtx->dsp);
  rCtx->dsp->curr->glBindImageTextureEXT(index, texture, level, layered, layer, access, format);
}

static void REGAL_CALL debug_glMemoryBarrierEXT(GLbitfield barriers)
{
  RegalContext * rCtx = GET_REGAL_CONTEXT();
  DispatchStateScopedStepDown stepDown(rCtx->dsp);
  rCtx->dsp->curr->glMemoryBarrierEXT(barriers);
}

// GL_EXT_vertex_attrib_64bit

static void REGAL_CALL debug_glVertexAttribL1dEXT(GLuint index, GLdouble x)
{
  RegalContext * rCtx = GET_REGAL_CONTEXT();
  DispatchStateScopedStepDown stepDown(rCtx->dsp);
  rCtx->dsp->curr->glVertexAttribL1dEXT(index, x);
}

static void REGAL_CALL debug_glVertexAttribL2dEXT(GLuint index, GLdouble x, GLdouble y)
{
  RegalContext * rCtx = GET_REGAL_CONTEXT();
  DispatchStateScopedStepDown stepDown(rCtx->dsp);
  rCtx->dsp->curr->glVertexAttribL2dEXT(index, x, y);
}

static void REGAL_CALL debug_glVertexAttribL3dEXT(GLuint index, GLdouble x, GLdouble y, GLdouble z)
{
  RegalContext * rCtx = GET_REGAL_CONTEXT();
  DispatchStateScopedStepDown stepDown(rCtx->dsp);
  rCtx->dsp->curr->glVertexAttribL3dEXT(index, x, y, z);
}

static void REGAL_CALL debug_glVertexAttribL4dEXT(GLuint index, GLdouble x, GLdouble y, GLdouble z, GLdouble w)
{
  RegalContext * rCtx = GET_REGAL_CONTEXT();
  DispatchStateScopedStepDown stepDown(rCtx->dsp);
  rCtx->dsp->curr->glVertexAttribL4dEXT(index, x, y, z, w);
}

static void REGAL_CALL debug_glVertexAttribL1dvEXT(GLuint index, const GLdouble *v)
{
  RegalContext * rCtx = GET_REGAL_CONTEXT();
  DispatchStateScopedStepDown stepDown(rCtx->dsp);
  rCtx->dsp->curr->glVertexAttribL1dvEXT(index, v);
}

static void REGAL_CALL debug_glVertexAttribL2dvEXT(GLuint index, const GLdouble *v)
{
  RegalContext * rCtx = GET_REGAL_CONTEXT();
  DispatchStateScopedStepDown stepDown(rCtx->dsp);
  rCtx->dsp->curr->glVertexAttribL2dvEXT(index, v);
}

static void REGAL_CALL debug_glVertexAttribL3dvEXT(GLuint index, const GLdouble *v)
{
  RegalContext * rCtx = GET_REGAL_CONTEXT();
  DispatchStateScopedStepDown stepDown(rCtx->dsp);
  rCtx->dsp->curr->glVertexAttribL3dvEXT(index, v);
}

static void REGAL_CALL debug_glVertexAttribL4dvEXT(GLuint index, const GLdouble *v)
{
  RegalContext * rCtx = GET_REGAL_CONTEXT();
  DispatchStateScopedStepDown stepDown(rCtx->dsp);
  rCtx->dsp->curr->glVertexAttribL4dvEXT(index, v);
}

static void REGAL_CALL debug_glVertexAttribLPointerEXT(GLuint index, GLint size, GLenum type, GLsizei stride, const GLvoid *pointer)
{
  RegalContext * rCtx = GET_REGAL_CONTEXT();
  DispatchStateScopedStepDown stepDown(rCtx->dsp);
  rCtx->dsp->curr->glVertexAttribLPointerEXT(index, size, type, stride, pointer);
}

static void REGAL_CALL debug_glVertexArrayVertexAttribLOffsetEXT(GLuint vaobj, GLuint buffer, GLuint index, GLint size, GLenum type, GLsizei stride, GLintptr offset)
{
  RegalContext * rCtx = GET_REGAL_CONTEXT();
  DispatchStateScopedStepDown stepDown(rCtx->dsp);
  rCtx->dsp->curr->glVertexArrayVertexAttribLOffsetEXT(vaobj, buffer, index, size, type, stride, offset);
}

static void REGAL_CALL debug_glGetVertexAttribLdvEXT(GLuint index, GLenum pname, GLdouble *params)
{
  RegalContext * rCtx = GET_REGAL_CONTEXT();
  DispatchStateScopedStepDown stepDown(rCtx->dsp);
  rCtx->dsp->curr->glGetVertexAttribLdvEXT(index, pname, params);
}

// GL_NV_gpu_shader5

static void REGAL_CALL debug_glUniform1i64NV(GLint location, GLint64EXT x)
{
  RegalContext * rCtx = GET_REGAL_CONTEXT();
  DispatchStateScopedStepDown stepDown(rCtx->dsp);
  rCtx->dsp->curr->glUniform1i64NV(location, x);
}

static void REGAL_CALL debug_glUniform2i64NV(GLint location, GLint64EXT x, GLint64EXT y)
{
  RegalContext * rCtx = GET_REGAL_CONTEXT();
  DispatchStateScopedStepDown stepDown(rCtx->dsp);
  rCtx->dsp->curr->glUniform2i64NV(location, x, y);
}

static void REGAL_CALL debug_glUniform3i64NV(GLint location, GLint64EXT x, GLint64EXT y, GLint64EXT z)
{
  RegalContext * rCtx = GET_REGAL_CONTEXT();
  DispatchStateScopedStepDown stepDown(rCtx->dsp);
  rCtx->dsp->curr->glUniform3i64NV(location, x, y, z);
}

static void REGAL_CALL debug_glUniform4i64NV(GLint location, GLint64EXT x, GLint64EXT y, GLint64EXT z, GLint64EXT w)
{
  RegalContext * rCtx = GET_REGAL_CONTEXT();
  DispatchStateScopedStepDown stepDown(rCtx->dsp);
  rCtx->dsp->curr->glUniform4i64NV(location, x, y, z, w);
}

static void REGAL_CALL debug_glUniform1i64vNV(GLint location, GLsizei count, const GLint64EXT *value)
{
  RegalContext * rCtx = GET_REGAL_CONTEXT();
  DispatchStateScopedStepDown stepDown(rCtx->dsp);
  rCtx->dsp->curr->glUniform1i64vNV(location, count, value);
}

static void REGAL_CALL debug_glUniform2i64vNV(GLint location, GLsizei count, const GLint64EXT *value)
{
  RegalContext * rCtx = GET_REGAL_CONTEXT();
  DispatchStateScopedStepDown stepDown(rCtx->dsp);
  rCtx->dsp->curr->glUniform2i64vNV(location, count, value);
}

static void REGAL_CALL debug_glUniform3i64vNV(GLint location, GLsizei count, const GLint64EXT *value)
{
  RegalContext * rCtx = GET_REGAL_CONTEXT();
  DispatchStateScopedStepDown stepDown(rCtx->dsp);
  rCtx->dsp->curr->glUniform3i64vNV(location, count, value);
}

static void REGAL_CALL debug_glUniform4i64vNV(GLint location, GLsizei count, const GLint64EXT *value)
{
  RegalContext * rCtx = GET_REGAL_CONTEXT();
  DispatchStateScopedStepDown stepDown(rCtx->dsp);
  rCtx->dsp->curr->glUniform4i64vNV(location, count, value);
}

static void REGAL_CALL debug_glUniform1ui64NV(GLint location, GLuint64EXT x)
{
  RegalContext * rCtx = GET_REGAL_CONTEXT();
  DispatchStateScopedStepDown stepDown(rCtx->dsp);
  rCtx->dsp->curr->glUniform1ui64NV(location, x);
}

static void REGAL_CALL debug_glUniform2ui64NV(GLint location, GLuint64EXT x, GLuint64EXT y)
{
  RegalContext * rCtx = GET_REGAL_CONTEXT();
  DispatchStateScopedStepDown stepDown(rCtx->dsp);
  rCtx->dsp->curr->glUniform2ui64NV(location, x, y);
}

static void REGAL_CALL debug_glUniform3ui64NV(GLint location, GLuint64EXT x, GLuint64EXT y, GLuint64EXT z)
{
  RegalContext * rCtx = GET_REGAL_CONTEXT();
  DispatchStateScopedStepDown stepDown(rCtx->dsp);
  rCtx->dsp->curr->glUniform3ui64NV(location, x, y, z);
}

static void REGAL_CALL debug_glUniform4ui64NV(GLint location, GLuint64EXT x, GLuint64EXT y, GLuint64EXT z, GLuint64EXT w)
{
  RegalContext * rCtx = GET_REGAL_CONTEXT();
  DispatchStateScopedStepDown stepDown(rCtx->dsp);
  rCtx->dsp->curr->glUniform4ui64NV(location, x, y, z, w);
}

static void REGAL_CALL debug_glUniform1ui64vNV(GLint location, GLsizei count, const GLuint64EXT *value)
{
  RegalContext * rCtx = GET_REGAL_CONTEXT();
  DispatchStateScopedStepDown stepDown(rCtx->dsp);
  rCtx->dsp->curr->glUniform1ui64vNV(location, count, value);
}

static void REGAL_CALL debug_glUniform2ui64vNV(GLint location, GLsizei count, const GLuint64EXT *value)
{
  RegalContext * rCtx = GET_REGAL_CONTEXT();
  DispatchStateScopedStepDown stepDown(rCtx->dsp);
  rCtx->dsp->curr->glUniform2ui64vNV(location, count, value);
}

static void REGAL_CALL debug_glUniform3ui64vNV(GLint location, GLsizei count, const GLuint64EXT *value)
{
  RegalContext * rCtx = GET_REGAL_CONTEXT();
  DispatchStateScopedStepDown stepDown(rCtx->dsp);
  rCtx->dsp->curr->glUniform3ui64vNV(location, count, value);
}

static void REGAL_CALL debug_glUniform4ui64vNV(GLint location, GLsizei count, const GLuint64EXT *value)
{
  RegalContext * rCtx = GET_REGAL_CONTEXT();
  DispatchStateScopedStepDown stepDown(rCtx->dsp);
  rCtx->dsp->curr->glUniform4ui64vNV(location, count, value);
}

static void REGAL_CALL debug_glProgramUniform1i64NV(GLuint program, GLint location, GLint64EXT x)
{
  RegalContext * rCtx = GET_REGAL_CONTEXT();
  DispatchStateScopedStepDown stepDown(rCtx->dsp);
  rCtx->dsp->curr->glProgramUniform1i64NV(program, location, x);
}

static void REGAL_CALL debug_glProgramUniform2i64NV(GLuint program, GLint location, GLint64EXT x, GLint64EXT y)
{
  RegalContext * rCtx = GET_REGAL_CONTEXT();
  DispatchStateScopedStepDown stepDown(rCtx->dsp);
  rCtx->dsp->curr->glProgramUniform2i64NV(program, location, x, y);
}

static void REGAL_CALL debug_glProgramUniform3i64NV(GLuint program, GLint location, GLint64EXT x, GLint64EXT y, GLint64EXT z)
{
  RegalContext * rCtx = GET_REGAL_CONTEXT();
  DispatchStateScopedStepDown stepDown(rCtx->dsp);
  rCtx->dsp->curr->glProgramUniform3i64NV(program, location, x, y, z);
}

static void REGAL_CALL debug_glProgramUniform4i64NV(GLuint program, GLint location, GLint64EXT x, GLint64EXT y, GLint64EXT z, GLint64EXT w)
{
  RegalContext * rCtx = GET_REGAL_CONTEXT();
  DispatchStateScopedStepDown stepDown(rCtx->dsp);
  rCtx->dsp->curr->glProgramUniform4i64NV(program, location, x, y, z, w);
}

static void REGAL_CALL debug_glProgramUniform1i64vNV(GLuint program, GLint location, GLsizei count, const GLint64EXT *value)
{
  RegalContext * rCtx = GET_REGAL_CONTEXT();
  DispatchStateScopedStepDown stepDown(rCtx->dsp);
  rCtx->dsp->curr->glProgramUniform1i64vNV(program, location, count, value);
}

static void REGAL_CALL debug_glProgramUniform2i64vNV(GLuint program, GLint location, GLsizei count, const GLint64EXT *value)
{
  RegalContext * rCtx = GET_REGAL_CONTEXT();
  DispatchStateScopedStepDown stepDown(rCtx->dsp);
  rCtx->dsp->curr->glProgramUniform2i64vNV(program, location, count, value);
}

static void REGAL_CALL debug_glProgramUniform3i64vNV(GLuint program, GLint location, GLsizei count, const GLint64EXT *value)
{
  RegalContext * rCtx = GET_REGAL_CONTEXT();
  DispatchStateScopedStepDown stepDown(rCtx->dsp);
  rCtx->dsp->curr->glProgramUniform3i64vNV(program, location, count, value);
}

static void REGAL_CALL debug_glProgramUniform4i64vNV(GLuint program, GLint location, GLsizei count, const GLint64EXT *value)
{
  RegalContext * rCtx = GET_REGAL_CONTEXT();
  DispatchStateScopedStepDown stepDown(rCtx->dsp);
  rCtx->dsp->curr->glProgramUniform4i64vNV(program, location, count, value);
}

static void REGAL_CALL debug_glProgramUniform1ui64NV(GLuint program, GLint location, GLuint64EXT x)
{
  RegalContext * rCtx = GET_REGAL_CONTEXT();
  DispatchStateScopedStepDown stepDown(rCtx->dsp);
  rCtx->dsp->curr->glProgramUniform1ui64NV(program, location, x);
}

static void REGAL_CALL debug_glProgramUniform2ui64NV(GLuint program, GLint location, GLuint64EXT x, GLuint64EXT y)
{
  RegalContext * rCtx = GET_REGAL_CONTEXT();
  DispatchStateScopedStepDown stepDown(rCtx->dsp);
  rCtx->dsp->curr->glProgramUniform2ui64NV(program, location, x, y);
}

static void REGAL_CALL debug_glProgramUniform3ui64NV(GLuint program, GLint location, GLuint64EXT x, GLuint64EXT y, GLuint64EXT z)
{
  RegalContext * rCtx = GET_REGAL_CONTEXT();
  DispatchStateScopedStepDown stepDown(rCtx->dsp);
  rCtx->dsp->curr->glProgramUniform3ui64NV(program, location, x, y, z);
}

static void REGAL_CALL debug_glProgramUniform4ui64NV(GLuint program, GLint location, GLuint64EXT x, GLuint64EXT y, GLuint64EXT z, GLuint64EXT w)
{
  RegalContext * rCtx = GET_REGAL_CONTEXT();
  DispatchStateScopedStepDown stepDown(rCtx->dsp);
  rCtx->dsp->curr->glProgramUniform4ui64NV(program, location, x, y, z, w);
}

static void REGAL_CALL debug_glProgramUniform1ui64vNV(GLuint program, GLint location, GLsizei count, const GLuint64EXT *value)
{
  RegalContext * rCtx = GET_REGAL_CONTEXT();
  DispatchStateScopedStepDown stepDown(rCtx->dsp);
  rCtx->dsp->curr->glProgramUniform1ui64vNV(program, location, count, value);
}

static void REGAL_CALL debug_glProgramUniform2ui64vNV(GLuint program, GLint location, GLsizei count, const GLuint64EXT *value)
{
  RegalContext * rCtx = GET_REGAL_CONTEXT();
  DispatchStateScopedStepDown stepDown(rCtx->dsp);
  rCtx->dsp->curr->glProgramUniform2ui64vNV(program, location, count, value);
}

static void REGAL_CALL debug_glProgramUniform3ui64vNV(GLuint program, GLint location, GLsizei count, const GLuint64EXT *value)
{
  RegalContext * rCtx = GET_REGAL_CONTEXT();
  DispatchStateScopedStepDown stepDown(rCtx->dsp);
  rCtx->dsp->curr->glProgramUniform3ui64vNV(program, location, count, value);
}

static void REGAL_CALL debug_glProgramUniform4ui64vNV(GLuint program, GLint location, GLsizei count, const GLuint64EXT *value)
{
  RegalContext * rCtx = GET_REGAL_CONTEXT();
  DispatchStateScopedStepDown stepDown(rCtx->dsp);
  rCtx->dsp->curr->glProgramUniform4ui64vNV(program, location, count, value);
}

static void REGAL_CALL debug_glGetUniformi64vNV(GLuint program, GLint location, GLint64EXT *params)
{
  RegalContext * rCtx = GET_REGAL_CONTEXT();
  DispatchStateScopedStepDown stepDown(rCtx->dsp);
  rCtx->dsp->curr->glGetUniformi64vNV(program, location, params);
}

// GL_NV_vertex_attrib_integer_64bit

static void REGAL_CALL debug_glVertexAttribL1i64NV(GLuint index, GLint64EXT x)
{
  RegalContext * rCtx = GET_REGAL_CONTEXT();
  DispatchStateScopedStepDown stepDown(rCtx->dsp);
  rCtx->dsp->curr->glVertexAttribL1i64NV(index, x);
}

static void REGAL_CALL debug_glVertexAttribL2i64NV(GLuint index, GLint64EXT x, GLint64EXT y)
{
  RegalContext * rCtx = GET_REGAL_CONTEXT();
  DispatchStateScopedStepDown stepDown(rCtx->dsp);
  rCtx->dsp->curr->glVertexAttribL2i64NV(index, x, y);
}

static void REGAL_CALL debug_glVertexAttribL3i64NV(GLuint index, GLint64EXT x, GLint64EXT y, GLint64EXT z)
{
  RegalContext * rCtx = GET_REGAL_CONTEXT();
  DispatchStateScopedStepDown stepDown(rCtx->dsp);
  rCtx->dsp->curr->glVertexAttribL3i64NV(index, x, y, z);
}

static void REGAL_CALL debug_glVertexAttribL4i64NV(GLuint index, GLint64EXT x, GLint64EXT y, GLint64EXT z, GLint64EXT w)
{
  RegalContext * rCtx = GET_REGAL_CONTEXT();
  DispatchStateScopedStepDown stepDown(rCtx->dsp);
  rCtx->dsp->curr->glVertexAttribL4i64NV(index, x, y, z, w);
}

static void REGAL_CALL debug_glVertexAttribL1ui64NV(GLuint index, GLuint64EXT x)
{
  RegalContext * rCtx = GET_REGAL_CONTEXT();
  DispatchStateScopedStepDown stepDown(rCtx->dsp);
  rCtx->dsp->curr->glVertexAttribL1ui64NV(index, x);
}

static void REGAL_CALL debug_glVertexAttribL2ui64NV(GLuint index, GLuint64EXT x, GLuint64EXT y)
{
  RegalContext * rCtx = GET_REGAL_CONTEXT();
  DispatchStateScopedStepDown stepDown(rCtx->dsp);
  rCtx->dsp->curr->glVertexAttribL2ui64NV(index, x, y);
}

static void REGAL_CALL debug_glVertexAttribL3ui64NV(GLuint index, GLuint64EXT x, GLuint64EXT y, GLuint64EXT z)
{
  RegalContext * rCtx = GET_REGAL_CONTEXT();
  DispatchStateScopedStepDown stepDown(rCtx->dsp);
  rCtx->dsp->curr->glVertexAttribL3ui64NV(index, x, y, z);
}

static void REGAL_CALL debug_glVertexAttribL4ui64NV(GLuint index, GLuint64EXT x, GLuint64EXT y, GLuint64EXT z, GLuint64EXT w)
{
  RegalContext * rCtx = GET_REGAL_CONTEXT();
  DispatchStateScopedStepDown stepDown(rCtx->dsp);
  rCtx->dsp->curr->glVertexAttribL4ui64NV(index, x, y, z, w);
}

static void REGAL_CALL debug_glVertexAttribL1i64vNV(GLuint index, const GLint64EXT *v)
{
  RegalContext * rCtx = GET_REGAL_CONTEXT();
  DispatchStateScopedStepDown stepDown(rCtx->dsp);
  rCtx->dsp->curr->glVertexAttribL1i64vNV(index, v);
}

static void REGAL_CALL debug_glVertexAttribL2i64vNV(GLuint index, const GLint64EXT *v)
{
  RegalContext * rCtx = GET_REGAL_CONTEXT();
  DispatchStateScopedStepDown stepDown(rCtx->dsp);
  rCtx->dsp->curr->glVertexAttribL2i64vNV(index, v);
}

static void REGAL_CALL debug_glVertexAttribL3i64vNV(GLuint index, const GLint64EXT *v)
{
  RegalContext * rCtx = GET_REGAL_CONTEXT();
  DispatchStateScopedStepDown stepDown(rCtx->dsp);
  rCtx->dsp->curr->glVertexAttribL3i64vNV(index, v);
}

static void REGAL_CALL debug_glVertexAttribL4i64vNV(GLuint index, const GLint64EXT *v)
{
  RegalContext * rCtx = GET_REGAL_CONTEXT();
  DispatchStateScopedStepDown stepDown(rCtx->dsp);
  rCtx->dsp->curr->glVertexAttribL4i64vNV(index, v);
}

static void REGAL_CALL debug_glVertexAttribL1ui64vNV(GLuint index, const GLuint64EXT *v)
{
  RegalContext * rCtx = GET_REGAL_CONTEXT();
  DispatchStateScopedStepDown stepDown(rCtx->dsp);
  rCtx->dsp->curr->glVertexAttribL1ui64vNV(index, v);
}

static void REGAL_CALL debug_glVertexAttribL2ui64vNV(GLuint index, const GLuint64EXT *v)
{
  RegalContext * rCtx = GET_REGAL_CONTEXT();
  DispatchStateScopedStepDown stepDown(rCtx->dsp);
  rCtx->dsp->curr->glVertexAttribL2ui64vNV(index, v);
}

static void REGAL_CALL debug_glVertexAttribL3ui64vNV(GLuint index, const GLuint64EXT *v)
{
  RegalContext * rCtx = GET_REGAL_CONTEXT();
  DispatchStateScopedStepDown stepDown(rCtx->dsp);
  rCtx->dsp->curr->glVertexAttribL3ui64vNV(index, v);
}

static void REGAL_CALL debug_glVertexAttribL4ui64vNV(GLuint index, const GLuint64EXT *v)
{
  RegalContext * rCtx = GET_REGAL_CONTEXT();
  DispatchStateScopedStepDown stepDown(rCtx->dsp);
  rCtx->dsp->curr->glVertexAttribL4ui64vNV(index, v);
}

static void REGAL_CALL debug_glVertexAttribLFormatNV(GLuint index, GLint size, GLenum type, GLsizei stride)
{
  RegalContext * rCtx = GET_REGAL_CONTEXT();
  DispatchStateScopedStepDown stepDown(rCtx->dsp);
  rCtx->dsp->curr->glVertexAttribLFormatNV(index, size, type, stride);
}

static void REGAL_CALL debug_glGetVertexAttribLi64vNV(GLuint index, GLenum pname, GLint64EXT *params)
{
  RegalContext * rCtx = GET_REGAL_CONTEXT();
  DispatchStateScopedStepDown stepDown(rCtx->dsp);
  rCtx->dsp->curr->glGetVertexAttribLi64vNV(index, pname, params);
}

static void REGAL_CALL debug_glGetVertexAttribLui64vNV(GLuint index, GLenum pname, GLuint64EXT *params)
{
  RegalContext * rCtx = GET_REGAL_CONTEXT();
  DispatchStateScopedStepDown stepDown(rCtx->dsp);
  rCtx->dsp->curr->glGetVertexAttribLui64vNV(index, pname, params);
}

// GL_NV_vdpau_interop

static void REGAL_CALL debug_glVDPAUInitNV(const GLvoid *vdpDevice, const GLvoid *getProcAddress)
{
  RegalContext * rCtx = GET_REGAL_CONTEXT();
  DispatchStateScopedStepDown stepDown(rCtx->dsp);
  rCtx->dsp->curr->glVDPAUInitNV(vdpDevice, getProcAddress);
}

static void REGAL_CALL debug_glVDPAUFiniNV(void)
{
  RegalContext * rCtx = GET_REGAL_CONTEXT();
  DispatchStateScopedStepDown stepDown(rCtx->dsp);
  rCtx->dsp->curr->glVDPAUFiniNV();
}

static GLvdpauSurfaceNV REGAL_CALL debug_glVDPAURegisterVideoSurfaceNV(const GLvoid *vdpSurface, GLenum target, GLsizei numTextureNames, const GLuint *textureNames)
{
  RegalContext * rCtx = GET_REGAL_CONTEXT();
  DispatchStateScopedStepDown stepDown(rCtx->dsp);
  GLvdpauSurfaceNV  ret = rCtx->dsp->curr->glVDPAURegisterVideoSurfaceNV(vdpSurface, target, numTextureNames, textureNames);
  return ret;
}

static GLvdpauSurfaceNV REGAL_CALL debug_glVDPAURegisterOutputSurfaceNV(const GLvoid *vdpSurface, GLenum target, GLsizei numTextureNames, const GLuint *textureNames)
{
  RegalContext * rCtx = GET_REGAL_CONTEXT();
  DispatchStateScopedStepDown stepDown(rCtx->dsp);
  GLvdpauSurfaceNV  ret = rCtx->dsp->curr->glVDPAURegisterOutputSurfaceNV(vdpSurface, target, numTextureNames, textureNames);
  return ret;
}

static GLboolean REGAL_CALL debug_glVDPAUIsSurfaceNV(GLvdpauSurfaceNV surface)
{
  RegalContext * rCtx = GET_REGAL_CONTEXT();
  DispatchStateScopedStepDown stepDown(rCtx->dsp);
  GLboolean  ret = rCtx->dsp->curr->glVDPAUIsSurfaceNV(surface);
  return ret;
}

static void REGAL_CALL debug_glVDPAUUnregisterSurfaceNV(GLvdpauSurfaceNV surface)
{
  RegalContext * rCtx = GET_REGAL_CONTEXT();
  DispatchStateScopedStepDown stepDown(rCtx->dsp);
  rCtx->dsp->curr->glVDPAUUnregisterSurfaceNV(surface);
}

static void REGAL_CALL debug_glVDPAUGetSurfaceivNV(GLvdpauSurfaceNV surface, GLenum pname, GLsizei bufSize, GLsizei *length, GLint *values)
{
  RegalContext * rCtx = GET_REGAL_CONTEXT();
  DispatchStateScopedStepDown stepDown(rCtx->dsp);
  rCtx->dsp->curr->glVDPAUGetSurfaceivNV(surface, pname, bufSize, length, values);
}

static void REGAL_CALL debug_glVDPAUSurfaceAccessNV(GLvdpauSurfaceNV surface, GLenum access)
{
  RegalContext * rCtx = GET_REGAL_CONTEXT();
  DispatchStateScopedStepDown stepDown(rCtx->dsp);
  rCtx->dsp->curr->glVDPAUSurfaceAccessNV(surface, access);
}

static void REGAL_CALL debug_glVDPAUMapSurfacesNV(GLsizei numSurfaces, const GLvdpauSurfaceNV *surfaces)
{
  RegalContext * rCtx = GET_REGAL_CONTEXT();
  DispatchStateScopedStepDown stepDown(rCtx->dsp);
  rCtx->dsp->curr->glVDPAUMapSurfacesNV(numSurfaces, surfaces);
}

static void REGAL_CALL debug_glVDPAUUnmapSurfacesNV(GLsizei numSurfaces, const GLvdpauSurfaceNV *surfaces)
{
  RegalContext * rCtx = GET_REGAL_CONTEXT();
  DispatchStateScopedStepDown stepDown(rCtx->dsp);
  rCtx->dsp->curr->glVDPAUUnmapSurfacesNV(numSurfaces, surfaces);
}

// GL_NV_path_rendering

static void REGAL_CALL debug_glCopyPathNV(GLuint resultPath, GLuint srcPath)
{
  RegalContext * rCtx = GET_REGAL_CONTEXT();
  DispatchStateScopedStepDown stepDown(rCtx->dsp);
  rCtx->dsp->curr->glCopyPathNV(resultPath, srcPath);
}

static void REGAL_CALL debug_glCoverFillPathInstancedNV(GLsizei numPaths, GLenum pathNameType, const GLvoid *paths, GLuint pathBase, GLenum coverMode, GLenum transformType, const GLfloat *transformValues)
{
  RegalContext * rCtx = GET_REGAL_CONTEXT();
  DispatchStateScopedStepDown stepDown(rCtx->dsp);
  rCtx->dsp->curr->glCoverFillPathInstancedNV(numPaths, pathNameType, paths, pathBase, coverMode, transformType, transformValues);
}

static void REGAL_CALL debug_glCoverFillPathNV(GLuint path, GLenum coverMode)
{
  RegalContext * rCtx = GET_REGAL_CONTEXT();
  DispatchStateScopedStepDown stepDown(rCtx->dsp);
  rCtx->dsp->curr->glCoverFillPathNV(path, coverMode);
}

static void REGAL_CALL debug_glCoverStrokePathInstancedNV(GLsizei numPaths, GLenum pathNameType, const GLvoid *paths, GLuint pathBase, GLenum coverMode, GLenum transformType, const GLfloat *transformValues)
{
  RegalContext * rCtx = GET_REGAL_CONTEXT();
  DispatchStateScopedStepDown stepDown(rCtx->dsp);
  rCtx->dsp->curr->glCoverStrokePathInstancedNV(numPaths, pathNameType, paths, pathBase, coverMode, transformType, transformValues);
}

static void REGAL_CALL debug_glCoverStrokePathNV(GLuint name, GLenum coverMode)
{
  RegalContext * rCtx = GET_REGAL_CONTEXT();
  DispatchStateScopedStepDown stepDown(rCtx->dsp);
  rCtx->dsp->curr->glCoverStrokePathNV(name, coverMode);
}

static void REGAL_CALL debug_glDeletePathsNV(GLuint path, GLsizei range)
{
  RegalContext * rCtx = GET_REGAL_CONTEXT();
  DispatchStateScopedStepDown stepDown(rCtx->dsp);
  rCtx->dsp->curr->glDeletePathsNV(path, range);
}

static GLuint REGAL_CALL debug_glGenPathsNV(GLsizei range)
{
  RegalContext * rCtx = GET_REGAL_CONTEXT();
  DispatchStateScopedStepDown stepDown(rCtx->dsp);
  GLuint  ret = rCtx->dsp->curr->glGenPathsNV(range);
  return ret;
}

static void REGAL_CALL debug_glGetPathColorGenfvNV(GLenum color, GLenum pname, GLfloat*value)
{
  RegalContext * rCtx = GET_REGAL_CONTEXT();
  DispatchStateScopedStepDown stepDown(rCtx->dsp);
  rCtx->dsp->curr->glGetPathColorGenfvNV(color, pname, value);
}

static void REGAL_CALL debug_glGetPathColorGenivNV(GLenum color, GLenum pname, GLint *value)
{
  RegalContext * rCtx = GET_REGAL_CONTEXT();
  DispatchStateScopedStepDown stepDown(rCtx->dsp);
  rCtx->dsp->curr->glGetPathColorGenivNV(color, pname, value);
}

static void REGAL_CALL debug_glGetPathCommandsNV(GLuint name, GLubyte *commands)
{
  RegalContext * rCtx = GET_REGAL_CONTEXT();
  DispatchStateScopedStepDown stepDown(rCtx->dsp);
  rCtx->dsp->curr->glGetPathCommandsNV(name, commands);
}

static void REGAL_CALL debug_glGetPathCoordsNV(GLuint name, GLfloat*coords)
{
  RegalContext * rCtx = GET_REGAL_CONTEXT();
  DispatchStateScopedStepDown stepDown(rCtx->dsp);
  rCtx->dsp->curr->glGetPathCoordsNV(name, coords);
}

static void REGAL_CALL debug_glGetPathDashArrayNV(GLuint name, GLfloat *dashArray)
{
  RegalContext * rCtx = GET_REGAL_CONTEXT();
  DispatchStateScopedStepDown stepDown(rCtx->dsp);
  rCtx->dsp->curr->glGetPathDashArrayNV(name, dashArray);
}

static GLfloat REGAL_CALL debug_glGetPathLengthNV(GLuint path, GLsizei startSegment, GLsizei numSegments)
{
  RegalContext * rCtx = GET_REGAL_CONTEXT();
  DispatchStateScopedStepDown stepDown(rCtx->dsp);
  GLfloat  ret = rCtx->dsp->curr->glGetPathLengthNV(path, startSegment, numSegments);
  return ret;
}

static void REGAL_CALL debug_glGetPathMetricRangeNV(GLbitfield metricQueryMask, GLuint fistPathName, GLsizei numPaths, GLsizei stride, GLfloat*metrics)
{
  RegalContext * rCtx = GET_REGAL_CONTEXT();
  DispatchStateScopedStepDown stepDown(rCtx->dsp);
  rCtx->dsp->curr->glGetPathMetricRangeNV(metricQueryMask, fistPathName, numPaths, stride, metrics);
}

static void REGAL_CALL debug_glGetPathMetricsNV(GLbitfield metricQueryMask, GLsizei numPaths, GLenum pathNameType, const GLvoid *paths, GLuint pathBase, GLsizei stride, GLfloat *metrics)
{
  RegalContext * rCtx = GET_REGAL_CONTEXT();
  DispatchStateScopedStepDown stepDown(rCtx->dsp);
  rCtx->dsp->curr->glGetPathMetricsNV(metricQueryMask, numPaths, pathNameType, paths, pathBase, stride, metrics);
}

static void REGAL_CALL debug_glGetPathParameterfvNV(GLuint name, GLenum param, GLfloat*value)
{
  RegalContext * rCtx = GET_REGAL_CONTEXT();
  DispatchStateScopedStepDown stepDown(rCtx->dsp);
  rCtx->dsp->curr->glGetPathParameterfvNV(name, param, value);
}

static void REGAL_CALL debug_glGetPathParameterivNV(GLuint name, GLenum param, GLint*value)
{
  RegalContext * rCtx = GET_REGAL_CONTEXT();
  DispatchStateScopedStepDown stepDown(rCtx->dsp);
  rCtx->dsp->curr->glGetPathParameterivNV(name, param, value);
}

static void REGAL_CALL debug_glGetPathSpacingNV(GLenum pathListMode, GLsizei numPaths, GLenum pathNameType, const GLvoid *paths, GLuint pathBase, GLfloat advanceScale, GLfloat kerningScale, GLenum transformType, GLfloat *returnedSpacing)
{
  RegalContext * rCtx = GET_REGAL_CONTEXT();
  DispatchStateScopedStepDown stepDown(rCtx->dsp);
  rCtx->dsp->curr->glGetPathSpacingNV(pathListMode, numPaths, pathNameType, paths, pathBase, advanceScale, kerningScale, transformType, returnedSpacing);
}

static void REGAL_CALL debug_glGetPathTexGenfvNV(GLenum texCoordSet, GLenum pname, GLfloat*value)
{
  RegalContext * rCtx = GET_REGAL_CONTEXT();
  DispatchStateScopedStepDown stepDown(rCtx->dsp);
  rCtx->dsp->curr->glGetPathTexGenfvNV(texCoordSet, pname, value);
}

static void REGAL_CALL debug_glGetPathTexGenivNV(GLenum texCoordSet, GLenum pname, GLint*value)
{
  RegalContext * rCtx = GET_REGAL_CONTEXT();
  DispatchStateScopedStepDown stepDown(rCtx->dsp);
  rCtx->dsp->curr->glGetPathTexGenivNV(texCoordSet, pname, value);
}

static void REGAL_CALL debug_glInterpolatePathsNV(GLuint resultPath, GLuint pathA, GLuint pathB, GLfloat weight)
{
  RegalContext * rCtx = GET_REGAL_CONTEXT();
  DispatchStateScopedStepDown stepDown(rCtx->dsp);
  rCtx->dsp->curr->glInterpolatePathsNV(resultPath, pathA, pathB, weight);
}

static GLboolean REGAL_CALL debug_glIsPathNV(GLuint path)
{
  RegalContext * rCtx = GET_REGAL_CONTEXT();
  DispatchStateScopedStepDown stepDown(rCtx->dsp);
  GLboolean  ret = rCtx->dsp->curr->glIsPathNV(path);
  return ret;
}

static GLboolean REGAL_CALL debug_glIsPointInFillPathNV(GLuint path, GLuint mask, GLfloat x, GLfloat y)
{
  RegalContext * rCtx = GET_REGAL_CONTEXT();
  DispatchStateScopedStepDown stepDown(rCtx->dsp);
  GLboolean  ret = rCtx->dsp->curr->glIsPointInFillPathNV(path, mask, x, y);
  return ret;
}

static GLboolean REGAL_CALL debug_glIsPointInStrokePathNV(GLuint path, GLfloat x, GLfloat y)
{
  RegalContext * rCtx = GET_REGAL_CONTEXT();
  DispatchStateScopedStepDown stepDown(rCtx->dsp);
  GLboolean  ret = rCtx->dsp->curr->glIsPointInStrokePathNV(path, x, y);
  return ret;
}

static void REGAL_CALL debug_glPathColorGenNV(GLenum color, GLenum genMode, GLenum colorFormat, const GLfloat *coeffs)
{
  RegalContext * rCtx = GET_REGAL_CONTEXT();
  DispatchStateScopedStepDown stepDown(rCtx->dsp);
  rCtx->dsp->curr->glPathColorGenNV(color, genMode, colorFormat, coeffs);
}

static void REGAL_CALL debug_glPathCommandsNV(GLuint path, GLsizei numCommands, const GLubyte*commands, GLsizei numCoords, GLenum coordType, const GLvoid*coords)
{
  RegalContext * rCtx = GET_REGAL_CONTEXT();
  DispatchStateScopedStepDown stepDown(rCtx->dsp);
  rCtx->dsp->curr->glPathCommandsNV(path, numCommands, commands, numCoords, coordType, coords);
}

static void REGAL_CALL debug_glPathCoordsNV(GLuint path, GLsizei numCoords, GLenum coordType, const GLvoid *coords)
{
  RegalContext * rCtx = GET_REGAL_CONTEXT();
  DispatchStateScopedStepDown stepDown(rCtx->dsp);
  rCtx->dsp->curr->glPathCoordsNV(path, numCoords, coordType, coords);
}

static void REGAL_CALL debug_glPathCoverDepthFuncNV(GLenum zfunc)
{
  RegalContext * rCtx = GET_REGAL_CONTEXT();
  DispatchStateScopedStepDown stepDown(rCtx->dsp);
  rCtx->dsp->curr->glPathCoverDepthFuncNV(zfunc);
}

static void REGAL_CALL debug_glPathDashArrayNV(GLuint path, GLsizei dashCount, const GLfloat *dashArray)
{
  RegalContext * rCtx = GET_REGAL_CONTEXT();
  DispatchStateScopedStepDown stepDown(rCtx->dsp);
  rCtx->dsp->curr->glPathDashArrayNV(path, dashCount, dashArray);
}

static void REGAL_CALL debug_glPathFogGenNV(GLenum genMode)
{
  RegalContext * rCtx = GET_REGAL_CONTEXT();
  DispatchStateScopedStepDown stepDown(rCtx->dsp);
  rCtx->dsp->curr->glPathFogGenNV(genMode);
}

static void REGAL_CALL debug_glPathGlyphRangeNV(GLuint firstPathName, GLenum fontTarget, const GLvoid *fontName, GLbitfield fontStyle, GLuint firstGlyph, GLsizei numGlyphs, GLenum handleMissingGlyphs, GLuint pathParameterTemplate, GLfloat emScale)
{
  RegalContext * rCtx = GET_REGAL_CONTEXT();
  DispatchStateScopedStepDown stepDown(rCtx->dsp);
  rCtx->dsp->curr->glPathGlyphRangeNV(firstPathName, fontTarget, fontName, fontStyle, firstGlyph, numGlyphs, handleMissingGlyphs, pathParameterTemplate, emScale);
}

static void REGAL_CALL debug_glPathGlyphsNV(GLuint firstPathName, GLenum fontTarget, const GLvoid *fontName, GLbitfield fontStyle, GLsizei numGlyphs, GLenum type, const GLvoid*charcodes, GLenum handleMissingGlyphs, GLuint pathParameterTemplate, GLfloat emScale)
{
  RegalContext * rCtx = GET_REGAL_CONTEXT();
  DispatchStateScopedStepDown stepDown(rCtx->dsp);
  rCtx->dsp->curr->glPathGlyphsNV(firstPathName, fontTarget, fontName, fontStyle, numGlyphs, type, charcodes, handleMissingGlyphs, pathParameterTemplate, emScale);
}

static void REGAL_CALL debug_glPathParameterfNV(GLuint path, GLenum pname, GLfloat value)
{
  RegalContext * rCtx = GET_REGAL_CONTEXT();
  DispatchStateScopedStepDown stepDown(rCtx->dsp);
  rCtx->dsp->curr->glPathParameterfNV(path, pname, value);
}

static void REGAL_CALL debug_glPathParameterfvNV(GLuint path, GLenum pname, const GLfloat *value)
{
  RegalContext * rCtx = GET_REGAL_CONTEXT();
  DispatchStateScopedStepDown stepDown(rCtx->dsp);
  rCtx->dsp->curr->glPathParameterfvNV(path, pname, value);
}

static void REGAL_CALL debug_glPathParameteriNV(GLuint path, GLenum pname, GLint value)
{
  RegalContext * rCtx = GET_REGAL_CONTEXT();
  DispatchStateScopedStepDown stepDown(rCtx->dsp);
  rCtx->dsp->curr->glPathParameteriNV(path, pname, value);
}

static void REGAL_CALL debug_glPathParameterivNV(GLuint path, GLenum pname, const GLint *value)
{
  RegalContext * rCtx = GET_REGAL_CONTEXT();
  DispatchStateScopedStepDown stepDown(rCtx->dsp);
  rCtx->dsp->curr->glPathParameterivNV(path, pname, value);
}

static void REGAL_CALL debug_glPathStencilDepthOffsetNV(GLfloat factor, GLint units)
{
  RegalContext * rCtx = GET_REGAL_CONTEXT();
  DispatchStateScopedStepDown stepDown(rCtx->dsp);
  rCtx->dsp->curr->glPathStencilDepthOffsetNV(factor, units);
}

static void REGAL_CALL debug_glPathStencilFuncNV(GLenum func, GLint ref, GLuint mask)
{
  RegalContext * rCtx = GET_REGAL_CONTEXT();
  DispatchStateScopedStepDown stepDown(rCtx->dsp);
  rCtx->dsp->curr->glPathStencilFuncNV(func, ref, mask);
}

static void REGAL_CALL debug_glPathStringNV(GLuint path, GLenum format, GLsizei length, const GLvoid *pathString)
{
  RegalContext * rCtx = GET_REGAL_CONTEXT();
  DispatchStateScopedStepDown stepDown(rCtx->dsp);
  rCtx->dsp->curr->glPathStringNV(path, format, length, pathString);
}

static void REGAL_CALL debug_glPathSubCommandsNV(GLuint path, GLsizei commandStart, GLsizei commandsToDelete, GLsizei numCommands, const GLubyte*commands, GLsizei numCoords, GLenum coordType, const GLvoid*coords)
{
  RegalContext * rCtx = GET_REGAL_CONTEXT();
  DispatchStateScopedStepDown stepDown(rCtx->dsp);
  rCtx->dsp->curr->glPathSubCommandsNV(path, commandStart, commandsToDelete, numCommands, commands, numCoords, coordType, coords);
}

static void REGAL_CALL debug_glPathSubCoordsNV(GLuint path, GLsizei coordStart, GLsizei numCoords, GLenum coordType, const GLvoid *coords)
{
  RegalContext * rCtx = GET_REGAL_CONTEXT();
  DispatchStateScopedStepDown stepDown(rCtx->dsp);
  rCtx->dsp->curr->glPathSubCoordsNV(path, coordStart, numCoords, coordType, coords);
}

static void REGAL_CALL debug_glPathTexGenNV(GLenum texCoordSet, GLenum genMode, GLint components, const GLfloat *coeffs)
{
  RegalContext * rCtx = GET_REGAL_CONTEXT();
  DispatchStateScopedStepDown stepDown(rCtx->dsp);
  rCtx->dsp->curr->glPathTexGenNV(texCoordSet, genMode, components, coeffs);
}

static GLboolean REGAL_CALL debug_glPointAlongPathNV(GLuint path, GLsizei startSegment, GLsizei numSegments, GLfloat distance, GLfloat*x, GLfloat *y, GLfloat *tangentX, GLfloat *tangentY)
{
  RegalContext * rCtx = GET_REGAL_CONTEXT();
  DispatchStateScopedStepDown stepDown(rCtx->dsp);
  GLboolean  ret = rCtx->dsp->curr->glPointAlongPathNV(path, startSegment, numSegments, distance, x, y, tangentX, tangentY);
  return ret;
}

static void REGAL_CALL debug_glStencilFillPathInstancedNV(GLsizei numPaths, GLenum pathNameType, const GLvoid *paths, GLuint pathBase, GLenum fillMode, GLuint mask, GLenum transformType, const GLfloat *transformValues)
{
  RegalContext * rCtx = GET_REGAL_CONTEXT();
  DispatchStateScopedStepDown stepDown(rCtx->dsp);
  rCtx->dsp->curr->glStencilFillPathInstancedNV(numPaths, pathNameType, paths, pathBase, fillMode, mask, transformType, transformValues);
}

static void REGAL_CALL debug_glStencilFillPathNV(GLuint path, GLenum fillMode, GLuint mask)
{
  RegalContext * rCtx = GET_REGAL_CONTEXT();
  DispatchStateScopedStepDown stepDown(rCtx->dsp);
  rCtx->dsp->curr->glStencilFillPathNV(path, fillMode, mask);
}

static void REGAL_CALL debug_glStencilStrokePathInstancedNV(GLsizei numPaths, GLenum pathNameType, const GLvoid *paths, GLuint pathBase, GLint reference, GLuint mask, GLenum transformType, const GLfloat *transformValues)
{
  RegalContext * rCtx = GET_REGAL_CONTEXT();
  DispatchStateScopedStepDown stepDown(rCtx->dsp);
  rCtx->dsp->curr->glStencilStrokePathInstancedNV(numPaths, pathNameType, paths, pathBase, reference, mask, transformType, transformValues);
}

static void REGAL_CALL debug_glStencilStrokePathNV(GLuint path, GLint reference, GLuint mask)
{
  RegalContext * rCtx = GET_REGAL_CONTEXT();
  DispatchStateScopedStepDown stepDown(rCtx->dsp);
  rCtx->dsp->curr->glStencilStrokePathNV(path, reference, mask);
}

static void REGAL_CALL debug_glTransformPathNV(GLuint resultPath, GLuint srcPath, GLenum transformType, const GLfloat *transformValues)
{
  RegalContext * rCtx = GET_REGAL_CONTEXT();
  DispatchStateScopedStepDown stepDown(rCtx->dsp);
  rCtx->dsp->curr->glTransformPathNV(resultPath, srcPath, transformType, transformValues);
}

static void REGAL_CALL debug_glWeightPathsNV(GLuint resultPath, GLsizei numPaths, const GLuint *paths, const GLfloat *weights)
{
  RegalContext * rCtx = GET_REGAL_CONTEXT();
  DispatchStateScopedStepDown stepDown(rCtx->dsp);
  rCtx->dsp->curr->glWeightPathsNV(resultPath, numPaths, paths, weights);
}

// GL_REGAL_extension_query

static GLboolean REGAL_CALL debug_glGetExtensionREGAL(const GLchar *ext)
{
  RegalContext * rCtx = GET_REGAL_CONTEXT();
  DispatchStateScopedStepDown stepDown(rCtx->dsp);
  GLboolean  ret = rCtx->dsp->curr->glGetExtensionREGAL(ext);
  return ret;
}

static GLboolean REGAL_CALL debug_glIsSupportedREGAL(const GLchar *ext)
{
  RegalContext * rCtx = GET_REGAL_CONTEXT();
  DispatchStateScopedStepDown stepDown(rCtx->dsp);
  GLboolean  ret = rCtx->dsp->curr->glIsSupportedREGAL(ext);
  return ret;
}

// GL_REGAL_error_string

static const GLchar *REGAL_CALL debug_glErrorStringREGAL(GLenum error)
{
  RegalContext * rCtx = GET_REGAL_CONTEXT();
  DispatchStateScopedStepDown stepDown(rCtx->dsp);
  const GLchar * ret = rCtx->dsp->curr->glErrorStringREGAL(error);
  return ret;
}

// GL_AMD_debug_output

static GLuint REGAL_CALL debug_glGetDebugMessageLogAMD(GLuint count, GLsizei bufsize, GLenum *categories, GLuint *severities, GLuint *ids, GLsizei *lengths, GLchar *message)
{
  RegalContext * rCtx = GET_REGAL_CONTEXT();
  DispatchStateScopedStepDown stepDown(rCtx->dsp);
  GLuint  ret = rCtx->dsp->curr->glGetDebugMessageLogAMD(count, bufsize, categories, severities, ids, lengths, message);
  return ret;
}

static void REGAL_CALL debug_glDebugMessageCallbackAMD(GLDEBUGPROCAMD callback, GLvoid *userParam)
{
  RegalContext * rCtx = GET_REGAL_CONTEXT();
  DispatchStateScopedStepDown stepDown(rCtx->dsp);
  rCtx->dsp->curr->glDebugMessageCallbackAMD(callback, userParam);
}

static void REGAL_CALL debug_glDebugMessageEnableAMD(GLenum category, GLenum severity, GLsizei count, const GLuint *ids, GLboolean enabled)
{
  RegalContext * rCtx = GET_REGAL_CONTEXT();
  DispatchStateScopedStepDown stepDown(rCtx->dsp);
  rCtx->dsp->curr->glDebugMessageEnableAMD(category, severity, count, ids, enabled);
}

static void REGAL_CALL debug_glDebugMessageInsertAMD(GLenum category, GLenum severity, GLuint id, GLsizei length, const GLchar *buf)
{
  RegalContext * rCtx = GET_REGAL_CONTEXT();
  DispatchStateScopedStepDown stepDown(rCtx->dsp);
  rCtx->dsp->curr->glDebugMessageInsertAMD(category, severity, id, length, buf);
}

// GL_AMD_multi_draw_indirect

static void REGAL_CALL debug_glMultiDrawArraysIndirectAMD(GLenum mode, const GLvoid *indirect, GLsizei primcount, GLsizei stride)
{
  RegalContext * rCtx = GET_REGAL_CONTEXT();
  DispatchStateScopedStepDown stepDown(rCtx->dsp);
  rCtx->dsp->curr->glMultiDrawArraysIndirectAMD(mode, indirect, primcount, stride);
}

static void REGAL_CALL debug_glMultiDrawElementsIndirectAMD(GLenum mode, GLenum type, const GLvoid *indirect, GLsizei primcount, GLsizei stride)
{
  RegalContext * rCtx = GET_REGAL_CONTEXT();
  DispatchStateScopedStepDown stepDown(rCtx->dsp);
  rCtx->dsp->curr->glMultiDrawElementsIndirectAMD(mode, type, indirect, primcount, stride);
}

// GL_AMD_name_gen_delete

static GLboolean REGAL_CALL debug_glIsNameAMD(GLenum identifier, GLuint name)
{
  RegalContext * rCtx = GET_REGAL_CONTEXT();
  DispatchStateScopedStepDown stepDown(rCtx->dsp);
  GLboolean  ret = rCtx->dsp->curr->glIsNameAMD(identifier, name);
  return ret;
}

static void REGAL_CALL debug_glDeleteNamesAMD(GLenum identifier, GLuint num, const GLuint *names)
{
  RegalContext * rCtx = GET_REGAL_CONTEXT();
  DispatchStateScopedStepDown stepDown(rCtx->dsp);
  rCtx->dsp->curr->glDeleteNamesAMD(identifier, num, names);
}

static void REGAL_CALL debug_glGenNamesAMD(GLenum identifier, GLuint num, GLuint *names)
{
  RegalContext * rCtx = GET_REGAL_CONTEXT();
  DispatchStateScopedStepDown stepDown(rCtx->dsp);
  rCtx->dsp->curr->glGenNamesAMD(identifier, num, names);
}

// GL_AMD_sample_positions

static void REGAL_CALL debug_glSetMultisamplefvAMD(GLenum pname, GLuint index, const GLfloat *val)
{
  RegalContext * rCtx = GET_REGAL_CONTEXT();
  DispatchStateScopedStepDown stepDown(rCtx->dsp);
  rCtx->dsp->curr->glSetMultisamplefvAMD(pname, index, val);
}

// GL_AMD_stencil_operation_extended

static void REGAL_CALL debug_glStencilOpValueAMD(GLenum face, GLuint value)
{
  RegalContext * rCtx = GET_REGAL_CONTEXT();
  DispatchStateScopedStepDown stepDown(rCtx->dsp);
  rCtx->dsp->curr->glStencilOpValueAMD(face, value);
}

// GL_ARB_base_instance

static void REGAL_CALL debug_glDrawArraysInstancedBaseInstance(GLenum mode, GLint first, GLsizei count, GLsizei primcount, GLuint baseinstance)
{
  RegalContext * rCtx = GET_REGAL_CONTEXT();
  DispatchStateScopedStepDown stepDown(rCtx->dsp);
  rCtx->dsp->curr->glDrawArraysInstancedBaseInstance(mode, first, count, primcount, baseinstance);
}

static void REGAL_CALL debug_glDrawElementsInstancedBaseInstance(GLenum mode, GLsizei count, GLenum type, const GLvoid *indices, GLsizei primcount, GLuint baseinstance)
{
  RegalContext * rCtx = GET_REGAL_CONTEXT();
  DispatchStateScopedStepDown stepDown(rCtx->dsp);
  rCtx->dsp->curr->glDrawElementsInstancedBaseInstance(mode, count, type, indices, primcount, baseinstance);
}

static void REGAL_CALL debug_glDrawElementsInstancedBaseVertexBaseInstance(GLenum mode, GLsizei count, GLenum type, const GLvoid *indices, GLsizei primcount, GLint basevertex, GLuint baseinstance)
{
  RegalContext * rCtx = GET_REGAL_CONTEXT();
  DispatchStateScopedStepDown stepDown(rCtx->dsp);
  rCtx->dsp->curr->glDrawElementsInstancedBaseVertexBaseInstance(mode, count, type, indices, primcount, basevertex, baseinstance);
}

// GL_ARB_cl_event

static GLsync REGAL_CALL debug_glCreateSyncFromCLeventARB(cl_context context, cl_event event, GLbitfield flags)
{
  RegalContext * rCtx = GET_REGAL_CONTEXT();
  DispatchStateScopedStepDown stepDown(rCtx->dsp);
  GLsync  ret = rCtx->dsp->curr->glCreateSyncFromCLeventARB(context, event, flags);
  return ret;
}

// GL_ARB_internalformat_query

static void REGAL_CALL debug_glGetInternalformativ(GLenum target, GLenum internalformat, GLenum pname, GLsizei bufSize, GLint *params)
{
  RegalContext * rCtx = GET_REGAL_CONTEXT();
  DispatchStateScopedStepDown stepDown(rCtx->dsp);
  rCtx->dsp->curr->glGetInternalformativ(target, internalformat, pname, bufSize, params);
}

// GL_ARB_texture_storage

static void REGAL_CALL debug_glTexStorage1D(GLenum target, GLsizei levels, GLenum internalformat, GLsizei width)
{
  RegalContext * rCtx = GET_REGAL_CONTEXT();
  DispatchStateScopedStepDown stepDown(rCtx->dsp);
  rCtx->dsp->curr->glTexStorage1D(target, levels, internalformat, width);
}

static void REGAL_CALL debug_glTexStorage2D(GLenum target, GLsizei levels, GLenum internalformat, GLsizei width, GLsizei height)
{
  RegalContext * rCtx = GET_REGAL_CONTEXT();
  DispatchStateScopedStepDown stepDown(rCtx->dsp);
  rCtx->dsp->curr->glTexStorage2D(target, levels, internalformat, width, height);
}

static void REGAL_CALL debug_glTexStorage3D(GLenum target, GLsizei levels, GLenum internalformat, GLsizei width, GLsizei height, GLsizei depth)
{
  RegalContext * rCtx = GET_REGAL_CONTEXT();
  DispatchStateScopedStepDown stepDown(rCtx->dsp);
  rCtx->dsp->curr->glTexStorage3D(target, levels, internalformat, width, height, depth);
}

static void REGAL_CALL debug_glTextureStorage1DEXT(GLuint texture, GLenum target, GLsizei levels, GLenum internalformat, GLsizei width)
{
  RegalContext * rCtx = GET_REGAL_CONTEXT();
  DispatchStateScopedStepDown stepDown(rCtx->dsp);
  rCtx->dsp->curr->glTextureStorage1DEXT(texture, target, levels, internalformat, width);
}

static void REGAL_CALL debug_glTextureStorage2DEXT(GLuint texture, GLenum target, GLsizei levels, GLenum internalformat, GLsizei width, GLsizei height)
{
  RegalContext * rCtx = GET_REGAL_CONTEXT();
  DispatchStateScopedStepDown stepDown(rCtx->dsp);
  rCtx->dsp->curr->glTextureStorage2DEXT(texture, target, levels, internalformat, width, height);
}

static void REGAL_CALL debug_glTextureStorage3DEXT(GLuint texture, GLenum target, GLsizei levels, GLenum internalformat, GLsizei width, GLsizei height, GLsizei depth)
{
  RegalContext * rCtx = GET_REGAL_CONTEXT();
  DispatchStateScopedStepDown stepDown(rCtx->dsp);
  rCtx->dsp->curr->glTextureStorage3DEXT(texture, target, levels, internalformat, width, height, depth);
}

// GL_ARB_transform_feedback_instanced

static void REGAL_CALL debug_glDrawTransformFeedbackInstanced(GLenum mode, GLuint id, GLsizei primcount)
{
  RegalContext * rCtx = GET_REGAL_CONTEXT();
  DispatchStateScopedStepDown stepDown(rCtx->dsp);
  rCtx->dsp->curr->glDrawTransformFeedbackInstanced(mode, id, primcount);
}

static void REGAL_CALL debug_glDrawTransformFeedbackStreamInstanced(GLenum mode, GLuint id, GLuint stream, GLsizei primcount)
{
  RegalContext * rCtx = GET_REGAL_CONTEXT();
  DispatchStateScopedStepDown stepDown(rCtx->dsp);
  rCtx->dsp->curr->glDrawTransformFeedbackStreamInstanced(mode, id, stream, primcount);
}

// GL_EXT_x11_sync_object

static GLsync REGAL_CALL debug_glImportSyncEXT(GLenum external_sync_type, GLintptr external_sync, GLbitfield flags)
{
  RegalContext * rCtx = GET_REGAL_CONTEXT();
  DispatchStateScopedStepDown stepDown(rCtx->dsp);
  GLsync  ret = rCtx->dsp->curr->glImportSyncEXT(external_sync_type, external_sync, flags);
  return ret;
}

// GL_INTEL_texture_scissor

static void REGAL_CALL debug_glTexScissorFuncINTEL(GLenum target, GLenum lfunc, GLenum hfunc)
{
  RegalContext * rCtx = GET_REGAL_CONTEXT();
  DispatchStateScopedStepDown stepDown(rCtx->dsp);
  rCtx->dsp->curr->glTexScissorFuncINTEL(target, lfunc, hfunc);
}

static void REGAL_CALL debug_glTexScissorINTEL(GLenum target, GLclampf tlow, GLclampf thigh)
{
  RegalContext * rCtx = GET_REGAL_CONTEXT();
  DispatchStateScopedStepDown stepDown(rCtx->dsp);
  rCtx->dsp->curr->glTexScissorINTEL(target, tlow, thigh);
}

// GL_NV_bindless_texture

static GLboolean REGAL_CALL debug_glIsImageHandleResidentNV(GLuint64 handle)
{
  RegalContext * rCtx = GET_REGAL_CONTEXT();
  DispatchStateScopedStepDown stepDown(rCtx->dsp);
  GLboolean  ret = rCtx->dsp->curr->glIsImageHandleResidentNV(handle);
  return ret;
}

static GLboolean REGAL_CALL debug_glIsTextureHandleResidentNV(GLuint64 handle)
{
  RegalContext * rCtx = GET_REGAL_CONTEXT();
  DispatchStateScopedStepDown stepDown(rCtx->dsp);
  GLboolean  ret = rCtx->dsp->curr->glIsTextureHandleResidentNV(handle);
  return ret;
}

static GLuint64 REGAL_CALL debug_glGetImageHandleNV(GLuint texture, GLint level, GLboolean layered, GLint layer, GLenum format)
{
  RegalContext * rCtx = GET_REGAL_CONTEXT();
  DispatchStateScopedStepDown stepDown(rCtx->dsp);
  GLuint64  ret = rCtx->dsp->curr->glGetImageHandleNV(texture, level, layered, layer, format);
  return ret;
}

static GLuint64 REGAL_CALL debug_glGetTextureHandleNV(GLuint texture)
{
  RegalContext * rCtx = GET_REGAL_CONTEXT();
  DispatchStateScopedStepDown stepDown(rCtx->dsp);
  GLuint64  ret = rCtx->dsp->curr->glGetTextureHandleNV(texture);
  return ret;
}

static GLuint64 REGAL_CALL debug_glGetTextureSamplerHandleNV(GLuint texture, GLuint sampler)
{
  RegalContext * rCtx = GET_REGAL_CONTEXT();
  DispatchStateScopedStepDown stepDown(rCtx->dsp);
  GLuint64  ret = rCtx->dsp->curr->glGetTextureSamplerHandleNV(texture, sampler);
  return ret;
}

static void REGAL_CALL debug_glMakeImageHandleNonResidentNV(GLuint64 handle)
{
  RegalContext * rCtx = GET_REGAL_CONTEXT();
  DispatchStateScopedStepDown stepDown(rCtx->dsp);
  rCtx->dsp->curr->glMakeImageHandleNonResidentNV(handle);
}

static void REGAL_CALL debug_glMakeImageHandleResidentNV(GLuint64 handle, GLenum access)
{
  RegalContext * rCtx = GET_REGAL_CONTEXT();
  DispatchStateScopedStepDown stepDown(rCtx->dsp);
  rCtx->dsp->curr->glMakeImageHandleResidentNV(handle, access);
}

static void REGAL_CALL debug_glMakeTextureHandleNonResidentNV(GLuint64 handle)
{
  RegalContext * rCtx = GET_REGAL_CONTEXT();
  DispatchStateScopedStepDown stepDown(rCtx->dsp);
  rCtx->dsp->curr->glMakeTextureHandleNonResidentNV(handle);
}

static void REGAL_CALL debug_glMakeTextureHandleResidentNV(GLuint64 handle)
{
  RegalContext * rCtx = GET_REGAL_CONTEXT();
  DispatchStateScopedStepDown stepDown(rCtx->dsp);
  rCtx->dsp->curr->glMakeTextureHandleResidentNV(handle);
}

static void REGAL_CALL debug_glProgramUniformHandleui64NV(GLuint program, GLint location, GLuint64 value)
{
  RegalContext * rCtx = GET_REGAL_CONTEXT();
  DispatchStateScopedStepDown stepDown(rCtx->dsp);
  rCtx->dsp->curr->glProgramUniformHandleui64NV(program, location, value);
}

static void REGAL_CALL debug_glProgramUniformHandleui64vNV(GLuint program, GLint location, GLsizei count, const GLuint64 *values)
{
  RegalContext * rCtx = GET_REGAL_CONTEXT();
  DispatchStateScopedStepDown stepDown(rCtx->dsp);
  rCtx->dsp->curr->glProgramUniformHandleui64vNV(program, location, count, values);
}

static void REGAL_CALL debug_glUniformHandleui64NV(GLint location, GLuint64 value)
{
  RegalContext * rCtx = GET_REGAL_CONTEXT();
  DispatchStateScopedStepDown stepDown(rCtx->dsp);
  rCtx->dsp->curr->glUniformHandleui64NV(location, value);
}

static void REGAL_CALL debug_glUniformHandleui64vNV(GLint location, GLsizei count, const GLuint64 *value)
{
  RegalContext * rCtx = GET_REGAL_CONTEXT();
  DispatchStateScopedStepDown stepDown(rCtx->dsp);
  rCtx->dsp->curr->glUniformHandleui64vNV(location, count, value);
}

// GL_NV_texture_multisample

static void REGAL_CALL debug_glTexImage2DMultisampleCoverageNV(GLenum target, GLsizei coverageSamples, GLsizei colorSamples, GLint internalFormat, GLsizei width, GLsizei height, GLboolean fixedSampleLocations)
{
  RegalContext * rCtx = GET_REGAL_CONTEXT();
  DispatchStateScopedStepDown stepDown(rCtx->dsp);
  rCtx->dsp->curr->glTexImage2DMultisampleCoverageNV(target, coverageSamples, colorSamples, internalFormat, width, height, fixedSampleLocations);
}

static void REGAL_CALL debug_glTexImage3DMultisampleCoverageNV(GLenum target, GLsizei coverageSamples, GLsizei colorSamples, GLint internalFormat, GLsizei width, GLsizei height, GLsizei depth, GLboolean fixedSampleLocations)
{
  RegalContext * rCtx = GET_REGAL_CONTEXT();
  DispatchStateScopedStepDown stepDown(rCtx->dsp);
  rCtx->dsp->curr->glTexImage3DMultisampleCoverageNV(target, coverageSamples, colorSamples, internalFormat, width, height, depth, fixedSampleLocations);
}

static void REGAL_CALL debug_glTextureImage2DMultisampleCoverageNV(GLuint texture, GLenum target, GLsizei coverageSamples, GLsizei colorSamples, GLint internalFormat, GLsizei width, GLsizei height, GLboolean fixedSampleLocations)
{
  RegalContext * rCtx = GET_REGAL_CONTEXT();
  DispatchStateScopedStepDown stepDown(rCtx->dsp);
  rCtx->dsp->curr->glTextureImage2DMultisampleCoverageNV(texture, target, coverageSamples, colorSamples, internalFormat, width, height, fixedSampleLocations);
}

static void REGAL_CALL debug_glTextureImage2DMultisampleNV(GLuint texture, GLenum target, GLsizei samples, GLint internalFormat, GLsizei width, GLsizei height, GLboolean fixedSampleLocations)
{
  RegalContext * rCtx = GET_REGAL_CONTEXT();
  DispatchStateScopedStepDown stepDown(rCtx->dsp);
  rCtx->dsp->curr->glTextureImage2DMultisampleNV(texture, target, samples, internalFormat, width, height, fixedSampleLocations);
}

static void REGAL_CALL debug_glTextureImage3DMultisampleCoverageNV(GLuint texture, GLenum target, GLsizei coverageSamples, GLsizei colorSamples, GLint internalFormat, GLsizei width, GLsizei height, GLsizei depth, GLboolean fixedSampleLocations)
{
  RegalContext * rCtx = GET_REGAL_CONTEXT();
  DispatchStateScopedStepDown stepDown(rCtx->dsp);
  rCtx->dsp->curr->glTextureImage3DMultisampleCoverageNV(texture, target, coverageSamples, colorSamples, internalFormat, width, height, depth, fixedSampleLocations);
}

static void REGAL_CALL debug_glTextureImage3DMultisampleNV(GLuint texture, GLenum target, GLsizei samples, GLint internalFormat, GLsizei width, GLsizei height, GLsizei depth, GLboolean fixedSampleLocations)
{
  RegalContext * rCtx = GET_REGAL_CONTEXT();
  DispatchStateScopedStepDown stepDown(rCtx->dsp);
  rCtx->dsp->curr->glTextureImage3DMultisampleNV(texture, target, samples, internalFormat, width, height, depth, fixedSampleLocations);
}

// GL_SUN_read_video_pixels

static void REGAL_CALL debug_glReadVideoPixelsSUN(GLint x, GLint y, GLsizei width, GLsizei height, GLenum format, GLenum type, GLvoid *pixels)
{
  RegalContext * rCtx = GET_REGAL_CONTEXT();
  DispatchStateScopedStepDown stepDown(rCtx->dsp);
  rCtx->dsp->curr->glReadVideoPixelsSUN(x, y, width, height, format, type, pixels);
}

// GL_EXT_fragment_lighting

static void REGAL_CALL debug_glFragmentColorMaterialEXT(GLenum face, GLenum mode)
{
  RegalContext * rCtx = GET_REGAL_CONTEXT();
  DispatchStateScopedStepDown stepDown(rCtx->dsp);
  rCtx->dsp->curr->glFragmentColorMaterialEXT(face, mode);
}

static void REGAL_CALL debug_glFragmentLightModelfEXT(GLenum pname, GLfloat param)
{
  RegalContext * rCtx = GET_REGAL_CONTEXT();
  DispatchStateScopedStepDown stepDown(rCtx->dsp);
  rCtx->dsp->curr->glFragmentLightModelfEXT(pname, param);
}

static void REGAL_CALL debug_glFragmentLightModelfvEXT(GLenum pname, GLfloat *params)
{
  RegalContext * rCtx = GET_REGAL_CONTEXT();
  DispatchStateScopedStepDown stepDown(rCtx->dsp);
  rCtx->dsp->curr->glFragmentLightModelfvEXT(pname, params);
}

static void REGAL_CALL debug_glFragmentLightModeliEXT(GLenum pname, GLint param)
{
  RegalContext * rCtx = GET_REGAL_CONTEXT();
  DispatchStateScopedStepDown stepDown(rCtx->dsp);
  rCtx->dsp->curr->glFragmentLightModeliEXT(pname, param);
}

static void REGAL_CALL debug_glFragmentLightModelivEXT(GLenum pname, GLint *params)
{
  RegalContext * rCtx = GET_REGAL_CONTEXT();
  DispatchStateScopedStepDown stepDown(rCtx->dsp);
  rCtx->dsp->curr->glFragmentLightModelivEXT(pname, params);
}

static void REGAL_CALL debug_glFragmentLightfEXT(GLenum light, GLenum pname, GLfloat param)
{
  RegalContext * rCtx = GET_REGAL_CONTEXT();
  DispatchStateScopedStepDown stepDown(rCtx->dsp);
  rCtx->dsp->curr->glFragmentLightfEXT(light, pname, param);
}

static void REGAL_CALL debug_glFragmentLightfvEXT(GLenum light, GLenum pname, GLfloat *params)
{
  RegalContext * rCtx = GET_REGAL_CONTEXT();
  DispatchStateScopedStepDown stepDown(rCtx->dsp);
  rCtx->dsp->curr->glFragmentLightfvEXT(light, pname, params);
}

static void REGAL_CALL debug_glFragmentLightiEXT(GLenum light, GLenum pname, GLint param)
{
  RegalContext * rCtx = GET_REGAL_CONTEXT();
  DispatchStateScopedStepDown stepDown(rCtx->dsp);
  rCtx->dsp->curr->glFragmentLightiEXT(light, pname, param);
}

static void REGAL_CALL debug_glFragmentLightivEXT(GLenum light, GLenum pname, GLint *params)
{
  RegalContext * rCtx = GET_REGAL_CONTEXT();
  DispatchStateScopedStepDown stepDown(rCtx->dsp);
  rCtx->dsp->curr->glFragmentLightivEXT(light, pname, params);
}

static void REGAL_CALL debug_glFragmentMaterialfEXT(GLenum face, GLenum pname, const GLfloat param)
{
  RegalContext * rCtx = GET_REGAL_CONTEXT();
  DispatchStateScopedStepDown stepDown(rCtx->dsp);
  rCtx->dsp->curr->glFragmentMaterialfEXT(face, pname, param);
}

static void REGAL_CALL debug_glFragmentMaterialfvEXT(GLenum face, GLenum pname, const GLfloat *params)
{
  RegalContext * rCtx = GET_REGAL_CONTEXT();
  DispatchStateScopedStepDown stepDown(rCtx->dsp);
  rCtx->dsp->curr->glFragmentMaterialfvEXT(face, pname, params);
}

static void REGAL_CALL debug_glFragmentMaterialiEXT(GLenum face, GLenum pname, const GLint param)
{
  RegalContext * rCtx = GET_REGAL_CONTEXT();
  DispatchStateScopedStepDown stepDown(rCtx->dsp);
  rCtx->dsp->curr->glFragmentMaterialiEXT(face, pname, param);
}

static void REGAL_CALL debug_glFragmentMaterialivEXT(GLenum face, GLenum pname, const GLint *params)
{
  RegalContext * rCtx = GET_REGAL_CONTEXT();
  DispatchStateScopedStepDown stepDown(rCtx->dsp);
  rCtx->dsp->curr->glFragmentMaterialivEXT(face, pname, params);
}

static void REGAL_CALL debug_glGetFragmentLightfvEXT(GLenum light, GLenum pname, GLfloat *params)
{
  RegalContext * rCtx = GET_REGAL_CONTEXT();
  DispatchStateScopedStepDown stepDown(rCtx->dsp);
  rCtx->dsp->curr->glGetFragmentLightfvEXT(light, pname, params);
}

static void REGAL_CALL debug_glGetFragmentLightivEXT(GLenum light, GLenum pname, GLint *params)
{
  RegalContext * rCtx = GET_REGAL_CONTEXT();
  DispatchStateScopedStepDown stepDown(rCtx->dsp);
  rCtx->dsp->curr->glGetFragmentLightivEXT(light, pname, params);
}

static void REGAL_CALL debug_glGetFragmentMaterialfvEXT(GLenum face, GLenum pname, const GLfloat *params)
{
  RegalContext * rCtx = GET_REGAL_CONTEXT();
  DispatchStateScopedStepDown stepDown(rCtx->dsp);
  rCtx->dsp->curr->glGetFragmentMaterialfvEXT(face, pname, params);
}

static void REGAL_CALL debug_glGetFragmentMaterialivEXT(GLenum face, GLenum pname, const GLint *params)
{
  RegalContext * rCtx = GET_REGAL_CONTEXT();
  DispatchStateScopedStepDown stepDown(rCtx->dsp);
  rCtx->dsp->curr->glGetFragmentMaterialivEXT(face, pname, params);
}

static void REGAL_CALL debug_glLightEnviEXT(GLenum pname, GLint param)
{
  RegalContext * rCtx = GET_REGAL_CONTEXT();
  DispatchStateScopedStepDown stepDown(rCtx->dsp);
  rCtx->dsp->curr->glLightEnviEXT(pname, param);
}

// GL_EXT_debug_marker

static void REGAL_CALL debug_glInsertEventMarkerEXT(GLsizei length, const GLchar *marker)
{
  RegalContext * rCtx = GET_REGAL_CONTEXT();
  DispatchStateScopedStepDown stepDown(rCtx->dsp);
  rCtx->dsp->curr->glInsertEventMarkerEXT(length, marker);
}

static void REGAL_CALL debug_glPushGroupMarkerEXT(GLsizei length, const GLchar *marker)
{
  RegalContext * rCtx = GET_REGAL_CONTEXT();
  DispatchStateScopedStepDown stepDown(rCtx->dsp);
  rCtx->dsp->curr->glPushGroupMarkerEXT(length, marker);
}

static void REGAL_CALL debug_glPopGroupMarkerEXT(void)
{
  RegalContext * rCtx = GET_REGAL_CONTEXT();
  DispatchStateScopedStepDown stepDown(rCtx->dsp);
  rCtx->dsp->curr->glPopGroupMarkerEXT();
}

// GL_KTX_buffer_region

static GLuint REGAL_CALL debug_glBufferRegionEnabledEXT(void)
{
  RegalContext * rCtx = GET_REGAL_CONTEXT();
  DispatchStateScopedStepDown stepDown(rCtx->dsp);
  GLuint  ret = rCtx->dsp->curr->glBufferRegionEnabledEXT();
  return ret;
}

static GLuint REGAL_CALL debug_glNewBufferRegionEXT(GLenum region)
{
  RegalContext * rCtx = GET_REGAL_CONTEXT();
  DispatchStateScopedStepDown stepDown(rCtx->dsp);
  GLuint  ret = rCtx->dsp->curr->glNewBufferRegionEXT(region);
  return ret;
}

static void REGAL_CALL debug_glDeleteBufferRegionEXT(GLenum region)
{
  RegalContext * rCtx = GET_REGAL_CONTEXT();
  DispatchStateScopedStepDown stepDown(rCtx->dsp);
  rCtx->dsp->curr->glDeleteBufferRegionEXT(region);
}

static void REGAL_CALL debug_glReadBufferRegionEXT(GLuint region, GLint x, GLint y, GLsizei width, GLsizei height)
{
  RegalContext * rCtx = GET_REGAL_CONTEXT();
  DispatchStateScopedStepDown stepDown(rCtx->dsp);
  rCtx->dsp->curr->glReadBufferRegionEXT(region, x, y, width, height);
}

static void REGAL_CALL debug_glDrawBufferRegionEXT(GLuint region, GLint x, GLint y, GLsizei width, GLsizei height, GLint xDest, GLint yDest)
{
  RegalContext * rCtx = GET_REGAL_CONTEXT();
  DispatchStateScopedStepDown stepDown(rCtx->dsp);
  rCtx->dsp->curr->glDrawBufferRegionEXT(region, x, y, width, height, xDest, yDest);
}

// GL_SGIX_fog_texture

static void REGAL_CALL debug_glTextureFogSGIX(GLenum pname)
{
  RegalContext * rCtx = GET_REGAL_CONTEXT();
  DispatchStateScopedStepDown stepDown(rCtx->dsp);
  rCtx->dsp->curr->glTextureFogSGIX(pname);
}

// GL_APPLE_flush_render

static void REGAL_CALL debug_glFlushRenderAPPLE(void)
{
  RegalContext * rCtx = GET_REGAL_CONTEXT();
  DispatchStateScopedStepDown stepDown(rCtx->dsp);
  rCtx->dsp->curr->glFlushRenderAPPLE();
}

static void REGAL_CALL debug_glFinishRenderAPPLE(void)
{
  RegalContext * rCtx = GET_REGAL_CONTEXT();
  DispatchStateScopedStepDown stepDown(rCtx->dsp);
  rCtx->dsp->curr->glFinishRenderAPPLE();
}

static void REGAL_CALL debug_glSwapAPPLE(void)
{
  RegalContext * rCtx = GET_REGAL_CONTEXT();
  DispatchStateScopedStepDown stepDown(rCtx->dsp);
  rCtx->dsp->curr->glSwapAPPLE();
}

// GL_WIN_swap_hint

static void REGAL_CALL debug_glAddSwapHintRectWIN(GLint x, GLint y, GLsizei width, GLsizei height)
{
  RegalContext * rCtx = GET_REGAL_CONTEXT();
  DispatchStateScopedStepDown stepDown(rCtx->dsp);
  rCtx->dsp->curr->glAddSwapHintRectWIN(x, y, width, height);
}

void InitDispatchTableDebug(DispatchTable &tbl)
{

  // GL_VERSION_1_0

  tbl.glNewList = debug_glNewList;
  tbl.glEndList = debug_glEndList;
  tbl.glCallList = debug_glCallList;
  tbl.glCallLists = debug_glCallLists;
  tbl.glDeleteLists = debug_glDeleteLists;
  tbl.glGenLists = debug_glGenLists;
  tbl.glListBase = debug_glListBase;
  tbl.glBegin = debug_glBegin;
  tbl.glBitmap = debug_glBitmap;
  tbl.glColor3b = debug_glColor3b;
  tbl.glColor3bv = debug_glColor3bv;
  tbl.glColor3d = debug_glColor3d;
  tbl.glColor3dv = debug_glColor3dv;
  tbl.glColor3f = debug_glColor3f;
  tbl.glColor3fv = debug_glColor3fv;
  tbl.glColor3i = debug_glColor3i;
  tbl.glColor3iv = debug_glColor3iv;
  tbl.glColor3s = debug_glColor3s;
  tbl.glColor3sv = debug_glColor3sv;
  tbl.glColor3ub = debug_glColor3ub;
  tbl.glColor3ubv = debug_glColor3ubv;
  tbl.glColor3ui = debug_glColor3ui;
  tbl.glColor3uiv = debug_glColor3uiv;
  tbl.glColor3us = debug_glColor3us;
  tbl.glColor3usv = debug_glColor3usv;
  tbl.glColor4b = debug_glColor4b;
  tbl.glColor4bv = debug_glColor4bv;
  tbl.glColor4d = debug_glColor4d;
  tbl.glColor4dv = debug_glColor4dv;
  tbl.glColor4f = debug_glColor4f;
  tbl.glColor4fv = debug_glColor4fv;
  tbl.glColor4i = debug_glColor4i;
  tbl.glColor4iv = debug_glColor4iv;
  tbl.glColor4s = debug_glColor4s;
  tbl.glColor4sv = debug_glColor4sv;
  tbl.glColor4ub = debug_glColor4ub;
  tbl.glColor4ubv = debug_glColor4ubv;
  tbl.glColor4ui = debug_glColor4ui;
  tbl.glColor4uiv = debug_glColor4uiv;
  tbl.glColor4us = debug_glColor4us;
  tbl.glColor4usv = debug_glColor4usv;
  tbl.glEdgeFlag = debug_glEdgeFlag;
  tbl.glEdgeFlagv = debug_glEdgeFlagv;
  tbl.glEnd = debug_glEnd;
  tbl.glIndexd = debug_glIndexd;
  tbl.glIndexdv = debug_glIndexdv;
  tbl.glIndexf = debug_glIndexf;
  tbl.glIndexfv = debug_glIndexfv;
  tbl.glIndexi = debug_glIndexi;
  tbl.glIndexiv = debug_glIndexiv;
  tbl.glIndexs = debug_glIndexs;
  tbl.glIndexsv = debug_glIndexsv;
  tbl.glNormal3b = debug_glNormal3b;
  tbl.glNormal3bv = debug_glNormal3bv;
  tbl.glNormal3d = debug_glNormal3d;
  tbl.glNormal3dv = debug_glNormal3dv;
  tbl.glNormal3f = debug_glNormal3f;
  tbl.glNormal3fv = debug_glNormal3fv;
  tbl.glNormal3i = debug_glNormal3i;
  tbl.glNormal3iv = debug_glNormal3iv;
  tbl.glNormal3s = debug_glNormal3s;
  tbl.glNormal3sv = debug_glNormal3sv;
  tbl.glRasterPos2d = debug_glRasterPos2d;
  tbl.glRasterPos2dv = debug_glRasterPos2dv;
  tbl.glRasterPos2f = debug_glRasterPos2f;
  tbl.glRasterPos2fv = debug_glRasterPos2fv;
  tbl.glRasterPos2i = debug_glRasterPos2i;
  tbl.glRasterPos2iv = debug_glRasterPos2iv;
  tbl.glRasterPos2s = debug_glRasterPos2s;
  tbl.glRasterPos2sv = debug_glRasterPos2sv;
  tbl.glRasterPos3d = debug_glRasterPos3d;
  tbl.glRasterPos3dv = debug_glRasterPos3dv;
  tbl.glRasterPos3f = debug_glRasterPos3f;
  tbl.glRasterPos3fv = debug_glRasterPos3fv;
  tbl.glRasterPos3i = debug_glRasterPos3i;
  tbl.glRasterPos3iv = debug_glRasterPos3iv;
  tbl.glRasterPos3s = debug_glRasterPos3s;
  tbl.glRasterPos3sv = debug_glRasterPos3sv;
  tbl.glRasterPos4d = debug_glRasterPos4d;
  tbl.glRasterPos4dv = debug_glRasterPos4dv;
  tbl.glRasterPos4f = debug_glRasterPos4f;
  tbl.glRasterPos4fv = debug_glRasterPos4fv;
  tbl.glRasterPos4i = debug_glRasterPos4i;
  tbl.glRasterPos4iv = debug_glRasterPos4iv;
  tbl.glRasterPos4s = debug_glRasterPos4s;
  tbl.glRasterPos4sv = debug_glRasterPos4sv;
  tbl.glRectd = debug_glRectd;
  tbl.glRectdv = debug_glRectdv;
  tbl.glRectf = debug_glRectf;
  tbl.glRectfv = debug_glRectfv;
  tbl.glRecti = debug_glRecti;
  tbl.glRectiv = debug_glRectiv;
  tbl.glRects = debug_glRects;
  tbl.glRectsv = debug_glRectsv;
  tbl.glTexCoord1d = debug_glTexCoord1d;
  tbl.glTexCoord1dv = debug_glTexCoord1dv;
  tbl.glTexCoord1f = debug_glTexCoord1f;
  tbl.glTexCoord1fv = debug_glTexCoord1fv;
  tbl.glTexCoord1i = debug_glTexCoord1i;
  tbl.glTexCoord1iv = debug_glTexCoord1iv;
  tbl.glTexCoord1s = debug_glTexCoord1s;
  tbl.glTexCoord1sv = debug_glTexCoord1sv;
  tbl.glTexCoord2d = debug_glTexCoord2d;
  tbl.glTexCoord2dv = debug_glTexCoord2dv;
  tbl.glTexCoord2f = debug_glTexCoord2f;
  tbl.glTexCoord2fv = debug_glTexCoord2fv;
  tbl.glTexCoord2i = debug_glTexCoord2i;
  tbl.glTexCoord2iv = debug_glTexCoord2iv;
  tbl.glTexCoord2s = debug_glTexCoord2s;
  tbl.glTexCoord2sv = debug_glTexCoord2sv;
  tbl.glTexCoord3d = debug_glTexCoord3d;
  tbl.glTexCoord3dv = debug_glTexCoord3dv;
  tbl.glTexCoord3f = debug_glTexCoord3f;
  tbl.glTexCoord3fv = debug_glTexCoord3fv;
  tbl.glTexCoord3i = debug_glTexCoord3i;
  tbl.glTexCoord3iv = debug_glTexCoord3iv;
  tbl.glTexCoord3s = debug_glTexCoord3s;
  tbl.glTexCoord3sv = debug_glTexCoord3sv;
  tbl.glTexCoord4d = debug_glTexCoord4d;
  tbl.glTexCoord4dv = debug_glTexCoord4dv;
  tbl.glTexCoord4f = debug_glTexCoord4f;
  tbl.glTexCoord4fv = debug_glTexCoord4fv;
  tbl.glTexCoord4i = debug_glTexCoord4i;
  tbl.glTexCoord4iv = debug_glTexCoord4iv;
  tbl.glTexCoord4s = debug_glTexCoord4s;
  tbl.glTexCoord4sv = debug_glTexCoord4sv;
  tbl.glVertex2d = debug_glVertex2d;
  tbl.glVertex2dv = debug_glVertex2dv;
  tbl.glVertex2f = debug_glVertex2f;
  tbl.glVertex2fv = debug_glVertex2fv;
  tbl.glVertex2i = debug_glVertex2i;
  tbl.glVertex2iv = debug_glVertex2iv;
  tbl.glVertex2s = debug_glVertex2s;
  tbl.glVertex2sv = debug_glVertex2sv;
  tbl.glVertex3d = debug_glVertex3d;
  tbl.glVertex3dv = debug_glVertex3dv;
  tbl.glVertex3f = debug_glVertex3f;
  tbl.glVertex3fv = debug_glVertex3fv;
  tbl.glVertex3i = debug_glVertex3i;
  tbl.glVertex3iv = debug_glVertex3iv;
  tbl.glVertex3s = debug_glVertex3s;
  tbl.glVertex3sv = debug_glVertex3sv;
  tbl.glVertex4d = debug_glVertex4d;
  tbl.glVertex4dv = debug_glVertex4dv;
  tbl.glVertex4f = debug_glVertex4f;
  tbl.glVertex4fv = debug_glVertex4fv;
  tbl.glVertex4i = debug_glVertex4i;
  tbl.glVertex4iv = debug_glVertex4iv;
  tbl.glVertex4s = debug_glVertex4s;
  tbl.glVertex4sv = debug_glVertex4sv;
  tbl.glClipPlane = debug_glClipPlane;
  tbl.glColorMaterial = debug_glColorMaterial;
  tbl.glCullFace = debug_glCullFace;
  tbl.glFogf = debug_glFogf;
  tbl.glFogfv = debug_glFogfv;
  tbl.glFogi = debug_glFogi;
  tbl.glFogiv = debug_glFogiv;
  tbl.glFrontFace = debug_glFrontFace;
  tbl.glHint = debug_glHint;
  tbl.glLightf = debug_glLightf;
  tbl.glLightfv = debug_glLightfv;
  tbl.glLighti = debug_glLighti;
  tbl.glLightiv = debug_glLightiv;
  tbl.glLightModelf = debug_glLightModelf;
  tbl.glLightModelfv = debug_glLightModelfv;
  tbl.glLightModeli = debug_glLightModeli;
  tbl.glLightModeliv = debug_glLightModeliv;
  tbl.glLineStipple = debug_glLineStipple;
  tbl.glLineWidth = debug_glLineWidth;
  tbl.glMaterialf = debug_glMaterialf;
  tbl.glMaterialfv = debug_glMaterialfv;
  tbl.glMateriali = debug_glMateriali;
  tbl.glMaterialiv = debug_glMaterialiv;
  tbl.glPointSize = debug_glPointSize;
  tbl.glPolygonMode = debug_glPolygonMode;
  tbl.glPolygonStipple = debug_glPolygonStipple;
  tbl.glScissor = debug_glScissor;
  tbl.glShadeModel = debug_glShadeModel;
  tbl.glTexParameterf = debug_glTexParameterf;
  tbl.glTexParameterfv = debug_glTexParameterfv;
  tbl.glTexParameteri = debug_glTexParameteri;
  tbl.glTexParameteriv = debug_glTexParameteriv;
  tbl.glTexImage1D = debug_glTexImage1D;
  tbl.glTexImage2D = debug_glTexImage2D;
  tbl.glTexEnvf = debug_glTexEnvf;
  tbl.glTexEnvfv = debug_glTexEnvfv;
  tbl.glTexEnvi = debug_glTexEnvi;
  tbl.glTexEnviv = debug_glTexEnviv;
  tbl.glTexGend = debug_glTexGend;
  tbl.glTexGendv = debug_glTexGendv;
  tbl.glTexGenf = debug_glTexGenf;
  tbl.glTexGenfv = debug_glTexGenfv;
  tbl.glTexGeni = debug_glTexGeni;
  tbl.glTexGeniv = debug_glTexGeniv;
  tbl.glFeedbackBuffer = debug_glFeedbackBuffer;
  tbl.glSelectBuffer = debug_glSelectBuffer;
  tbl.glRenderMode = debug_glRenderMode;
  tbl.glInitNames = debug_glInitNames;
  tbl.glLoadName = debug_glLoadName;
  tbl.glPassThrough = debug_glPassThrough;
  tbl.glPopName = debug_glPopName;
  tbl.glPushName = debug_glPushName;
  tbl.glDrawBuffer = debug_glDrawBuffer;
  tbl.glClear = debug_glClear;
  tbl.glClearAccum = debug_glClearAccum;
  tbl.glClearColor = debug_glClearColor;
  tbl.glClearDepth = debug_glClearDepth;
  tbl.glClearIndex = debug_glClearIndex;
  tbl.glClearStencil = debug_glClearStencil;
  tbl.glColorMask = debug_glColorMask;
  tbl.glDepthMask = debug_glDepthMask;
  tbl.glIndexMask = debug_glIndexMask;
  tbl.glStencilMask = debug_glStencilMask;
  tbl.glAccum = debug_glAccum;
  tbl.glDisable = debug_glDisable;
  tbl.glEnable = debug_glEnable;
  tbl.glFinish = debug_glFinish;
  tbl.glFlush = debug_glFlush;
  tbl.glPopAttrib = debug_glPopAttrib;
  tbl.glPushAttrib = debug_glPushAttrib;
  tbl.glMap1d = debug_glMap1d;
  tbl.glMap1f = debug_glMap1f;
  tbl.glMap2d = debug_glMap2d;
  tbl.glMap2f = debug_glMap2f;
  tbl.glMapGrid1d = debug_glMapGrid1d;
  tbl.glMapGrid1f = debug_glMapGrid1f;
  tbl.glMapGrid2d = debug_glMapGrid2d;
  tbl.glMapGrid2f = debug_glMapGrid2f;
  tbl.glEvalCoord1d = debug_glEvalCoord1d;
  tbl.glEvalCoord1dv = debug_glEvalCoord1dv;
  tbl.glEvalCoord1f = debug_glEvalCoord1f;
  tbl.glEvalCoord1fv = debug_glEvalCoord1fv;
  tbl.glEvalCoord2d = debug_glEvalCoord2d;
  tbl.glEvalCoord2dv = debug_glEvalCoord2dv;
  tbl.glEvalCoord2f = debug_glEvalCoord2f;
  tbl.glEvalCoord2fv = debug_glEvalCoord2fv;
  tbl.glEvalMesh1 = debug_glEvalMesh1;
  tbl.glEvalMesh2 = debug_glEvalMesh2;
  tbl.glEvalPoint1 = debug_glEvalPoint1;
  tbl.glEvalPoint2 = debug_glEvalPoint2;
  tbl.glAlphaFunc = debug_glAlphaFunc;
  tbl.glBlendFunc = debug_glBlendFunc;
  tbl.glDepthFunc = debug_glDepthFunc;
  tbl.glStencilFunc = debug_glStencilFunc;
  tbl.glLogicOp = debug_glLogicOp;
  tbl.glStencilOp = debug_glStencilOp;
  tbl.glPixelZoom = debug_glPixelZoom;
  tbl.glPixelTransferf = debug_glPixelTransferf;
  tbl.glPixelTransferi = debug_glPixelTransferi;
  tbl.glPixelStoref = debug_glPixelStoref;
  tbl.glPixelStorei = debug_glPixelStorei;
  tbl.glPixelMapfv = debug_glPixelMapfv;
  tbl.glPixelMapuiv = debug_glPixelMapuiv;
  tbl.glPixelMapusv = debug_glPixelMapusv;
  tbl.glReadBuffer = debug_glReadBuffer;
  tbl.glCopyPixels = debug_glCopyPixels;
  tbl.glReadPixels = debug_glReadPixels;
  tbl.glDrawPixels = debug_glDrawPixels;
  tbl.glGetBooleanv = debug_glGetBooleanv;
  tbl.glGetDoublev = debug_glGetDoublev;
  tbl.glGetFloatv = debug_glGetFloatv;
  tbl.glGetIntegerv = debug_glGetIntegerv;
  tbl.glGetClipPlane = debug_glGetClipPlane;
  tbl.glGetError = debug_glGetError;
  tbl.glGetLightfv = debug_glGetLightfv;
  tbl.glGetLightiv = debug_glGetLightiv;
  tbl.glGetMapdv = debug_glGetMapdv;
  tbl.glGetMapfv = debug_glGetMapfv;
  tbl.glGetMapiv = debug_glGetMapiv;
  tbl.glGetMaterialfv = debug_glGetMaterialfv;
  tbl.glGetMaterialiv = debug_glGetMaterialiv;
  tbl.glGetPixelMapfv = debug_glGetPixelMapfv;
  tbl.glGetPixelMapuiv = debug_glGetPixelMapuiv;
  tbl.glGetPixelMapusv = debug_glGetPixelMapusv;
  tbl.glGetPolygonStipple = debug_glGetPolygonStipple;
  tbl.glGetString = debug_glGetString;
  tbl.glGetTexEnvfv = debug_glGetTexEnvfv;
  tbl.glGetTexEnviv = debug_glGetTexEnviv;
  tbl.glGetTexGendv = debug_glGetTexGendv;
  tbl.glGetTexGenfv = debug_glGetTexGenfv;
  tbl.glGetTexGeniv = debug_glGetTexGeniv;
  tbl.glGetTexImage = debug_glGetTexImage;
  tbl.glGetTexParameterfv = debug_glGetTexParameterfv;
  tbl.glGetTexParameteriv = debug_glGetTexParameteriv;
  tbl.glGetTexLevelParameterfv = debug_glGetTexLevelParameterfv;
  tbl.glGetTexLevelParameteriv = debug_glGetTexLevelParameteriv;
  tbl.glIsEnabled = debug_glIsEnabled;
  tbl.glIsList = debug_glIsList;
  tbl.glDepthRange = debug_glDepthRange;
  tbl.glFrustum = debug_glFrustum;
  tbl.glLoadIdentity = debug_glLoadIdentity;
  tbl.glLoadMatrixd = debug_glLoadMatrixd;
  tbl.glLoadMatrixf = debug_glLoadMatrixf;
  tbl.glMatrixMode = debug_glMatrixMode;
  tbl.glMultMatrixd = debug_glMultMatrixd;
  tbl.glMultMatrixf = debug_glMultMatrixf;
  tbl.glOrtho = debug_glOrtho;
  tbl.glPopMatrix = debug_glPopMatrix;
  tbl.glPushMatrix = debug_glPushMatrix;
  tbl.glRotated = debug_glRotated;
  tbl.glRotatef = debug_glRotatef;
  tbl.glScaled = debug_glScaled;
  tbl.glScalef = debug_glScalef;
  tbl.glTranslated = debug_glTranslated;
  tbl.glTranslatef = debug_glTranslatef;
  tbl.glViewport = debug_glViewport;

  // GL_VERSION_1_1

  tbl.glArrayElement = debug_glArrayElement;
  tbl.glDrawArrays = debug_glDrawArrays;
  tbl.glDrawElements = debug_glDrawElements;
  tbl.glInterleavedArrays = debug_glInterleavedArrays;
  tbl.glDisableClientState = debug_glDisableClientState;
  tbl.glEnableClientState = debug_glEnableClientState;
  tbl.glGetPointerv = debug_glGetPointerv;
  tbl.glColorPointer = debug_glColorPointer;
  tbl.glEdgeFlagPointer = debug_glEdgeFlagPointer;
  tbl.glIndexPointer = debug_glIndexPointer;
  tbl.glNormalPointer = debug_glNormalPointer;
  tbl.glTexCoordPointer = debug_glTexCoordPointer;
  tbl.glVertexPointer = debug_glVertexPointer;
  tbl.glPolygonOffset = debug_glPolygonOffset;
  tbl.glCopyTexImage1D = debug_glCopyTexImage1D;
  tbl.glCopyTexImage2D = debug_glCopyTexImage2D;
  tbl.glCopyTexSubImage1D = debug_glCopyTexSubImage1D;
  tbl.glCopyTexSubImage2D = debug_glCopyTexSubImage2D;
  tbl.glTexSubImage1D = debug_glTexSubImage1D;
  tbl.glTexSubImage2D = debug_glTexSubImage2D;
  tbl.glAreTexturesResident = debug_glAreTexturesResident;
  tbl.glBindTexture = debug_glBindTexture;
  tbl.glDeleteTextures = debug_glDeleteTextures;
  tbl.glGenTextures = debug_glGenTextures;
  tbl.glIsTexture = debug_glIsTexture;
  tbl.glPrioritizeTextures = debug_glPrioritizeTextures;
  tbl.glIndexub = debug_glIndexub;
  tbl.glIndexubv = debug_glIndexubv;
  tbl.glPopClientAttrib = debug_glPopClientAttrib;
  tbl.glPushClientAttrib = debug_glPushClientAttrib;

  // GL_VERSION_1_2

  tbl.glBlendColor = debug_glBlendColor;
  tbl.glBlendEquation = debug_glBlendEquation;
  tbl.glDrawRangeElements = debug_glDrawRangeElements;
  tbl.glTexImage3D = debug_glTexImage3D;
  tbl.glTexSubImage3D = debug_glTexSubImage3D;
  tbl.glCopyTexSubImage3D = debug_glCopyTexSubImage3D;

  // GL_ARB_imaging

  tbl.glColorTable = debug_glColorTable;
  tbl.glColorTableParameterfv = debug_glColorTableParameterfv;
  tbl.glColorTableParameteriv = debug_glColorTableParameteriv;
  tbl.glCopyColorTable = debug_glCopyColorTable;
  tbl.glGetColorTable = debug_glGetColorTable;
  tbl.glGetColorTableParameterfv = debug_glGetColorTableParameterfv;
  tbl.glGetColorTableParameteriv = debug_glGetColorTableParameteriv;
  tbl.glColorSubTable = debug_glColorSubTable;
  tbl.glCopyColorSubTable = debug_glCopyColorSubTable;
  tbl.glConvolutionFilter1D = debug_glConvolutionFilter1D;
  tbl.glConvolutionFilter2D = debug_glConvolutionFilter2D;
  tbl.glConvolutionParameterf = debug_glConvolutionParameterf;
  tbl.glConvolutionParameterfv = debug_glConvolutionParameterfv;
  tbl.glConvolutionParameteri = debug_glConvolutionParameteri;
  tbl.glConvolutionParameteriv = debug_glConvolutionParameteriv;
  tbl.glCopyConvolutionFilter1D = debug_glCopyConvolutionFilter1D;
  tbl.glCopyConvolutionFilter2D = debug_glCopyConvolutionFilter2D;
  tbl.glGetConvolutionFilter = debug_glGetConvolutionFilter;
  tbl.glGetConvolutionParameterfv = debug_glGetConvolutionParameterfv;
  tbl.glGetConvolutionParameteriv = debug_glGetConvolutionParameteriv;
  tbl.glGetSeparableFilter = debug_glGetSeparableFilter;
  tbl.glSeparableFilter2D = debug_glSeparableFilter2D;
  tbl.glGetHistogram = debug_glGetHistogram;
  tbl.glGetHistogramParameterfv = debug_glGetHistogramParameterfv;
  tbl.glGetHistogramParameteriv = debug_glGetHistogramParameteriv;
  tbl.glGetMinmax = debug_glGetMinmax;
  tbl.glGetMinmaxParameterfv = debug_glGetMinmaxParameterfv;
  tbl.glGetMinmaxParameteriv = debug_glGetMinmaxParameteriv;
  tbl.glHistogram = debug_glHistogram;
  tbl.glMinmax = debug_glMinmax;
  tbl.glResetHistogram = debug_glResetHistogram;
  tbl.glResetMinmax = debug_glResetMinmax;

  // GL_VERSION_1_3

  tbl.glActiveTexture = debug_glActiveTexture;
  tbl.glSampleCoverage = debug_glSampleCoverage;
  tbl.glCompressedTexImage3D = debug_glCompressedTexImage3D;
  tbl.glCompressedTexImage2D = debug_glCompressedTexImage2D;
  tbl.glCompressedTexImage1D = debug_glCompressedTexImage1D;
  tbl.glCompressedTexSubImage3D = debug_glCompressedTexSubImage3D;
  tbl.glCompressedTexSubImage2D = debug_glCompressedTexSubImage2D;
  tbl.glCompressedTexSubImage1D = debug_glCompressedTexSubImage1D;
  tbl.glGetCompressedTexImage = debug_glGetCompressedTexImage;
  tbl.glClientActiveTexture = debug_glClientActiveTexture;
  tbl.glMultiTexCoord1d = debug_glMultiTexCoord1d;
  tbl.glMultiTexCoord1dv = debug_glMultiTexCoord1dv;
  tbl.glMultiTexCoord1f = debug_glMultiTexCoord1f;
  tbl.glMultiTexCoord1fv = debug_glMultiTexCoord1fv;
  tbl.glMultiTexCoord1i = debug_glMultiTexCoord1i;
  tbl.glMultiTexCoord1iv = debug_glMultiTexCoord1iv;
  tbl.glMultiTexCoord1s = debug_glMultiTexCoord1s;
  tbl.glMultiTexCoord1sv = debug_glMultiTexCoord1sv;
  tbl.glMultiTexCoord2d = debug_glMultiTexCoord2d;
  tbl.glMultiTexCoord2dv = debug_glMultiTexCoord2dv;
  tbl.glMultiTexCoord2f = debug_glMultiTexCoord2f;
  tbl.glMultiTexCoord2fv = debug_glMultiTexCoord2fv;
  tbl.glMultiTexCoord2i = debug_glMultiTexCoord2i;
  tbl.glMultiTexCoord2iv = debug_glMultiTexCoord2iv;
  tbl.glMultiTexCoord2s = debug_glMultiTexCoord2s;
  tbl.glMultiTexCoord2sv = debug_glMultiTexCoord2sv;
  tbl.glMultiTexCoord3d = debug_glMultiTexCoord3d;
  tbl.glMultiTexCoord3dv = debug_glMultiTexCoord3dv;
  tbl.glMultiTexCoord3f = debug_glMultiTexCoord3f;
  tbl.glMultiTexCoord3fv = debug_glMultiTexCoord3fv;
  tbl.glMultiTexCoord3i = debug_glMultiTexCoord3i;
  tbl.glMultiTexCoord3iv = debug_glMultiTexCoord3iv;
  tbl.glMultiTexCoord3s = debug_glMultiTexCoord3s;
  tbl.glMultiTexCoord3sv = debug_glMultiTexCoord3sv;
  tbl.glMultiTexCoord4d = debug_glMultiTexCoord4d;
  tbl.glMultiTexCoord4dv = debug_glMultiTexCoord4dv;
  tbl.glMultiTexCoord4f = debug_glMultiTexCoord4f;
  tbl.glMultiTexCoord4fv = debug_glMultiTexCoord4fv;
  tbl.glMultiTexCoord4i = debug_glMultiTexCoord4i;
  tbl.glMultiTexCoord4iv = debug_glMultiTexCoord4iv;
  tbl.glMultiTexCoord4s = debug_glMultiTexCoord4s;
  tbl.glMultiTexCoord4sv = debug_glMultiTexCoord4sv;
  tbl.glLoadTransposeMatrixf = debug_glLoadTransposeMatrixf;
  tbl.glLoadTransposeMatrixd = debug_glLoadTransposeMatrixd;
  tbl.glMultTransposeMatrixf = debug_glMultTransposeMatrixf;
  tbl.glMultTransposeMatrixd = debug_glMultTransposeMatrixd;

  // GL_VERSION_1_4

  tbl.glBlendFuncSeparate = debug_glBlendFuncSeparate;
  tbl.glMultiDrawArrays = debug_glMultiDrawArrays;
  tbl.glMultiDrawElements = debug_glMultiDrawElements;
  tbl.glPointParameterf = debug_glPointParameterf;
  tbl.glPointParameterfv = debug_glPointParameterfv;
  tbl.glPointParameteri = debug_glPointParameteri;
  tbl.glPointParameteriv = debug_glPointParameteriv;
  tbl.glFogCoordf = debug_glFogCoordf;
  tbl.glFogCoordfv = debug_glFogCoordfv;
  tbl.glFogCoordd = debug_glFogCoordd;
  tbl.glFogCoorddv = debug_glFogCoorddv;
  tbl.glFogCoordPointer = debug_glFogCoordPointer;
  tbl.glSecondaryColor3b = debug_glSecondaryColor3b;
  tbl.glSecondaryColor3bv = debug_glSecondaryColor3bv;
  tbl.glSecondaryColor3d = debug_glSecondaryColor3d;
  tbl.glSecondaryColor3dv = debug_glSecondaryColor3dv;
  tbl.glSecondaryColor3f = debug_glSecondaryColor3f;
  tbl.glSecondaryColor3fv = debug_glSecondaryColor3fv;
  tbl.glSecondaryColor3i = debug_glSecondaryColor3i;
  tbl.glSecondaryColor3iv = debug_glSecondaryColor3iv;
  tbl.glSecondaryColor3s = debug_glSecondaryColor3s;
  tbl.glSecondaryColor3sv = debug_glSecondaryColor3sv;
  tbl.glSecondaryColor3ub = debug_glSecondaryColor3ub;
  tbl.glSecondaryColor3ubv = debug_glSecondaryColor3ubv;
  tbl.glSecondaryColor3ui = debug_glSecondaryColor3ui;
  tbl.glSecondaryColor3uiv = debug_glSecondaryColor3uiv;
  tbl.glSecondaryColor3us = debug_glSecondaryColor3us;
  tbl.glSecondaryColor3usv = debug_glSecondaryColor3usv;
  tbl.glSecondaryColorPointer = debug_glSecondaryColorPointer;
  tbl.glWindowPos2d = debug_glWindowPos2d;
  tbl.glWindowPos2dv = debug_glWindowPos2dv;
  tbl.glWindowPos2f = debug_glWindowPos2f;
  tbl.glWindowPos2fv = debug_glWindowPos2fv;
  tbl.glWindowPos2i = debug_glWindowPos2i;
  tbl.glWindowPos2iv = debug_glWindowPos2iv;
  tbl.glWindowPos2s = debug_glWindowPos2s;
  tbl.glWindowPos2sv = debug_glWindowPos2sv;
  tbl.glWindowPos3d = debug_glWindowPos3d;
  tbl.glWindowPos3dv = debug_glWindowPos3dv;
  tbl.glWindowPos3f = debug_glWindowPos3f;
  tbl.glWindowPos3fv = debug_glWindowPos3fv;
  tbl.glWindowPos3i = debug_glWindowPos3i;
  tbl.glWindowPos3iv = debug_glWindowPos3iv;
  tbl.glWindowPos3s = debug_glWindowPos3s;
  tbl.glWindowPos3sv = debug_glWindowPos3sv;

  // GL_VERSION_1_5

  tbl.glGenQueries = debug_glGenQueries;
  tbl.glDeleteQueries = debug_glDeleteQueries;
  tbl.glIsQuery = debug_glIsQuery;
  tbl.glBeginQuery = debug_glBeginQuery;
  tbl.glEndQuery = debug_glEndQuery;
  tbl.glGetQueryiv = debug_glGetQueryiv;
  tbl.glGetQueryObjectiv = debug_glGetQueryObjectiv;
  tbl.glGetQueryObjectuiv = debug_glGetQueryObjectuiv;
  tbl.glBindBuffer = debug_glBindBuffer;
  tbl.glDeleteBuffers = debug_glDeleteBuffers;
  tbl.glGenBuffers = debug_glGenBuffers;
  tbl.glIsBuffer = debug_glIsBuffer;
  tbl.glBufferData = debug_glBufferData;
  tbl.glBufferSubData = debug_glBufferSubData;
  tbl.glGetBufferSubData = debug_glGetBufferSubData;
  tbl.glMapBuffer = debug_glMapBuffer;
  tbl.glUnmapBuffer = debug_glUnmapBuffer;
  tbl.glGetBufferParameteriv = debug_glGetBufferParameteriv;
  tbl.glGetBufferPointerv = debug_glGetBufferPointerv;

  // GL_VERSION_2_0

  tbl.glBlendEquationSeparate = debug_glBlendEquationSeparate;
  tbl.glDrawBuffers = debug_glDrawBuffers;
  tbl.glStencilOpSeparate = debug_glStencilOpSeparate;
  tbl.glStencilFuncSeparate = debug_glStencilFuncSeparate;
  tbl.glStencilMaskSeparate = debug_glStencilMaskSeparate;
  tbl.glAttachShader = debug_glAttachShader;
  tbl.glBindAttribLocation = debug_glBindAttribLocation;
  tbl.glCompileShader = debug_glCompileShader;
  tbl.glCreateProgram = debug_glCreateProgram;
  tbl.glCreateShader = debug_glCreateShader;
  tbl.glDeleteProgram = debug_glDeleteProgram;
  tbl.glDeleteShader = debug_glDeleteShader;
  tbl.glDetachShader = debug_glDetachShader;
  tbl.glDisableVertexAttribArray = debug_glDisableVertexAttribArray;
  tbl.glEnableVertexAttribArray = debug_glEnableVertexAttribArray;
  tbl.glGetActiveAttrib = debug_glGetActiveAttrib;
  tbl.glGetActiveUniform = debug_glGetActiveUniform;
  tbl.glGetAttachedShaders = debug_glGetAttachedShaders;
  tbl.glGetAttribLocation = debug_glGetAttribLocation;
  tbl.glGetProgramiv = debug_glGetProgramiv;
  tbl.glGetProgramInfoLog = debug_glGetProgramInfoLog;
  tbl.glGetShaderiv = debug_glGetShaderiv;
  tbl.glGetShaderInfoLog = debug_glGetShaderInfoLog;
  tbl.glGetShaderSource = debug_glGetShaderSource;
  tbl.glGetUniformLocation = debug_glGetUniformLocation;
  tbl.glGetUniformfv = debug_glGetUniformfv;
  tbl.glGetUniformiv = debug_glGetUniformiv;
  tbl.glGetVertexAttribdv = debug_glGetVertexAttribdv;
  tbl.glGetVertexAttribfv = debug_glGetVertexAttribfv;
  tbl.glGetVertexAttribiv = debug_glGetVertexAttribiv;
  tbl.glGetVertexAttribPointerv = debug_glGetVertexAttribPointerv;
  tbl.glIsProgram = debug_glIsProgram;
  tbl.glIsShader = debug_glIsShader;
  tbl.glLinkProgram = debug_glLinkProgram;
  tbl.glShaderSource = debug_glShaderSource;
  tbl.glUseProgram = debug_glUseProgram;
  tbl.glUniform1f = debug_glUniform1f;
  tbl.glUniform2f = debug_glUniform2f;
  tbl.glUniform3f = debug_glUniform3f;
  tbl.glUniform4f = debug_glUniform4f;
  tbl.glUniform1i = debug_glUniform1i;
  tbl.glUniform2i = debug_glUniform2i;
  tbl.glUniform3i = debug_glUniform3i;
  tbl.glUniform4i = debug_glUniform4i;
  tbl.glUniform1fv = debug_glUniform1fv;
  tbl.glUniform2fv = debug_glUniform2fv;
  tbl.glUniform3fv = debug_glUniform3fv;
  tbl.glUniform4fv = debug_glUniform4fv;
  tbl.glUniform1iv = debug_glUniform1iv;
  tbl.glUniform2iv = debug_glUniform2iv;
  tbl.glUniform3iv = debug_glUniform3iv;
  tbl.glUniform4iv = debug_glUniform4iv;
  tbl.glUniformMatrix2fv = debug_glUniformMatrix2fv;
  tbl.glUniformMatrix3fv = debug_glUniformMatrix3fv;
  tbl.glUniformMatrix4fv = debug_glUniformMatrix4fv;
  tbl.glValidateProgram = debug_glValidateProgram;
  tbl.glVertexAttrib1d = debug_glVertexAttrib1d;
  tbl.glVertexAttrib1dv = debug_glVertexAttrib1dv;
  tbl.glVertexAttrib1f = debug_glVertexAttrib1f;
  tbl.glVertexAttrib1fv = debug_glVertexAttrib1fv;
  tbl.glVertexAttrib1s = debug_glVertexAttrib1s;
  tbl.glVertexAttrib1sv = debug_glVertexAttrib1sv;
  tbl.glVertexAttrib2d = debug_glVertexAttrib2d;
  tbl.glVertexAttrib2dv = debug_glVertexAttrib2dv;
  tbl.glVertexAttrib2f = debug_glVertexAttrib2f;
  tbl.glVertexAttrib2fv = debug_glVertexAttrib2fv;
  tbl.glVertexAttrib2s = debug_glVertexAttrib2s;
  tbl.glVertexAttrib2sv = debug_glVertexAttrib2sv;
  tbl.glVertexAttrib3d = debug_glVertexAttrib3d;
  tbl.glVertexAttrib3dv = debug_glVertexAttrib3dv;
  tbl.glVertexAttrib3f = debug_glVertexAttrib3f;
  tbl.glVertexAttrib3fv = debug_glVertexAttrib3fv;
  tbl.glVertexAttrib3s = debug_glVertexAttrib3s;
  tbl.glVertexAttrib3sv = debug_glVertexAttrib3sv;
  tbl.glVertexAttrib4Nbv = debug_glVertexAttrib4Nbv;
  tbl.glVertexAttrib4Niv = debug_glVertexAttrib4Niv;
  tbl.glVertexAttrib4Nsv = debug_glVertexAttrib4Nsv;
  tbl.glVertexAttrib4Nub = debug_glVertexAttrib4Nub;
  tbl.glVertexAttrib4Nubv = debug_glVertexAttrib4Nubv;
  tbl.glVertexAttrib4Nuiv = debug_glVertexAttrib4Nuiv;
  tbl.glVertexAttrib4Nusv = debug_glVertexAttrib4Nusv;
  tbl.glVertexAttrib4bv = debug_glVertexAttrib4bv;
  tbl.glVertexAttrib4d = debug_glVertexAttrib4d;
  tbl.glVertexAttrib4dv = debug_glVertexAttrib4dv;
  tbl.glVertexAttrib4f = debug_glVertexAttrib4f;
  tbl.glVertexAttrib4fv = debug_glVertexAttrib4fv;
  tbl.glVertexAttrib4iv = debug_glVertexAttrib4iv;
  tbl.glVertexAttrib4s = debug_glVertexAttrib4s;
  tbl.glVertexAttrib4sv = debug_glVertexAttrib4sv;
  tbl.glVertexAttrib4ubv = debug_glVertexAttrib4ubv;
  tbl.glVertexAttrib4uiv = debug_glVertexAttrib4uiv;
  tbl.glVertexAttrib4usv = debug_glVertexAttrib4usv;
  tbl.glVertexAttribPointer = debug_glVertexAttribPointer;

  // GL_VERSION_2_1

  tbl.glUniformMatrix2x3fv = debug_glUniformMatrix2x3fv;
  tbl.glUniformMatrix3x2fv = debug_glUniformMatrix3x2fv;
  tbl.glUniformMatrix2x4fv = debug_glUniformMatrix2x4fv;
  tbl.glUniformMatrix4x2fv = debug_glUniformMatrix4x2fv;
  tbl.glUniformMatrix3x4fv = debug_glUniformMatrix3x4fv;
  tbl.glUniformMatrix4x3fv = debug_glUniformMatrix4x3fv;

  // GL_VERSION_3_0

  tbl.glColorMaski = debug_glColorMaski;
  tbl.glGetBooleani_v = debug_glGetBooleani_v;

  // GL_ARB_uniform_buffer_object

  tbl.glGetIntegeri_v = debug_glGetIntegeri_v;

  // GL_VERSION_3_0

  tbl.glEnablei = debug_glEnablei;
  tbl.glDisablei = debug_glDisablei;
  tbl.glIsEnabledi = debug_glIsEnabledi;
  tbl.glBeginTransformFeedback = debug_glBeginTransformFeedback;
  tbl.glEndTransformFeedback = debug_glEndTransformFeedback;

  // GL_ARB_uniform_buffer_object

  tbl.glBindBufferRange = debug_glBindBufferRange;
  tbl.glBindBufferBase = debug_glBindBufferBase;

  // GL_VERSION_3_0

  tbl.glTransformFeedbackVaryings = debug_glTransformFeedbackVaryings;
  tbl.glGetTransformFeedbackVarying = debug_glGetTransformFeedbackVarying;
  tbl.glClampColor = debug_glClampColor;
  tbl.glBeginConditionalRender = debug_glBeginConditionalRender;
  tbl.glEndConditionalRender = debug_glEndConditionalRender;
  tbl.glVertexAttribIPointer = debug_glVertexAttribIPointer;
  tbl.glGetVertexAttribIiv = debug_glGetVertexAttribIiv;
  tbl.glGetVertexAttribIuiv = debug_glGetVertexAttribIuiv;
  tbl.glVertexAttribI1i = debug_glVertexAttribI1i;
  tbl.glVertexAttribI2i = debug_glVertexAttribI2i;
  tbl.glVertexAttribI3i = debug_glVertexAttribI3i;
  tbl.glVertexAttribI4i = debug_glVertexAttribI4i;
  tbl.glVertexAttribI1ui = debug_glVertexAttribI1ui;
  tbl.glVertexAttribI2ui = debug_glVertexAttribI2ui;
  tbl.glVertexAttribI3ui = debug_glVertexAttribI3ui;
  tbl.glVertexAttribI4ui = debug_glVertexAttribI4ui;
  tbl.glVertexAttribI1iv = debug_glVertexAttribI1iv;
  tbl.glVertexAttribI2iv = debug_glVertexAttribI2iv;
  tbl.glVertexAttribI3iv = debug_glVertexAttribI3iv;
  tbl.glVertexAttribI4iv = debug_glVertexAttribI4iv;
  tbl.glVertexAttribI1uiv = debug_glVertexAttribI1uiv;
  tbl.glVertexAttribI2uiv = debug_glVertexAttribI2uiv;
  tbl.glVertexAttribI3uiv = debug_glVertexAttribI3uiv;
  tbl.glVertexAttribI4uiv = debug_glVertexAttribI4uiv;
  tbl.glVertexAttribI4bv = debug_glVertexAttribI4bv;
  tbl.glVertexAttribI4sv = debug_glVertexAttribI4sv;
  tbl.glVertexAttribI4ubv = debug_glVertexAttribI4ubv;
  tbl.glVertexAttribI4usv = debug_glVertexAttribI4usv;
  tbl.glGetUniformuiv = debug_glGetUniformuiv;
  tbl.glBindFragDataLocation = debug_glBindFragDataLocation;
  tbl.glGetFragDataLocation = debug_glGetFragDataLocation;
  tbl.glUniform1ui = debug_glUniform1ui;
  tbl.glUniform2ui = debug_glUniform2ui;
  tbl.glUniform3ui = debug_glUniform3ui;
  tbl.glUniform4ui = debug_glUniform4ui;
  tbl.glUniform1uiv = debug_glUniform1uiv;
  tbl.glUniform2uiv = debug_glUniform2uiv;
  tbl.glUniform3uiv = debug_glUniform3uiv;
  tbl.glUniform4uiv = debug_glUniform4uiv;
  tbl.glTexParameterIiv = debug_glTexParameterIiv;
  tbl.glTexParameterIuiv = debug_glTexParameterIuiv;
  tbl.glGetTexParameterIiv = debug_glGetTexParameterIiv;
  tbl.glGetTexParameterIuiv = debug_glGetTexParameterIuiv;
  tbl.glClearBufferiv = debug_glClearBufferiv;
  tbl.glClearBufferuiv = debug_glClearBufferuiv;
  tbl.glClearBufferfv = debug_glClearBufferfv;
  tbl.glClearBufferfi = debug_glClearBufferfi;
  tbl.glGetStringi = debug_glGetStringi;

  // GL_VERSION_3_1

  tbl.glDrawArraysInstanced = debug_glDrawArraysInstanced;
  tbl.glDrawElementsInstanced = debug_glDrawElementsInstanced;
  tbl.glTexBuffer = debug_glTexBuffer;
  tbl.glPrimitiveRestartIndex = debug_glPrimitiveRestartIndex;

  // GL_VERSION_3_2

  tbl.glGetInteger64i_v = debug_glGetInteger64i_v;
  tbl.glGetBufferParameteri64v = debug_glGetBufferParameteri64v;
  tbl.glFramebufferTexture = debug_glFramebufferTexture;
  tbl.glFramebufferTextureFace = debug_glFramebufferTextureFace;

  // GL_ARB_sampler_objects

  tbl.glGenSamplers = debug_glGenSamplers;
  tbl.glDeleteSamplers = debug_glDeleteSamplers;
  tbl.glIsSampler = debug_glIsSampler;
  tbl.glBindSampler = debug_glBindSampler;
  tbl.glSamplerParameteri = debug_glSamplerParameteri;
  tbl.glSamplerParameterf = debug_glSamplerParameterf;
  tbl.glSamplerParameteriv = debug_glSamplerParameteriv;
  tbl.glSamplerParameterfv = debug_glSamplerParameterfv;
  tbl.glSamplerParameterIiv = debug_glSamplerParameterIiv;
  tbl.glSamplerParameterIuiv = debug_glSamplerParameterIuiv;
  tbl.glGetSamplerParameteriv = debug_glGetSamplerParameteriv;
  tbl.glGetSamplerParameterfv = debug_glGetSamplerParameterfv;
  tbl.glGetSamplerParameterIiv = debug_glGetSamplerParameterIiv;
  tbl.glGetSamplerParameterIuiv = debug_glGetSamplerParameterIuiv;

  // GL_ARB_blend_func_extended

  tbl.glBindFragDataLocationIndexed = debug_glBindFragDataLocationIndexed;
  tbl.glGetFragDataIndex = debug_glGetFragDataIndex;

  // GL_ARB_timer_query

  tbl.glGetQueryObjecti64v = debug_glGetQueryObjecti64v;
  tbl.glGetQueryObjectui64v = debug_glGetQueryObjectui64v;
  tbl.glQueryCounter = debug_glQueryCounter;

  // GL_VERSION_3_3

  tbl.glVertexAttribDivisor = debug_glVertexAttribDivisor;

  // GL_ARB_vertex_type_2_10_10_10_rev

  tbl.glVertexP2ui = debug_glVertexP2ui;
  tbl.glVertexP2uiv = debug_glVertexP2uiv;
  tbl.glVertexP3ui = debug_glVertexP3ui;
  tbl.glVertexP3uiv = debug_glVertexP3uiv;
  tbl.glVertexP4ui = debug_glVertexP4ui;
  tbl.glVertexP4uiv = debug_glVertexP4uiv;
  tbl.glTexCoordP1ui = debug_glTexCoordP1ui;
  tbl.glTexCoordP1uiv = debug_glTexCoordP1uiv;
  tbl.glTexCoordP2ui = debug_glTexCoordP2ui;
  tbl.glTexCoordP2uiv = debug_glTexCoordP2uiv;
  tbl.glTexCoordP3ui = debug_glTexCoordP3ui;
  tbl.glTexCoordP3uiv = debug_glTexCoordP3uiv;
  tbl.glTexCoordP4ui = debug_glTexCoordP4ui;
  tbl.glTexCoordP4uiv = debug_glTexCoordP4uiv;
  tbl.glMultiTexCoordP1ui = debug_glMultiTexCoordP1ui;
  tbl.glMultiTexCoordP1uiv = debug_glMultiTexCoordP1uiv;
  tbl.glMultiTexCoordP2ui = debug_glMultiTexCoordP2ui;
  tbl.glMultiTexCoordP2uiv = debug_glMultiTexCoordP2uiv;
  tbl.glMultiTexCoordP3ui = debug_glMultiTexCoordP3ui;
  tbl.glMultiTexCoordP3uiv = debug_glMultiTexCoordP3uiv;
  tbl.glMultiTexCoordP4ui = debug_glMultiTexCoordP4ui;
  tbl.glMultiTexCoordP4uiv = debug_glMultiTexCoordP4uiv;
  tbl.glNormalP3ui = debug_glNormalP3ui;
  tbl.glNormalP3uiv = debug_glNormalP3uiv;
  tbl.glColorP3ui = debug_glColorP3ui;
  tbl.glColorP3uiv = debug_glColorP3uiv;
  tbl.glColorP4ui = debug_glColorP4ui;
  tbl.glColorP4uiv = debug_glColorP4uiv;
  tbl.glSecondaryColorP3ui = debug_glSecondaryColorP3ui;
  tbl.glSecondaryColorP3uiv = debug_glSecondaryColorP3uiv;
  tbl.glVertexAttribP1ui = debug_glVertexAttribP1ui;
  tbl.glVertexAttribP1uiv = debug_glVertexAttribP1uiv;
  tbl.glVertexAttribP2ui = debug_glVertexAttribP2ui;
  tbl.glVertexAttribP2uiv = debug_glVertexAttribP2uiv;
  tbl.glVertexAttribP3ui = debug_glVertexAttribP3ui;
  tbl.glVertexAttribP3uiv = debug_glVertexAttribP3uiv;
  tbl.glVertexAttribP4ui = debug_glVertexAttribP4ui;
  tbl.glVertexAttribP4uiv = debug_glVertexAttribP4uiv;

  // GL_VERSION_4_0

  tbl.glBlendEquationi = debug_glBlendEquationi;
  tbl.glBlendEquationSeparatei = debug_glBlendEquationSeparatei;
  tbl.glBlendFunci = debug_glBlendFunci;
  tbl.glBlendFuncSeparatei = debug_glBlendFuncSeparatei;

  // GL_ARB_draw_indirect

  tbl.glDrawArraysIndirect = debug_glDrawArraysIndirect;
  tbl.glDrawElementsIndirect = debug_glDrawElementsIndirect;

  // GL_ARB_gpu_shader_fp64

  tbl.glUniform1d = debug_glUniform1d;
  tbl.glUniform2d = debug_glUniform2d;
  tbl.glUniform3d = debug_glUniform3d;
  tbl.glUniform4d = debug_glUniform4d;
  tbl.glUniform1dv = debug_glUniform1dv;
  tbl.glUniform2dv = debug_glUniform2dv;
  tbl.glUniform3dv = debug_glUniform3dv;
  tbl.glUniform4dv = debug_glUniform4dv;
  tbl.glUniformMatrix2dv = debug_glUniformMatrix2dv;
  tbl.glUniformMatrix3dv = debug_glUniformMatrix3dv;
  tbl.glUniformMatrix4dv = debug_glUniformMatrix4dv;
  tbl.glUniformMatrix2x3dv = debug_glUniformMatrix2x3dv;
  tbl.glUniformMatrix2x4dv = debug_glUniformMatrix2x4dv;
  tbl.glUniformMatrix3x2dv = debug_glUniformMatrix3x2dv;
  tbl.glUniformMatrix3x4dv = debug_glUniformMatrix3x4dv;
  tbl.glUniformMatrix4x2dv = debug_glUniformMatrix4x2dv;
  tbl.glUniformMatrix4x3dv = debug_glUniformMatrix4x3dv;
  tbl.glGetUniformdv = debug_glGetUniformdv;

  // GL_ARB_sample_shading

  tbl.glMinSampleShading = debug_glMinSampleShading;

  // GL_ARB_tessellation_shader

  tbl.glPatchParameteri = debug_glPatchParameteri;
  tbl.glPatchParameterfv = debug_glPatchParameterfv;

  // GL_ARB_transform_feedback2

  tbl.glGenTransformFeedbacks = debug_glGenTransformFeedbacks;
  tbl.glDeleteTransformFeedbacks = debug_glDeleteTransformFeedbacks;
  tbl.glBindTransformFeedback = debug_glBindTransformFeedback;
  tbl.glIsTransformFeedback = debug_glIsTransformFeedback;
  tbl.glPauseTransformFeedback = debug_glPauseTransformFeedback;
  tbl.glResumeTransformFeedback = debug_glResumeTransformFeedback;
  tbl.glDrawTransformFeedback = debug_glDrawTransformFeedback;

  // GL_ARB_transform_feedback3

  tbl.glDrawTransformFeedbackStream = debug_glDrawTransformFeedbackStream;
  tbl.glBeginQueryIndexed = debug_glBeginQueryIndexed;
  tbl.glEndQueryIndexed = debug_glEndQueryIndexed;
  tbl.glGetQueryIndexediv = debug_glGetQueryIndexediv;

  // GL_ARB_shader_subroutine

  tbl.glGetSubroutineUniformLocation = debug_glGetSubroutineUniformLocation;
  tbl.glGetSubroutineIndex = debug_glGetSubroutineIndex;
  tbl.glGetActiveSubroutineUniformiv = debug_glGetActiveSubroutineUniformiv;
  tbl.glGetActiveSubroutineUniformName = debug_glGetActiveSubroutineUniformName;
  tbl.glGetActiveSubroutineName = debug_glGetActiveSubroutineName;
  tbl.glUniformSubroutinesuiv = debug_glUniformSubroutinesuiv;
  tbl.glGetUniformSubroutineuiv = debug_glGetUniformSubroutineuiv;
  tbl.glGetProgramStageiv = debug_glGetProgramStageiv;

  // GL_ARB_vertex_attrib_64bit

  tbl.glVertexAttribL1d = debug_glVertexAttribL1d;
  tbl.glVertexAttribL2d = debug_glVertexAttribL2d;
  tbl.glVertexAttribL3d = debug_glVertexAttribL3d;
  tbl.glVertexAttribL4d = debug_glVertexAttribL4d;
  tbl.glVertexAttribL1dv = debug_glVertexAttribL1dv;
  tbl.glVertexAttribL2dv = debug_glVertexAttribL2dv;
  tbl.glVertexAttribL3dv = debug_glVertexAttribL3dv;
  tbl.glVertexAttribL4dv = debug_glVertexAttribL4dv;
  tbl.glVertexAttribLPointer = debug_glVertexAttribLPointer;
  tbl.glGetVertexAttribLdv = debug_glGetVertexAttribLdv;

  // GL_ARB_ES2_compatibility

  tbl.glReleaseShaderCompiler = debug_glReleaseShaderCompiler;
  tbl.glShaderBinary = debug_glShaderBinary;
  tbl.glGetShaderPrecisionFormat = debug_glGetShaderPrecisionFormat;
  tbl.glDepthRangef = debug_glDepthRangef;
  tbl.glClearDepthf = debug_glClearDepthf;

  // GL_ARB_get_program_binary

  tbl.glGetProgramBinary = debug_glGetProgramBinary;
  tbl.glProgramBinary = debug_glProgramBinary;
  tbl.glProgramParameteri = debug_glProgramParameteri;

  // GL_ARB_viewport_array

  tbl.glViewportArrayv = debug_glViewportArrayv;
  tbl.glViewportIndexedf = debug_glViewportIndexedf;
  tbl.glViewportIndexedfv = debug_glViewportIndexedfv;
  tbl.glScissorArrayv = debug_glScissorArrayv;
  tbl.glScissorIndexed = debug_glScissorIndexed;
  tbl.glScissorIndexedv = debug_glScissorIndexedv;
  tbl.glDepthRangeArrayv = debug_glDepthRangeArrayv;
  tbl.glDepthRangeIndexed = debug_glDepthRangeIndexed;
  tbl.glGetFloati_v = debug_glGetFloati_v;
  tbl.glGetDoublei_v = debug_glGetDoublei_v;

  // GL_ARB_separate_shader_objects

  tbl.glActiveShaderProgram = debug_glActiveShaderProgram;
  tbl.glUseProgramStages = debug_glUseProgramStages;
  tbl.glCreateShaderProgramv = debug_glCreateShaderProgramv;
  tbl.glBindProgramPipeline = debug_glBindProgramPipeline;
  tbl.glDeleteProgramPipelines = debug_glDeleteProgramPipelines;
  tbl.glGenProgramPipelines = debug_glGenProgramPipelines;
  tbl.glIsProgramPipeline = debug_glIsProgramPipeline;
  tbl.glGetProgramPipelineiv = debug_glGetProgramPipelineiv;
  tbl.glValidateProgramPipeline = debug_glValidateProgramPipeline;
  tbl.glGetProgramPipelineInfoLog = debug_glGetProgramPipelineInfoLog;
  tbl.glProgramUniform1f = debug_glProgramUniform1f;
  tbl.glProgramUniform2f = debug_glProgramUniform2f;
  tbl.glProgramUniform3f = debug_glProgramUniform3f;
  tbl.glProgramUniform4f = debug_glProgramUniform4f;
  tbl.glProgramUniform1i = debug_glProgramUniform1i;
  tbl.glProgramUniform2i = debug_glProgramUniform2i;
  tbl.glProgramUniform3i = debug_glProgramUniform3i;
  tbl.glProgramUniform4i = debug_glProgramUniform4i;
  tbl.glProgramUniform1fv = debug_glProgramUniform1fv;
  tbl.glProgramUniform2fv = debug_glProgramUniform2fv;
  tbl.glProgramUniform3fv = debug_glProgramUniform3fv;
  tbl.glProgramUniform4fv = debug_glProgramUniform4fv;
  tbl.glProgramUniform1iv = debug_glProgramUniform1iv;
  tbl.glProgramUniform2iv = debug_glProgramUniform2iv;
  tbl.glProgramUniform3iv = debug_glProgramUniform3iv;
  tbl.glProgramUniform4iv = debug_glProgramUniform4iv;
  tbl.glProgramUniformMatrix2fv = debug_glProgramUniformMatrix2fv;
  tbl.glProgramUniformMatrix3fv = debug_glProgramUniformMatrix3fv;
  tbl.glProgramUniformMatrix4fv = debug_glProgramUniformMatrix4fv;
  tbl.glProgramUniformMatrix2x3fv = debug_glProgramUniformMatrix2x3fv;
  tbl.glProgramUniformMatrix3x2fv = debug_glProgramUniformMatrix3x2fv;
  tbl.glProgramUniformMatrix2x4fv = debug_glProgramUniformMatrix2x4fv;
  tbl.glProgramUniformMatrix4x2fv = debug_glProgramUniformMatrix4x2fv;
  tbl.glProgramUniformMatrix3x4fv = debug_glProgramUniformMatrix3x4fv;
  tbl.glProgramUniformMatrix4x3fv = debug_glProgramUniformMatrix4x3fv;
  tbl.glProgramUniform1ui = debug_glProgramUniform1ui;
  tbl.glProgramUniform2ui = debug_glProgramUniform2ui;
  tbl.glProgramUniform3ui = debug_glProgramUniform3ui;
  tbl.glProgramUniform4ui = debug_glProgramUniform4ui;
  tbl.glProgramUniform1uiv = debug_glProgramUniform1uiv;
  tbl.glProgramUniform2uiv = debug_glProgramUniform2uiv;
  tbl.glProgramUniform3uiv = debug_glProgramUniform3uiv;
  tbl.glProgramUniform4uiv = debug_glProgramUniform4uiv;
  tbl.glProgramUniform1d = debug_glProgramUniform1d;
  tbl.glProgramUniform2d = debug_glProgramUniform2d;
  tbl.glProgramUniform3d = debug_glProgramUniform3d;
  tbl.glProgramUniform4d = debug_glProgramUniform4d;
  tbl.glProgramUniform1dv = debug_glProgramUniform1dv;
  tbl.glProgramUniform2dv = debug_glProgramUniform2dv;
  tbl.glProgramUniform3dv = debug_glProgramUniform3dv;
  tbl.glProgramUniform4dv = debug_glProgramUniform4dv;
  tbl.glProgramUniformMatrix2dv = debug_glProgramUniformMatrix2dv;
  tbl.glProgramUniformMatrix3dv = debug_glProgramUniformMatrix3dv;
  tbl.glProgramUniformMatrix4dv = debug_glProgramUniformMatrix4dv;
  tbl.glProgramUniformMatrix2x3dv = debug_glProgramUniformMatrix2x3dv;
  tbl.glProgramUniformMatrix2x4dv = debug_glProgramUniformMatrix2x4dv;
  tbl.glProgramUniformMatrix3x2dv = debug_glProgramUniformMatrix3x2dv;
  tbl.glProgramUniformMatrix3x4dv = debug_glProgramUniformMatrix3x4dv;
  tbl.glProgramUniformMatrix4x2dv = debug_glProgramUniformMatrix4x2dv;
  tbl.glProgramUniformMatrix4x3dv = debug_glProgramUniformMatrix4x3dv;

  // GL_ARB_multitexture

  tbl.glActiveTextureARB = debug_glActiveTextureARB;
  tbl.glClientActiveTextureARB = debug_glClientActiveTextureARB;
  tbl.glMultiTexCoord1dARB = debug_glMultiTexCoord1dARB;
  tbl.glMultiTexCoord1dvARB = debug_glMultiTexCoord1dvARB;
  tbl.glMultiTexCoord1fARB = debug_glMultiTexCoord1fARB;
  tbl.glMultiTexCoord1fvARB = debug_glMultiTexCoord1fvARB;
  tbl.glMultiTexCoord1iARB = debug_glMultiTexCoord1iARB;
  tbl.glMultiTexCoord1ivARB = debug_glMultiTexCoord1ivARB;
  tbl.glMultiTexCoord1sARB = debug_glMultiTexCoord1sARB;
  tbl.glMultiTexCoord1svARB = debug_glMultiTexCoord1svARB;
  tbl.glMultiTexCoord2dARB = debug_glMultiTexCoord2dARB;
  tbl.glMultiTexCoord2dvARB = debug_glMultiTexCoord2dvARB;
  tbl.glMultiTexCoord2fARB = debug_glMultiTexCoord2fARB;
  tbl.glMultiTexCoord2fvARB = debug_glMultiTexCoord2fvARB;
  tbl.glMultiTexCoord2iARB = debug_glMultiTexCoord2iARB;
  tbl.glMultiTexCoord2ivARB = debug_glMultiTexCoord2ivARB;
  tbl.glMultiTexCoord2sARB = debug_glMultiTexCoord2sARB;
  tbl.glMultiTexCoord2svARB = debug_glMultiTexCoord2svARB;
  tbl.glMultiTexCoord3dARB = debug_glMultiTexCoord3dARB;
  tbl.glMultiTexCoord3dvARB = debug_glMultiTexCoord3dvARB;
  tbl.glMultiTexCoord3fARB = debug_glMultiTexCoord3fARB;
  tbl.glMultiTexCoord3fvARB = debug_glMultiTexCoord3fvARB;
  tbl.glMultiTexCoord3iARB = debug_glMultiTexCoord3iARB;
  tbl.glMultiTexCoord3ivARB = debug_glMultiTexCoord3ivARB;
  tbl.glMultiTexCoord3sARB = debug_glMultiTexCoord3sARB;
  tbl.glMultiTexCoord3svARB = debug_glMultiTexCoord3svARB;
  tbl.glMultiTexCoord4dARB = debug_glMultiTexCoord4dARB;
  tbl.glMultiTexCoord4dvARB = debug_glMultiTexCoord4dvARB;
  tbl.glMultiTexCoord4fARB = debug_glMultiTexCoord4fARB;
  tbl.glMultiTexCoord4fvARB = debug_glMultiTexCoord4fvARB;
  tbl.glMultiTexCoord4iARB = debug_glMultiTexCoord4iARB;
  tbl.glMultiTexCoord4ivARB = debug_glMultiTexCoord4ivARB;
  tbl.glMultiTexCoord4sARB = debug_glMultiTexCoord4sARB;
  tbl.glMultiTexCoord4svARB = debug_glMultiTexCoord4svARB;

  // GL_ARB_transpose_matrix

  tbl.glLoadTransposeMatrixfARB = debug_glLoadTransposeMatrixfARB;
  tbl.glLoadTransposeMatrixdARB = debug_glLoadTransposeMatrixdARB;
  tbl.glMultTransposeMatrixfARB = debug_glMultTransposeMatrixfARB;
  tbl.glMultTransposeMatrixdARB = debug_glMultTransposeMatrixdARB;

  // GL_ARB_multisample

  tbl.glSampleCoverageARB = debug_glSampleCoverageARB;

  // GL_ARB_texture_compression

  tbl.glCompressedTexImage3DARB = debug_glCompressedTexImage3DARB;
  tbl.glCompressedTexImage2DARB = debug_glCompressedTexImage2DARB;
  tbl.glCompressedTexImage1DARB = debug_glCompressedTexImage1DARB;
  tbl.glCompressedTexSubImage3DARB = debug_glCompressedTexSubImage3DARB;
  tbl.glCompressedTexSubImage2DARB = debug_glCompressedTexSubImage2DARB;
  tbl.glCompressedTexSubImage1DARB = debug_glCompressedTexSubImage1DARB;
  tbl.glGetCompressedTexImageARB = debug_glGetCompressedTexImageARB;

  // GL_ARB_point_parameters

  tbl.glPointParameterfARB = debug_glPointParameterfARB;
  tbl.glPointParameterfvARB = debug_glPointParameterfvARB;

  // GL_ARB_vertex_blend

  tbl.glWeightbvARB = debug_glWeightbvARB;
  tbl.glWeightsvARB = debug_glWeightsvARB;
  tbl.glWeightivARB = debug_glWeightivARB;
  tbl.glWeightfvARB = debug_glWeightfvARB;
  tbl.glWeightdvARB = debug_glWeightdvARB;
  tbl.glWeightubvARB = debug_glWeightubvARB;
  tbl.glWeightusvARB = debug_glWeightusvARB;
  tbl.glWeightuivARB = debug_glWeightuivARB;
  tbl.glWeightPointerARB = debug_glWeightPointerARB;
  tbl.glVertexBlendARB = debug_glVertexBlendARB;

  // GL_ARB_matrix_palette

  tbl.glCurrentPaletteMatrixARB = debug_glCurrentPaletteMatrixARB;
  tbl.glMatrixIndexubvARB = debug_glMatrixIndexubvARB;
  tbl.glMatrixIndexusvARB = debug_glMatrixIndexusvARB;
  tbl.glMatrixIndexuivARB = debug_glMatrixIndexuivARB;
  tbl.glMatrixIndexPointerARB = debug_glMatrixIndexPointerARB;

  // GL_ARB_window_pos

  tbl.glWindowPos2dARB = debug_glWindowPos2dARB;
  tbl.glWindowPos2dvARB = debug_glWindowPos2dvARB;
  tbl.glWindowPos2fARB = debug_glWindowPos2fARB;
  tbl.glWindowPos2fvARB = debug_glWindowPos2fvARB;
  tbl.glWindowPos2iARB = debug_glWindowPos2iARB;
  tbl.glWindowPos2ivARB = debug_glWindowPos2ivARB;
  tbl.glWindowPos2sARB = debug_glWindowPos2sARB;
  tbl.glWindowPos2svARB = debug_glWindowPos2svARB;
  tbl.glWindowPos3dARB = debug_glWindowPos3dARB;
  tbl.glWindowPos3dvARB = debug_glWindowPos3dvARB;
  tbl.glWindowPos3fARB = debug_glWindowPos3fARB;
  tbl.glWindowPos3fvARB = debug_glWindowPos3fvARB;
  tbl.glWindowPos3iARB = debug_glWindowPos3iARB;
  tbl.glWindowPos3ivARB = debug_glWindowPos3ivARB;
  tbl.glWindowPos3sARB = debug_glWindowPos3sARB;
  tbl.glWindowPos3svARB = debug_glWindowPos3svARB;

  // GL_ARB_vertex_program

  tbl.glVertexAttrib1dARB = debug_glVertexAttrib1dARB;
  tbl.glVertexAttrib1dvARB = debug_glVertexAttrib1dvARB;
  tbl.glVertexAttrib1fARB = debug_glVertexAttrib1fARB;
  tbl.glVertexAttrib1fvARB = debug_glVertexAttrib1fvARB;
  tbl.glVertexAttrib1sARB = debug_glVertexAttrib1sARB;
  tbl.glVertexAttrib1svARB = debug_glVertexAttrib1svARB;
  tbl.glVertexAttrib2dARB = debug_glVertexAttrib2dARB;
  tbl.glVertexAttrib2dvARB = debug_glVertexAttrib2dvARB;
  tbl.glVertexAttrib2fARB = debug_glVertexAttrib2fARB;
  tbl.glVertexAttrib2fvARB = debug_glVertexAttrib2fvARB;
  tbl.glVertexAttrib2sARB = debug_glVertexAttrib2sARB;
  tbl.glVertexAttrib2svARB = debug_glVertexAttrib2svARB;
  tbl.glVertexAttrib3dARB = debug_glVertexAttrib3dARB;
  tbl.glVertexAttrib3dvARB = debug_glVertexAttrib3dvARB;
  tbl.glVertexAttrib3fARB = debug_glVertexAttrib3fARB;
  tbl.glVertexAttrib3fvARB = debug_glVertexAttrib3fvARB;
  tbl.glVertexAttrib3sARB = debug_glVertexAttrib3sARB;
  tbl.glVertexAttrib3svARB = debug_glVertexAttrib3svARB;
  tbl.glVertexAttrib4NbvARB = debug_glVertexAttrib4NbvARB;
  tbl.glVertexAttrib4NivARB = debug_glVertexAttrib4NivARB;
  tbl.glVertexAttrib4NsvARB = debug_glVertexAttrib4NsvARB;
  tbl.glVertexAttrib4NubARB = debug_glVertexAttrib4NubARB;
  tbl.glVertexAttrib4NubvARB = debug_glVertexAttrib4NubvARB;
  tbl.glVertexAttrib4NuivARB = debug_glVertexAttrib4NuivARB;
  tbl.glVertexAttrib4NusvARB = debug_glVertexAttrib4NusvARB;
  tbl.glVertexAttrib4bvARB = debug_glVertexAttrib4bvARB;
  tbl.glVertexAttrib4dARB = debug_glVertexAttrib4dARB;
  tbl.glVertexAttrib4dvARB = debug_glVertexAttrib4dvARB;
  tbl.glVertexAttrib4fARB = debug_glVertexAttrib4fARB;
  tbl.glVertexAttrib4fvARB = debug_glVertexAttrib4fvARB;
  tbl.glVertexAttrib4ivARB = debug_glVertexAttrib4ivARB;
  tbl.glVertexAttrib4sARB = debug_glVertexAttrib4sARB;
  tbl.glVertexAttrib4svARB = debug_glVertexAttrib4svARB;
  tbl.glVertexAttrib4ubvARB = debug_glVertexAttrib4ubvARB;
  tbl.glVertexAttrib4uivARB = debug_glVertexAttrib4uivARB;
  tbl.glVertexAttrib4usvARB = debug_glVertexAttrib4usvARB;
  tbl.glVertexAttribPointerARB = debug_glVertexAttribPointerARB;
  tbl.glEnableVertexAttribArrayARB = debug_glEnableVertexAttribArrayARB;
  tbl.glDisableVertexAttribArrayARB = debug_glDisableVertexAttribArrayARB;
  tbl.glProgramStringARB = debug_glProgramStringARB;
  tbl.glBindProgramARB = debug_glBindProgramARB;
  tbl.glDeleteProgramsARB = debug_glDeleteProgramsARB;
  tbl.glGenProgramsARB = debug_glGenProgramsARB;
  tbl.glProgramEnvParameter4dARB = debug_glProgramEnvParameter4dARB;
  tbl.glProgramEnvParameter4dvARB = debug_glProgramEnvParameter4dvARB;
  tbl.glProgramEnvParameter4fARB = debug_glProgramEnvParameter4fARB;
  tbl.glProgramEnvParameter4fvARB = debug_glProgramEnvParameter4fvARB;
  tbl.glProgramLocalParameter4dARB = debug_glProgramLocalParameter4dARB;
  tbl.glProgramLocalParameter4dvARB = debug_glProgramLocalParameter4dvARB;
  tbl.glProgramLocalParameter4fARB = debug_glProgramLocalParameter4fARB;
  tbl.glProgramLocalParameter4fvARB = debug_glProgramLocalParameter4fvARB;
  tbl.glGetProgramEnvParameterdvARB = debug_glGetProgramEnvParameterdvARB;
  tbl.glGetProgramEnvParameterfvARB = debug_glGetProgramEnvParameterfvARB;
  tbl.glGetProgramLocalParameterdvARB = debug_glGetProgramLocalParameterdvARB;
  tbl.glGetProgramLocalParameterfvARB = debug_glGetProgramLocalParameterfvARB;
  tbl.glGetProgramivARB = debug_glGetProgramivARB;
  tbl.glGetProgramStringARB = debug_glGetProgramStringARB;
  tbl.glGetVertexAttribdvARB = debug_glGetVertexAttribdvARB;
  tbl.glGetVertexAttribfvARB = debug_glGetVertexAttribfvARB;
  tbl.glGetVertexAttribivARB = debug_glGetVertexAttribivARB;
  tbl.glGetVertexAttribPointervARB = debug_glGetVertexAttribPointervARB;
  tbl.glIsProgramARB = debug_glIsProgramARB;

  // GL_ARB_vertex_buffer_object

  tbl.glBindBufferARB = debug_glBindBufferARB;
  tbl.glDeleteBuffersARB = debug_glDeleteBuffersARB;
  tbl.glGenBuffersARB = debug_glGenBuffersARB;
  tbl.glIsBufferARB = debug_glIsBufferARB;
  tbl.glBufferDataARB = debug_glBufferDataARB;
  tbl.glBufferSubDataARB = debug_glBufferSubDataARB;
  tbl.glGetBufferSubDataARB = debug_glGetBufferSubDataARB;
  tbl.glMapBufferARB = debug_glMapBufferARB;
  tbl.glUnmapBufferARB = debug_glUnmapBufferARB;
  tbl.glGetBufferParameterivARB = debug_glGetBufferParameterivARB;
  tbl.glGetBufferPointervARB = debug_glGetBufferPointervARB;

  // GL_ARB_occlusion_query

  tbl.glGenQueriesARB = debug_glGenQueriesARB;
  tbl.glDeleteQueriesARB = debug_glDeleteQueriesARB;
  tbl.glIsQueryARB = debug_glIsQueryARB;
  tbl.glBeginQueryARB = debug_glBeginQueryARB;
  tbl.glEndQueryARB = debug_glEndQueryARB;
  tbl.glGetQueryivARB = debug_glGetQueryivARB;
  tbl.glGetQueryObjectivARB = debug_glGetQueryObjectivARB;
  tbl.glGetQueryObjectuivARB = debug_glGetQueryObjectuivARB;

  // GL_ARB_shader_objects

  tbl.glDeleteObjectARB = debug_glDeleteObjectARB;
  tbl.glGetHandleARB = debug_glGetHandleARB;
  tbl.glDetachObjectARB = debug_glDetachObjectARB;
  tbl.glCreateShaderObjectARB = debug_glCreateShaderObjectARB;
  tbl.glShaderSourceARB = debug_glShaderSourceARB;
  tbl.glCompileShaderARB = debug_glCompileShaderARB;
  tbl.glCreateProgramObjectARB = debug_glCreateProgramObjectARB;
  tbl.glAttachObjectARB = debug_glAttachObjectARB;
  tbl.glLinkProgramARB = debug_glLinkProgramARB;
  tbl.glUseProgramObjectARB = debug_glUseProgramObjectARB;
  tbl.glValidateProgramARB = debug_glValidateProgramARB;
  tbl.glUniform1fARB = debug_glUniform1fARB;
  tbl.glUniform2fARB = debug_glUniform2fARB;
  tbl.glUniform3fARB = debug_glUniform3fARB;
  tbl.glUniform4fARB = debug_glUniform4fARB;
  tbl.glUniform1iARB = debug_glUniform1iARB;
  tbl.glUniform2iARB = debug_glUniform2iARB;
  tbl.glUniform3iARB = debug_glUniform3iARB;
  tbl.glUniform4iARB = debug_glUniform4iARB;
  tbl.glUniform1fvARB = debug_glUniform1fvARB;
  tbl.glUniform2fvARB = debug_glUniform2fvARB;
  tbl.glUniform3fvARB = debug_glUniform3fvARB;
  tbl.glUniform4fvARB = debug_glUniform4fvARB;
  tbl.glUniform1ivARB = debug_glUniform1ivARB;
  tbl.glUniform2ivARB = debug_glUniform2ivARB;
  tbl.glUniform3ivARB = debug_glUniform3ivARB;
  tbl.glUniform4ivARB = debug_glUniform4ivARB;
  tbl.glUniformMatrix2fvARB = debug_glUniformMatrix2fvARB;
  tbl.glUniformMatrix3fvARB = debug_glUniformMatrix3fvARB;
  tbl.glUniformMatrix4fvARB = debug_glUniformMatrix4fvARB;
  tbl.glGetObjectParameterfvARB = debug_glGetObjectParameterfvARB;
  tbl.glGetObjectParameterivARB = debug_glGetObjectParameterivARB;
  tbl.glGetInfoLogARB = debug_glGetInfoLogARB;
  tbl.glGetAttachedObjectsARB = debug_glGetAttachedObjectsARB;
  tbl.glGetUniformLocationARB = debug_glGetUniformLocationARB;
  tbl.glGetActiveUniformARB = debug_glGetActiveUniformARB;
  tbl.glGetUniformfvARB = debug_glGetUniformfvARB;
  tbl.glGetUniformivARB = debug_glGetUniformivARB;
  tbl.glGetShaderSourceARB = debug_glGetShaderSourceARB;

  // GL_ARB_vertex_shader

  tbl.glBindAttribLocationARB = debug_glBindAttribLocationARB;
  tbl.glGetActiveAttribARB = debug_glGetActiveAttribARB;
  tbl.glGetAttribLocationARB = debug_glGetAttribLocationARB;

  // GL_ARB_draw_buffers

  tbl.glDrawBuffersARB = debug_glDrawBuffersARB;

  // GL_ARB_color_buffer_float

  tbl.glClampColorARB = debug_glClampColorARB;

  // GL_ARB_draw_instanced

  tbl.glDrawArraysInstancedARB = debug_glDrawArraysInstancedARB;
  tbl.glDrawElementsInstancedARB = debug_glDrawElementsInstancedARB;

  // GL_ARB_framebuffer_object

  tbl.glIsRenderbuffer = debug_glIsRenderbuffer;
  tbl.glBindRenderbuffer = debug_glBindRenderbuffer;
  tbl.glDeleteRenderbuffers = debug_glDeleteRenderbuffers;
  tbl.glGenRenderbuffers = debug_glGenRenderbuffers;
  tbl.glRenderbufferStorage = debug_glRenderbufferStorage;
  tbl.glGetRenderbufferParameteriv = debug_glGetRenderbufferParameteriv;
  tbl.glIsFramebuffer = debug_glIsFramebuffer;
  tbl.glBindFramebuffer = debug_glBindFramebuffer;
  tbl.glDeleteFramebuffers = debug_glDeleteFramebuffers;
  tbl.glGenFramebuffers = debug_glGenFramebuffers;
  tbl.glCheckFramebufferStatus = debug_glCheckFramebufferStatus;
  tbl.glFramebufferTexture1D = debug_glFramebufferTexture1D;
  tbl.glFramebufferTexture2D = debug_glFramebufferTexture2D;
  tbl.glFramebufferTexture3D = debug_glFramebufferTexture3D;
  tbl.glFramebufferRenderbuffer = debug_glFramebufferRenderbuffer;
  tbl.glGetFramebufferAttachmentParameteriv = debug_glGetFramebufferAttachmentParameteriv;
  tbl.glGenerateMipmap = debug_glGenerateMipmap;
  tbl.glBlitFramebuffer = debug_glBlitFramebuffer;
  tbl.glRenderbufferStorageMultisample = debug_glRenderbufferStorageMultisample;
  tbl.glFramebufferTextureLayer = debug_glFramebufferTextureLayer;

  // GL_ARB_geometry_shader4

  tbl.glProgramParameteriARB = debug_glProgramParameteriARB;
  tbl.glFramebufferTextureARB = debug_glFramebufferTextureARB;
  tbl.glFramebufferTextureLayerARB = debug_glFramebufferTextureLayerARB;
  tbl.glFramebufferTextureFaceARB = debug_glFramebufferTextureFaceARB;

  // GL_ARB_instanced_arrays

  tbl.glVertexAttribDivisorARB = debug_glVertexAttribDivisorARB;

  // GL_ARB_map_buffer_range

  tbl.glMapBufferRange = debug_glMapBufferRange;
  tbl.glFlushMappedBufferRange = debug_glFlushMappedBufferRange;

  // GL_ARB_texture_buffer_object

  tbl.glTexBufferARB = debug_glTexBufferARB;

  // GL_ARB_vertex_array_object

  tbl.glBindVertexArray = debug_glBindVertexArray;
  tbl.glDeleteVertexArrays = debug_glDeleteVertexArrays;
  tbl.glGenVertexArrays = debug_glGenVertexArrays;
  tbl.glIsVertexArray = debug_glIsVertexArray;

  // GL_ARB_uniform_buffer_object

  tbl.glGetUniformIndices = debug_glGetUniformIndices;
  tbl.glGetActiveUniformsiv = debug_glGetActiveUniformsiv;
  tbl.glGetActiveUniformName = debug_glGetActiveUniformName;
  tbl.glGetUniformBlockIndex = debug_glGetUniformBlockIndex;
  tbl.glGetActiveUniformBlockiv = debug_glGetActiveUniformBlockiv;
  tbl.glGetActiveUniformBlockName = debug_glGetActiveUniformBlockName;
  tbl.glUniformBlockBinding = debug_glUniformBlockBinding;

  // GL_ARB_copy_buffer

  tbl.glCopyBufferSubData = debug_glCopyBufferSubData;

  // GL_ARB_draw_elements_base_vertex

  tbl.glDrawElementsBaseVertex = debug_glDrawElementsBaseVertex;
  tbl.glDrawRangeElementsBaseVertex = debug_glDrawRangeElementsBaseVertex;
  tbl.glDrawElementsInstancedBaseVertex = debug_glDrawElementsInstancedBaseVertex;
  tbl.glMultiDrawElementsBaseVertex = debug_glMultiDrawElementsBaseVertex;

  // GL_ARB_provoking_vertex

  tbl.glProvokingVertex = debug_glProvokingVertex;

  // GL_ARB_sync

  tbl.glFenceSync = debug_glFenceSync;
  tbl.glIsSync = debug_glIsSync;
  tbl.glDeleteSync = debug_glDeleteSync;
  tbl.glClientWaitSync = debug_glClientWaitSync;
  tbl.glWaitSync = debug_glWaitSync;
  tbl.glGetInteger64v = debug_glGetInteger64v;
  tbl.glGetSynciv = debug_glGetSynciv;

  // GL_ARB_texture_multisample

  tbl.glTexImage2DMultisample = debug_glTexImage2DMultisample;
  tbl.glTexImage3DMultisample = debug_glTexImage3DMultisample;
  tbl.glGetMultisamplefv = debug_glGetMultisamplefv;
  tbl.glSampleMaski = debug_glSampleMaski;

  // GL_ARB_draw_buffers_blend

  tbl.glBlendEquationiARB = debug_glBlendEquationiARB;
  tbl.glBlendEquationSeparateiARB = debug_glBlendEquationSeparateiARB;
  tbl.glBlendFunciARB = debug_glBlendFunciARB;
  tbl.glBlendFuncSeparateiARB = debug_glBlendFuncSeparateiARB;

  // GL_ARB_sample_shading

  tbl.glMinSampleShadingARB = debug_glMinSampleShadingARB;

  // GL_ARB_shading_language_include

  tbl.glNamedStringARB = debug_glNamedStringARB;
  tbl.glDeleteNamedStringARB = debug_glDeleteNamedStringARB;
  tbl.glCompileShaderIncludeARB = debug_glCompileShaderIncludeARB;
  tbl.glIsNamedStringARB = debug_glIsNamedStringARB;
  tbl.glGetNamedStringARB = debug_glGetNamedStringARB;
  tbl.glGetNamedStringivARB = debug_glGetNamedStringivARB;

  // GL_ARB_debug_output

  tbl.glDebugMessageControlARB = debug_glDebugMessageControlARB;
  tbl.glDebugMessageInsertARB = debug_glDebugMessageInsertARB;
  tbl.glDebugMessageCallbackARB = debug_glDebugMessageCallbackARB;
  tbl.glGetDebugMessageLogARB = debug_glGetDebugMessageLogARB;

  // GL_ARB_robustness

  tbl.glGetGraphicsResetStatusARB = debug_glGetGraphicsResetStatusARB;
  tbl.glGetnMapdvARB = debug_glGetnMapdvARB;
  tbl.glGetnMapfvARB = debug_glGetnMapfvARB;
  tbl.glGetnMapivARB = debug_glGetnMapivARB;
  tbl.glGetnPixelMapfvARB = debug_glGetnPixelMapfvARB;
  tbl.glGetnPixelMapuivARB = debug_glGetnPixelMapuivARB;
  tbl.glGetnPixelMapusvARB = debug_glGetnPixelMapusvARB;
  tbl.glGetnPolygonStippleARB = debug_glGetnPolygonStippleARB;
  tbl.glGetnTexImageARB = debug_glGetnTexImageARB;
  tbl.glReadnPixelsARB = debug_glReadnPixelsARB;
  tbl.glGetnColorTableARB = debug_glGetnColorTableARB;
  tbl.glGetnConvolutionFilterARB = debug_glGetnConvolutionFilterARB;
  tbl.glGetnSeparableFilterARB = debug_glGetnSeparableFilterARB;
  tbl.glGetnHistogramARB = debug_glGetnHistogramARB;
  tbl.glGetnMinmaxARB = debug_glGetnMinmaxARB;
  tbl.glGetnCompressedTexImageARB = debug_glGetnCompressedTexImageARB;
  tbl.glGetnUniformfvARB = debug_glGetnUniformfvARB;
  tbl.glGetnUniformivARB = debug_glGetnUniformivARB;
  tbl.glGetnUniformuivARB = debug_glGetnUniformuivARB;
  tbl.glGetnUniformdvARB = debug_glGetnUniformdvARB;

  // GL_EXT_blend_color

  tbl.glBlendColorEXT = debug_glBlendColorEXT;

  // GL_EXT_polygon_offset

  tbl.glPolygonOffsetEXT = debug_glPolygonOffsetEXT;

  // GL_EXT_texture3D

  tbl.glTexImage3DEXT = debug_glTexImage3DEXT;

  // GL_SGIS_texture_filter4

  tbl.glGetTexFilterFuncSGIS = debug_glGetTexFilterFuncSGIS;
  tbl.glTexFilterFuncSGIS = debug_glTexFilterFuncSGIS;

  // GL_EXT_subtexture

  tbl.glTexSubImage1DEXT = debug_glTexSubImage1DEXT;
  tbl.glTexSubImage2DEXT = debug_glTexSubImage2DEXT;
  tbl.glTexSubImage3DEXT = debug_glTexSubImage3DEXT;

  // GL_EXT_copy_texture

  tbl.glCopyTexImage1DEXT = debug_glCopyTexImage1DEXT;
  tbl.glCopyTexImage2DEXT = debug_glCopyTexImage2DEXT;
  tbl.glCopyTexSubImage1DEXT = debug_glCopyTexSubImage1DEXT;
  tbl.glCopyTexSubImage2DEXT = debug_glCopyTexSubImage2DEXT;
  tbl.glCopyTexSubImage3DEXT = debug_glCopyTexSubImage3DEXT;

  // GL_EXT_histogram

  tbl.glGetHistogramEXT = debug_glGetHistogramEXT;
  tbl.glGetHistogramParameterfvEXT = debug_glGetHistogramParameterfvEXT;
  tbl.glGetHistogramParameterivEXT = debug_glGetHistogramParameterivEXT;
  tbl.glGetMinmaxEXT = debug_glGetMinmaxEXT;
  tbl.glGetMinmaxParameterfvEXT = debug_glGetMinmaxParameterfvEXT;
  tbl.glGetMinmaxParameterivEXT = debug_glGetMinmaxParameterivEXT;
  tbl.glHistogramEXT = debug_glHistogramEXT;
  tbl.glMinmaxEXT = debug_glMinmaxEXT;
  tbl.glResetHistogramEXT = debug_glResetHistogramEXT;
  tbl.glResetMinmaxEXT = debug_glResetMinmaxEXT;

  // GL_EXT_convolution

  tbl.glConvolutionFilter1DEXT = debug_glConvolutionFilter1DEXT;
  tbl.glConvolutionFilter2DEXT = debug_glConvolutionFilter2DEXT;
  tbl.glConvolutionParameterfEXT = debug_glConvolutionParameterfEXT;
  tbl.glConvolutionParameterfvEXT = debug_glConvolutionParameterfvEXT;
  tbl.glConvolutionParameteriEXT = debug_glConvolutionParameteriEXT;
  tbl.glConvolutionParameterivEXT = debug_glConvolutionParameterivEXT;
  tbl.glCopyConvolutionFilter1DEXT = debug_glCopyConvolutionFilter1DEXT;
  tbl.glCopyConvolutionFilter2DEXT = debug_glCopyConvolutionFilter2DEXT;
  tbl.glGetConvolutionFilterEXT = debug_glGetConvolutionFilterEXT;
  tbl.glGetConvolutionParameterfvEXT = debug_glGetConvolutionParameterfvEXT;
  tbl.glGetConvolutionParameterivEXT = debug_glGetConvolutionParameterivEXT;
  tbl.glGetSeparableFilterEXT = debug_glGetSeparableFilterEXT;
  tbl.glSeparableFilter2DEXT = debug_glSeparableFilter2DEXT;

  // GL_SGI_color_table

  tbl.glColorTableSGI = debug_glColorTableSGI;
  tbl.glColorTableParameterfvSGI = debug_glColorTableParameterfvSGI;
  tbl.glColorTableParameterivSGI = debug_glColorTableParameterivSGI;
  tbl.glCopyColorTableSGI = debug_glCopyColorTableSGI;
  tbl.glGetColorTableSGI = debug_glGetColorTableSGI;
  tbl.glGetColorTableParameterfvSGI = debug_glGetColorTableParameterfvSGI;
  tbl.glGetColorTableParameterivSGI = debug_glGetColorTableParameterivSGI;

  // GL_SGIX_pixel_texture

  tbl.glPixelTexGenSGIX = debug_glPixelTexGenSGIX;

  // GL_SGIS_pixel_texture

  tbl.glPixelTexGenParameteriSGIS = debug_glPixelTexGenParameteriSGIS;
  tbl.glPixelTexGenParameterivSGIS = debug_glPixelTexGenParameterivSGIS;
  tbl.glPixelTexGenParameterfSGIS = debug_glPixelTexGenParameterfSGIS;
  tbl.glPixelTexGenParameterfvSGIS = debug_glPixelTexGenParameterfvSGIS;
  tbl.glGetPixelTexGenParameterivSGIS = debug_glGetPixelTexGenParameterivSGIS;
  tbl.glGetPixelTexGenParameterfvSGIS = debug_glGetPixelTexGenParameterfvSGIS;

  // GL_SGIS_texture4D

  tbl.glTexImage4DSGIS = debug_glTexImage4DSGIS;
  tbl.glTexSubImage4DSGIS = debug_glTexSubImage4DSGIS;

  // GL_EXT_texture_object

  tbl.glAreTexturesResidentEXT = debug_glAreTexturesResidentEXT;
  tbl.glBindTextureEXT = debug_glBindTextureEXT;
  tbl.glDeleteTexturesEXT = debug_glDeleteTexturesEXT;
  tbl.glGenTexturesEXT = debug_glGenTexturesEXT;
  tbl.glIsTextureEXT = debug_glIsTextureEXT;
  tbl.glPrioritizeTexturesEXT = debug_glPrioritizeTexturesEXT;

  // GL_SGIS_detail_texture

  tbl.glDetailTexFuncSGIS = debug_glDetailTexFuncSGIS;
  tbl.glGetDetailTexFuncSGIS = debug_glGetDetailTexFuncSGIS;

  // GL_SGIS_sharpen_texture

  tbl.glSharpenTexFuncSGIS = debug_glSharpenTexFuncSGIS;
  tbl.glGetSharpenTexFuncSGIS = debug_glGetSharpenTexFuncSGIS;

  // GL_SGIS_multisample

  tbl.glSampleMaskSGIS = debug_glSampleMaskSGIS;
  tbl.glSamplePatternSGIS = debug_glSamplePatternSGIS;

  // GL_EXT_vertex_array

  tbl.glArrayElementEXT = debug_glArrayElementEXT;
  tbl.glColorPointerEXT = debug_glColorPointerEXT;
  tbl.glDrawArraysEXT = debug_glDrawArraysEXT;
  tbl.glEdgeFlagPointerEXT = debug_glEdgeFlagPointerEXT;
  tbl.glGetPointervEXT = debug_glGetPointervEXT;
  tbl.glIndexPointerEXT = debug_glIndexPointerEXT;
  tbl.glNormalPointerEXT = debug_glNormalPointerEXT;
  tbl.glTexCoordPointerEXT = debug_glTexCoordPointerEXT;
  tbl.glVertexPointerEXT = debug_glVertexPointerEXT;

  // GL_EXT_blend_minmax

  tbl.glBlendEquationEXT = debug_glBlendEquationEXT;

  // GL_SGIX_sprite

  tbl.glSpriteParameterfSGIX = debug_glSpriteParameterfSGIX;
  tbl.glSpriteParameterfvSGIX = debug_glSpriteParameterfvSGIX;
  tbl.glSpriteParameteriSGIX = debug_glSpriteParameteriSGIX;
  tbl.glSpriteParameterivSGIX = debug_glSpriteParameterivSGIX;

  // GL_EXT_point_parameters

  tbl.glPointParameterfEXT = debug_glPointParameterfEXT;
  tbl.glPointParameterfvEXT = debug_glPointParameterfvEXT;

  // GL_SGIS_point_parameters

  tbl.glPointParameterfSGIS = debug_glPointParameterfSGIS;
  tbl.glPointParameterfvSGIS = debug_glPointParameterfvSGIS;

  // GL_SGIX_instruments

  tbl.glGetInstrumentsSGIX = debug_glGetInstrumentsSGIX;
  tbl.glInstrumentsBufferSGIX = debug_glInstrumentsBufferSGIX;
  tbl.glPollInstrumentsSGIX = debug_glPollInstrumentsSGIX;
  tbl.glReadInstrumentsSGIX = debug_glReadInstrumentsSGIX;
  tbl.glStartInstrumentsSGIX = debug_glStartInstrumentsSGIX;
  tbl.glStopInstrumentsSGIX = debug_glStopInstrumentsSGIX;

  // GL_SGIX_framezoom

  tbl.glFrameZoomSGIX = debug_glFrameZoomSGIX;

  // GL_SGIX_tag_sample_buffer

  tbl.glTagSampleBufferSGIX = debug_glTagSampleBufferSGIX;

  // GL_SGIX_polynomial_ffd

  tbl.glDeformationMap3dSGIX = debug_glDeformationMap3dSGIX;
  tbl.glDeformationMap3fSGIX = debug_glDeformationMap3fSGIX;
  tbl.glDeformSGIX = debug_glDeformSGIX;
  tbl.glLoadIdentityDeformationMapSGIX = debug_glLoadIdentityDeformationMapSGIX;

  // GL_SGIX_reference_plane

  tbl.glReferencePlaneSGIX = debug_glReferencePlaneSGIX;

  // GL_SGIX_flush_raster

  tbl.glFlushRasterSGIX = debug_glFlushRasterSGIX;

  // GL_SGIS_fog_function

  tbl.glFogFuncSGIS = debug_glFogFuncSGIS;
  tbl.glGetFogFuncSGIS = debug_glGetFogFuncSGIS;

  // GL_HP_image_transform

  tbl.glImageTransformParameteriHP = debug_glImageTransformParameteriHP;
  tbl.glImageTransformParameterfHP = debug_glImageTransformParameterfHP;
  tbl.glImageTransformParameterivHP = debug_glImageTransformParameterivHP;
  tbl.glImageTransformParameterfvHP = debug_glImageTransformParameterfvHP;
  tbl.glGetImageTransformParameterivHP = debug_glGetImageTransformParameterivHP;
  tbl.glGetImageTransformParameterfvHP = debug_glGetImageTransformParameterfvHP;

  // GL_EXT_color_subtable

  tbl.glColorSubTableEXT = debug_glColorSubTableEXT;
  tbl.glCopyColorSubTableEXT = debug_glCopyColorSubTableEXT;

  // GL_PGI_misc_hints

  tbl.glHintPGI = debug_glHintPGI;

  // GL_EXT_paletted_texture

  tbl.glColorTableEXT = debug_glColorTableEXT;
  tbl.glGetColorTableEXT = debug_glGetColorTableEXT;
  tbl.glGetColorTableParameterivEXT = debug_glGetColorTableParameterivEXT;
  tbl.glGetColorTableParameterfvEXT = debug_glGetColorTableParameterfvEXT;

  // GL_SGIX_list_priority

  tbl.glGetListParameterfvSGIX = debug_glGetListParameterfvSGIX;
  tbl.glGetListParameterivSGIX = debug_glGetListParameterivSGIX;
  tbl.glListParameterfSGIX = debug_glListParameterfSGIX;
  tbl.glListParameterfvSGIX = debug_glListParameterfvSGIX;
  tbl.glListParameteriSGIX = debug_glListParameteriSGIX;
  tbl.glListParameterivSGIX = debug_glListParameterivSGIX;

  // GL_EXT_index_material

  tbl.glIndexMaterialEXT = debug_glIndexMaterialEXT;

  // GL_EXT_index_func

  tbl.glIndexFuncEXT = debug_glIndexFuncEXT;

  // GL_EXT_compiled_vertex_array

  tbl.glLockArraysEXT = debug_glLockArraysEXT;
  tbl.glUnlockArraysEXT = debug_glUnlockArraysEXT;

  // GL_EXT_cull_vertex

  tbl.glCullParameterdvEXT = debug_glCullParameterdvEXT;
  tbl.glCullParameterfvEXT = debug_glCullParameterfvEXT;

  // GL_SGIX_fragment_lighting

  tbl.glFragmentColorMaterialSGIX = debug_glFragmentColorMaterialSGIX;
  tbl.glFragmentLightfSGIX = debug_glFragmentLightfSGIX;
  tbl.glFragmentLightfvSGIX = debug_glFragmentLightfvSGIX;
  tbl.glFragmentLightiSGIX = debug_glFragmentLightiSGIX;
  tbl.glFragmentLightivSGIX = debug_glFragmentLightivSGIX;
  tbl.glFragmentLightModelfSGIX = debug_glFragmentLightModelfSGIX;
  tbl.glFragmentLightModelfvSGIX = debug_glFragmentLightModelfvSGIX;
  tbl.glFragmentLightModeliSGIX = debug_glFragmentLightModeliSGIX;
  tbl.glFragmentLightModelivSGIX = debug_glFragmentLightModelivSGIX;
  tbl.glFragmentMaterialfSGIX = debug_glFragmentMaterialfSGIX;
  tbl.glFragmentMaterialfvSGIX = debug_glFragmentMaterialfvSGIX;
  tbl.glFragmentMaterialiSGIX = debug_glFragmentMaterialiSGIX;
  tbl.glFragmentMaterialivSGIX = debug_glFragmentMaterialivSGIX;
  tbl.glGetFragmentLightfvSGIX = debug_glGetFragmentLightfvSGIX;
  tbl.glGetFragmentLightivSGIX = debug_glGetFragmentLightivSGIX;
  tbl.glGetFragmentMaterialfvSGIX = debug_glGetFragmentMaterialfvSGIX;
  tbl.glGetFragmentMaterialivSGIX = debug_glGetFragmentMaterialivSGIX;
  tbl.glLightEnviSGIX = debug_glLightEnviSGIX;

  // GL_EXT_draw_range_elements

  tbl.glDrawRangeElementsEXT = debug_glDrawRangeElementsEXT;

  // GL_EXT_light_texture

  tbl.glApplyTextureEXT = debug_glApplyTextureEXT;
  tbl.glTextureLightEXT = debug_glTextureLightEXT;
  tbl.glTextureMaterialEXT = debug_glTextureMaterialEXT;

  // GL_EXT_scene_marker

  tbl.glBeginSceneEXT = debug_glBeginSceneEXT;
  tbl.glEndSceneEXT = debug_glEndSceneEXT;

  // GL_SGIX_async

  tbl.glAsyncMarkerSGIX = debug_glAsyncMarkerSGIX;
  tbl.glFinishAsyncSGIX = debug_glFinishAsyncSGIX;
  tbl.glPollAsyncSGIX = debug_glPollAsyncSGIX;
  tbl.glGenAsyncMarkersSGIX = debug_glGenAsyncMarkersSGIX;
  tbl.glDeleteAsyncMarkersSGIX = debug_glDeleteAsyncMarkersSGIX;
  tbl.glIsAsyncMarkerSGIX = debug_glIsAsyncMarkerSGIX;

  // GL_INTEL_parallel_arrays

  tbl.glVertexPointervINTEL = debug_glVertexPointervINTEL;
  tbl.glNormalPointervINTEL = debug_glNormalPointervINTEL;
  tbl.glColorPointervINTEL = debug_glColorPointervINTEL;
  tbl.glTexCoordPointervINTEL = debug_glTexCoordPointervINTEL;

  // GL_EXT_pixel_transform

  tbl.glPixelTransformParameteriEXT = debug_glPixelTransformParameteriEXT;
  tbl.glPixelTransformParameterfEXT = debug_glPixelTransformParameterfEXT;
  tbl.glPixelTransformParameterivEXT = debug_glPixelTransformParameterivEXT;
  tbl.glPixelTransformParameterfvEXT = debug_glPixelTransformParameterfvEXT;

  // GL_EXT_secondary_color

  tbl.glSecondaryColor3bEXT = debug_glSecondaryColor3bEXT;
  tbl.glSecondaryColor3bvEXT = debug_glSecondaryColor3bvEXT;
  tbl.glSecondaryColor3dEXT = debug_glSecondaryColor3dEXT;
  tbl.glSecondaryColor3dvEXT = debug_glSecondaryColor3dvEXT;
  tbl.glSecondaryColor3fEXT = debug_glSecondaryColor3fEXT;
  tbl.glSecondaryColor3fvEXT = debug_glSecondaryColor3fvEXT;
  tbl.glSecondaryColor3iEXT = debug_glSecondaryColor3iEXT;
  tbl.glSecondaryColor3ivEXT = debug_glSecondaryColor3ivEXT;
  tbl.glSecondaryColor3sEXT = debug_glSecondaryColor3sEXT;
  tbl.glSecondaryColor3svEXT = debug_glSecondaryColor3svEXT;
  tbl.glSecondaryColor3ubEXT = debug_glSecondaryColor3ubEXT;
  tbl.glSecondaryColor3ubvEXT = debug_glSecondaryColor3ubvEXT;
  tbl.glSecondaryColor3uiEXT = debug_glSecondaryColor3uiEXT;
  tbl.glSecondaryColor3uivEXT = debug_glSecondaryColor3uivEXT;
  tbl.glSecondaryColor3usEXT = debug_glSecondaryColor3usEXT;
  tbl.glSecondaryColor3usvEXT = debug_glSecondaryColor3usvEXT;
  tbl.glSecondaryColorPointerEXT = debug_glSecondaryColorPointerEXT;

  // GL_EXT_texture_perturb_normal

  tbl.glTextureNormalEXT = debug_glTextureNormalEXT;

  // GL_EXT_multi_draw_arrays

  tbl.glMultiDrawArraysEXT = debug_glMultiDrawArraysEXT;
  tbl.glMultiDrawElementsEXT = debug_glMultiDrawElementsEXT;

  // GL_EXT_fog_coord

  tbl.glFogCoordfEXT = debug_glFogCoordfEXT;
  tbl.glFogCoordfvEXT = debug_glFogCoordfvEXT;
  tbl.glFogCoorddEXT = debug_glFogCoorddEXT;
  tbl.glFogCoorddvEXT = debug_glFogCoorddvEXT;
  tbl.glFogCoordPointerEXT = debug_glFogCoordPointerEXT;

  // GL_EXT_coordinate_frame

  tbl.glTangent3bEXT = debug_glTangent3bEXT;
  tbl.glTangent3bvEXT = debug_glTangent3bvEXT;
  tbl.glTangent3dEXT = debug_glTangent3dEXT;
  tbl.glTangent3dvEXT = debug_glTangent3dvEXT;
  tbl.glTangent3fEXT = debug_glTangent3fEXT;
  tbl.glTangent3fvEXT = debug_glTangent3fvEXT;
  tbl.glTangent3iEXT = debug_glTangent3iEXT;
  tbl.glTangent3ivEXT = debug_glTangent3ivEXT;
  tbl.glTangent3sEXT = debug_glTangent3sEXT;
  tbl.glTangent3svEXT = debug_glTangent3svEXT;
  tbl.glBinormal3bEXT = debug_glBinormal3bEXT;
  tbl.glBinormal3bvEXT = debug_glBinormal3bvEXT;
  tbl.glBinormal3dEXT = debug_glBinormal3dEXT;
  tbl.glBinormal3dvEXT = debug_glBinormal3dvEXT;
  tbl.glBinormal3fEXT = debug_glBinormal3fEXT;
  tbl.glBinormal3fvEXT = debug_glBinormal3fvEXT;
  tbl.glBinormal3iEXT = debug_glBinormal3iEXT;
  tbl.glBinormal3ivEXT = debug_glBinormal3ivEXT;
  tbl.glBinormal3sEXT = debug_glBinormal3sEXT;
  tbl.glBinormal3svEXT = debug_glBinormal3svEXT;
  tbl.glTangentPointerEXT = debug_glTangentPointerEXT;
  tbl.glBinormalPointerEXT = debug_glBinormalPointerEXT;

  // GL_SUNX_constant_data

  tbl.glFinishTextureSUNX = debug_glFinishTextureSUNX;

  // GL_SUN_global_alpha

  tbl.glGlobalAlphaFactorbSUN = debug_glGlobalAlphaFactorbSUN;
  tbl.glGlobalAlphaFactorsSUN = debug_glGlobalAlphaFactorsSUN;
  tbl.glGlobalAlphaFactoriSUN = debug_glGlobalAlphaFactoriSUN;
  tbl.glGlobalAlphaFactorfSUN = debug_glGlobalAlphaFactorfSUN;
  tbl.glGlobalAlphaFactordSUN = debug_glGlobalAlphaFactordSUN;
  tbl.glGlobalAlphaFactorubSUN = debug_glGlobalAlphaFactorubSUN;
  tbl.glGlobalAlphaFactorusSUN = debug_glGlobalAlphaFactorusSUN;
  tbl.glGlobalAlphaFactoruiSUN = debug_glGlobalAlphaFactoruiSUN;

  // GL_SUN_triangle_list

  tbl.glReplacementCodeuiSUN = debug_glReplacementCodeuiSUN;
  tbl.glReplacementCodeusSUN = debug_glReplacementCodeusSUN;
  tbl.glReplacementCodeubSUN = debug_glReplacementCodeubSUN;
  tbl.glReplacementCodeuivSUN = debug_glReplacementCodeuivSUN;
  tbl.glReplacementCodeusvSUN = debug_glReplacementCodeusvSUN;
  tbl.glReplacementCodeubvSUN = debug_glReplacementCodeubvSUN;
  tbl.glReplacementCodePointerSUN = debug_glReplacementCodePointerSUN;

  // GL_SUN_vertex

  tbl.glColor4ubVertex2fSUN = debug_glColor4ubVertex2fSUN;
  tbl.glColor4ubVertex2fvSUN = debug_glColor4ubVertex2fvSUN;
  tbl.glColor4ubVertex3fSUN = debug_glColor4ubVertex3fSUN;
  tbl.glColor4ubVertex3fvSUN = debug_glColor4ubVertex3fvSUN;
  tbl.glColor3fVertex3fSUN = debug_glColor3fVertex3fSUN;
  tbl.glColor3fVertex3fvSUN = debug_glColor3fVertex3fvSUN;
  tbl.glNormal3fVertex3fSUN = debug_glNormal3fVertex3fSUN;
  tbl.glNormal3fVertex3fvSUN = debug_glNormal3fVertex3fvSUN;
  tbl.glColor4fNormal3fVertex3fSUN = debug_glColor4fNormal3fVertex3fSUN;
  tbl.glColor4fNormal3fVertex3fvSUN = debug_glColor4fNormal3fVertex3fvSUN;
  tbl.glTexCoord2fVertex3fSUN = debug_glTexCoord2fVertex3fSUN;
  tbl.glTexCoord2fVertex3fvSUN = debug_glTexCoord2fVertex3fvSUN;
  tbl.glTexCoord4fVertex4fSUN = debug_glTexCoord4fVertex4fSUN;
  tbl.glTexCoord4fVertex4fvSUN = debug_glTexCoord4fVertex4fvSUN;
  tbl.glTexCoord2fColor4ubVertex3fSUN = debug_glTexCoord2fColor4ubVertex3fSUN;
  tbl.glTexCoord2fColor4ubVertex3fvSUN = debug_glTexCoord2fColor4ubVertex3fvSUN;
  tbl.glTexCoord2fColor3fVertex3fSUN = debug_glTexCoord2fColor3fVertex3fSUN;
  tbl.glTexCoord2fColor3fVertex3fvSUN = debug_glTexCoord2fColor3fVertex3fvSUN;
  tbl.glTexCoord2fNormal3fVertex3fSUN = debug_glTexCoord2fNormal3fVertex3fSUN;
  tbl.glTexCoord2fNormal3fVertex3fvSUN = debug_glTexCoord2fNormal3fVertex3fvSUN;
  tbl.glTexCoord2fColor4fNormal3fVertex3fSUN = debug_glTexCoord2fColor4fNormal3fVertex3fSUN;
  tbl.glTexCoord2fColor4fNormal3fVertex3fvSUN = debug_glTexCoord2fColor4fNormal3fVertex3fvSUN;
  tbl.glTexCoord4fColor4fNormal3fVertex4fSUN = debug_glTexCoord4fColor4fNormal3fVertex4fSUN;
  tbl.glTexCoord4fColor4fNormal3fVertex4fvSUN = debug_glTexCoord4fColor4fNormal3fVertex4fvSUN;
  tbl.glReplacementCodeuiVertex3fSUN = debug_glReplacementCodeuiVertex3fSUN;
  tbl.glReplacementCodeuiVertex3fvSUN = debug_glReplacementCodeuiVertex3fvSUN;
  tbl.glReplacementCodeuiColor4ubVertex3fSUN = debug_glReplacementCodeuiColor4ubVertex3fSUN;
  tbl.glReplacementCodeuiColor4ubVertex3fvSUN = debug_glReplacementCodeuiColor4ubVertex3fvSUN;
  tbl.glReplacementCodeuiColor3fVertex3fSUN = debug_glReplacementCodeuiColor3fVertex3fSUN;
  tbl.glReplacementCodeuiColor3fVertex3fvSUN = debug_glReplacementCodeuiColor3fVertex3fvSUN;
  tbl.glReplacementCodeuiNormal3fVertex3fSUN = debug_glReplacementCodeuiNormal3fVertex3fSUN;
  tbl.glReplacementCodeuiNormal3fVertex3fvSUN = debug_glReplacementCodeuiNormal3fVertex3fvSUN;
  tbl.glReplacementCodeuiColor4fNormal3fVertex3fSUN = debug_glReplacementCodeuiColor4fNormal3fVertex3fSUN;
  tbl.glReplacementCodeuiColor4fNormal3fVertex3fvSUN = debug_glReplacementCodeuiColor4fNormal3fVertex3fvSUN;
  tbl.glReplacementCodeuiTexCoord2fVertex3fSUN = debug_glReplacementCodeuiTexCoord2fVertex3fSUN;
  tbl.glReplacementCodeuiTexCoord2fVertex3fvSUN = debug_glReplacementCodeuiTexCoord2fVertex3fvSUN;
  tbl.glReplacementCodeuiTexCoord2fNormal3fVertex3fSUN = debug_glReplacementCodeuiTexCoord2fNormal3fVertex3fSUN;
  tbl.glReplacementCodeuiTexCoord2fNormal3fVertex3fvSUN = debug_glReplacementCodeuiTexCoord2fNormal3fVertex3fvSUN;
  tbl.glReplacementCodeuiTexCoord2fColor4fNormal3fVertex3fSUN = debug_glReplacementCodeuiTexCoord2fColor4fNormal3fVertex3fSUN;
  tbl.glReplacementCodeuiTexCoord2fColor4fNormal3fVertex3fvSUN = debug_glReplacementCodeuiTexCoord2fColor4fNormal3fVertex3fvSUN;

  // GL_EXT_blend_func_separate

  tbl.glBlendFuncSeparateEXT = debug_glBlendFuncSeparateEXT;

  // GL_INGR_blend_func_separate

  tbl.glBlendFuncSeparateINGR = debug_glBlendFuncSeparateINGR;

  // GL_EXT_vertex_weighting

  tbl.glVertexWeightfEXT = debug_glVertexWeightfEXT;
  tbl.glVertexWeightfvEXT = debug_glVertexWeightfvEXT;
  tbl.glVertexWeightPointerEXT = debug_glVertexWeightPointerEXT;

  // GL_NV_vertex_array_range

  tbl.glFlushVertexArrayRangeNV = debug_glFlushVertexArrayRangeNV;
  tbl.glVertexArrayRangeNV = debug_glVertexArrayRangeNV;

  // GL_NV_register_combiners

  tbl.glCombinerParameterfvNV = debug_glCombinerParameterfvNV;
  tbl.glCombinerParameterfNV = debug_glCombinerParameterfNV;
  tbl.glCombinerParameterivNV = debug_glCombinerParameterivNV;
  tbl.glCombinerParameteriNV = debug_glCombinerParameteriNV;
  tbl.glCombinerInputNV = debug_glCombinerInputNV;
  tbl.glCombinerOutputNV = debug_glCombinerOutputNV;
  tbl.glFinalCombinerInputNV = debug_glFinalCombinerInputNV;
  tbl.glGetCombinerInputParameterfvNV = debug_glGetCombinerInputParameterfvNV;
  tbl.glGetCombinerInputParameterivNV = debug_glGetCombinerInputParameterivNV;
  tbl.glGetCombinerOutputParameterfvNV = debug_glGetCombinerOutputParameterfvNV;
  tbl.glGetCombinerOutputParameterivNV = debug_glGetCombinerOutputParameterivNV;
  tbl.glGetFinalCombinerInputParameterfvNV = debug_glGetFinalCombinerInputParameterfvNV;
  tbl.glGetFinalCombinerInputParameterivNV = debug_glGetFinalCombinerInputParameterivNV;

  // GL_MESA_resize_buffers

  tbl.glResizeBuffersMESA = debug_glResizeBuffersMESA;

  // GL_MESA_window_pos

  tbl.glWindowPos2dMESA = debug_glWindowPos2dMESA;
  tbl.glWindowPos2dvMESA = debug_glWindowPos2dvMESA;
  tbl.glWindowPos2fMESA = debug_glWindowPos2fMESA;
  tbl.glWindowPos2fvMESA = debug_glWindowPos2fvMESA;
  tbl.glWindowPos2iMESA = debug_glWindowPos2iMESA;
  tbl.glWindowPos2ivMESA = debug_glWindowPos2ivMESA;
  tbl.glWindowPos2sMESA = debug_glWindowPos2sMESA;
  tbl.glWindowPos2svMESA = debug_glWindowPos2svMESA;
  tbl.glWindowPos3dMESA = debug_glWindowPos3dMESA;
  tbl.glWindowPos3dvMESA = debug_glWindowPos3dvMESA;
  tbl.glWindowPos3fMESA = debug_glWindowPos3fMESA;
  tbl.glWindowPos3fvMESA = debug_glWindowPos3fvMESA;
  tbl.glWindowPos3iMESA = debug_glWindowPos3iMESA;
  tbl.glWindowPos3ivMESA = debug_glWindowPos3ivMESA;
  tbl.glWindowPos3sMESA = debug_glWindowPos3sMESA;
  tbl.glWindowPos3svMESA = debug_glWindowPos3svMESA;
  tbl.glWindowPos4dMESA = debug_glWindowPos4dMESA;
  tbl.glWindowPos4dvMESA = debug_glWindowPos4dvMESA;
  tbl.glWindowPos4fMESA = debug_glWindowPos4fMESA;
  tbl.glWindowPos4fvMESA = debug_glWindowPos4fvMESA;
  tbl.glWindowPos4iMESA = debug_glWindowPos4iMESA;
  tbl.glWindowPos4ivMESA = debug_glWindowPos4ivMESA;
  tbl.glWindowPos4sMESA = debug_glWindowPos4sMESA;
  tbl.glWindowPos4svMESA = debug_glWindowPos4svMESA;

  // GL_IBM_multimode_draw_arrays

  tbl.glMultiModeDrawArraysIBM = debug_glMultiModeDrawArraysIBM;
  tbl.glMultiModeDrawElementsIBM = debug_glMultiModeDrawElementsIBM;

  // GL_IBM_vertex_array_lists

  tbl.glColorPointerListIBM = debug_glColorPointerListIBM;
  tbl.glSecondaryColorPointerListIBM = debug_glSecondaryColorPointerListIBM;
  tbl.glEdgeFlagPointerListIBM = debug_glEdgeFlagPointerListIBM;
  tbl.glFogCoordPointerListIBM = debug_glFogCoordPointerListIBM;
  tbl.glIndexPointerListIBM = debug_glIndexPointerListIBM;
  tbl.glNormalPointerListIBM = debug_glNormalPointerListIBM;
  tbl.glTexCoordPointerListIBM = debug_glTexCoordPointerListIBM;
  tbl.glVertexPointerListIBM = debug_glVertexPointerListIBM;

  // GL_3DFX_tbuffer

  tbl.glTbufferMask3DFX = debug_glTbufferMask3DFX;

  // GL_EXT_multisample

  tbl.glSampleMaskEXT = debug_glSampleMaskEXT;
  tbl.glSamplePatternEXT = debug_glSamplePatternEXT;

  // GL_SGIS_texture_color_mask

  tbl.glTextureColorMaskSGIS = debug_glTextureColorMaskSGIS;

  // GL_SGIX_igloo_interface

  tbl.glIglooInterfaceSGIX = debug_glIglooInterfaceSGIX;

  // GL_NV_fence

  tbl.glDeleteFencesNV = debug_glDeleteFencesNV;
  tbl.glGenFencesNV = debug_glGenFencesNV;
  tbl.glIsFenceNV = debug_glIsFenceNV;
  tbl.glTestFenceNV = debug_glTestFenceNV;
  tbl.glGetFenceivNV = debug_glGetFenceivNV;
  tbl.glFinishFenceNV = debug_glFinishFenceNV;
  tbl.glSetFenceNV = debug_glSetFenceNV;

  // GL_NV_evaluators

  tbl.glMapControlPointsNV = debug_glMapControlPointsNV;
  tbl.glMapParameterivNV = debug_glMapParameterivNV;
  tbl.glMapParameterfvNV = debug_glMapParameterfvNV;
  tbl.glGetMapControlPointsNV = debug_glGetMapControlPointsNV;
  tbl.glGetMapParameterivNV = debug_glGetMapParameterivNV;
  tbl.glGetMapParameterfvNV = debug_glGetMapParameterfvNV;
  tbl.glGetMapAttribParameterivNV = debug_glGetMapAttribParameterivNV;
  tbl.glGetMapAttribParameterfvNV = debug_glGetMapAttribParameterfvNV;
  tbl.glEvalMapsNV = debug_glEvalMapsNV;

  // GL_NV_register_combiners2

  tbl.glCombinerStageParameterfvNV = debug_glCombinerStageParameterfvNV;
  tbl.glGetCombinerStageParameterfvNV = debug_glGetCombinerStageParameterfvNV;

  // GL_NV_vertex_program

  tbl.glAreProgramsResidentNV = debug_glAreProgramsResidentNV;
  tbl.glBindProgramNV = debug_glBindProgramNV;
  tbl.glDeleteProgramsNV = debug_glDeleteProgramsNV;
  tbl.glExecuteProgramNV = debug_glExecuteProgramNV;
  tbl.glGenProgramsNV = debug_glGenProgramsNV;
  tbl.glGetProgramParameterdvNV = debug_glGetProgramParameterdvNV;
  tbl.glGetProgramParameterfvNV = debug_glGetProgramParameterfvNV;
  tbl.glGetProgramivNV = debug_glGetProgramivNV;
  tbl.glGetProgramStringNV = debug_glGetProgramStringNV;
  tbl.glGetTrackMatrixivNV = debug_glGetTrackMatrixivNV;
  tbl.glGetVertexAttribdvNV = debug_glGetVertexAttribdvNV;
  tbl.glGetVertexAttribfvNV = debug_glGetVertexAttribfvNV;
  tbl.glGetVertexAttribivNV = debug_glGetVertexAttribivNV;
  tbl.glGetVertexAttribPointervNV = debug_glGetVertexAttribPointervNV;
  tbl.glIsProgramNV = debug_glIsProgramNV;
  tbl.glLoadProgramNV = debug_glLoadProgramNV;
  tbl.glProgramParameter4dNV = debug_glProgramParameter4dNV;
  tbl.glProgramParameter4dvNV = debug_glProgramParameter4dvNV;
  tbl.glProgramParameter4fNV = debug_glProgramParameter4fNV;
  tbl.glProgramParameter4fvNV = debug_glProgramParameter4fvNV;
  tbl.glProgramParameters4dvNV = debug_glProgramParameters4dvNV;
  tbl.glProgramParameters4fvNV = debug_glProgramParameters4fvNV;
  tbl.glRequestResidentProgramsNV = debug_glRequestResidentProgramsNV;
  tbl.glTrackMatrixNV = debug_glTrackMatrixNV;
  tbl.glVertexAttribPointerNV = debug_glVertexAttribPointerNV;
  tbl.glVertexAttrib1dNV = debug_glVertexAttrib1dNV;
  tbl.glVertexAttrib1dvNV = debug_glVertexAttrib1dvNV;
  tbl.glVertexAttrib1fNV = debug_glVertexAttrib1fNV;
  tbl.glVertexAttrib1fvNV = debug_glVertexAttrib1fvNV;
  tbl.glVertexAttrib1sNV = debug_glVertexAttrib1sNV;
  tbl.glVertexAttrib1svNV = debug_glVertexAttrib1svNV;
  tbl.glVertexAttrib2dNV = debug_glVertexAttrib2dNV;
  tbl.glVertexAttrib2dvNV = debug_glVertexAttrib2dvNV;
  tbl.glVertexAttrib2fNV = debug_glVertexAttrib2fNV;
  tbl.glVertexAttrib2fvNV = debug_glVertexAttrib2fvNV;
  tbl.glVertexAttrib2sNV = debug_glVertexAttrib2sNV;
  tbl.glVertexAttrib2svNV = debug_glVertexAttrib2svNV;
  tbl.glVertexAttrib3dNV = debug_glVertexAttrib3dNV;
  tbl.glVertexAttrib3dvNV = debug_glVertexAttrib3dvNV;
  tbl.glVertexAttrib3fNV = debug_glVertexAttrib3fNV;
  tbl.glVertexAttrib3fvNV = debug_glVertexAttrib3fvNV;
  tbl.glVertexAttrib3sNV = debug_glVertexAttrib3sNV;
  tbl.glVertexAttrib3svNV = debug_glVertexAttrib3svNV;
  tbl.glVertexAttrib4dNV = debug_glVertexAttrib4dNV;
  tbl.glVertexAttrib4dvNV = debug_glVertexAttrib4dvNV;
  tbl.glVertexAttrib4fNV = debug_glVertexAttrib4fNV;
  tbl.glVertexAttrib4fvNV = debug_glVertexAttrib4fvNV;
  tbl.glVertexAttrib4sNV = debug_glVertexAttrib4sNV;
  tbl.glVertexAttrib4svNV = debug_glVertexAttrib4svNV;
  tbl.glVertexAttrib4ubNV = debug_glVertexAttrib4ubNV;
  tbl.glVertexAttrib4ubvNV = debug_glVertexAttrib4ubvNV;
  tbl.glVertexAttribs1dvNV = debug_glVertexAttribs1dvNV;
  tbl.glVertexAttribs1fvNV = debug_glVertexAttribs1fvNV;
  tbl.glVertexAttribs1svNV = debug_glVertexAttribs1svNV;
  tbl.glVertexAttribs2dvNV = debug_glVertexAttribs2dvNV;
  tbl.glVertexAttribs2fvNV = debug_glVertexAttribs2fvNV;
  tbl.glVertexAttribs2svNV = debug_glVertexAttribs2svNV;
  tbl.glVertexAttribs3dvNV = debug_glVertexAttribs3dvNV;
  tbl.glVertexAttribs3fvNV = debug_glVertexAttribs3fvNV;
  tbl.glVertexAttribs3svNV = debug_glVertexAttribs3svNV;
  tbl.glVertexAttribs4dvNV = debug_glVertexAttribs4dvNV;
  tbl.glVertexAttribs4fvNV = debug_glVertexAttribs4fvNV;
  tbl.glVertexAttribs4svNV = debug_glVertexAttribs4svNV;
  tbl.glVertexAttribs4ubvNV = debug_glVertexAttribs4ubvNV;

  // GL_ATI_envmap_bumpmap

  tbl.glTexBumpParameterivATI = debug_glTexBumpParameterivATI;
  tbl.glTexBumpParameterfvATI = debug_glTexBumpParameterfvATI;
  tbl.glGetTexBumpParameterivATI = debug_glGetTexBumpParameterivATI;
  tbl.glGetTexBumpParameterfvATI = debug_glGetTexBumpParameterfvATI;

  // GL_ATI_fragment_shader

  tbl.glGenFragmentShadersATI = debug_glGenFragmentShadersATI;
  tbl.glBindFragmentShaderATI = debug_glBindFragmentShaderATI;
  tbl.glDeleteFragmentShaderATI = debug_glDeleteFragmentShaderATI;
  tbl.glBeginFragmentShaderATI = debug_glBeginFragmentShaderATI;
  tbl.glEndFragmentShaderATI = debug_glEndFragmentShaderATI;
  tbl.glPassTexCoordATI = debug_glPassTexCoordATI;
  tbl.glSampleMapATI = debug_glSampleMapATI;
  tbl.glColorFragmentOp1ATI = debug_glColorFragmentOp1ATI;
  tbl.glColorFragmentOp2ATI = debug_glColorFragmentOp2ATI;
  tbl.glColorFragmentOp3ATI = debug_glColorFragmentOp3ATI;
  tbl.glAlphaFragmentOp1ATI = debug_glAlphaFragmentOp1ATI;
  tbl.glAlphaFragmentOp2ATI = debug_glAlphaFragmentOp2ATI;
  tbl.glAlphaFragmentOp3ATI = debug_glAlphaFragmentOp3ATI;
  tbl.glSetFragmentShaderConstantATI = debug_glSetFragmentShaderConstantATI;

  // GL_ATI_pn_triangles

  tbl.glPNTrianglesiATI = debug_glPNTrianglesiATI;
  tbl.glPNTrianglesfATI = debug_glPNTrianglesfATI;

  // GL_ATI_vertex_array_object

  tbl.glNewObjectBufferATI = debug_glNewObjectBufferATI;
  tbl.glIsObjectBufferATI = debug_glIsObjectBufferATI;
  tbl.glUpdateObjectBufferATI = debug_glUpdateObjectBufferATI;
  tbl.glGetObjectBufferfvATI = debug_glGetObjectBufferfvATI;
  tbl.glGetObjectBufferivATI = debug_glGetObjectBufferivATI;
  tbl.glFreeObjectBufferATI = debug_glFreeObjectBufferATI;
  tbl.glArrayObjectATI = debug_glArrayObjectATI;
  tbl.glGetArrayObjectfvATI = debug_glGetArrayObjectfvATI;
  tbl.glGetArrayObjectivATI = debug_glGetArrayObjectivATI;
  tbl.glVariantArrayObjectATI = debug_glVariantArrayObjectATI;
  tbl.glGetVariantArrayObjectfvATI = debug_glGetVariantArrayObjectfvATI;
  tbl.glGetVariantArrayObjectivATI = debug_glGetVariantArrayObjectivATI;

  // GL_EXT_vertex_shader

  tbl.glBeginVertexShaderEXT = debug_glBeginVertexShaderEXT;
  tbl.glEndVertexShaderEXT = debug_glEndVertexShaderEXT;
  tbl.glBindVertexShaderEXT = debug_glBindVertexShaderEXT;
  tbl.glGenVertexShadersEXT = debug_glGenVertexShadersEXT;
  tbl.glDeleteVertexShaderEXT = debug_glDeleteVertexShaderEXT;
  tbl.glShaderOp1EXT = debug_glShaderOp1EXT;
  tbl.glShaderOp2EXT = debug_glShaderOp2EXT;
  tbl.glShaderOp3EXT = debug_glShaderOp3EXT;
  tbl.glSwizzleEXT = debug_glSwizzleEXT;
  tbl.glWriteMaskEXT = debug_glWriteMaskEXT;
  tbl.glInsertComponentEXT = debug_glInsertComponentEXT;
  tbl.glExtractComponentEXT = debug_glExtractComponentEXT;
  tbl.glGenSymbolsEXT = debug_glGenSymbolsEXT;
  tbl.glSetInvariantEXT = debug_glSetInvariantEXT;
  tbl.glSetLocalConstantEXT = debug_glSetLocalConstantEXT;
  tbl.glVariantbvEXT = debug_glVariantbvEXT;
  tbl.glVariantsvEXT = debug_glVariantsvEXT;
  tbl.glVariantivEXT = debug_glVariantivEXT;
  tbl.glVariantfvEXT = debug_glVariantfvEXT;
  tbl.glVariantdvEXT = debug_glVariantdvEXT;
  tbl.glVariantubvEXT = debug_glVariantubvEXT;
  tbl.glVariantusvEXT = debug_glVariantusvEXT;
  tbl.glVariantuivEXT = debug_glVariantuivEXT;
  tbl.glVariantPointerEXT = debug_glVariantPointerEXT;
  tbl.glEnableVariantClientStateEXT = debug_glEnableVariantClientStateEXT;
  tbl.glDisableVariantClientStateEXT = debug_glDisableVariantClientStateEXT;
  tbl.glBindLightParameterEXT = debug_glBindLightParameterEXT;
  tbl.glBindMaterialParameterEXT = debug_glBindMaterialParameterEXT;
  tbl.glBindTexGenParameterEXT = debug_glBindTexGenParameterEXT;
  tbl.glBindTextureUnitParameterEXT = debug_glBindTextureUnitParameterEXT;
  tbl.glBindParameterEXT = debug_glBindParameterEXT;
  tbl.glIsVariantEnabledEXT = debug_glIsVariantEnabledEXT;
  tbl.glGetVariantBooleanvEXT = debug_glGetVariantBooleanvEXT;
  tbl.glGetVariantIntegervEXT = debug_glGetVariantIntegervEXT;
  tbl.glGetVariantFloatvEXT = debug_glGetVariantFloatvEXT;
  tbl.glGetVariantPointervEXT = debug_glGetVariantPointervEXT;
  tbl.glGetInvariantBooleanvEXT = debug_glGetInvariantBooleanvEXT;
  tbl.glGetInvariantIntegervEXT = debug_glGetInvariantIntegervEXT;
  tbl.glGetInvariantFloatvEXT = debug_glGetInvariantFloatvEXT;
  tbl.glGetLocalConstantBooleanvEXT = debug_glGetLocalConstantBooleanvEXT;
  tbl.glGetLocalConstantIntegervEXT = debug_glGetLocalConstantIntegervEXT;
  tbl.glGetLocalConstantFloatvEXT = debug_glGetLocalConstantFloatvEXT;

  // GL_ATI_vertex_streams

  tbl.glVertexStream1sATI = debug_glVertexStream1sATI;
  tbl.glVertexStream1svATI = debug_glVertexStream1svATI;
  tbl.glVertexStream1iATI = debug_glVertexStream1iATI;
  tbl.glVertexStream1ivATI = debug_glVertexStream1ivATI;
  tbl.glVertexStream1fATI = debug_glVertexStream1fATI;
  tbl.glVertexStream1fvATI = debug_glVertexStream1fvATI;
  tbl.glVertexStream1dATI = debug_glVertexStream1dATI;
  tbl.glVertexStream1dvATI = debug_glVertexStream1dvATI;
  tbl.glVertexStream2sATI = debug_glVertexStream2sATI;
  tbl.glVertexStream2svATI = debug_glVertexStream2svATI;
  tbl.glVertexStream2iATI = debug_glVertexStream2iATI;
  tbl.glVertexStream2ivATI = debug_glVertexStream2ivATI;
  tbl.glVertexStream2fATI = debug_glVertexStream2fATI;
  tbl.glVertexStream2fvATI = debug_glVertexStream2fvATI;
  tbl.glVertexStream2dATI = debug_glVertexStream2dATI;
  tbl.glVertexStream2dvATI = debug_glVertexStream2dvATI;
  tbl.glVertexStream3sATI = debug_glVertexStream3sATI;
  tbl.glVertexStream3svATI = debug_glVertexStream3svATI;
  tbl.glVertexStream3iATI = debug_glVertexStream3iATI;
  tbl.glVertexStream3ivATI = debug_glVertexStream3ivATI;
  tbl.glVertexStream3fATI = debug_glVertexStream3fATI;
  tbl.glVertexStream3fvATI = debug_glVertexStream3fvATI;
  tbl.glVertexStream3dATI = debug_glVertexStream3dATI;
  tbl.glVertexStream3dvATI = debug_glVertexStream3dvATI;
  tbl.glVertexStream4sATI = debug_glVertexStream4sATI;
  tbl.glVertexStream4svATI = debug_glVertexStream4svATI;
  tbl.glVertexStream4iATI = debug_glVertexStream4iATI;
  tbl.glVertexStream4ivATI = debug_glVertexStream4ivATI;
  tbl.glVertexStream4fATI = debug_glVertexStream4fATI;
  tbl.glVertexStream4fvATI = debug_glVertexStream4fvATI;
  tbl.glVertexStream4dATI = debug_glVertexStream4dATI;
  tbl.glVertexStream4dvATI = debug_glVertexStream4dvATI;
  tbl.glNormalStream3bATI = debug_glNormalStream3bATI;
  tbl.glNormalStream3bvATI = debug_glNormalStream3bvATI;
  tbl.glNormalStream3sATI = debug_glNormalStream3sATI;
  tbl.glNormalStream3svATI = debug_glNormalStream3svATI;
  tbl.glNormalStream3iATI = debug_glNormalStream3iATI;
  tbl.glNormalStream3ivATI = debug_glNormalStream3ivATI;
  tbl.glNormalStream3fATI = debug_glNormalStream3fATI;
  tbl.glNormalStream3fvATI = debug_glNormalStream3fvATI;
  tbl.glNormalStream3dATI = debug_glNormalStream3dATI;
  tbl.glNormalStream3dvATI = debug_glNormalStream3dvATI;
  tbl.glClientActiveVertexStreamATI = debug_glClientActiveVertexStreamATI;
  tbl.glVertexBlendEnviATI = debug_glVertexBlendEnviATI;
  tbl.glVertexBlendEnvfATI = debug_glVertexBlendEnvfATI;

  // GL_ATI_element_array

  tbl.glElementPointerATI = debug_glElementPointerATI;
  tbl.glDrawElementArrayATI = debug_glDrawElementArrayATI;
  tbl.glDrawRangeElementArrayATI = debug_glDrawRangeElementArrayATI;

  // GL_SUN_mesh_array

  tbl.glDrawMeshArraysSUN = debug_glDrawMeshArraysSUN;

  // GL_NV_occlusion_query

  tbl.glGenOcclusionQueriesNV = debug_glGenOcclusionQueriesNV;
  tbl.glDeleteOcclusionQueriesNV = debug_glDeleteOcclusionQueriesNV;
  tbl.glIsOcclusionQueryNV = debug_glIsOcclusionQueryNV;
  tbl.glBeginOcclusionQueryNV = debug_glBeginOcclusionQueryNV;
  tbl.glEndOcclusionQueryNV = debug_glEndOcclusionQueryNV;
  tbl.glGetOcclusionQueryivNV = debug_glGetOcclusionQueryivNV;
  tbl.glGetOcclusionQueryuivNV = debug_glGetOcclusionQueryuivNV;

  // GL_NV_point_sprite

  tbl.glPointParameteriNV = debug_glPointParameteriNV;
  tbl.glPointParameterivNV = debug_glPointParameterivNV;

  // GL_EXT_stencil_two_side

  tbl.glActiveStencilFaceEXT = debug_glActiveStencilFaceEXT;

  // GL_APPLE_element_array

  tbl.glElementPointerAPPLE = debug_glElementPointerAPPLE;
  tbl.glDrawElementArrayAPPLE = debug_glDrawElementArrayAPPLE;
  tbl.glDrawRangeElementArrayAPPLE = debug_glDrawRangeElementArrayAPPLE;
  tbl.glMultiDrawElementArrayAPPLE = debug_glMultiDrawElementArrayAPPLE;
  tbl.glMultiDrawRangeElementArrayAPPLE = debug_glMultiDrawRangeElementArrayAPPLE;

  // GL_APPLE_fence

  tbl.glGenFencesAPPLE = debug_glGenFencesAPPLE;
  tbl.glDeleteFencesAPPLE = debug_glDeleteFencesAPPLE;
  tbl.glSetFenceAPPLE = debug_glSetFenceAPPLE;
  tbl.glIsFenceAPPLE = debug_glIsFenceAPPLE;
  tbl.glTestFenceAPPLE = debug_glTestFenceAPPLE;
  tbl.glFinishFenceAPPLE = debug_glFinishFenceAPPLE;
  tbl.glTestObjectAPPLE = debug_glTestObjectAPPLE;
  tbl.glFinishObjectAPPLE = debug_glFinishObjectAPPLE;

  // GL_APPLE_vertex_array_object

  tbl.glBindVertexArrayAPPLE = debug_glBindVertexArrayAPPLE;
  tbl.glDeleteVertexArraysAPPLE = debug_glDeleteVertexArraysAPPLE;
  tbl.glGenVertexArraysAPPLE = debug_glGenVertexArraysAPPLE;
  tbl.glIsVertexArrayAPPLE = debug_glIsVertexArrayAPPLE;

  // GL_APPLE_vertex_array_range

  tbl.glVertexArrayRangeAPPLE = debug_glVertexArrayRangeAPPLE;
  tbl.glFlushVertexArrayRangeAPPLE = debug_glFlushVertexArrayRangeAPPLE;
  tbl.glVertexArrayParameteriAPPLE = debug_glVertexArrayParameteriAPPLE;

  // GL_ATI_draw_buffers

  tbl.glDrawBuffersATI = debug_glDrawBuffersATI;

  // GL_NV_fragment_program

  tbl.glProgramNamedParameter4fNV = debug_glProgramNamedParameter4fNV;
  tbl.glProgramNamedParameter4dNV = debug_glProgramNamedParameter4dNV;
  tbl.glProgramNamedParameter4fvNV = debug_glProgramNamedParameter4fvNV;
  tbl.glProgramNamedParameter4dvNV = debug_glProgramNamedParameter4dvNV;
  tbl.glGetProgramNamedParameterfvNV = debug_glGetProgramNamedParameterfvNV;
  tbl.glGetProgramNamedParameterdvNV = debug_glGetProgramNamedParameterdvNV;

  // GL_NV_half_float

  tbl.glVertex2hNV = debug_glVertex2hNV;
  tbl.glVertex2hvNV = debug_glVertex2hvNV;
  tbl.glVertex3hNV = debug_glVertex3hNV;
  tbl.glVertex3hvNV = debug_glVertex3hvNV;
  tbl.glVertex4hNV = debug_glVertex4hNV;
  tbl.glVertex4hvNV = debug_glVertex4hvNV;
  tbl.glNormal3hNV = debug_glNormal3hNV;
  tbl.glNormal3hvNV = debug_glNormal3hvNV;
  tbl.glColor3hNV = debug_glColor3hNV;
  tbl.glColor3hvNV = debug_glColor3hvNV;
  tbl.glColor4hNV = debug_glColor4hNV;
  tbl.glColor4hvNV = debug_glColor4hvNV;
  tbl.glTexCoord1hNV = debug_glTexCoord1hNV;
  tbl.glTexCoord1hvNV = debug_glTexCoord1hvNV;
  tbl.glTexCoord2hNV = debug_glTexCoord2hNV;
  tbl.glTexCoord2hvNV = debug_glTexCoord2hvNV;
  tbl.glTexCoord3hNV = debug_glTexCoord3hNV;
  tbl.glTexCoord3hvNV = debug_glTexCoord3hvNV;
  tbl.glTexCoord4hNV = debug_glTexCoord4hNV;
  tbl.glTexCoord4hvNV = debug_glTexCoord4hvNV;
  tbl.glMultiTexCoord1hNV = debug_glMultiTexCoord1hNV;
  tbl.glMultiTexCoord1hvNV = debug_glMultiTexCoord1hvNV;
  tbl.glMultiTexCoord2hNV = debug_glMultiTexCoord2hNV;
  tbl.glMultiTexCoord2hvNV = debug_glMultiTexCoord2hvNV;
  tbl.glMultiTexCoord3hNV = debug_glMultiTexCoord3hNV;
  tbl.glMultiTexCoord3hvNV = debug_glMultiTexCoord3hvNV;
  tbl.glMultiTexCoord4hNV = debug_glMultiTexCoord4hNV;
  tbl.glMultiTexCoord4hvNV = debug_glMultiTexCoord4hvNV;
  tbl.glFogCoordhNV = debug_glFogCoordhNV;
  tbl.glFogCoordhvNV = debug_glFogCoordhvNV;
  tbl.glSecondaryColor3hNV = debug_glSecondaryColor3hNV;
  tbl.glSecondaryColor3hvNV = debug_glSecondaryColor3hvNV;
  tbl.glVertexWeighthNV = debug_glVertexWeighthNV;
  tbl.glVertexWeighthvNV = debug_glVertexWeighthvNV;
  tbl.glVertexAttrib1hNV = debug_glVertexAttrib1hNV;
  tbl.glVertexAttrib1hvNV = debug_glVertexAttrib1hvNV;
  tbl.glVertexAttrib2hNV = debug_glVertexAttrib2hNV;
  tbl.glVertexAttrib2hvNV = debug_glVertexAttrib2hvNV;
  tbl.glVertexAttrib3hNV = debug_glVertexAttrib3hNV;
  tbl.glVertexAttrib3hvNV = debug_glVertexAttrib3hvNV;
  tbl.glVertexAttrib4hNV = debug_glVertexAttrib4hNV;
  tbl.glVertexAttrib4hvNV = debug_glVertexAttrib4hvNV;
  tbl.glVertexAttribs1hvNV = debug_glVertexAttribs1hvNV;
  tbl.glVertexAttribs2hvNV = debug_glVertexAttribs2hvNV;
  tbl.glVertexAttribs3hvNV = debug_glVertexAttribs3hvNV;
  tbl.glVertexAttribs4hvNV = debug_glVertexAttribs4hvNV;

  // GL_NV_pixel_data_range

  tbl.glPixelDataRangeNV = debug_glPixelDataRangeNV;
  tbl.glFlushPixelDataRangeNV = debug_glFlushPixelDataRangeNV;

  // GL_NV_primitive_restart

  tbl.glPrimitiveRestartNV = debug_glPrimitiveRestartNV;
  tbl.glPrimitiveRestartIndexNV = debug_glPrimitiveRestartIndexNV;

  // GL_ATI_map_object_buffer

  tbl.glMapObjectBufferATI = debug_glMapObjectBufferATI;
  tbl.glUnmapObjectBufferATI = debug_glUnmapObjectBufferATI;

  // GL_ATI_separate_stencil

  tbl.glStencilOpSeparateATI = debug_glStencilOpSeparateATI;
  tbl.glStencilFuncSeparateATI = debug_glStencilFuncSeparateATI;

  // GL_ATI_vertex_attrib_array_object

  tbl.glVertexAttribArrayObjectATI = debug_glVertexAttribArrayObjectATI;
  tbl.glGetVertexAttribArrayObjectfvATI = debug_glGetVertexAttribArrayObjectfvATI;
  tbl.glGetVertexAttribArrayObjectivATI = debug_glGetVertexAttribArrayObjectivATI;

  // GL_EXT_depth_bounds_test

  tbl.glDepthBoundsEXT = debug_glDepthBoundsEXT;

  // GL_EXT_blend_equation_separate

  tbl.glBlendEquationSeparateEXT = debug_glBlendEquationSeparateEXT;

  // GL_EXT_framebuffer_object

  tbl.glIsRenderbufferEXT = debug_glIsRenderbufferEXT;
  tbl.glBindRenderbufferEXT = debug_glBindRenderbufferEXT;
  tbl.glDeleteRenderbuffersEXT = debug_glDeleteRenderbuffersEXT;
  tbl.glGenRenderbuffersEXT = debug_glGenRenderbuffersEXT;
  tbl.glRenderbufferStorageEXT = debug_glRenderbufferStorageEXT;
  tbl.glGetRenderbufferParameterivEXT = debug_glGetRenderbufferParameterivEXT;
  tbl.glIsFramebufferEXT = debug_glIsFramebufferEXT;
  tbl.glBindFramebufferEXT = debug_glBindFramebufferEXT;
  tbl.glDeleteFramebuffersEXT = debug_glDeleteFramebuffersEXT;
  tbl.glGenFramebuffersEXT = debug_glGenFramebuffersEXT;
  tbl.glCheckFramebufferStatusEXT = debug_glCheckFramebufferStatusEXT;
  tbl.glFramebufferTexture1DEXT = debug_glFramebufferTexture1DEXT;
  tbl.glFramebufferTexture2DEXT = debug_glFramebufferTexture2DEXT;
  tbl.glFramebufferTexture3DEXT = debug_glFramebufferTexture3DEXT;
  tbl.glFramebufferRenderbufferEXT = debug_glFramebufferRenderbufferEXT;
  tbl.glGetFramebufferAttachmentParameterivEXT = debug_glGetFramebufferAttachmentParameterivEXT;
  tbl.glGenerateMipmapEXT = debug_glGenerateMipmapEXT;

  // GL_GREMEDY_string_marker

  tbl.glStringMarkerGREMEDY = debug_glStringMarkerGREMEDY;

  // GL_EXT_stencil_clear_tag

  tbl.glStencilClearTagEXT = debug_glStencilClearTagEXT;

  // GL_EXT_framebuffer_blit

  tbl.glBlitFramebufferEXT = debug_glBlitFramebufferEXT;

  // GL_EXT_framebuffer_multisample

  tbl.glRenderbufferStorageMultisampleEXT = debug_glRenderbufferStorageMultisampleEXT;

  // GL_EXT_timer_query

  tbl.glGetQueryObjecti64vEXT = debug_glGetQueryObjecti64vEXT;
  tbl.glGetQueryObjectui64vEXT = debug_glGetQueryObjectui64vEXT;

  // GL_EXT_gpu_program_parameters

  tbl.glProgramEnvParameters4fvEXT = debug_glProgramEnvParameters4fvEXT;
  tbl.glProgramLocalParameters4fvEXT = debug_glProgramLocalParameters4fvEXT;

  // GL_APPLE_flush_buffer_range

  tbl.glBufferParameteriAPPLE = debug_glBufferParameteriAPPLE;
  tbl.glFlushMappedBufferRangeAPPLE = debug_glFlushMappedBufferRangeAPPLE;

  // GL_NV_gpu_program4

  tbl.glProgramLocalParameterI4iNV = debug_glProgramLocalParameterI4iNV;
  tbl.glProgramLocalParameterI4ivNV = debug_glProgramLocalParameterI4ivNV;
  tbl.glProgramLocalParametersI4ivNV = debug_glProgramLocalParametersI4ivNV;
  tbl.glProgramLocalParameterI4uiNV = debug_glProgramLocalParameterI4uiNV;
  tbl.glProgramLocalParameterI4uivNV = debug_glProgramLocalParameterI4uivNV;
  tbl.glProgramLocalParametersI4uivNV = debug_glProgramLocalParametersI4uivNV;
  tbl.glProgramEnvParameterI4iNV = debug_glProgramEnvParameterI4iNV;
  tbl.glProgramEnvParameterI4ivNV = debug_glProgramEnvParameterI4ivNV;
  tbl.glProgramEnvParametersI4ivNV = debug_glProgramEnvParametersI4ivNV;
  tbl.glProgramEnvParameterI4uiNV = debug_glProgramEnvParameterI4uiNV;
  tbl.glProgramEnvParameterI4uivNV = debug_glProgramEnvParameterI4uivNV;
  tbl.glProgramEnvParametersI4uivNV = debug_glProgramEnvParametersI4uivNV;
  tbl.glGetProgramLocalParameterIivNV = debug_glGetProgramLocalParameterIivNV;
  tbl.glGetProgramLocalParameterIuivNV = debug_glGetProgramLocalParameterIuivNV;
  tbl.glGetProgramEnvParameterIivNV = debug_glGetProgramEnvParameterIivNV;
  tbl.glGetProgramEnvParameterIuivNV = debug_glGetProgramEnvParameterIuivNV;

  // GL_NV_geometry_program4

  tbl.glProgramVertexLimitNV = debug_glProgramVertexLimitNV;
  tbl.glFramebufferTextureEXT = debug_glFramebufferTextureEXT;
  tbl.glFramebufferTextureFaceEXT = debug_glFramebufferTextureFaceEXT;

  // GL_EXT_geometry_shader4

  tbl.glProgramParameteriEXT = debug_glProgramParameteriEXT;

  // GL_NV_vertex_program4

  tbl.glVertexAttribI1iEXT = debug_glVertexAttribI1iEXT;
  tbl.glVertexAttribI2iEXT = debug_glVertexAttribI2iEXT;
  tbl.glVertexAttribI3iEXT = debug_glVertexAttribI3iEXT;
  tbl.glVertexAttribI4iEXT = debug_glVertexAttribI4iEXT;
  tbl.glVertexAttribI1uiEXT = debug_glVertexAttribI1uiEXT;
  tbl.glVertexAttribI2uiEXT = debug_glVertexAttribI2uiEXT;
  tbl.glVertexAttribI3uiEXT = debug_glVertexAttribI3uiEXT;
  tbl.glVertexAttribI4uiEXT = debug_glVertexAttribI4uiEXT;
  tbl.glVertexAttribI1ivEXT = debug_glVertexAttribI1ivEXT;
  tbl.glVertexAttribI2ivEXT = debug_glVertexAttribI2ivEXT;
  tbl.glVertexAttribI3ivEXT = debug_glVertexAttribI3ivEXT;
  tbl.glVertexAttribI4ivEXT = debug_glVertexAttribI4ivEXT;
  tbl.glVertexAttribI1uivEXT = debug_glVertexAttribI1uivEXT;
  tbl.glVertexAttribI2uivEXT = debug_glVertexAttribI2uivEXT;
  tbl.glVertexAttribI3uivEXT = debug_glVertexAttribI3uivEXT;
  tbl.glVertexAttribI4uivEXT = debug_glVertexAttribI4uivEXT;
  tbl.glVertexAttribI4bvEXT = debug_glVertexAttribI4bvEXT;
  tbl.glVertexAttribI4svEXT = debug_glVertexAttribI4svEXT;
  tbl.glVertexAttribI4ubvEXT = debug_glVertexAttribI4ubvEXT;
  tbl.glVertexAttribI4usvEXT = debug_glVertexAttribI4usvEXT;
  tbl.glVertexAttribIPointerEXT = debug_glVertexAttribIPointerEXT;
  tbl.glGetVertexAttribIivEXT = debug_glGetVertexAttribIivEXT;
  tbl.glGetVertexAttribIuivEXT = debug_glGetVertexAttribIuivEXT;

  // GL_EXT_gpu_shader4

  tbl.glGetUniformuivEXT = debug_glGetUniformuivEXT;
  tbl.glBindFragDataLocationEXT = debug_glBindFragDataLocationEXT;
  tbl.glGetFragDataLocationEXT = debug_glGetFragDataLocationEXT;
  tbl.glUniform1uiEXT = debug_glUniform1uiEXT;
  tbl.glUniform2uiEXT = debug_glUniform2uiEXT;
  tbl.glUniform3uiEXT = debug_glUniform3uiEXT;
  tbl.glUniform4uiEXT = debug_glUniform4uiEXT;
  tbl.glUniform1uivEXT = debug_glUniform1uivEXT;
  tbl.glUniform2uivEXT = debug_glUniform2uivEXT;
  tbl.glUniform3uivEXT = debug_glUniform3uivEXT;
  tbl.glUniform4uivEXT = debug_glUniform4uivEXT;

  // GL_EXT_draw_instanced

  tbl.glDrawArraysInstancedEXT = debug_glDrawArraysInstancedEXT;
  tbl.glDrawElementsInstancedEXT = debug_glDrawElementsInstancedEXT;

  // GL_EXT_texture_array

  tbl.glFramebufferTextureLayerEXT = debug_glFramebufferTextureLayerEXT;

  // GL_EXT_texture_buffer_object

  tbl.glTexBufferEXT = debug_glTexBufferEXT;

  // GL_NV_depth_buffer_float

  tbl.glDepthRangedNV = debug_glDepthRangedNV;
  tbl.glClearDepthdNV = debug_glClearDepthdNV;
  tbl.glDepthBoundsdNV = debug_glDepthBoundsdNV;

  // GL_NV_framebuffer_multisample_coverage

  tbl.glRenderbufferStorageMultisampleCoverageNV = debug_glRenderbufferStorageMultisampleCoverageNV;

  // GL_NV_parameter_buffer_object

  tbl.glProgramBufferParametersfvNV = debug_glProgramBufferParametersfvNV;
  tbl.glProgramBufferParametersIivNV = debug_glProgramBufferParametersIivNV;
  tbl.glProgramBufferParametersIuivNV = debug_glProgramBufferParametersIuivNV;

  // GL_EXT_draw_buffers2

  tbl.glColorMaskIndexedEXT = debug_glColorMaskIndexedEXT;
  tbl.glGetBooleanIndexedvEXT = debug_glGetBooleanIndexedvEXT;
  tbl.glGetIntegerIndexedvEXT = debug_glGetIntegerIndexedvEXT;
  tbl.glEnableIndexedEXT = debug_glEnableIndexedEXT;
  tbl.glDisableIndexedEXT = debug_glDisableIndexedEXT;
  tbl.glIsEnabledIndexedEXT = debug_glIsEnabledIndexedEXT;

  // GL_NV_transform_feedback

  tbl.glBeginTransformFeedbackNV = debug_glBeginTransformFeedbackNV;
  tbl.glEndTransformFeedbackNV = debug_glEndTransformFeedbackNV;
  tbl.glTransformFeedbackAttribsNV = debug_glTransformFeedbackAttribsNV;
  tbl.glBindBufferRangeNV = debug_glBindBufferRangeNV;
  tbl.glBindBufferOffsetNV = debug_glBindBufferOffsetNV;
  tbl.glBindBufferBaseNV = debug_glBindBufferBaseNV;
  tbl.glTransformFeedbackVaryingsNV = debug_glTransformFeedbackVaryingsNV;
  tbl.glActiveVaryingNV = debug_glActiveVaryingNV;
  tbl.glGetVaryingLocationNV = debug_glGetVaryingLocationNV;
  tbl.glGetActiveVaryingNV = debug_glGetActiveVaryingNV;
  tbl.glGetTransformFeedbackVaryingNV = debug_glGetTransformFeedbackVaryingNV;

  // GL_EXT_bindable_uniform

  tbl.glUniformBufferEXT = debug_glUniformBufferEXT;
  tbl.glGetUniformBufferSizeEXT = debug_glGetUniformBufferSizeEXT;
  tbl.glGetUniformOffsetEXT = debug_glGetUniformOffsetEXT;

  // GL_EXT_texture_integer

  tbl.glTexParameterIivEXT = debug_glTexParameterIivEXT;
  tbl.glTexParameterIuivEXT = debug_glTexParameterIuivEXT;
  tbl.glGetTexParameterIivEXT = debug_glGetTexParameterIivEXT;
  tbl.glGetTexParameterIuivEXT = debug_glGetTexParameterIuivEXT;
  tbl.glClearColorIiEXT = debug_glClearColorIiEXT;
  tbl.glClearColorIuiEXT = debug_glClearColorIuiEXT;

  // GL_GREMEDY_frame_terminator

  tbl.glFrameTerminatorGREMEDY = debug_glFrameTerminatorGREMEDY;

  // GL_NV_conditional_render

  tbl.glBeginConditionalRenderNV = debug_glBeginConditionalRenderNV;
  tbl.glEndConditionalRenderNV = debug_glEndConditionalRenderNV;

  // GL_NV_present_video

  tbl.glPresentFrameKeyedNV = debug_glPresentFrameKeyedNV;
  tbl.glPresentFrameDualFillNV = debug_glPresentFrameDualFillNV;
  tbl.glGetVideoivNV = debug_glGetVideoivNV;
  tbl.glGetVideouivNV = debug_glGetVideouivNV;
  tbl.glGetVideoi64vNV = debug_glGetVideoi64vNV;
  tbl.glGetVideoui64vNV = debug_glGetVideoui64vNV;

  // GL_EXT_transform_feedback

  tbl.glBeginTransformFeedbackEXT = debug_glBeginTransformFeedbackEXT;
  tbl.glEndTransformFeedbackEXT = debug_glEndTransformFeedbackEXT;
  tbl.glBindBufferRangeEXT = debug_glBindBufferRangeEXT;
  tbl.glBindBufferOffsetEXT = debug_glBindBufferOffsetEXT;
  tbl.glBindBufferBaseEXT = debug_glBindBufferBaseEXT;
  tbl.glTransformFeedbackVaryingsEXT = debug_glTransformFeedbackVaryingsEXT;
  tbl.glGetTransformFeedbackVaryingEXT = debug_glGetTransformFeedbackVaryingEXT;

  // GL_EXT_direct_state_access

  tbl.glClientAttribDefaultEXT = debug_glClientAttribDefaultEXT;
  tbl.glPushClientAttribDefaultEXT = debug_glPushClientAttribDefaultEXT;
  tbl.glMatrixLoadfEXT = debug_glMatrixLoadfEXT;
  tbl.glMatrixLoaddEXT = debug_glMatrixLoaddEXT;
  tbl.glMatrixMultfEXT = debug_glMatrixMultfEXT;
  tbl.glMatrixMultdEXT = debug_glMatrixMultdEXT;
  tbl.glMatrixLoadIdentityEXT = debug_glMatrixLoadIdentityEXT;
  tbl.glMatrixRotatefEXT = debug_glMatrixRotatefEXT;
  tbl.glMatrixRotatedEXT = debug_glMatrixRotatedEXT;
  tbl.glMatrixScalefEXT = debug_glMatrixScalefEXT;
  tbl.glMatrixScaledEXT = debug_glMatrixScaledEXT;
  tbl.glMatrixTranslatefEXT = debug_glMatrixTranslatefEXT;
  tbl.glMatrixTranslatedEXT = debug_glMatrixTranslatedEXT;
  tbl.glMatrixFrustumEXT = debug_glMatrixFrustumEXT;
  tbl.glMatrixOrthoEXT = debug_glMatrixOrthoEXT;
  tbl.glMatrixPopEXT = debug_glMatrixPopEXT;
  tbl.glMatrixPushEXT = debug_glMatrixPushEXT;
  tbl.glMatrixLoadTransposefEXT = debug_glMatrixLoadTransposefEXT;
  tbl.glMatrixLoadTransposedEXT = debug_glMatrixLoadTransposedEXT;
  tbl.glMatrixMultTransposefEXT = debug_glMatrixMultTransposefEXT;
  tbl.glMatrixMultTransposedEXT = debug_glMatrixMultTransposedEXT;
  tbl.glTextureParameterfEXT = debug_glTextureParameterfEXT;
  tbl.glTextureParameterfvEXT = debug_glTextureParameterfvEXT;
  tbl.glTextureParameteriEXT = debug_glTextureParameteriEXT;
  tbl.glTextureParameterivEXT = debug_glTextureParameterivEXT;
  tbl.glTextureImage1DEXT = debug_glTextureImage1DEXT;
  tbl.glTextureImage2DEXT = debug_glTextureImage2DEXT;
  tbl.glTextureSubImage1DEXT = debug_glTextureSubImage1DEXT;
  tbl.glTextureSubImage2DEXT = debug_glTextureSubImage2DEXT;
  tbl.glCopyTextureImage1DEXT = debug_glCopyTextureImage1DEXT;
  tbl.glCopyTextureImage2DEXT = debug_glCopyTextureImage2DEXT;
  tbl.glCopyTextureSubImage1DEXT = debug_glCopyTextureSubImage1DEXT;
  tbl.glCopyTextureSubImage2DEXT = debug_glCopyTextureSubImage2DEXT;
  tbl.glGetTextureImageEXT = debug_glGetTextureImageEXT;
  tbl.glGetTextureParameterfvEXT = debug_glGetTextureParameterfvEXT;
  tbl.glGetTextureParameterivEXT = debug_glGetTextureParameterivEXT;
  tbl.glGetTextureLevelParameterfvEXT = debug_glGetTextureLevelParameterfvEXT;
  tbl.glGetTextureLevelParameterivEXT = debug_glGetTextureLevelParameterivEXT;
  tbl.glTextureImage3DEXT = debug_glTextureImage3DEXT;
  tbl.glTextureSubImage3DEXT = debug_glTextureSubImage3DEXT;
  tbl.glCopyTextureSubImage3DEXT = debug_glCopyTextureSubImage3DEXT;
  tbl.glMultiTexParameterfEXT = debug_glMultiTexParameterfEXT;
  tbl.glMultiTexParameterfvEXT = debug_glMultiTexParameterfvEXT;
  tbl.glMultiTexParameteriEXT = debug_glMultiTexParameteriEXT;
  tbl.glMultiTexParameterivEXT = debug_glMultiTexParameterivEXT;
  tbl.glMultiTexImage1DEXT = debug_glMultiTexImage1DEXT;
  tbl.glMultiTexImage2DEXT = debug_glMultiTexImage2DEXT;
  tbl.glMultiTexSubImage1DEXT = debug_glMultiTexSubImage1DEXT;
  tbl.glMultiTexSubImage2DEXT = debug_glMultiTexSubImage2DEXT;
  tbl.glCopyMultiTexImage1DEXT = debug_glCopyMultiTexImage1DEXT;
  tbl.glCopyMultiTexImage2DEXT = debug_glCopyMultiTexImage2DEXT;
  tbl.glCopyMultiTexSubImage1DEXT = debug_glCopyMultiTexSubImage1DEXT;
  tbl.glCopyMultiTexSubImage2DEXT = debug_glCopyMultiTexSubImage2DEXT;
  tbl.glGetMultiTexImageEXT = debug_glGetMultiTexImageEXT;
  tbl.glGetMultiTexParameterfvEXT = debug_glGetMultiTexParameterfvEXT;
  tbl.glGetMultiTexParameterivEXT = debug_glGetMultiTexParameterivEXT;
  tbl.glGetMultiTexLevelParameterfvEXT = debug_glGetMultiTexLevelParameterfvEXT;
  tbl.glGetMultiTexLevelParameterivEXT = debug_glGetMultiTexLevelParameterivEXT;
  tbl.glMultiTexImage3DEXT = debug_glMultiTexImage3DEXT;
  tbl.glMultiTexSubImage3DEXT = debug_glMultiTexSubImage3DEXT;
  tbl.glCopyMultiTexSubImage3DEXT = debug_glCopyMultiTexSubImage3DEXT;
  tbl.glBindMultiTextureEXT = debug_glBindMultiTextureEXT;
  tbl.glEnableClientStateIndexedEXT = debug_glEnableClientStateIndexedEXT;
  tbl.glDisableClientStateIndexedEXT = debug_glDisableClientStateIndexedEXT;
  tbl.glMultiTexCoordPointerEXT = debug_glMultiTexCoordPointerEXT;
  tbl.glMultiTexEnvfEXT = debug_glMultiTexEnvfEXT;
  tbl.glMultiTexEnvfvEXT = debug_glMultiTexEnvfvEXT;
  tbl.glMultiTexEnviEXT = debug_glMultiTexEnviEXT;
  tbl.glMultiTexEnvivEXT = debug_glMultiTexEnvivEXT;
  tbl.glMultiTexGendEXT = debug_glMultiTexGendEXT;
  tbl.glMultiTexGendvEXT = debug_glMultiTexGendvEXT;
  tbl.glMultiTexGenfEXT = debug_glMultiTexGenfEXT;
  tbl.glMultiTexGenfvEXT = debug_glMultiTexGenfvEXT;
  tbl.glMultiTexGeniEXT = debug_glMultiTexGeniEXT;
  tbl.glMultiTexGenivEXT = debug_glMultiTexGenivEXT;
  tbl.glGetMultiTexEnvfvEXT = debug_glGetMultiTexEnvfvEXT;
  tbl.glGetMultiTexEnvivEXT = debug_glGetMultiTexEnvivEXT;
  tbl.glGetMultiTexGendvEXT = debug_glGetMultiTexGendvEXT;
  tbl.glGetMultiTexGenfvEXT = debug_glGetMultiTexGenfvEXT;
  tbl.glGetMultiTexGenivEXT = debug_glGetMultiTexGenivEXT;
  tbl.glGetFloatIndexedvEXT = debug_glGetFloatIndexedvEXT;
  tbl.glGetDoubleIndexedvEXT = debug_glGetDoubleIndexedvEXT;
  tbl.glGetPointerIndexedvEXT = debug_glGetPointerIndexedvEXT;
  tbl.glCompressedTextureImage3DEXT = debug_glCompressedTextureImage3DEXT;
  tbl.glCompressedTextureImage2DEXT = debug_glCompressedTextureImage2DEXT;
  tbl.glCompressedTextureImage1DEXT = debug_glCompressedTextureImage1DEXT;
  tbl.glCompressedTextureSubImage3DEXT = debug_glCompressedTextureSubImage3DEXT;
  tbl.glCompressedTextureSubImage2DEXT = debug_glCompressedTextureSubImage2DEXT;
  tbl.glCompressedTextureSubImage1DEXT = debug_glCompressedTextureSubImage1DEXT;
  tbl.glGetCompressedTextureImageEXT = debug_glGetCompressedTextureImageEXT;
  tbl.glCompressedMultiTexImage3DEXT = debug_glCompressedMultiTexImage3DEXT;
  tbl.glCompressedMultiTexImage2DEXT = debug_glCompressedMultiTexImage2DEXT;
  tbl.glCompressedMultiTexImage1DEXT = debug_glCompressedMultiTexImage1DEXT;
  tbl.glCompressedMultiTexSubImage3DEXT = debug_glCompressedMultiTexSubImage3DEXT;
  tbl.glCompressedMultiTexSubImage2DEXT = debug_glCompressedMultiTexSubImage2DEXT;
  tbl.glCompressedMultiTexSubImage1DEXT = debug_glCompressedMultiTexSubImage1DEXT;
  tbl.glGetCompressedMultiTexImageEXT = debug_glGetCompressedMultiTexImageEXT;
  tbl.glNamedProgramStringEXT = debug_glNamedProgramStringEXT;
  tbl.glNamedProgramLocalParameter4dEXT = debug_glNamedProgramLocalParameter4dEXT;
  tbl.glNamedProgramLocalParameter4dvEXT = debug_glNamedProgramLocalParameter4dvEXT;
  tbl.glNamedProgramLocalParameter4fEXT = debug_glNamedProgramLocalParameter4fEXT;
  tbl.glNamedProgramLocalParameter4fvEXT = debug_glNamedProgramLocalParameter4fvEXT;
  tbl.glGetNamedProgramLocalParameterdvEXT = debug_glGetNamedProgramLocalParameterdvEXT;
  tbl.glGetNamedProgramLocalParameterfvEXT = debug_glGetNamedProgramLocalParameterfvEXT;
  tbl.glGetNamedProgramivEXT = debug_glGetNamedProgramivEXT;
  tbl.glGetNamedProgramStringEXT = debug_glGetNamedProgramStringEXT;
  tbl.glNamedProgramLocalParameters4fvEXT = debug_glNamedProgramLocalParameters4fvEXT;
  tbl.glNamedProgramLocalParameterI4iEXT = debug_glNamedProgramLocalParameterI4iEXT;
  tbl.glNamedProgramLocalParameterI4ivEXT = debug_glNamedProgramLocalParameterI4ivEXT;
  tbl.glNamedProgramLocalParametersI4ivEXT = debug_glNamedProgramLocalParametersI4ivEXT;
  tbl.glNamedProgramLocalParameterI4uiEXT = debug_glNamedProgramLocalParameterI4uiEXT;
  tbl.glNamedProgramLocalParameterI4uivEXT = debug_glNamedProgramLocalParameterI4uivEXT;
  tbl.glNamedProgramLocalParametersI4uivEXT = debug_glNamedProgramLocalParametersI4uivEXT;
  tbl.glGetNamedProgramLocalParameterIivEXT = debug_glGetNamedProgramLocalParameterIivEXT;
  tbl.glGetNamedProgramLocalParameterIuivEXT = debug_glGetNamedProgramLocalParameterIuivEXT;
  tbl.glTextureParameterIivEXT = debug_glTextureParameterIivEXT;
  tbl.glTextureParameterIuivEXT = debug_glTextureParameterIuivEXT;
  tbl.glGetTextureParameterIivEXT = debug_glGetTextureParameterIivEXT;
  tbl.glGetTextureParameterIuivEXT = debug_glGetTextureParameterIuivEXT;
  tbl.glMultiTexParameterIivEXT = debug_glMultiTexParameterIivEXT;
  tbl.glMultiTexParameterIuivEXT = debug_glMultiTexParameterIuivEXT;
  tbl.glGetMultiTexParameterIivEXT = debug_glGetMultiTexParameterIivEXT;
  tbl.glGetMultiTexParameterIuivEXT = debug_glGetMultiTexParameterIuivEXT;
  tbl.glProgramUniform1fEXT = debug_glProgramUniform1fEXT;
  tbl.glProgramUniform2fEXT = debug_glProgramUniform2fEXT;
  tbl.glProgramUniform3fEXT = debug_glProgramUniform3fEXT;
  tbl.glProgramUniform4fEXT = debug_glProgramUniform4fEXT;
  tbl.glProgramUniform1iEXT = debug_glProgramUniform1iEXT;
  tbl.glProgramUniform2iEXT = debug_glProgramUniform2iEXT;
  tbl.glProgramUniform3iEXT = debug_glProgramUniform3iEXT;
  tbl.glProgramUniform4iEXT = debug_glProgramUniform4iEXT;
  tbl.glProgramUniform1fvEXT = debug_glProgramUniform1fvEXT;
  tbl.glProgramUniform2fvEXT = debug_glProgramUniform2fvEXT;
  tbl.glProgramUniform3fvEXT = debug_glProgramUniform3fvEXT;
  tbl.glProgramUniform4fvEXT = debug_glProgramUniform4fvEXT;
  tbl.glProgramUniform1ivEXT = debug_glProgramUniform1ivEXT;
  tbl.glProgramUniform2ivEXT = debug_glProgramUniform2ivEXT;
  tbl.glProgramUniform3ivEXT = debug_glProgramUniform3ivEXT;
  tbl.glProgramUniform4ivEXT = debug_glProgramUniform4ivEXT;
  tbl.glProgramUniformMatrix2fvEXT = debug_glProgramUniformMatrix2fvEXT;
  tbl.glProgramUniformMatrix3fvEXT = debug_glProgramUniformMatrix3fvEXT;
  tbl.glProgramUniformMatrix4fvEXT = debug_glProgramUniformMatrix4fvEXT;
  tbl.glProgramUniformMatrix2x3fvEXT = debug_glProgramUniformMatrix2x3fvEXT;
  tbl.glProgramUniformMatrix3x2fvEXT = debug_glProgramUniformMatrix3x2fvEXT;
  tbl.glProgramUniformMatrix2x4fvEXT = debug_glProgramUniformMatrix2x4fvEXT;
  tbl.glProgramUniformMatrix4x2fvEXT = debug_glProgramUniformMatrix4x2fvEXT;
  tbl.glProgramUniformMatrix3x4fvEXT = debug_glProgramUniformMatrix3x4fvEXT;
  tbl.glProgramUniformMatrix4x3fvEXT = debug_glProgramUniformMatrix4x3fvEXT;
  tbl.glProgramUniform1uiEXT = debug_glProgramUniform1uiEXT;
  tbl.glProgramUniform2uiEXT = debug_glProgramUniform2uiEXT;
  tbl.glProgramUniform3uiEXT = debug_glProgramUniform3uiEXT;
  tbl.glProgramUniform4uiEXT = debug_glProgramUniform4uiEXT;
  tbl.glProgramUniform1uivEXT = debug_glProgramUniform1uivEXT;
  tbl.glProgramUniform2uivEXT = debug_glProgramUniform2uivEXT;
  tbl.glProgramUniform3uivEXT = debug_glProgramUniform3uivEXT;
  tbl.glProgramUniform4uivEXT = debug_glProgramUniform4uivEXT;
  tbl.glNamedBufferDataEXT = debug_glNamedBufferDataEXT;
  tbl.glNamedBufferSubDataEXT = debug_glNamedBufferSubDataEXT;
  tbl.glMapNamedBufferEXT = debug_glMapNamedBufferEXT;
  tbl.glUnmapNamedBufferEXT = debug_glUnmapNamedBufferEXT;
  tbl.glGetNamedBufferParameterivEXT = debug_glGetNamedBufferParameterivEXT;
  tbl.glGetNamedBufferPointervEXT = debug_glGetNamedBufferPointervEXT;
  tbl.glGetNamedBufferSubDataEXT = debug_glGetNamedBufferSubDataEXT;
  tbl.glTextureBufferEXT = debug_glTextureBufferEXT;
  tbl.glMultiTexBufferEXT = debug_glMultiTexBufferEXT;
  tbl.glNamedRenderbufferStorageEXT = debug_glNamedRenderbufferStorageEXT;
  tbl.glGetNamedRenderbufferParameterivEXT = debug_glGetNamedRenderbufferParameterivEXT;
  tbl.glCheckNamedFramebufferStatusEXT = debug_glCheckNamedFramebufferStatusEXT;
  tbl.glNamedFramebufferTexture1DEXT = debug_glNamedFramebufferTexture1DEXT;
  tbl.glNamedFramebufferTexture2DEXT = debug_glNamedFramebufferTexture2DEXT;
  tbl.glNamedFramebufferTexture3DEXT = debug_glNamedFramebufferTexture3DEXT;
  tbl.glNamedFramebufferRenderbufferEXT = debug_glNamedFramebufferRenderbufferEXT;
  tbl.glGetNamedFramebufferAttachmentParameterivEXT = debug_glGetNamedFramebufferAttachmentParameterivEXT;
  tbl.glGenerateTextureMipmapEXT = debug_glGenerateTextureMipmapEXT;
  tbl.glGenerateMultiTexMipmapEXT = debug_glGenerateMultiTexMipmapEXT;
  tbl.glFramebufferDrawBufferEXT = debug_glFramebufferDrawBufferEXT;
  tbl.glFramebufferDrawBuffersEXT = debug_glFramebufferDrawBuffersEXT;
  tbl.glFramebufferReadBufferEXT = debug_glFramebufferReadBufferEXT;
  tbl.glGetFramebufferParameterivEXT = debug_glGetFramebufferParameterivEXT;
  tbl.glNamedRenderbufferStorageMultisampleEXT = debug_glNamedRenderbufferStorageMultisampleEXT;
  tbl.glNamedRenderbufferStorageMultisampleCoverageEXT = debug_glNamedRenderbufferStorageMultisampleCoverageEXT;
  tbl.glNamedFramebufferTextureEXT = debug_glNamedFramebufferTextureEXT;
  tbl.glNamedFramebufferTextureLayerEXT = debug_glNamedFramebufferTextureLayerEXT;
  tbl.glNamedFramebufferTextureFaceEXT = debug_glNamedFramebufferTextureFaceEXT;
  tbl.glTextureRenderbufferEXT = debug_glTextureRenderbufferEXT;
  tbl.glMultiTexRenderbufferEXT = debug_glMultiTexRenderbufferEXT;
  tbl.glMapNamedBufferRangeEXT = debug_glMapNamedBufferRangeEXT;
  tbl.glFlushMappedNamedBufferRangeEXT = debug_glFlushMappedNamedBufferRangeEXT;
  tbl.glNamedCopyBufferSubDataEXT = debug_glNamedCopyBufferSubDataEXT;
  tbl.glProgramUniform1dEXT = debug_glProgramUniform1dEXT;
  tbl.glProgramUniform2dEXT = debug_glProgramUniform2dEXT;
  tbl.glProgramUniform3dEXT = debug_glProgramUniform3dEXT;
  tbl.glProgramUniform4dEXT = debug_glProgramUniform4dEXT;
  tbl.glProgramUniform1dvEXT = debug_glProgramUniform1dvEXT;
  tbl.glProgramUniform2dvEXT = debug_glProgramUniform2dvEXT;
  tbl.glProgramUniform3dvEXT = debug_glProgramUniform3dvEXT;
  tbl.glProgramUniform4dvEXT = debug_glProgramUniform4dvEXT;
  tbl.glProgramUniformMatrix2dvEXT = debug_glProgramUniformMatrix2dvEXT;
  tbl.glProgramUniformMatrix3dvEXT = debug_glProgramUniformMatrix3dvEXT;
  tbl.glProgramUniformMatrix4dvEXT = debug_glProgramUniformMatrix4dvEXT;
  tbl.glProgramUniformMatrix2x3dvEXT = debug_glProgramUniformMatrix2x3dvEXT;
  tbl.glProgramUniformMatrix2x4dvEXT = debug_glProgramUniformMatrix2x4dvEXT;
  tbl.glProgramUniformMatrix3x2dvEXT = debug_glProgramUniformMatrix3x2dvEXT;
  tbl.glProgramUniformMatrix3x4dvEXT = debug_glProgramUniformMatrix3x4dvEXT;
  tbl.glProgramUniformMatrix4x2dvEXT = debug_glProgramUniformMatrix4x2dvEXT;
  tbl.glProgramUniformMatrix4x3dvEXT = debug_glProgramUniformMatrix4x3dvEXT;

  // GL_NV_explicit_multisample

  tbl.glGetMultisamplefvNV = debug_glGetMultisamplefvNV;
  tbl.glSampleMaskIndexedNV = debug_glSampleMaskIndexedNV;
  tbl.glTexRenderbufferNV = debug_glTexRenderbufferNV;

  // GL_NV_transform_feedback2

  tbl.glBindTransformFeedbackNV = debug_glBindTransformFeedbackNV;
  tbl.glDeleteTransformFeedbacksNV = debug_glDeleteTransformFeedbacksNV;
  tbl.glGenTransformFeedbacksNV = debug_glGenTransformFeedbacksNV;
  tbl.glIsTransformFeedbackNV = debug_glIsTransformFeedbackNV;
  tbl.glPauseTransformFeedbackNV = debug_glPauseTransformFeedbackNV;
  tbl.glResumeTransformFeedbackNV = debug_glResumeTransformFeedbackNV;
  tbl.glDrawTransformFeedbackNV = debug_glDrawTransformFeedbackNV;

  // GL_AMD_performance_monitor

  tbl.glGetPerfMonitorGroupsAMD = debug_glGetPerfMonitorGroupsAMD;
  tbl.glGetPerfMonitorCountersAMD = debug_glGetPerfMonitorCountersAMD;
  tbl.glGetPerfMonitorGroupStringAMD = debug_glGetPerfMonitorGroupStringAMD;
  tbl.glGetPerfMonitorCounterStringAMD = debug_glGetPerfMonitorCounterStringAMD;
  tbl.glGetPerfMonitorCounterInfoAMD = debug_glGetPerfMonitorCounterInfoAMD;
  tbl.glGenPerfMonitorsAMD = debug_glGenPerfMonitorsAMD;
  tbl.glDeletePerfMonitorsAMD = debug_glDeletePerfMonitorsAMD;
  tbl.glSelectPerfMonitorCountersAMD = debug_glSelectPerfMonitorCountersAMD;
  tbl.glBeginPerfMonitorAMD = debug_glBeginPerfMonitorAMD;
  tbl.glEndPerfMonitorAMD = debug_glEndPerfMonitorAMD;
  tbl.glGetPerfMonitorCounterDataAMD = debug_glGetPerfMonitorCounterDataAMD;

  // GL_AMD_vertex_shader_tessellator

  tbl.glTessellationFactorAMD = debug_glTessellationFactorAMD;
  tbl.glTessellationModeAMD = debug_glTessellationModeAMD;

  // GL_EXT_provoking_vertex

  tbl.glProvokingVertexEXT = debug_glProvokingVertexEXT;

  // GL_AMD_draw_buffers_blend

  tbl.glBlendFuncIndexedAMD = debug_glBlendFuncIndexedAMD;
  tbl.glBlendFuncSeparateIndexedAMD = debug_glBlendFuncSeparateIndexedAMD;
  tbl.glBlendEquationIndexedAMD = debug_glBlendEquationIndexedAMD;
  tbl.glBlendEquationSeparateIndexedAMD = debug_glBlendEquationSeparateIndexedAMD;

  // GL_APPLE_texture_range

  tbl.glTextureRangeAPPLE = debug_glTextureRangeAPPLE;
  tbl.glGetTexParameterPointervAPPLE = debug_glGetTexParameterPointervAPPLE;

  // GL_APPLE_vertex_program_evaluators

  tbl.glEnableVertexAttribAPPLE = debug_glEnableVertexAttribAPPLE;
  tbl.glDisableVertexAttribAPPLE = debug_glDisableVertexAttribAPPLE;
  tbl.glIsVertexAttribEnabledAPPLE = debug_glIsVertexAttribEnabledAPPLE;
  tbl.glMapVertexAttrib1dAPPLE = debug_glMapVertexAttrib1dAPPLE;
  tbl.glMapVertexAttrib1fAPPLE = debug_glMapVertexAttrib1fAPPLE;
  tbl.glMapVertexAttrib2dAPPLE = debug_glMapVertexAttrib2dAPPLE;
  tbl.glMapVertexAttrib2fAPPLE = debug_glMapVertexAttrib2fAPPLE;

  // GL_APPLE_object_purgeable

  tbl.glObjectPurgeableAPPLE = debug_glObjectPurgeableAPPLE;
  tbl.glObjectUnpurgeableAPPLE = debug_glObjectUnpurgeableAPPLE;
  tbl.glGetObjectParameterivAPPLE = debug_glGetObjectParameterivAPPLE;

  // GL_NV_video_capture

  tbl.glBeginVideoCaptureNV = debug_glBeginVideoCaptureNV;
  tbl.glBindVideoCaptureStreamBufferNV = debug_glBindVideoCaptureStreamBufferNV;
  tbl.glBindVideoCaptureStreamTextureNV = debug_glBindVideoCaptureStreamTextureNV;
  tbl.glEndVideoCaptureNV = debug_glEndVideoCaptureNV;
  tbl.glGetVideoCaptureivNV = debug_glGetVideoCaptureivNV;
  tbl.glGetVideoCaptureStreamivNV = debug_glGetVideoCaptureStreamivNV;
  tbl.glGetVideoCaptureStreamfvNV = debug_glGetVideoCaptureStreamfvNV;
  tbl.glGetVideoCaptureStreamdvNV = debug_glGetVideoCaptureStreamdvNV;
  tbl.glVideoCaptureNV = debug_glVideoCaptureNV;
  tbl.glVideoCaptureStreamParameterivNV = debug_glVideoCaptureStreamParameterivNV;
  tbl.glVideoCaptureStreamParameterfvNV = debug_glVideoCaptureStreamParameterfvNV;
  tbl.glVideoCaptureStreamParameterdvNV = debug_glVideoCaptureStreamParameterdvNV;

  // GL_NV_copy_image

  tbl.glCopyImageSubDataNV = debug_glCopyImageSubDataNV;

  // GL_EXT_separate_shader_objects

  tbl.glUseShaderProgramEXT = debug_glUseShaderProgramEXT;
  tbl.glActiveProgramEXT = debug_glActiveProgramEXT;
  tbl.glCreateShaderProgramEXT = debug_glCreateShaderProgramEXT;

  // GL_NV_shader_buffer_load

  tbl.glMakeBufferResidentNV = debug_glMakeBufferResidentNV;
  tbl.glMakeBufferNonResidentNV = debug_glMakeBufferNonResidentNV;
  tbl.glIsBufferResidentNV = debug_glIsBufferResidentNV;
  tbl.glMakeNamedBufferResidentNV = debug_glMakeNamedBufferResidentNV;
  tbl.glMakeNamedBufferNonResidentNV = debug_glMakeNamedBufferNonResidentNV;
  tbl.glIsNamedBufferResidentNV = debug_glIsNamedBufferResidentNV;
  tbl.glGetBufferParameterui64vNV = debug_glGetBufferParameterui64vNV;
  tbl.glGetNamedBufferParameterui64vNV = debug_glGetNamedBufferParameterui64vNV;
  tbl.glGetIntegerui64vNV = debug_glGetIntegerui64vNV;
  tbl.glUniformui64NV = debug_glUniformui64NV;
  tbl.glUniformui64vNV = debug_glUniformui64vNV;
  tbl.glGetUniformui64vNV = debug_glGetUniformui64vNV;
  tbl.glProgramUniformui64NV = debug_glProgramUniformui64NV;
  tbl.glProgramUniformui64vNV = debug_glProgramUniformui64vNV;

  // GL_NV_vertex_buffer_unified_memory

  tbl.glBufferAddressRangeNV = debug_glBufferAddressRangeNV;
  tbl.glVertexFormatNV = debug_glVertexFormatNV;
  tbl.glNormalFormatNV = debug_glNormalFormatNV;
  tbl.glColorFormatNV = debug_glColorFormatNV;
  tbl.glIndexFormatNV = debug_glIndexFormatNV;
  tbl.glTexCoordFormatNV = debug_glTexCoordFormatNV;
  tbl.glEdgeFlagFormatNV = debug_glEdgeFlagFormatNV;
  tbl.glSecondaryColorFormatNV = debug_glSecondaryColorFormatNV;
  tbl.glFogCoordFormatNV = debug_glFogCoordFormatNV;
  tbl.glVertexAttribFormatNV = debug_glVertexAttribFormatNV;
  tbl.glVertexAttribIFormatNV = debug_glVertexAttribIFormatNV;
  tbl.glGetIntegerui64i_vNV = debug_glGetIntegerui64i_vNV;

  // GL_NV_texture_barrier

  tbl.glTextureBarrierNV = debug_glTextureBarrierNV;

  // GL_EXT_shader_image_load_store

  tbl.glBindImageTextureEXT = debug_glBindImageTextureEXT;
  tbl.glMemoryBarrierEXT = debug_glMemoryBarrierEXT;

  // GL_EXT_vertex_attrib_64bit

  tbl.glVertexAttribL1dEXT = debug_glVertexAttribL1dEXT;
  tbl.glVertexAttribL2dEXT = debug_glVertexAttribL2dEXT;
  tbl.glVertexAttribL3dEXT = debug_glVertexAttribL3dEXT;
  tbl.glVertexAttribL4dEXT = debug_glVertexAttribL4dEXT;
  tbl.glVertexAttribL1dvEXT = debug_glVertexAttribL1dvEXT;
  tbl.glVertexAttribL2dvEXT = debug_glVertexAttribL2dvEXT;
  tbl.glVertexAttribL3dvEXT = debug_glVertexAttribL3dvEXT;
  tbl.glVertexAttribL4dvEXT = debug_glVertexAttribL4dvEXT;
  tbl.glVertexAttribLPointerEXT = debug_glVertexAttribLPointerEXT;
  tbl.glVertexArrayVertexAttribLOffsetEXT = debug_glVertexArrayVertexAttribLOffsetEXT;
  tbl.glGetVertexAttribLdvEXT = debug_glGetVertexAttribLdvEXT;

  // GL_NV_gpu_shader5

  tbl.glUniform1i64NV = debug_glUniform1i64NV;
  tbl.glUniform2i64NV = debug_glUniform2i64NV;
  tbl.glUniform3i64NV = debug_glUniform3i64NV;
  tbl.glUniform4i64NV = debug_glUniform4i64NV;
  tbl.glUniform1i64vNV = debug_glUniform1i64vNV;
  tbl.glUniform2i64vNV = debug_glUniform2i64vNV;
  tbl.glUniform3i64vNV = debug_glUniform3i64vNV;
  tbl.glUniform4i64vNV = debug_glUniform4i64vNV;
  tbl.glUniform1ui64NV = debug_glUniform1ui64NV;
  tbl.glUniform2ui64NV = debug_glUniform2ui64NV;
  tbl.glUniform3ui64NV = debug_glUniform3ui64NV;
  tbl.glUniform4ui64NV = debug_glUniform4ui64NV;
  tbl.glUniform1ui64vNV = debug_glUniform1ui64vNV;
  tbl.glUniform2ui64vNV = debug_glUniform2ui64vNV;
  tbl.glUniform3ui64vNV = debug_glUniform3ui64vNV;
  tbl.glUniform4ui64vNV = debug_glUniform4ui64vNV;
  tbl.glProgramUniform1i64NV = debug_glProgramUniform1i64NV;
  tbl.glProgramUniform2i64NV = debug_glProgramUniform2i64NV;
  tbl.glProgramUniform3i64NV = debug_glProgramUniform3i64NV;
  tbl.glProgramUniform4i64NV = debug_glProgramUniform4i64NV;
  tbl.glProgramUniform1i64vNV = debug_glProgramUniform1i64vNV;
  tbl.glProgramUniform2i64vNV = debug_glProgramUniform2i64vNV;
  tbl.glProgramUniform3i64vNV = debug_glProgramUniform3i64vNV;
  tbl.glProgramUniform4i64vNV = debug_glProgramUniform4i64vNV;
  tbl.glProgramUniform1ui64NV = debug_glProgramUniform1ui64NV;
  tbl.glProgramUniform2ui64NV = debug_glProgramUniform2ui64NV;
  tbl.glProgramUniform3ui64NV = debug_glProgramUniform3ui64NV;
  tbl.glProgramUniform4ui64NV = debug_glProgramUniform4ui64NV;
  tbl.glProgramUniform1ui64vNV = debug_glProgramUniform1ui64vNV;
  tbl.glProgramUniform2ui64vNV = debug_glProgramUniform2ui64vNV;
  tbl.glProgramUniform3ui64vNV = debug_glProgramUniform3ui64vNV;
  tbl.glProgramUniform4ui64vNV = debug_glProgramUniform4ui64vNV;
  tbl.glGetUniformi64vNV = debug_glGetUniformi64vNV;

  // GL_NV_vertex_attrib_integer_64bit

  tbl.glVertexAttribL1i64NV = debug_glVertexAttribL1i64NV;
  tbl.glVertexAttribL2i64NV = debug_glVertexAttribL2i64NV;
  tbl.glVertexAttribL3i64NV = debug_glVertexAttribL3i64NV;
  tbl.glVertexAttribL4i64NV = debug_glVertexAttribL4i64NV;
  tbl.glVertexAttribL1ui64NV = debug_glVertexAttribL1ui64NV;
  tbl.glVertexAttribL2ui64NV = debug_glVertexAttribL2ui64NV;
  tbl.glVertexAttribL3ui64NV = debug_glVertexAttribL3ui64NV;
  tbl.glVertexAttribL4ui64NV = debug_glVertexAttribL4ui64NV;
  tbl.glVertexAttribL1i64vNV = debug_glVertexAttribL1i64vNV;
  tbl.glVertexAttribL2i64vNV = debug_glVertexAttribL2i64vNV;
  tbl.glVertexAttribL3i64vNV = debug_glVertexAttribL3i64vNV;
  tbl.glVertexAttribL4i64vNV = debug_glVertexAttribL4i64vNV;
  tbl.glVertexAttribL1ui64vNV = debug_glVertexAttribL1ui64vNV;
  tbl.glVertexAttribL2ui64vNV = debug_glVertexAttribL2ui64vNV;
  tbl.glVertexAttribL3ui64vNV = debug_glVertexAttribL3ui64vNV;
  tbl.glVertexAttribL4ui64vNV = debug_glVertexAttribL4ui64vNV;
  tbl.glVertexAttribLFormatNV = debug_glVertexAttribLFormatNV;
  tbl.glGetVertexAttribLi64vNV = debug_glGetVertexAttribLi64vNV;
  tbl.glGetVertexAttribLui64vNV = debug_glGetVertexAttribLui64vNV;

  // GL_NV_vdpau_interop

  tbl.glVDPAUInitNV = debug_glVDPAUInitNV;
  tbl.glVDPAUFiniNV = debug_glVDPAUFiniNV;
  tbl.glVDPAURegisterVideoSurfaceNV = debug_glVDPAURegisterVideoSurfaceNV;
  tbl.glVDPAURegisterOutputSurfaceNV = debug_glVDPAURegisterOutputSurfaceNV;
  tbl.glVDPAUIsSurfaceNV = debug_glVDPAUIsSurfaceNV;
  tbl.glVDPAUUnregisterSurfaceNV = debug_glVDPAUUnregisterSurfaceNV;
  tbl.glVDPAUGetSurfaceivNV = debug_glVDPAUGetSurfaceivNV;
  tbl.glVDPAUSurfaceAccessNV = debug_glVDPAUSurfaceAccessNV;
  tbl.glVDPAUMapSurfacesNV = debug_glVDPAUMapSurfacesNV;
  tbl.glVDPAUUnmapSurfacesNV = debug_glVDPAUUnmapSurfacesNV;

  // GL_NV_path_rendering

  tbl.glCopyPathNV = debug_glCopyPathNV;
  tbl.glCoverFillPathInstancedNV = debug_glCoverFillPathInstancedNV;
  tbl.glCoverFillPathNV = debug_glCoverFillPathNV;
  tbl.glCoverStrokePathInstancedNV = debug_glCoverStrokePathInstancedNV;
  tbl.glCoverStrokePathNV = debug_glCoverStrokePathNV;
  tbl.glDeletePathsNV = debug_glDeletePathsNV;
  tbl.glGenPathsNV = debug_glGenPathsNV;
  tbl.glGetPathColorGenfvNV = debug_glGetPathColorGenfvNV;
  tbl.glGetPathColorGenivNV = debug_glGetPathColorGenivNV;
  tbl.glGetPathCommandsNV = debug_glGetPathCommandsNV;
  tbl.glGetPathCoordsNV = debug_glGetPathCoordsNV;
  tbl.glGetPathDashArrayNV = debug_glGetPathDashArrayNV;
  tbl.glGetPathLengthNV = debug_glGetPathLengthNV;
  tbl.glGetPathMetricRangeNV = debug_glGetPathMetricRangeNV;
  tbl.glGetPathMetricsNV = debug_glGetPathMetricsNV;
  tbl.glGetPathParameterfvNV = debug_glGetPathParameterfvNV;
  tbl.glGetPathParameterivNV = debug_glGetPathParameterivNV;
  tbl.glGetPathSpacingNV = debug_glGetPathSpacingNV;
  tbl.glGetPathTexGenfvNV = debug_glGetPathTexGenfvNV;
  tbl.glGetPathTexGenivNV = debug_glGetPathTexGenivNV;
  tbl.glInterpolatePathsNV = debug_glInterpolatePathsNV;
  tbl.glIsPathNV = debug_glIsPathNV;
  tbl.glIsPointInFillPathNV = debug_glIsPointInFillPathNV;
  tbl.glIsPointInStrokePathNV = debug_glIsPointInStrokePathNV;
  tbl.glPathColorGenNV = debug_glPathColorGenNV;
  tbl.glPathCommandsNV = debug_glPathCommandsNV;
  tbl.glPathCoordsNV = debug_glPathCoordsNV;
  tbl.glPathCoverDepthFuncNV = debug_glPathCoverDepthFuncNV;
  tbl.glPathDashArrayNV = debug_glPathDashArrayNV;
  tbl.glPathFogGenNV = debug_glPathFogGenNV;
  tbl.glPathGlyphRangeNV = debug_glPathGlyphRangeNV;
  tbl.glPathGlyphsNV = debug_glPathGlyphsNV;
  tbl.glPathParameterfNV = debug_glPathParameterfNV;
  tbl.glPathParameterfvNV = debug_glPathParameterfvNV;
  tbl.glPathParameteriNV = debug_glPathParameteriNV;
  tbl.glPathParameterivNV = debug_glPathParameterivNV;
  tbl.glPathStencilDepthOffsetNV = debug_glPathStencilDepthOffsetNV;
  tbl.glPathStencilFuncNV = debug_glPathStencilFuncNV;
  tbl.glPathStringNV = debug_glPathStringNV;
  tbl.glPathSubCommandsNV = debug_glPathSubCommandsNV;
  tbl.glPathSubCoordsNV = debug_glPathSubCoordsNV;
  tbl.glPathTexGenNV = debug_glPathTexGenNV;
  tbl.glPointAlongPathNV = debug_glPointAlongPathNV;
  tbl.glStencilFillPathInstancedNV = debug_glStencilFillPathInstancedNV;
  tbl.glStencilFillPathNV = debug_glStencilFillPathNV;
  tbl.glStencilStrokePathInstancedNV = debug_glStencilStrokePathInstancedNV;
  tbl.glStencilStrokePathNV = debug_glStencilStrokePathNV;
  tbl.glTransformPathNV = debug_glTransformPathNV;
  tbl.glWeightPathsNV = debug_glWeightPathsNV;

  // GL_REGAL_extension_query

  tbl.glGetExtensionREGAL = debug_glGetExtensionREGAL;
  tbl.glIsSupportedREGAL = debug_glIsSupportedREGAL;

  // GL_REGAL_error_string

  tbl.glErrorStringREGAL = debug_glErrorStringREGAL;

  // GL_AMD_debug_output

  tbl.glGetDebugMessageLogAMD = debug_glGetDebugMessageLogAMD;
  tbl.glDebugMessageCallbackAMD = debug_glDebugMessageCallbackAMD;
  tbl.glDebugMessageEnableAMD = debug_glDebugMessageEnableAMD;
  tbl.glDebugMessageInsertAMD = debug_glDebugMessageInsertAMD;

  // GL_AMD_multi_draw_indirect

  tbl.glMultiDrawArraysIndirectAMD = debug_glMultiDrawArraysIndirectAMD;
  tbl.glMultiDrawElementsIndirectAMD = debug_glMultiDrawElementsIndirectAMD;

  // GL_AMD_name_gen_delete

  tbl.glIsNameAMD = debug_glIsNameAMD;
  tbl.glDeleteNamesAMD = debug_glDeleteNamesAMD;
  tbl.glGenNamesAMD = debug_glGenNamesAMD;

  // GL_AMD_sample_positions

  tbl.glSetMultisamplefvAMD = debug_glSetMultisamplefvAMD;

  // GL_AMD_stencil_operation_extended

  tbl.glStencilOpValueAMD = debug_glStencilOpValueAMD;

  // GL_ARB_base_instance

  tbl.glDrawArraysInstancedBaseInstance = debug_glDrawArraysInstancedBaseInstance;
  tbl.glDrawElementsInstancedBaseInstance = debug_glDrawElementsInstancedBaseInstance;
  tbl.glDrawElementsInstancedBaseVertexBaseInstance = debug_glDrawElementsInstancedBaseVertexBaseInstance;

  // GL_ARB_cl_event

  tbl.glCreateSyncFromCLeventARB = debug_glCreateSyncFromCLeventARB;

  // GL_ARB_internalformat_query

  tbl.glGetInternalformativ = debug_glGetInternalformativ;

  // GL_ARB_texture_storage

  tbl.glTexStorage1D = debug_glTexStorage1D;
  tbl.glTexStorage2D = debug_glTexStorage2D;
  tbl.glTexStorage3D = debug_glTexStorage3D;
  tbl.glTextureStorage1DEXT = debug_glTextureStorage1DEXT;
  tbl.glTextureStorage2DEXT = debug_glTextureStorage2DEXT;
  tbl.glTextureStorage3DEXT = debug_glTextureStorage3DEXT;

  // GL_ARB_transform_feedback_instanced

  tbl.glDrawTransformFeedbackInstanced = debug_glDrawTransformFeedbackInstanced;
  tbl.glDrawTransformFeedbackStreamInstanced = debug_glDrawTransformFeedbackStreamInstanced;

  // GL_EXT_x11_sync_object

  tbl.glImportSyncEXT = debug_glImportSyncEXT;

  // GL_INTEL_texture_scissor

  tbl.glTexScissorFuncINTEL = debug_glTexScissorFuncINTEL;
  tbl.glTexScissorINTEL = debug_glTexScissorINTEL;

  // GL_NV_bindless_texture

  tbl.glIsImageHandleResidentNV = debug_glIsImageHandleResidentNV;
  tbl.glIsTextureHandleResidentNV = debug_glIsTextureHandleResidentNV;
  tbl.glGetImageHandleNV = debug_glGetImageHandleNV;
  tbl.glGetTextureHandleNV = debug_glGetTextureHandleNV;
  tbl.glGetTextureSamplerHandleNV = debug_glGetTextureSamplerHandleNV;
  tbl.glMakeImageHandleNonResidentNV = debug_glMakeImageHandleNonResidentNV;
  tbl.glMakeImageHandleResidentNV = debug_glMakeImageHandleResidentNV;
  tbl.glMakeTextureHandleNonResidentNV = debug_glMakeTextureHandleNonResidentNV;
  tbl.glMakeTextureHandleResidentNV = debug_glMakeTextureHandleResidentNV;
  tbl.glProgramUniformHandleui64NV = debug_glProgramUniformHandleui64NV;
  tbl.glProgramUniformHandleui64vNV = debug_glProgramUniformHandleui64vNV;
  tbl.glUniformHandleui64NV = debug_glUniformHandleui64NV;
  tbl.glUniformHandleui64vNV = debug_glUniformHandleui64vNV;

  // GL_NV_texture_multisample

  tbl.glTexImage2DMultisampleCoverageNV = debug_glTexImage2DMultisampleCoverageNV;
  tbl.glTexImage3DMultisampleCoverageNV = debug_glTexImage3DMultisampleCoverageNV;
  tbl.glTextureImage2DMultisampleCoverageNV = debug_glTextureImage2DMultisampleCoverageNV;
  tbl.glTextureImage2DMultisampleNV = debug_glTextureImage2DMultisampleNV;
  tbl.glTextureImage3DMultisampleCoverageNV = debug_glTextureImage3DMultisampleCoverageNV;
  tbl.glTextureImage3DMultisampleNV = debug_glTextureImage3DMultisampleNV;

  // GL_SUN_read_video_pixels

  tbl.glReadVideoPixelsSUN = debug_glReadVideoPixelsSUN;

  // GL_EXT_fragment_lighting

  tbl.glFragmentColorMaterialEXT = debug_glFragmentColorMaterialEXT;
  tbl.glFragmentLightModelfEXT = debug_glFragmentLightModelfEXT;
  tbl.glFragmentLightModelfvEXT = debug_glFragmentLightModelfvEXT;
  tbl.glFragmentLightModeliEXT = debug_glFragmentLightModeliEXT;
  tbl.glFragmentLightModelivEXT = debug_glFragmentLightModelivEXT;
  tbl.glFragmentLightfEXT = debug_glFragmentLightfEXT;
  tbl.glFragmentLightfvEXT = debug_glFragmentLightfvEXT;
  tbl.glFragmentLightiEXT = debug_glFragmentLightiEXT;
  tbl.glFragmentLightivEXT = debug_glFragmentLightivEXT;
  tbl.glFragmentMaterialfEXT = debug_glFragmentMaterialfEXT;
  tbl.glFragmentMaterialfvEXT = debug_glFragmentMaterialfvEXT;
  tbl.glFragmentMaterialiEXT = debug_glFragmentMaterialiEXT;
  tbl.glFragmentMaterialivEXT = debug_glFragmentMaterialivEXT;
  tbl.glGetFragmentLightfvEXT = debug_glGetFragmentLightfvEXT;
  tbl.glGetFragmentLightivEXT = debug_glGetFragmentLightivEXT;
  tbl.glGetFragmentMaterialfvEXT = debug_glGetFragmentMaterialfvEXT;
  tbl.glGetFragmentMaterialivEXT = debug_glGetFragmentMaterialivEXT;
  tbl.glLightEnviEXT = debug_glLightEnviEXT;

  // GL_EXT_debug_marker

  tbl.glInsertEventMarkerEXT = debug_glInsertEventMarkerEXT;
  tbl.glPushGroupMarkerEXT = debug_glPushGroupMarkerEXT;
  tbl.glPopGroupMarkerEXT = debug_glPopGroupMarkerEXT;

  // GL_KTX_buffer_region

  tbl.glBufferRegionEnabledEXT = debug_glBufferRegionEnabledEXT;
  tbl.glNewBufferRegionEXT = debug_glNewBufferRegionEXT;
  tbl.glDeleteBufferRegionEXT = debug_glDeleteBufferRegionEXT;
  tbl.glReadBufferRegionEXT = debug_glReadBufferRegionEXT;
  tbl.glDrawBufferRegionEXT = debug_glDrawBufferRegionEXT;

  // GL_SGIX_fog_texture

  tbl.glTextureFogSGIX = debug_glTextureFogSGIX;

  // GL_APPLE_flush_render

  tbl.glFlushRenderAPPLE = debug_glFlushRenderAPPLE;
  tbl.glFinishRenderAPPLE = debug_glFinishRenderAPPLE;
  tbl.glSwapAPPLE = debug_glSwapAPPLE;

  // GL_WIN_swap_hint

  tbl.glAddSwapHintRectWIN = debug_glAddSwapHintRectWIN;

}

REGAL_NAMESPACE_END
