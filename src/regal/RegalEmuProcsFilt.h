/* NOTE: Do not edit this file, it is generated by a script:
   Export.py --api gl 4.4 --api wgl 4.4 --api glx 4.4 --api cgl 1.4 --api egl 1.0 --outdir .
*/

/*
  Copyright (c) 2011-2013 NVIDIA Corporation
  Copyright (c) 2011-2013 Cass Everitt
  Copyright (c) 2012-2013 Scott Nations
  Copyright (c) 2012 Mathias Schott
  Copyright (c) 2012-2013 Nigel Stewart
  Copyright (c) 2012-2013 Google Inc.
  All rights reserved.

  Redistribution and use in source and binary forms, with or without modification,
  are permitted provided that the following conditions are met:

    Redistributions of source code must retain the above copyright notice, this
    list of conditions and the following disclaimer.

    Redistributions in binary form must reproduce the above copyright notice,
    this list of conditions and the following disclaimer in the documentation
    and/or other materials provided with the distribution.

  THIS SOFTWARE IS PROVIDED BY THE COPYRIGHT HOLDERS AND CONTRIBUTORS "AS IS" AND
  ANY EXPRESS OR IMPLIED WARRANTIES, INCLUDING, BUT NOT LIMITED TO, THE IMPLIED
  WARRANTIES OF MERCHANTABILITY AND FITNESS FOR A PARTICULAR PURPOSE ARE DISCLAIMED.
  IN NO EVENT SHALL THE COPYRIGHT HOLDER OR CONTRIBUTORS BE LIABLE FOR ANY DIRECT,
  INDIRECT, INCIDENTAL, SPECIAL, EXEMPLARY, OR CONSEQUENTIAL DAMAGES (INCLUDING,
  BUT NOT LIMITED TO, PROCUREMENT OF SUBSTITUTE GOODS OR SERVICES; LOSS OF USE,
  DATA, OR PROFITS; OR BUSINESS INTERRUPTION) HOWEVER CAUSED AND ON ANY THEORY OF
  LIABILITY, WHETHER IN CONTRACT, STRICT LIABILITY, OR TORT (INCLUDING NEGLIGENCE
  OR OTHERWISE) ARISING IN ANY WAY OUT OF THE USE OF THIS SOFTWARE, EVEN IF ADVISED
  OF THE POSSIBILITY OF SUCH DAMAGE.
*/

/*
  Intended formatting conventions:
  $ astyle --style=allman --indent=spaces=2 --indent-switches
*/

#ifndef REGAL_EMU_PROCS_FILT_H
#define REGAL_EMU_PROCS_FILT_H

#include "RegalUtil.h"

#if REGAL_EMULATION

REGAL_GLOBAL_BEGIN

#include "RegalPrivate.h"
#include "RegalContext.h"
#include "RegalDispatch.h"

REGAL_GLOBAL_END

REGAL_NAMESPACE_BEGIN

void EmuProcsInterceptFilt( Dispatch::GL & dt );

struct EmuProcsOriginateFilt {

  EmuProcsOriginateFilt() {
    memset(this, 0, sizeof( *this ) );
  }

  PFNGLACCUMPROC glAccum;
  PFNGLACTIVETEXTUREPROC glActiveTexture;
  PFNGLACTIVETEXTUREARBPROC glActiveTextureARB;
  PFNGLATTACHOBJECTARBPROC glAttachObjectARB;
  PFNGLATTACHSHADERPROC glAttachShader;
  PFNGLBINDATTRIBLOCATIONPROC glBindAttribLocation;
  PFNGLBINDATTRIBLOCATIONARBPROC glBindAttribLocationARB;
  PFNGLBINDFRAMEBUFFERPROC glBindFramebuffer;
  PFNGLBINDFRAMEBUFFEREXTPROC glBindFramebufferEXT;
  PFNGLBINDFRAMEBUFFEROESPROC glBindFramebufferOES;
  PFNGLBINDPROGRAMARBPROC glBindProgramARB;
  PFNGLBINDRENDERBUFFERPROC glBindRenderbuffer;
  PFNGLBINDRENDERBUFFEREXTPROC glBindRenderbufferEXT;
  PFNGLBINDTEXTUREPROC glBindTexture;
  PFNGLBITMAPPROC glBitmap;
  PFNGLBLENDCOLORPROC glBlendColor;
  PFNGLBLENDCOLOREXTPROC glBlendColorEXT;
  PFNGLBLENDEQUATIONPROC glBlendEquation;
  PFNGLBLENDEQUATIONEXTPROC glBlendEquationEXT;
  PFNGLBLITFRAMEBUFFERPROC glBlitFramebuffer;
  PFNGLBLITFRAMEBUFFERANGLEPROC glBlitFramebufferANGLE;
  PFNGLBLITFRAMEBUFFEREXTPROC glBlitFramebufferEXT;
  PFNGLBLITFRAMEBUFFERNVPROC glBlitFramebufferNV;
  PFNGLBUFFERDATAPROC glBufferData;
  PFNGLBUFFERDATAARBPROC glBufferDataARB;
  PFNGLCALLLISTPROC glCallList;
  PFNGLCHECKFRAMEBUFFERSTATUSPROC glCheckFramebufferStatus;
  PFNGLCHECKFRAMEBUFFERSTATUSEXTPROC glCheckFramebufferStatusEXT;
  PFNGLCLEARACCUMPROC glClearAccum;
  PFNGLCLIENTACTIVETEXTUREPROC glClientActiveTexture;
  PFNGLCLIENTACTIVETEXTUREARBPROC glClientActiveTextureARB;
  PFNGLCOLORMASKPROC glColorMask;
  PFNGLCOLORMASKINDEXEDEXTPROC glColorMaskIndexedEXT;
  PFNGLCOMPILESHADERPROC glCompileShader;
  PFNGLCOMPILESHADERARBPROC glCompileShaderARB;
  PFNGLCOPYPIXELSPROC glCopyPixels;
  PFNGLCREATEPROGRAMPROC glCreateProgram;
  PFNGLCREATEPROGRAMOBJECTARBPROC glCreateProgramObjectARB;
  PFNGLDELETEFRAMEBUFFERSPROC glDeleteFramebuffers;
  PFNGLDELETEFRAMEBUFFERSEXTPROC glDeleteFramebuffersEXT;
  PFNGLDELETELISTSPROC glDeleteLists;
  PFNGLDELETERENDERBUFFERSPROC glDeleteRenderbuffers;
  PFNGLDELETERENDERBUFFERSEXTPROC glDeleteRenderbuffersEXT;
  PFNGLDISABLEPROC glDisable;
  PFNGLDISABLEINDEXEDEXTPROC glDisableIndexedEXT;
  PFNGLDRAWBUFFERPROC glDrawBuffer;
  PFNGLDRAWBUFFERSPROC glDrawBuffers;
  PFNGLDRAWBUFFERSARBPROC glDrawBuffersARB;
  PFNGLDRAWBUFFERSATIPROC glDrawBuffersATI;
  PFNGLDRAWBUFFERSNVPROC glDrawBuffersNV;
  PFNGLDRAWELEMENTSPROC glDrawElements;
  PFNGLDRAWPIXELSPROC glDrawPixels;
  PFNGLDRAWRANGEELEMENTSPROC glDrawRangeElements;
  PFNGLDRAWRANGEELEMENTSBASEVERTEXPROC glDrawRangeElementsBaseVertex;
  PFNGLEDGEFLAGPROC glEdgeFlag;
  PFNGLENABLEPROC glEnable;
  PFNGLENABLEINDEXEDEXTPROC glEnableIndexedEXT;
  PFNGLENDLISTPROC glEndList;
  PFNGLEVALCOORD1DPROC glEvalCoord1d;
  PFNGLEVALCOORD1DVPROC glEvalCoord1dv;
  PFNGLEVALCOORD1FPROC glEvalCoord1f;
  PFNGLEVALCOORD1FVPROC glEvalCoord1fv;
  PFNGLEVALCOORD2DPROC glEvalCoord2d;
  PFNGLEVALCOORD2DVPROC glEvalCoord2dv;
  PFNGLEVALCOORD2FPROC glEvalCoord2f;
  PFNGLEVALCOORD2FVPROC glEvalCoord2fv;
  PFNGLEVALMESH1PROC glEvalMesh1;
  PFNGLEVALMESH2PROC glEvalMesh2;
  PFNGLEVALPOINT1PROC glEvalPoint1;
  PFNGLEVALPOINT2PROC glEvalPoint2;
  PFNGLFRAMEBUFFERRENDERBUFFERPROC glFramebufferRenderbuffer;
  PFNGLFRAMEBUFFERRENDERBUFFEREXTPROC glFramebufferRenderbufferEXT;
  PFNGLFRAMEBUFFERTEXTURE1DPROC glFramebufferTexture1D;
  PFNGLFRAMEBUFFERTEXTURE1DEXTPROC glFramebufferTexture1DEXT;
  PFNGLFRAMEBUFFERTEXTURE2DPROC glFramebufferTexture2D;
  PFNGLFRAMEBUFFERTEXTURE2DEXTPROC glFramebufferTexture2DEXT;
  PFNGLFRAMEBUFFERTEXTURE3DPROC glFramebufferTexture3D;
  PFNGLFRAMEBUFFERTEXTURE3DEXTPROC glFramebufferTexture3DEXT;
  PFNGLGENFRAMEBUFFERSPROC glGenFramebuffers;
  PFNGLGENFRAMEBUFFERSEXTPROC glGenFramebuffersEXT;
  PFNGLGENLISTSPROC glGenLists;
  PFNGLGENPROGRAMSARBPROC glGenProgramsARB;
  PFNGLGENRENDERBUFFERSPROC glGenRenderbuffers;
  PFNGLGENRENDERBUFFERSEXTPROC glGenRenderbuffersEXT;
  PFNGLGENSAMPLERSPROC glGenSamplers;
  PFNGLGENERATEMIPMAPPROC glGenerateMipmap;
  PFNGLGENERATEMIPMAPEXTPROC glGenerateMipmapEXT;
  PFNGLGETBOOLEANINDEXEDVEXTPROC glGetBooleanIndexedvEXT;
  PFNGLGETBOOLEANVPROC glGetBooleanv;
  PFNGLGETDOUBLEVPROC glGetDoublev;
  PFNGLGETFLOATVPROC glGetFloatv;
  PFNGLGETFRAMEBUFFERATTACHMENTPARAMETERIVPROC glGetFramebufferAttachmentParameteriv;
  PFNGLGETFRAMEBUFFERATTACHMENTPARAMETERIVEXTPROC glGetFramebufferAttachmentParameterivEXT;
  PFNGLGETINFOLOGARBPROC glGetInfoLogARB;
  PFNGLGETINTEGER64VPROC glGetInteger64v;
  PFNGLGETINTEGERINDEXEDVEXTPROC glGetIntegerIndexedvEXT;
  PFNGLGETINTEGERVPROC glGetIntegerv;
  PFNGLGETOBJECTPARAMETERIVARBPROC glGetObjectParameterivARB;
  PFNGLGETPROGRAMINFOLOGPROC glGetProgramInfoLog;
  PFNGLGETPROGRAMIVPROC glGetProgramiv;
  PFNGLGETPROGRAMIVARBPROC glGetProgramivARB;
  PFNGLGETRENDERBUFFERPARAMETERIVPROC glGetRenderbufferParameteriv;
  PFNGLGETRENDERBUFFERPARAMETERIVEXTPROC glGetRenderbufferParameterivEXT;
  PFNGLGETSHADERINFOLOGPROC glGetShaderInfoLog;
  PFNGLGETSHADERIVPROC glGetShaderiv;
  PFNGLGETTEXIMAGEPROC glGetTexImage;
  PFNGLGETTEXLEVELPARAMETERFVPROC glGetTexLevelParameterfv;
  PFNGLGETTEXLEVELPARAMETERIVPROC glGetTexLevelParameteriv;
  PFNGLGETTEXPARAMETERIVPROC glGetTexParameteriv;
  PFNGLGETUNIFORMLOCATIONPROC glGetUniformLocation;
  PFNGLGETUNIFORMLOCATIONARBPROC glGetUniformLocationARB;
  PFNGLISENABLEDPROC glIsEnabled;
  PFNGLISENABLEDINDEXEDEXTPROC glIsEnabledIndexedEXT;
  PFNGLISFRAMEBUFFERPROC glIsFramebuffer;
  PFNGLISFRAMEBUFFEREXTPROC glIsFramebufferEXT;
  PFNGLISPROGRAMPROC glIsProgram;
  PFNGLISRENDERBUFFERPROC glIsRenderbuffer;
  PFNGLISRENDERBUFFEREXTPROC glIsRenderbufferEXT;
  PFNGLLINESTIPPLEPROC glLineStipple;
  PFNGLLINEWIDTHPROC glLineWidth;
  PFNGLMAP1DPROC glMap1d;
  PFNGLMAP1FPROC glMap1f;
  PFNGLMAP2DPROC glMap2d;
  PFNGLMAP2FPROC glMap2f;
  PFNGLMAPBUFFERPROC glMapBuffer;
  PFNGLMAPBUFFERARBPROC glMapBufferARB;
  PFNGLMAPBUFFEROESPROC glMapBufferOES;
  PFNGLMAPGRID1DPROC glMapGrid1d;
  PFNGLMAPGRID1FPROC glMapGrid1f;
  PFNGLMAPGRID2DPROC glMapGrid2d;
  PFNGLMAPGRID2FPROC glMapGrid2f;
  PFNGLNEWLISTPROC glNewList;
  PFNGLPIXELSTOREFPROC glPixelStoref;
  PFNGLPIXELSTOREIPROC glPixelStorei;
  PFNGLPIXELTRANSFERFPROC glPixelTransferf;
  PFNGLPIXELTRANSFERIPROC glPixelTransferi;
  PFNGLPIXELZOOMPROC glPixelZoom;
  PFNGLPOLYGONMODEPROC glPolygonMode;
  PFNGLPOPGROUPMARKEREXTPROC glPopGroupMarkerEXT;
  PFNGLPROGRAMSTRINGARBPROC glProgramStringARB;
  PFNGLPUSHGROUPMARKEREXTPROC glPushGroupMarkerEXT;
  PFNGLRASTERPOS2DPROC glRasterPos2d;
  PFNGLRASTERPOS2DVPROC glRasterPos2dv;
  PFNGLRASTERPOS2FPROC glRasterPos2f;
  PFNGLRASTERPOS2FVPROC glRasterPos2fv;
  PFNGLRASTERPOS2IPROC glRasterPos2i;
  PFNGLRASTERPOS2IVPROC glRasterPos2iv;
  PFNGLRASTERPOS2SPROC glRasterPos2s;
  PFNGLRASTERPOS2SVPROC glRasterPos2sv;
  PFNGLRASTERPOS3DPROC glRasterPos3d;
  PFNGLRASTERPOS3DVPROC glRasterPos3dv;
  PFNGLRASTERPOS3FPROC glRasterPos3f;
  PFNGLRASTERPOS3FVPROC glRasterPos3fv;
  PFNGLRASTERPOS3IPROC glRasterPos3i;
  PFNGLRASTERPOS3IVPROC glRasterPos3iv;
  PFNGLRASTERPOS3SPROC glRasterPos3s;
  PFNGLRASTERPOS3SVPROC glRasterPos3sv;
  PFNGLRASTERPOS4DPROC glRasterPos4d;
  PFNGLRASTERPOS4DVPROC glRasterPos4dv;
  PFNGLRASTERPOS4FPROC glRasterPos4f;
  PFNGLRASTERPOS4FVPROC glRasterPos4fv;
  PFNGLRASTERPOS4IPROC glRasterPos4i;
  PFNGLRASTERPOS4IVPROC glRasterPos4iv;
  PFNGLRASTERPOS4SPROC glRasterPos4s;
  PFNGLRASTERPOS4SVPROC glRasterPos4sv;
  PFNGLREADBUFFERPROC glReadBuffer;
  PFNGLREADBUFFERNVPROC glReadBufferNV;
  PFNGLRECTDPROC glRectd;
  PFNGLRECTFPROC glRectf;
  PFNGLRECTIPROC glRecti;
  PFNGLRECTSPROC glRects;
  PFNGLRENDERMODEPROC glRenderMode;
  PFNGLRENDERBUFFERSTORAGEPROC glRenderbufferStorage;
  PFNGLRENDERBUFFERSTORAGEEXTPROC glRenderbufferStorageEXT;
  PFNGLSHADEMODELPROC glShadeModel;
  PFNGLTEXIMAGE1DPROC glTexImage1D;
  PFNGLTEXIMAGE2DPROC glTexImage2D;
  PFNGLTEXIMAGE3DPROC glTexImage3D;
  PFNGLTEXPARAMETERFPROC glTexParameterf;
  PFNGLTEXPARAMETERFVPROC glTexParameterfv;
  PFNGLTEXPARAMETERIPROC glTexParameteri;
  PFNGLTEXPARAMETERIVPROC glTexParameteriv;
  PFNGLUNIFORM1IPROC glUniform1i;
  PFNGLUNIFORM1IARBPROC glUniform1iARB;
  PFNGLUNMAPBUFFERPROC glUnmapBuffer;
  PFNGLUNMAPBUFFERARBPROC glUnmapBufferARB;
  PFNGLUNMAPBUFFEROESPROC glUnmapBufferOES;
  PFNGLWINDOWPOS2DPROC glWindowPos2d;
  PFNGLWINDOWPOS2DVPROC glWindowPos2dv;
  PFNGLWINDOWPOS2FPROC glWindowPos2f;
  PFNGLWINDOWPOS2FVPROC glWindowPos2fv;
  PFNGLWINDOWPOS2IPROC glWindowPos2i;
  PFNGLWINDOWPOS2IVPROC glWindowPos2iv;
  PFNGLWINDOWPOS2SPROC glWindowPos2s;
  PFNGLWINDOWPOS2SVPROC glWindowPos2sv;
  PFNGLWINDOWPOS3DPROC glWindowPos3d;
  PFNGLWINDOWPOS3DVPROC glWindowPos3dv;
  PFNGLWINDOWPOS3FPROC glWindowPos3f;
  PFNGLWINDOWPOS3FVPROC glWindowPos3fv;
  PFNGLWINDOWPOS3IPROC glWindowPos3i;
  PFNGLWINDOWPOS3IVPROC glWindowPos3iv;
  PFNGLWINDOWPOS3SPROC glWindowPos3s;
  PFNGLWINDOWPOS3SVPROC glWindowPos3sv;

  void Initialize( Dispatch::GL & dt ) {
    glAccum = dt.glAccum;
    glActiveTexture = dt.glActiveTexture;
    glActiveTextureARB = dt.glActiveTextureARB;
    glAttachObjectARB = dt.glAttachObjectARB;
    glAttachShader = dt.glAttachShader;
    glBindAttribLocation = dt.glBindAttribLocation;
    glBindAttribLocationARB = dt.glBindAttribLocationARB;
    glBindFramebuffer = dt.glBindFramebuffer;
    glBindFramebufferEXT = dt.glBindFramebufferEXT;
    glBindFramebufferOES = dt.glBindFramebufferOES;
    glBindProgramARB = dt.glBindProgramARB;
    glBindRenderbuffer = dt.glBindRenderbuffer;
    glBindRenderbufferEXT = dt.glBindRenderbufferEXT;
    glBindTexture = dt.glBindTexture;
    glBitmap = dt.glBitmap;
    glBlendColor = dt.glBlendColor;
    glBlendColorEXT = dt.glBlendColorEXT;
    glBlendEquation = dt.glBlendEquation;
    glBlendEquationEXT = dt.glBlendEquationEXT;
    glBlitFramebuffer = dt.glBlitFramebuffer;
    glBlitFramebufferANGLE = dt.glBlitFramebufferANGLE;
    glBlitFramebufferEXT = dt.glBlitFramebufferEXT;
    glBlitFramebufferNV = dt.glBlitFramebufferNV;
    glBufferData = dt.glBufferData;
    glBufferDataARB = dt.glBufferDataARB;
    glCallList = dt.glCallList;
    glCheckFramebufferStatus = dt.glCheckFramebufferStatus;
    glCheckFramebufferStatusEXT = dt.glCheckFramebufferStatusEXT;
    glClearAccum = dt.glClearAccum;
    glClientActiveTexture = dt.glClientActiveTexture;
    glClientActiveTextureARB = dt.glClientActiveTextureARB;
    glColorMask = dt.glColorMask;
    glColorMaskIndexedEXT = dt.glColorMaskIndexedEXT;
    glCompileShader = dt.glCompileShader;
    glCompileShaderARB = dt.glCompileShaderARB;
    glCopyPixels = dt.glCopyPixels;
    glCreateProgram = dt.glCreateProgram;
    glCreateProgramObjectARB = dt.glCreateProgramObjectARB;
    glDeleteFramebuffers = dt.glDeleteFramebuffers;
    glDeleteFramebuffersEXT = dt.glDeleteFramebuffersEXT;
    glDeleteLists = dt.glDeleteLists;
    glDeleteRenderbuffers = dt.glDeleteRenderbuffers;
    glDeleteRenderbuffersEXT = dt.glDeleteRenderbuffersEXT;
    glDisable = dt.glDisable;
    glDisableIndexedEXT = dt.glDisableIndexedEXT;
    glDrawBuffer = dt.glDrawBuffer;
    glDrawBuffers = dt.glDrawBuffers;
    glDrawBuffersARB = dt.glDrawBuffersARB;
    glDrawBuffersATI = dt.glDrawBuffersATI;
    glDrawBuffersNV = dt.glDrawBuffersNV;
    glDrawElements = dt.glDrawElements;
    glDrawPixels = dt.glDrawPixels;
    glDrawRangeElements = dt.glDrawRangeElements;
    glDrawRangeElementsBaseVertex = dt.glDrawRangeElementsBaseVertex;
    glEdgeFlag = dt.glEdgeFlag;
    glEnable = dt.glEnable;
    glEnableIndexedEXT = dt.glEnableIndexedEXT;
    glEndList = dt.glEndList;
    glEvalCoord1d = dt.glEvalCoord1d;
    glEvalCoord1dv = dt.glEvalCoord1dv;
    glEvalCoord1f = dt.glEvalCoord1f;
    glEvalCoord1fv = dt.glEvalCoord1fv;
    glEvalCoord2d = dt.glEvalCoord2d;
    glEvalCoord2dv = dt.glEvalCoord2dv;
    glEvalCoord2f = dt.glEvalCoord2f;
    glEvalCoord2fv = dt.glEvalCoord2fv;
    glEvalMesh1 = dt.glEvalMesh1;
    glEvalMesh2 = dt.glEvalMesh2;
    glEvalPoint1 = dt.glEvalPoint1;
    glEvalPoint2 = dt.glEvalPoint2;
    glFramebufferRenderbuffer = dt.glFramebufferRenderbuffer;
    glFramebufferRenderbufferEXT = dt.glFramebufferRenderbufferEXT;
    glFramebufferTexture1D = dt.glFramebufferTexture1D;
    glFramebufferTexture1DEXT = dt.glFramebufferTexture1DEXT;
    glFramebufferTexture2D = dt.glFramebufferTexture2D;
    glFramebufferTexture2DEXT = dt.glFramebufferTexture2DEXT;
    glFramebufferTexture3D = dt.glFramebufferTexture3D;
    glFramebufferTexture3DEXT = dt.glFramebufferTexture3DEXT;
    glGenFramebuffers = dt.glGenFramebuffers;
    glGenFramebuffersEXT = dt.glGenFramebuffersEXT;
    glGenLists = dt.glGenLists;
    glGenProgramsARB = dt.glGenProgramsARB;
    glGenRenderbuffers = dt.glGenRenderbuffers;
    glGenRenderbuffersEXT = dt.glGenRenderbuffersEXT;
    glGenSamplers = dt.glGenSamplers;
    glGenerateMipmap = dt.glGenerateMipmap;
    glGenerateMipmapEXT = dt.glGenerateMipmapEXT;
    glGetBooleanIndexedvEXT = dt.glGetBooleanIndexedvEXT;
    glGetBooleanv = dt.glGetBooleanv;
    glGetDoublev = dt.glGetDoublev;
    glGetFloatv = dt.glGetFloatv;
    glGetFramebufferAttachmentParameteriv = dt.glGetFramebufferAttachmentParameteriv;
    glGetFramebufferAttachmentParameterivEXT = dt.glGetFramebufferAttachmentParameterivEXT;
    glGetInfoLogARB = dt.glGetInfoLogARB;
    glGetInteger64v = dt.glGetInteger64v;
    glGetIntegerIndexedvEXT = dt.glGetIntegerIndexedvEXT;
    glGetIntegerv = dt.glGetIntegerv;
    glGetObjectParameterivARB = dt.glGetObjectParameterivARB;
    glGetProgramInfoLog = dt.glGetProgramInfoLog;
    glGetProgramiv = dt.glGetProgramiv;
    glGetProgramivARB = dt.glGetProgramivARB;
    glGetRenderbufferParameteriv = dt.glGetRenderbufferParameteriv;
    glGetRenderbufferParameterivEXT = dt.glGetRenderbufferParameterivEXT;
    glGetShaderInfoLog = dt.glGetShaderInfoLog;
    glGetShaderiv = dt.glGetShaderiv;
    glGetTexImage = dt.glGetTexImage;
    glGetTexLevelParameterfv = dt.glGetTexLevelParameterfv;
    glGetTexLevelParameteriv = dt.glGetTexLevelParameteriv;
    glGetTexParameteriv = dt.glGetTexParameteriv;
    glGetUniformLocation = dt.glGetUniformLocation;
    glGetUniformLocationARB = dt.glGetUniformLocationARB;
    glIsEnabled = dt.glIsEnabled;
    glIsEnabledIndexedEXT = dt.glIsEnabledIndexedEXT;
    glIsFramebuffer = dt.glIsFramebuffer;
    glIsFramebufferEXT = dt.glIsFramebufferEXT;
    glIsProgram = dt.glIsProgram;
    glIsRenderbuffer = dt.glIsRenderbuffer;
    glIsRenderbufferEXT = dt.glIsRenderbufferEXT;
    glLineStipple = dt.glLineStipple;
    glLineWidth = dt.glLineWidth;
    glMap1d = dt.glMap1d;
    glMap1f = dt.glMap1f;
    glMap2d = dt.glMap2d;
    glMap2f = dt.glMap2f;
    glMapBuffer = dt.glMapBuffer;
    glMapBufferARB = dt.glMapBufferARB;
    glMapBufferOES = dt.glMapBufferOES;
    glMapGrid1d = dt.glMapGrid1d;
    glMapGrid1f = dt.glMapGrid1f;
    glMapGrid2d = dt.glMapGrid2d;
    glMapGrid2f = dt.glMapGrid2f;
    glNewList = dt.glNewList;
    glPixelStoref = dt.glPixelStoref;
    glPixelStorei = dt.glPixelStorei;
    glPixelTransferf = dt.glPixelTransferf;
    glPixelTransferi = dt.glPixelTransferi;
    glPixelZoom = dt.glPixelZoom;
    glPolygonMode = dt.glPolygonMode;
    glPopGroupMarkerEXT = dt.glPopGroupMarkerEXT;
    glProgramStringARB = dt.glProgramStringARB;
    glPushGroupMarkerEXT = dt.glPushGroupMarkerEXT;
    glRasterPos2d = dt.glRasterPos2d;
    glRasterPos2dv = dt.glRasterPos2dv;
    glRasterPos2f = dt.glRasterPos2f;
    glRasterPos2fv = dt.glRasterPos2fv;
    glRasterPos2i = dt.glRasterPos2i;
    glRasterPos2iv = dt.glRasterPos2iv;
    glRasterPos2s = dt.glRasterPos2s;
    glRasterPos2sv = dt.glRasterPos2sv;
    glRasterPos3d = dt.glRasterPos3d;
    glRasterPos3dv = dt.glRasterPos3dv;
    glRasterPos3f = dt.glRasterPos3f;
    glRasterPos3fv = dt.glRasterPos3fv;
    glRasterPos3i = dt.glRasterPos3i;
    glRasterPos3iv = dt.glRasterPos3iv;
    glRasterPos3s = dt.glRasterPos3s;
    glRasterPos3sv = dt.glRasterPos3sv;
    glRasterPos4d = dt.glRasterPos4d;
    glRasterPos4dv = dt.glRasterPos4dv;
    glRasterPos4f = dt.glRasterPos4f;
    glRasterPos4fv = dt.glRasterPos4fv;
    glRasterPos4i = dt.glRasterPos4i;
    glRasterPos4iv = dt.glRasterPos4iv;
    glRasterPos4s = dt.glRasterPos4s;
    glRasterPos4sv = dt.glRasterPos4sv;
    glReadBuffer = dt.glReadBuffer;
    glReadBufferNV = dt.glReadBufferNV;
    glRectd = dt.glRectd;
    glRectf = dt.glRectf;
    glRecti = dt.glRecti;
    glRects = dt.glRects;
    glRenderMode = dt.glRenderMode;
    glRenderbufferStorage = dt.glRenderbufferStorage;
    glRenderbufferStorageEXT = dt.glRenderbufferStorageEXT;
    glShadeModel = dt.glShadeModel;
    glTexImage1D = dt.glTexImage1D;
    glTexImage2D = dt.glTexImage2D;
    glTexImage3D = dt.glTexImage3D;
    glTexParameterf = dt.glTexParameterf;
    glTexParameterfv = dt.glTexParameterfv;
    glTexParameteri = dt.glTexParameteri;
    glTexParameteriv = dt.glTexParameteriv;
    glUniform1i = dt.glUniform1i;
    glUniform1iARB = dt.glUniform1iARB;
    glUnmapBuffer = dt.glUnmapBuffer;
    glUnmapBufferARB = dt.glUnmapBufferARB;
    glUnmapBufferOES = dt.glUnmapBufferOES;
    glWindowPos2d = dt.glWindowPos2d;
    glWindowPos2dv = dt.glWindowPos2dv;
    glWindowPos2f = dt.glWindowPos2f;
    glWindowPos2fv = dt.glWindowPos2fv;
    glWindowPos2i = dt.glWindowPos2i;
    glWindowPos2iv = dt.glWindowPos2iv;
    glWindowPos2s = dt.glWindowPos2s;
    glWindowPos2sv = dt.glWindowPos2sv;
    glWindowPos3d = dt.glWindowPos3d;
    glWindowPos3dv = dt.glWindowPos3dv;
    glWindowPos3f = dt.glWindowPos3f;
    glWindowPos3fv = dt.glWindowPos3fv;
    glWindowPos3i = dt.glWindowPos3i;
    glWindowPos3iv = dt.glWindowPos3iv;
    glWindowPos3s = dt.glWindowPos3s;
    glWindowPos3sv = dt.glWindowPos3sv;
  }
};

REGAL_NAMESPACE_END

#endif // REGAL_EMULATION

#endif // REGAL_EMU_PROCS_FILT_H
